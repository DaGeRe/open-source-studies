/**                                                                                                    /**                                                                                                 
* Tests RFC 4648 section 10 test vectors.                                                              * Tests RFC 4648 section 10 test vectors.                                                           
* &lt;ul&gt;                                                                                           * &lt;ul&gt;                                                                                        
* &lt;li&gt;BASE64("") = ""&lt;/li&gt;                                                                 * &lt;li&gt;BASE64("") = ""&lt;/li&gt;                                                              
* &lt;li&gt;BASE64("f") = "Zg=="&lt;/li&gt;                                                            * &lt;li&gt;BASE64("f") = "Zg=="&lt;/li&gt;                                                         
* &lt;li&gt;BASE64("fo") = "Zm8="&lt;/li&gt;                                                           * &lt;li&gt;BASE64("fo") = "Zm8="&lt;/li&gt;                                                        
* &lt;li&gt;BASE64("foo") = "Zm9v"&lt;/li&gt;                                                          * &lt;li&gt;BASE64("foo") = "Zm9v"&lt;/li&gt;                                                       
* &lt;li&gt;BASE64("foob") = "Zm9vYg=="&lt;/li&gt;                                                     * &lt;li&gt;BASE64("foob") = "Zm9vYg=="&lt;/li&gt;                                                  
* &lt;li&gt;BASE64("fooba") = "Zm9vYmE="&lt;/li&gt;                                                    * &lt;li&gt;BASE64("fooba") = "Zm9vYmE="&lt;/li&gt;                                                 
* &lt;li&gt;BASE64("foobar") = "Zm9vYmFy"&lt;/li&gt;                                                   * &lt;li&gt;BASE64("foobar") = "Zm9vYmFy"&lt;/li&gt;                                                
* &lt;/ul&gt;                                                                                          * &lt;/ul&gt;                                                                                       
*                                                                                                      *                                                                                                   
* @see &lt;a href="http://tools.ietf.org/html/rfc4648"&gt;http://tools.ietf.org/html/rfc4648&lt;/a&g   * @see &lt;a href="http://tools.ietf.org/html/rfc4648"&gt;http://tools.ietf.org/html/rfc4648&lt;/a&g
*/                                                                                                     */                                                                                                  
@Test                                                                                                  @Test                                                                                               
public void rfc4648Section10Decode() throws Exception {                                                public void rfc4648Section10Decode() throws Exception {                                             
assertEncoded("", "");                                                                                 assertEncoded("", "");                                                                              
assertEncoded("f", "Zg==");                                                                            assertEncoded("f", "Zg==");                                                                         
assertEncoded("fo", "Zm8=");                                                                           assertEncoded("fo", "Zm8=");                                                                        
// assertEncoded("foo", "Zm9v");                                                                     | assertEncoded("foo", "Zm9v");                                                                       
assertEncoded("foob", "Zm9vYg==");                                                                     assertEncoded("foob", "Zm9vYg==");                                                                  
assertEncoded("fooba", "Zm9vYmE=");                                                                    assertEncoded("fooba", "Zm9vYmE=");                                                                 
// assertEncoded("foobar", "Zm9vYmFy");                                                              | assertEncoded("foobar", "Zm9vYmFy");                                                                
}                                                                                                      }                                                                                                   
