/**                                                                                                    /**                                                                                                 
* Called for finding the next item, if any.                                                            * Called for finding the next item, if any.                                                         
*                                                                                                      *                                                                                                   
* @return True, if an next item was found, otherwise false.                                            * @return True, if an next item was found, otherwise false.                                         
* @throws IOException An I/O error occurred.                                                           * @throws IOException An I/O error occurred.                                                        
*/                                                                                                     */                                                                                                  
private boolean findNextItem() throws IOException {                                                    private boolean findNextItem() throws IOException {                                                 
if (eof) {                                                                                             if (eof) {                                                                                          
return false;                                                                                          return false;                                                                                       
}                                                                                                      }                                                                                                   
if (currentItem != null) {                                                                             if (currentItem != null) {                                                                          
currentItem.close();                                                                                   currentItem.close();                                                                                
currentItem = null;                                                                                    currentItem = null;                                                                                 
}                                                                                                      }                                                                                                   
for (; ; ) {                                                                                           for (; ; ) {                                                                                        
boolean nextPart;                                                                                      boolean nextPart;                                                                                   
if (skipPreamble) {                                                                                    if (skipPreamble) {                                                                                 
nextPart = multi.skipPreamble();                                                                       nextPart = multi.skipPreamble();                                                                    
} else {                                                                                               } else {                                                                                            
nextPart = multi.readBoundary();                                                                       nextPart = multi.readBoundary();                                                                    
}                                                                                                      }                                                                                                   
if (!nextPart) {                                                                                       if (!nextPart) {                                                                                    
if (currentFieldName == null) {                                                                        if (currentFieldName == null) {                                                                     
// Outer multipart terminated -&gt; No more data                                                       // Outer multipart terminated -&gt; No more data                                                    
eof = true;                                                                                            eof = true;                                                                                         
return false;                                                                                          return false;                                                                                       
}                                                                                                      }                                                                                                   
// Inner multipart terminated -&gt; Return to parsing the outer                                        // Inner multipart terminated -&gt; Return to parsing the outer                                     
multi.setBoundary(boundary);                                                                           multi.setBoundary(boundary);                                                                        
currentFieldName = null;                                                                               currentFieldName = null;                                                                            
continue;                                                                                              continue;                                                                                           
}                                                                                                      }                                                                                                   
FileItemHeaders headers = getParsedHeaders(multi.readHeaders());                                       FileItemHeaders headers = getParsedHeaders(multi.readHeaders());                                    
if (currentFieldName == null) {                                                                        if (currentFieldName == null) {                                                                     
// We're parsing the outer multipart                                                                   // We're parsing the outer multipart                                                                
String fieldName = getFieldName(headers);                                                              String fieldName = getFieldName(headers);                                                           
if (fieldName != null) {                                                                               if (fieldName != null) {                                                                            
String subContentType = headers.getHeader(CONTENT_TYPE);                                               String subContentType = headers.getHeader(CONTENT_TYPE);                                            
if (subContentType != null && subContentType.toLowerCase().startsWith(MULTIPART_MIXED)) {            | if (subContentType != null && subContentType.toLowerCase(Locale.ENGLISH).startsWith(MULTIPART_MIXED)
currentFieldName = fieldName;                                                                          currentFieldName = fieldName;                                                                       
// Multiple files associated with this field name                                                      // Multiple files associated with this field name                                                   
byte[] subBoundary = getBoundary(subContentType);                                                      byte[] subBoundary = getBoundary(subContentType);                                                   
multi.setBoundary(subBoundary);                                                                        multi.setBoundary(subBoundary);                                                                     
skipPreamble = true;                                                                                   skipPreamble = true;                                                                                
continue;                                                                                              continue;                                                                                           
}                                                                                                      }                                                                                                   
String fileName = getFileName(headers);                                                                String fileName = getFileName(headers);                                                             
currentItem = new FileItemStreamImpl(fileName, fieldName, headers.getHeader(CONTENT_TYPE), fileName    currentItem = new FileItemStreamImpl(fileName, fieldName, headers.getHeader(CONTENT_TYPE), fileName 
currentItem.setHeaders(headers);                                                                       currentItem.setHeaders(headers);                                                                    
notifier.noteItem();                                                                                   notifier.noteItem();                                                                                
itemValid = true;                                                                                      itemValid = true;                                                                                   
return true;                                                                                           return true;                                                                                        
}                                                                                                      }                                                                                                   
} else {                                                                                               } else {                                                                                            
String fileName = getFileName(headers);                                                                String fileName = getFileName(headers);                                                             
if (fileName != null) {                                                                                if (fileName != null) {                                                                             
currentItem = new FileItemStreamImpl(fileName, currentFieldName, headers.getHeader(CONTENT_TYPE), fa   currentItem = new FileItemStreamImpl(fileName, currentFieldName, headers.getHeader(CONTENT_TYPE), fa
currentItem.setHeaders(headers);                                                                       currentItem.setHeaders(headers);                                                                    
notifier.noteItem();                                                                                   notifier.noteItem();                                                                                
itemValid = true;                                                                                      itemValid = true;                                                                                   
return true;                                                                                           return true;                                                                                        
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
multi.discardBodyData();                                                                               multi.discardBodyData();                                                                            
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
