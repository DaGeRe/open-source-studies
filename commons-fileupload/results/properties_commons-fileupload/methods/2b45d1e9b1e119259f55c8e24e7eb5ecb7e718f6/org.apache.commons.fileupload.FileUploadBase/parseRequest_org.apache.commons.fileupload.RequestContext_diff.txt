/**                                                                                                    /**                                                                                                 
* Processes an &lt;a href="http://www.ietf.org/rfc/rfc1867.txt"&gt;RFC 1867&lt;/a&gt;                  * Processes an &lt;a href="http://www.ietf.org/rfc/rfc1867.txt"&gt;RFC 1867&lt;/a&gt;               
* compliant &lt;code&gt;multipart/form-data&lt;/code&gt; stream.                                       * compliant &lt;code&gt;multipart/form-data&lt;/code&gt; stream.                                    
*                                                                                                      *                                                                                                   
* @param ctx The context for the request to be parsed.                                                 * @param ctx The context for the request to be parsed.                                              
*                                                                                                      *                                                                                                   
* @return A list of &lt;code&gt;FileItem&lt;/code&gt; instances parsed from the                        * @return A list of &lt;code&gt;FileItem&lt;/code&gt; instances parsed from the                     
*         request, in the order that they were transmitted.                                            *         request, in the order that they were transmitted.                                         
*                                                                                                      *                                                                                                   
* @throws FileUploadException if there are problems reading/parsing                                    * @throws FileUploadException if there are problems reading/parsing                                 
*                             the request or storing files.                                            *                             the request or storing files.                                         
*/                                                                                                     */                                                                                                  
public List&lt;FileItem&gt; parseRequest(RequestContext ctx) throws FileUploadException {              public List&lt;FileItem&gt; parseRequest(RequestContext ctx) throws FileUploadException {           
List&lt;FileItem&gt; items = new ArrayList&lt;FileItem&gt;();                                          List&lt;FileItem&gt; items = new ArrayList&lt;FileItem&gt;();                                       
boolean successful = false;                                                                            boolean successful = false;                                                                         
try {                                                                                                  try {                                                                                               
FileItemIterator iter = getItemIterator(ctx);                                                          FileItemIterator iter = getItemIterator(ctx);                                                       
FileItemFactory fac = getFileItemFactory();                                                            FileItemFactory fac = getFileItemFactory();                                                         
if (fac == null) {                                                                                     if (fac == null) {                                                                                  
throw new NullPointerException("No FileItemFactory has been set.");                                    throw new NullPointerException("No FileItemFactory has been set.");                                 
}                                                                                                      }                                                                                                   
while (iter.hasNext()) {                                                                               while (iter.hasNext()) {                                                                            
final FileItemStream item = iter.next();                                                               final FileItemStream item = iter.next();                                                            
// Don't use getName() here to prevent an InvalidFileNameException.                                    // Don't use getName() here to prevent an InvalidFileNameException.                                 
final String fileName = ((FileItemIteratorImpl.FileItemStreamImpl) item).name;                         final String fileName = ((FileItemIteratorImpl.FileItemStreamImpl) item).name;                      
FileItem fileItem = fac.createItem(item.getFieldName(), item.getContentType(), item.isFormField(), f   FileItem fileItem = fac.createItem(item.getFieldName(), item.getContentType(), item.isFormField(), f
items.add(fileItem);                                                                                   items.add(fileItem);                                                                                
try {                                                                                                  try {                                                                                               
Streams.copy(item.openStream(), fileItem.getOutputStream(), true);                                     Streams.copy(item.openStream(), fileItem.getOutputStream(), true);                                  
} catch (FileUploadIOException e) {                                                                    } catch (FileUploadIOException e) {                                                                 
throw (FileUploadException) e.getCause();                                                              throw (FileUploadException) e.getCause();                                                           
} catch (IOException e) {                                                                              } catch (IOException e) {                                                                           
throw new IOFileUploadException(format("Processing of %s request failed. ", MULTIPART_FORM_DATA, e.g | throw new IOFileUploadException(format("Processing of %s request failed. %s", MULTIPART_FORM_DATA, e
}                                                                                                      }                                                                                                   
final FileItemHeaders fih = item.getHeaders();                                                         final FileItemHeaders fih = item.getHeaders();                                                      
fileItem.setHeaders(fih);                                                                              fileItem.setHeaders(fih);                                                                           
}                                                                                                      }                                                                                                   
successful = true;                                                                                     successful = true;                                                                                  
return items;                                                                                          return items;                                                                                       
} catch (FileUploadIOException e) {                                                                    } catch (FileUploadIOException e) {                                                                 
throw (FileUploadException) e.getCause();                                                              throw (FileUploadException) e.getCause();                                                           
} catch (IOException e) {                                                                              } catch (IOException e) {                                                                           
throw new FileUploadException(e.getMessage(), e);                                                      throw new FileUploadException(e.getMessage(), e);                                                   
} finally {                                                                                            } finally {                                                                                         
if (!successful) {                                                                                     if (!successful) {                                                                                  
for (FileItem fileItem : items) {                                                                      for (FileItem fileItem : items) {                                                                   
try {                                                                                                  try {                                                                                               
fileItem.delete();                                                                                     fileItem.delete();                                                                                  
} catch (Throwable e) {                                                                                } catch (Throwable e) {                                                                             
// ignore it                                                                                           // ignore it                                                                                        
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
