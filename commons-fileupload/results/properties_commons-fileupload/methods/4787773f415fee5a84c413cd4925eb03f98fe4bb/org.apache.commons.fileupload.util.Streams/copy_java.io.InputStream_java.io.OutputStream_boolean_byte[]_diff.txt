/**                                                                                                    /**                                                                                                 
* Copies the contents of the given {@link InputStream}                                                 * Copies the contents of the given {@link InputStream}                                              
* to the given {@link OutputStream}.                                                                   * to the given {@link OutputStream}.                                                                
*                                                                                                      *                                                                                                   
* @param pIn The input stream, which is being read.                                                  | * @param inputStream The input stream, which is being read.                                         
*   It is guaranteed, that {@link InputStream#close()} is called                                       *   It is guaranteed, that {@link InputStream#close()} is called                                    
*   on the stream.                                                                                     *   on the stream.                                                                                  
* @param pOut The output stream, to which data should                                                | * @param outputStream The output stream, to which data should                                       
*   be written. May be null, in which case the input streams                                           *   be written. May be null, in which case the input streams                                        
*   contents are simply discarded.                                                                     *   contents are simply discarded.                                                                  
* @param pClose True guarantees, that {@link OutputStream#close()}                                   | * @param closeOutputStream True guarantees, that {@link OutputStream#close()}                       
*   is called on the stream. False indicates, that only                                                *   is called on the stream. False indicates, that only                                             
*   {@link OutputStream#flush()} should be called finally.                                             *   {@link OutputStream#flush()} should be called finally.                                          
* @param pBuffer Temporary buffer, which is to be used for                                           | * @param buffer Temporary buffer, which is to be used for                                           
*   copying data.                                                                                      *   copying data.                                                                                   
* @return Number of bytes, which have been copied.                                                     * @return Number of bytes, which have been copied.                                                  
* @throws IOException An I/O error occurred.                                                           * @throws IOException An I/O error occurred.                                                        
*/                                                                                                     */                                                                                                  
public static long copy(InputStream pIn, OutputStream pOut, boolean pClose, byte[] pBuffer) throws I | public static long copy(InputStream inputStream, OutputStream outputStream, boolean closeOutputStrea
OutputStream out = pOut;                                                                             | OutputStream out = outputStream;                                                                    
InputStream in = pIn;                                                                                | InputStream in = inputStream;                                                                       
try {                                                                                                  try {                                                                                               
long total = 0;                                                                                        long total = 0;                                                                                     
for (; ; ) {                                                                                           for (; ; ) {                                                                                        
int res = in.read(pBuffer);                                                                          | int res = in.read(buffer);                                                                          
if (res == -1) {                                                                                       if (res == -1) {                                                                                    
break;                                                                                                 break;                                                                                              
}                                                                                                      }                                                                                                   
if (res &gt; 0) {                                                                                      if (res &gt; 0) {                                                                                   
total += res;                                                                                          total += res;                                                                                       
if (out != null) {                                                                                     if (out != null) {                                                                                  
out.write(pBuffer, 0, res);                                                                          | out.write(buffer, 0, res);                                                                          
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
if (out != null) {                                                                                     if (out != null) {                                                                                  
if (pClose) {                                                                                        | if (closeOutputStream) {                                                                            
out.close();                                                                                           out.close();                                                                                        
} else {                                                                                               } else {                                                                                            
out.flush();                                                                                           out.flush();                                                                                        
}                                                                                                      }                                                                                                   
out = null;                                                                                            out = null;                                                                                         
}                                                                                                      }                                                                                                   
in.close();                                                                                            in.close();                                                                                         
in = null;                                                                                             in = null;                                                                                          
return total;                                                                                          return total;                                                                                       
} finally {                                                                                            } finally {                                                                                         
if (in != null) {                                                                                      if (in != null) {                                                                                   
try {                                                                                                  try {                                                                                               
in.close();                                                                                            in.close();                                                                                         
} catch (Throwable t) {                                                                                } catch (Throwable t) {                                                                             
/* Ignore me */                                                                                        /* Ignore me */                                                                                     
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
if (pClose && out != null) {                                                                         | if (closeOutputStream && out != null) {                                                             
try {                                                                                                  try {                                                                                               
out.close();                                                                                           out.close();                                                                                        
} catch (Throwable t) {                                                                                } catch (Throwable t) {                                                                             
/* Ignore me */                                                                                        /* Ignore me */                                                                                     
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
