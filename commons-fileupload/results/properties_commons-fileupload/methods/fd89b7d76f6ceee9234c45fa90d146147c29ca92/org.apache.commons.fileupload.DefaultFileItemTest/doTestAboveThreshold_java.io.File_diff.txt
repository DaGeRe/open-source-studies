/**
 * Common code for cases where the amount of data is above the configured
 * threshold, but the ultimate destination of the data has not yet been
 * determined.
 *
 * @param repository The directory within which temporary files will be
 *                   created.
 */
public void doTestAboveThreshold(File repository) {
    FileItemFactory factory = createFactory(repository);
    String textFieldName = "textField";
    String textFieldValue = "01234567890123456789";
    byte[] testFieldValueBytes = textFieldValue.getBytes();
    FileItem item = factory.createItem(textFieldName, textContentType, true, null);
    assertNotNull(item);
    try {
        OutputStream os = item.getOutputStream();
        os.write(testFieldValueBytes);
        os.close();
    } catch (IOException e) {
        fail("Unexpected IOException");
    }
    assertFalse(item.isInMemory());
    assertEquals(item.getSize(), testFieldValueBytes.length);
    assertTrue(Arrays.equals(item.get(), testFieldValueBytes));
    assertEquals(item.getString(), textFieldValue);
    assertTrue(item instanceof DefaultFileItem);
    DefaultFileItem dfi = (DefaultFileItem) item;
    File storeLocation = dfi.getStoreLocation();
    assertNotNull(storeLocation);
    assertTrue(storeLocation.exists());
    assertEquals(storeLocation.length(), testFieldValueBytes.length);
    if (repository != null) {
        assertEquals(storeLocation.getParentFile(), repository);
    }
    item.delete();
}