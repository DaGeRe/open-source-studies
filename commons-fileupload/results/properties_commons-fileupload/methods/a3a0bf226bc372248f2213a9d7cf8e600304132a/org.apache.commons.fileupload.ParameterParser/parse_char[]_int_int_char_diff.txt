/**                                                                                                    /**                                                                                                 
* Extracts a map of name/value pairs from the given array of                                           * Extracts a map of name/value pairs from the given array of                                        
* characters. Names are expected to be unique.                                                         * characters. Names are expected to be unique.                                                      
*                                                                                                      *                                                                                                   
* @param chars the array of characters that contains a sequence of                                   | * @param charArray the array of characters that contains a sequence of                              
* name/value pairs                                                                                     * name/value pairs                                                                                  
* @param offset - the initial offset.                                                                  * @param offset - the initial offset.                                                               
* @param length - the length.                                                                          * @param length - the length.                                                                       
* @param separator the name/value pairs separator                                                      * @param separator the name/value pairs separator                                                   
*                                                                                                      *                                                                                                   
* @return a map of name/value pairs                                                                    * @return a map of name/value pairs                                                                 
*/                                                                                                     */                                                                                                  
public Map&lt;String, String&gt; parse(final char[] chars, int offset, int length, char separator) { | public Map&lt;String, String&gt; parse(final char[] charArray, int offset, int length, char separato
if (chars == null) {                                                                                 | if (charArray == null) {                                                                            
return new HashMap&lt;String, String&gt;();                                                            return new HashMap&lt;String, String&gt;();                                                         
}                                                                                                      }                                                                                                   
HashMap&lt;String, String&gt; params = new HashMap&lt;String, String&gt;();                            HashMap&lt;String, String&gt; params = new HashMap&lt;String, String&gt;();                         
this.chars = chars;                                                                                  | this.chars = charArray;                                                                             
this.pos = offset;                                                                                     this.pos = offset;                                                                                  
this.len = length;                                                                                     this.len = length;                                                                                  
String paramName = null;                                                                               String paramName = null;                                                                            
String paramValue = null;                                                                              String paramValue = null;                                                                           
while (hasChar()) {                                                                                    while (hasChar()) {                                                                                 
paramName = parseToken(new char[] { '=', separator });                                                 paramName = parseToken(new char[] { '=', separator });                                              
paramValue = null;                                                                                     paramValue = null;                                                                                  
if (hasChar() && (chars[pos] == '=')) {                                                              | if (hasChar() && (charArray[pos] == '=')) {                                                         
// skip '='                                                                                            // skip '='                                                                                         
pos++;                                                                                                 pos++;                                                                                              
paramValue = parseQuotedToken(new char[] { separator });                                               paramValue = parseQuotedToken(new char[] { separator });                                            
if (paramValue != null) {                                                                              if (paramValue != null) {                                                                           
try {                                                                                                  try {                                                                                               
paramValue = MimeUtility.decodeText(paramValue);                                                       paramValue = MimeUtility.decodeText(paramValue);                                                    
} catch (UnsupportedEncodingException e) {                                                             } catch (UnsupportedEncodingException e) {                                                          
// let's keep the original value in this case                                                          // let's keep the original value in this case                                                       
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
if (hasChar() && (chars[pos] == separator)) {                                                        | if (hasChar() && (charArray[pos] == separator)) {                                                   
// skip separator                                                                                      // skip separator                                                                                   
pos++;                                                                                                 pos++;                                                                                              
}                                                                                                      }                                                                                                   
if ((paramName != null) && (paramName.length() &gt; 0)) {                                              if ((paramName != null) && (paramName.length() &gt; 0)) {                                           
if (this.lowerCaseNames) {                                                                             if (this.lowerCaseNames) {                                                                          
paramName = paramName.toLowerCase(Locale.ENGLISH);                                                     paramName = paramName.toLowerCase(Locale.ENGLISH);                                                  
}                                                                                                      }                                                                                                   
params.put(paramName, paramValue);                                                                     params.put(paramName, paramValue);                                                                  
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
return params;                                                                                         return params;                                                                                      
}                                                                                                      }                                                                                                   
