@Test                                                                                                  @Test                                                                                               
public void testFileCleanerDirectory_ForceStrategy() throws Exception {                                public void testFileCleanerDirectory_ForceStrategy() throws Exception {                             
if (!testFile.getParentFile().exists()) {                                                              if (!testFile.getParentFile().exists()) {                                                           
throw new IOException("Cannot create file " + testFile + " as the parent directory does not exist");   throw new IOException("Cannot create file " + testFile + " as the parent directory does not exist");
}                                                                                                      }                                                                                                   
final BufferedOutputStream output = new BufferedOutputStream(new FileOutputStream(testFile));        | try (final BufferedOutputStream output = new BufferedOutputStream(new FileOutputStream(testFile))) {
try {                                                                                                |                                                                                                     
TestUtils.generateTestData(output, (long) 100);                                                        TestUtils.generateTestData(output, (long) 100);                                                     
} finally {                                                                                          |                                                                                                     
IOUtils.closeQuietly(output);                                                                        |                                                                                                     
}                                                                                                      }                                                                                                   
assertTrue(testFile.exists());                                                                         assertTrue(testFile.exists());                                                                      
assertTrue(getTestDirectory().exists());                                                               assertTrue(getTestDirectory().exists());                                                            
Object obj = new Object();                                                                             Object obj = new Object();                                                                          
assertEquals(0, theInstance.getTrackCount());                                                          assertEquals(0, theInstance.getTrackCount());                                                       
theInstance.track(getTestDirectory(), obj, FileDeleteStrategy.FORCE);                                  theInstance.track(getTestDirectory(), obj, FileDeleteStrategy.FORCE);                               
assertEquals(1, theInstance.getTrackCount());                                                          assertEquals(1, theInstance.getTrackCount());                                                       
obj = null;                                                                                            obj = null;                                                                                         
waitUntilTrackCount();                                                                                 waitUntilTrackCount();                                                                              
pauseForDeleteToComplete(testFile.getParentFile());                                                    pauseForDeleteToComplete(testFile.getParentFile());                                                 
assertEquals(0, theInstance.getTrackCount());                                                          assertEquals(0, theInstance.getTrackCount());                                                       
assertEquals(showFailures(), false, new File(testFile.getPath()).exists());                            assertEquals(showFailures(), false, new File(testFile.getPath()).exists());                         
assertEquals(showFailures(), false, testFile.getParentFile().exists());                                assertEquals(showFailures(), false, testFile.getParentFile().exists());                             
}                                                                                                      }                                                                                                   
