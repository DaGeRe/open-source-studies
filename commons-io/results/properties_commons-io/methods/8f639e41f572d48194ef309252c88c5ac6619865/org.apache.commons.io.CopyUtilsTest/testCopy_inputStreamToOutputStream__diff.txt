public void testCopy_inputStreamToOutputStream() throws Exception {                                    public void testCopy_inputStreamToOutputStream() throws Exception {                                 
InputStream in = new ByteArrayInputStream(inData);                                                     InputStream in = new ByteArrayInputStream(inData);                                                  
in = new YellOnCloseInputStream(in);                                                                   in = new YellOnCloseInputStream(in);                                                                
ByteArrayOutputStream baout = new ByteArrayOutputStream();                                             ByteArrayOutputStream baout = new ByteArrayOutputStream();                                          
OutputStream out = new YellOnFlushAndCloseOutputStream(baout, false, true);                            OutputStream out = new YellOnFlushAndCloseOutputStream(baout, false, true);                         
int count = CopyUtils.copy(in, out);                                                                   int count = CopyUtils.copy(in, out);                                                                
assertTrue("Not all bytes were read", in.available() == 0);                                            assertTrue("Not all bytes were read", in.available() == 0);                                         
assertEquals("Sizes differ", inData.length, baout.size());                                             assertEquals("Sizes differ", inData.length, baout.size());                                          
assertTrue("Content differs", Arrays.equals(inData, baout.toByteArray()));                             assertTrue("Content differs", Arrays.equals(inData, baout.toByteArray()));                          
                                                                                                     | assertEquals(inData.length, count);                                                                 
}                                                                                                      }                                                                                                   
