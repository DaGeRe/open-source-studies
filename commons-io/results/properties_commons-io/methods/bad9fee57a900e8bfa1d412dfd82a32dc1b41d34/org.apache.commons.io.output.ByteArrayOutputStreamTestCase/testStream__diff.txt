public void testStream() throws Exception {                                                            public void testStream() throws Exception {                                                         
int written;                                                                                           int written;                                                                                        
ByteArrayOutputStream baout = new ByteArrayOutputStream(32);                                           ByteArrayOutputStream baout = new ByteArrayOutputStream(32);                                        
java.io.ByteArrayOutputStream ref = new java.io.ByteArrayOutputStream();                               java.io.ByteArrayOutputStream ref = new java.io.ByteArrayOutputStream();                            
written = writeData(baout, ref, new int[] { 4, 10, 22 });                                              written = writeData(baout, ref, new int[] { 4, 10, 22 });                                           
assertEquals(36, written);                                                                             assertEquals(36, written);                                                                          
checkStreams(baout, ref);                                                                              checkStreams(baout, ref);                                                                           
written = writeData(baout, ref, new int[] { 20, 12 });                                                 written = writeData(baout, ref, new int[] { 20, 12 });                                              
assertEquals(32, written);                                                                             assertEquals(32, written);                                                                          
checkStreams(baout, ref);                                                                              checkStreams(baout, ref);                                                                           
baout.reset();                                                                                         baout.reset();                                                                                      
ref.reset();                                                                                           ref.reset();                                                                                        
written = writeData(baout, ref, new int[] { 5, 47, 33, 60, 1, 0, 8 });                                 written = writeData(baout, ref, new int[] { 5, 47, 33, 60, 1, 0, 8 });                              
assertEquals(155, written);                                                                            assertEquals(155, written);                                                                         
checkStreams(baout, ref);                                                                              checkStreams(baout, ref);                                                                           
                                                                                                     | baout.reset();                                                                                      
                                                                                                     | written = baout.write(new ByteArrayInputStream(ref.toByteArray()));                                 
                                                                                                     | assertEquals(155, written);                                                                         
                                                                                                     | checkStreams(baout, ref);                                                                           
ByteArrayOutputStream baout1 = new ByteArrayOutputStream(32);                                          ByteArrayOutputStream baout1 = new ByteArrayOutputStream(32);                                       
ref.writeTo(baout1);                                                                                   ref.writeTo(baout1);                                                                                
java.io.ByteArrayOutputStream ref1 = new java.io.ByteArrayOutputStream();                              java.io.ByteArrayOutputStream ref1 = new java.io.ByteArrayOutputStream();                           
baout.writeTo(ref1);                                                                                   baout.writeTo(ref1);                                                                                
checkStreams(baout1, ref1);                                                                            checkStreams(baout1, ref1);                                                                         
String baoutString = baout.toString("ASCII");                                                          String baoutString = baout.toString("ASCII");                                                       
String refString = ref.toString("ASCII");                                                              String refString = ref.toString("ASCII");                                                           
assertEquals("ASCII decoded String must be equal", refString, baoutString);                            assertEquals("ASCII decoded String must be equal", refString, baoutString);                         
assertSame(new ByteArrayOutputStream().toByteArray(), new ByteArrayOutputStream().toByteArray());      assertSame(new ByteArrayOutputStream().toByteArray(), new ByteArrayOutputStream().toByteArray());   
}                                                                                                      }                                                                                                   
