long freeSpaceOS(final String path, final int os, final boolean kb, final long timeout) throws IOException {
    if (path == null) {
        throw new IllegalArgumentException("Path must not be null");
    }
    switch(os) {
        case WINDOWS:
            return kb ? freeSpaceWindows(path, timeout) / FileUtils.ONE_KB : freeSpaceWindows(path, timeout);
        case UNIX:
            return freeSpaceUnix(path, kb, false, timeout);
        case POSIX_UNIX:
            return freeSpaceUnix(path, kb, true, timeout);
        case OTHER:
            throw new IllegalStateException("Unsupported operating system");
        default:
            throw new IllegalStateException("Exception caught when determining operating system");
    }
}