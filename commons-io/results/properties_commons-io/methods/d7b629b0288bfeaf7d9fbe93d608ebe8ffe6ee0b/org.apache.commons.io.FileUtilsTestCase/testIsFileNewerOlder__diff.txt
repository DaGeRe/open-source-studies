public void testIsFileNewerOlder() throws Exception {                                                  public void testIsFileNewerOlder() throws Exception {                                               
File reference = new File(getTestDirectory(), "FileUtils-reference.txt");                              File reference = new File(getTestDirectory(), "FileUtils-reference.txt");                           
File oldFile = new File(getTestDirectory(), "FileUtils-old.txt");                                      File oldFile = new File(getTestDirectory(), "FileUtils-old.txt");                                   
File newFile = new File(getTestDirectory(), "FileUtils-new.txt");                                      File newFile = new File(getTestDirectory(), "FileUtils-new.txt");                                   
File invalidFile = new File(getTestDirectory(), "FileUtils-invalid-file.txt");                         File invalidFile = new File(getTestDirectory(), "FileUtils-invalid-file.txt");                      
createFile(oldFile, 0);                                                                                createFile(oldFile, 0);                                                                             
do {                                                                                                   do {                                                                                                
try {                                                                                                  try {                                                                                               
Thread.sleep(1000);                                                                                    Thread.sleep(1000);                                                                                 
} catch (InterruptedException ie) {                                                                    } catch (InterruptedException ie) {                                                                 
}                                                                                                      }                                                                                                   
createFile(reference, 0);                                                                              createFile(reference, 0);                                                                           
} while (oldFile.lastModified() == reference.lastModified());                                          } while (oldFile.lastModified() == reference.lastModified());                                       
Date date = new Date();                                                                                Date date = new Date();                                                                             
long now = date.getTime();                                                                             long now = date.getTime();                                                                          
do {                                                                                                   do {                                                                                                
try {                                                                                                  try {                                                                                               
Thread.sleep(1000);                                                                                    Thread.sleep(1000);                                                                                 
} catch (InterruptedException ie) {                                                                    } catch (InterruptedException ie) {                                                                 
}                                                                                                      }                                                                                                   
createFile(newFile, 0);                                                                                createFile(newFile, 0);                                                                             
} while (reference.lastModified() == newFile.lastModified());                                          } while (reference.lastModified() == newFile.lastModified());                                       
assertFalse("Old File - Newer - File", FileUtils.isFileNewer(oldFile, reference));                     assertFalse("Old File - Newer - File", FileUtils.isFileNewer(oldFile, reference));                  
assertFalse("Old File - Newer - Date", FileUtils.isFileNewer(oldFile, date));                          assertFalse("Old File - Newer - Date", FileUtils.isFileNewer(oldFile, date));                       
assertFalse("Old File - Newer - Mili", FileUtils.isFileNewer(oldFile, now));                           assertFalse("Old File - Newer - Mili", FileUtils.isFileNewer(oldFile, now));                        
assertTrue("New File - Newer - File", FileUtils.isFileNewer(newFile, reference));                      assertTrue("New File - Newer - File", FileUtils.isFileNewer(newFile, reference));                   
assertTrue("New File - Newer - Date", FileUtils.isFileNewer(newFile, date));                           assertTrue("New File - Newer - Date", FileUtils.isFileNewer(newFile, date));                        
assertTrue("New File - Newer - Mili", FileUtils.isFileNewer(newFile, now));                            assertTrue("New File - Newer - Mili", FileUtils.isFileNewer(newFile, now));                         
assertFalse("Invalid - Newer - File", FileUtils.isFileNewer(invalidFile, reference));                  assertFalse("Invalid - Newer - File", FileUtils.isFileNewer(invalidFile, reference));               
                                                                                                     | final String invalidFileName = invalidFile.getName();                                               
                                                                                                     | try {                                                                                               
                                                                                                     | FileUtils.isFileNewer(newFile, invalidFile);                                                        
                                                                                                     | fail("Should have cause IllegalArgumentException");                                                 
                                                                                                     | } catch (IllegalArgumentException iae) {                                                            
                                                                                                     | final String message = iae.getMessage();                                                            
                                                                                                     | assertTrue("Message should contain: " + invalidFileName + " but was: " + message, message.contains(i
                                                                                                     | }                                                                                                   
assertTrue("Old File - Older - File", FileUtils.isFileOlder(oldFile, reference));                      assertTrue("Old File - Older - File", FileUtils.isFileOlder(oldFile, reference));                   
assertTrue("Old File - Older - Date", FileUtils.isFileOlder(oldFile, date));                           assertTrue("Old File - Older - Date", FileUtils.isFileOlder(oldFile, date));                        
assertTrue("Old File - Older - Mili", FileUtils.isFileOlder(oldFile, now));                            assertTrue("Old File - Older - Mili", FileUtils.isFileOlder(oldFile, now));                         
assertFalse("New File - Older - File", FileUtils.isFileOlder(newFile, reference));                     assertFalse("New File - Older - File", FileUtils.isFileOlder(newFile, reference));                  
assertFalse("New File - Older - Date", FileUtils.isFileOlder(newFile, date));                          assertFalse("New File - Older - Date", FileUtils.isFileOlder(newFile, date));                       
assertFalse("New File - Older - Mili", FileUtils.isFileOlder(newFile, now));                           assertFalse("New File - Older - Mili", FileUtils.isFileOlder(newFile, now));                        
assertFalse("Invalid - Older - File", FileUtils.isFileOlder(invalidFile, reference));                  assertFalse("Invalid - Older - File", FileUtils.isFileOlder(invalidFile, reference));               
try {                                                                                                  try {                                                                                               
                                                                                                     | FileUtils.isFileOlder(newFile, invalidFile);                                                        
                                                                                                     | fail("Should have cause IllegalArgumentException");                                                 
                                                                                                     | } catch (IllegalArgumentException iae) {                                                            
                                                                                                     | final String message = iae.getMessage();                                                            
                                                                                                     | assertTrue("Message should contain: " + invalidFileName + " but was: " + message, message.contains(i
                                                                                                     | }                                                                                                   
                                                                                                     | try {                                                                                               
FileUtils.isFileNewer(null, now);                                                                      FileUtils.isFileNewer(null, now);                                                                   
fail("Newer Null, expected IllegalArgumentExcepion");                                                  fail("Newer Null, expected IllegalArgumentExcepion");                                               
} catch (IllegalArgumentException expected) {                                                          } catch (IllegalArgumentException expected) {                                                       
}                                                                                                      }                                                                                                   
try {                                                                                                  try {                                                                                               
FileUtils.isFileNewer(oldFile, (File) null);                                                           FileUtils.isFileNewer(oldFile, (File) null);                                                        
fail("Newer Null reference, expected IllegalArgumentExcepion");                                        fail("Newer Null reference, expected IllegalArgumentExcepion");                                     
} catch (IllegalArgumentException expected) {                                                          } catch (IllegalArgumentException expected) {                                                       
}                                                                                                      }                                                                                                   
try {                                                                                                  try {                                                                                               
FileUtils.isFileNewer(oldFile, invalidFile);                                                           FileUtils.isFileNewer(oldFile, invalidFile);                                                        
fail("Newer invalid reference, expected IllegalArgumentExcepion");                                     fail("Newer invalid reference, expected IllegalArgumentExcepion");                                  
} catch (IllegalArgumentException expected) {                                                          } catch (IllegalArgumentException expected) {                                                       
}                                                                                                      }                                                                                                   
try {                                                                                                  try {                                                                                               
FileUtils.isFileNewer(oldFile, (Date) null);                                                           FileUtils.isFileNewer(oldFile, (Date) null);                                                        
fail("Newer Null date, expected IllegalArgumentExcepion");                                             fail("Newer Null date, expected IllegalArgumentExcepion");                                          
} catch (IllegalArgumentException expected) {                                                          } catch (IllegalArgumentException expected) {                                                       
}                                                                                                      }                                                                                                   
try {                                                                                                  try {                                                                                               
FileUtils.isFileOlder(null, now);                                                                      FileUtils.isFileOlder(null, now);                                                                   
fail("Older Null, expected IllegalArgumentExcepion");                                                  fail("Older Null, expected IllegalArgumentExcepion");                                               
} catch (IllegalArgumentException expected) {                                                          } catch (IllegalArgumentException expected) {                                                       
}                                                                                                      }                                                                                                   
try {                                                                                                  try {                                                                                               
FileUtils.isFileOlder(oldFile, (File) null);                                                           FileUtils.isFileOlder(oldFile, (File) null);                                                        
fail("Older Null reference, expected IllegalArgumentExcepion");                                        fail("Older Null reference, expected IllegalArgumentExcepion");                                     
} catch (IllegalArgumentException expected) {                                                          } catch (IllegalArgumentException expected) {                                                       
}                                                                                                      }                                                                                                   
try {                                                                                                  try {                                                                                               
FileUtils.isFileOlder(oldFile, invalidFile);                                                           FileUtils.isFileOlder(oldFile, invalidFile);                                                        
fail("Older invalid reference, expected IllegalArgumentExcepion");                                     fail("Older invalid reference, expected IllegalArgumentExcepion");                                  
} catch (IllegalArgumentException expected) {                                                          } catch (IllegalArgumentException expected) {                                                       
}                                                                                                      }                                                                                                   
try {                                                                                                  try {                                                                                               
FileUtils.isFileOlder(oldFile, (Date) null);                                                           FileUtils.isFileOlder(oldFile, (Date) null);                                                        
fail("Older Null date, expected IllegalArgumentExcepion");                                             fail("Older Null date, expected IllegalArgumentExcepion");                                          
} catch (IllegalArgumentException expected) {                                                          } catch (IllegalArgumentException expected) {                                                       
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
