public void testSuffix() throws Exception {
    IOFileFilter filter = new SuffixFileFilter(new String[] { "tes", "est" });
    File testFile = new File("test");
    File fredFile = new File("fred");
    assertFiltering(filter, new File("fred.tes"), true);
    assertFiltering(filter, new File("fred.est"), true);
    assertFiltering(filter, new File("fred.EST"), false);
    assertFiltering(filter, new File("fred.exe"), false);
    filter = FileFilterUtils.orFileFilter(FileFilterUtils.suffixFileFilter("tes"), FileFilterUtils.suffixFileFilter("est"));
    assertFiltering(filter, new File("fred"), false);
    assertFiltering(filter, new File(".tes"), true);
    assertFiltering(filter, new File("fred.test"), true);
    filter = new SuffixFileFilter("est");
    assertFiltering(filter, new File("test"), true);
    assertFiltering(filter, new File("fred"), false);
    assertTrue(filter.accept(testFile.getParentFile(), testFile.getName()));
    assertTrue(!filter.accept(fredFile.getParentFile(), fredFile.getName()));
    List prefixes = Arrays.asList(new String[] { "ood", "red" });
    IOFileFilter listFilter = new SuffixFileFilter(prefixes);
    assertTrue(!listFilter.accept(testFile.getParentFile(), testFile.getName()));
    assertTrue(listFilter.accept(fredFile.getParentFile(), fredFile.getName()));
    try {
        new SuffixFileFilter((String) null);
        fail();
    } catch (IllegalArgumentException ex) {
    }
    try {
        new SuffixFileFilter((String[]) null);
        fail();
    } catch (IllegalArgumentException ex) {
    }
    try {
        new SuffixFileFilter((List) null);
        fail();
    } catch (IllegalArgumentException ex) {
    }
}