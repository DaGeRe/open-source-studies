@Test                                                                                                  @Test                                                                                               
@SuppressWarnings("deprecation")                                                                       @SuppressWarnings("deprecation")                                                                    
public void testGetFreeSpace_String() throws Exception {                                               public void testGetFreeSpace_String() throws Exception {                                            
if (File.separatorChar == '/') {                                                                       if (File.separatorChar == '/') {                                                                    
final String[] cmd;                                                                                    final String[] cmd;                                                                                 
String osName = System.getProperty("os.name");                                                         String osName = System.getProperty("os.name");                                                      
osName = osName.toLowerCase(Locale.ENGLISH);                                                           osName = osName.toLowerCase(Locale.ENGLISH);                                                        
if (osName.contains("hp-ux") || osName.contains("aix")) {                                              if (osName.contains("hp-ux") || osName.contains("aix")) {                                           
cmd = new String[] { "df", "-P", "/" };                                                                cmd = new String[] { "df", "-P", "/" };                                                             
} else if (osName.contains("sunos") || osName.contains("sun os") || osName.contains("solaris")) {      } else if (osName.contains("sunos") || osName.contains("sun os") || osName.contains("solaris")) {   
cmd = new String[] { "/usr/xpg4/bin/df", "-P", "/" };                                                  cmd = new String[] { "/usr/xpg4/bin/df", "-P", "/" };                                               
} else {                                                                                               } else {                                                                                            
cmd = new String[] { "df", "/" };                                                                      cmd = new String[] { "df", "/" };                                                                   
}                                                                                                      }                                                                                                   
final Process proc = Runtime.getRuntime().exec(cmd);                                                   final Process proc = Runtime.getRuntime().exec(cmd);                                                
boolean kilobyteBlock = true;                                                                          boolean kilobyteBlock = true;                                                                       
try (BufferedReader r = new BufferedReader(new InputStreamReader(proc.getInputStream()))) {            try (BufferedReader r = new BufferedReader(new InputStreamReader(proc.getInputStream()))) {         
final String line = r.readLine();                                                                      final String line = r.readLine();                                                                   
Assert.assertNotNull("Unexpected null line", line);                                                    Assert.assertNotNull("Unexpected null line", line);                                                 
if (line.contains("512")) {                                                                            if (line.contains("512")) {                                                                         
kilobyteBlock = false;                                                                                 kilobyteBlock = false;                                                                              
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
final long free = FileSystemUtils.freeSpace("/");                                                      final long free = FileSystemUtils.freeSpace("/");                                                   
final long kb = FileSystemUtils.freeSpaceKb("/");                                                      final long kb = FileSystemUtils.freeSpaceKb("/");                                                   
                                                                                                     | final double acceptableDelta = kb * 0.01d;                                                          
if (kilobyteBlock) {                                                                                   if (kilobyteBlock) {                                                                                
assertEquals(free, kb, 256d);                                                                        | assertEquals(free, kb, acceptableDelta);                                                            
} else {                                                                                               } else {                                                                                            
assertEquals(free / 2d, kb, 256d);                                                                   | assertEquals(free / 2d, kb, acceptableDelta);                                                       
}                                                                                                      }                                                                                                   
} else {                                                                                               } else {                                                                                            
final long bytes = FileSystemUtils.freeSpace("");                                                      final long bytes = FileSystemUtils.freeSpace("");                                                   
final long kb = FileSystemUtils.freeSpaceKb("");                                                       final long kb = FileSystemUtils.freeSpaceKb("");                                                    
assertEquals((double) bytes / 1024, kb, 256d);                                                       | final double acceptableDelta = kb * 0.01d;                                                          
                                                                                                     | assertEquals((double) bytes / 1024, kb, acceptableDelta);                                           
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
