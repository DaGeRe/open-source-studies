@Test(expected = UnsupportedEncodingException.class)                                                   @Test(expected = UnsupportedEncodingException.class)                                                
public void exceptions_in_append_charSequence_offset() throws IOException {                            public void exceptions_in_append_charSequence_offset() throws IOException {                         
OutputStreamWriter osw = new OutputStreamWriter(new ByteArrayOutputStream()) {                       | final OutputStreamWriter osw = new OutputStreamWriter(new ByteArrayOutputStream()) {                
                                                                                                                                                                                                           
@Override                                                                                              @Override                                                                                           
public Writer append(CharSequence csq, int start, int end) throws IOException {                      | public Writer append(final CharSequence csq, final int start, final int end) throws IOException {   
throw new UnsupportedEncodingException("Bah");                                                         throw new UnsupportedEncodingException("Bah");                                                      
}                                                                                                      }                                                                                                   
};                                                                                                     };                                                                                                  
try (ProxyWriter proxy = new ProxyWriter(osw)) {                                                       try (ProxyWriter proxy = new ProxyWriter(osw)) {                                                    
proxy.append("ABCE", 1, 2);                                                                            proxy.append("ABCE", 1, 2);                                                                         
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
