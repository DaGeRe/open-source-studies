public void testMoveFile_Errors() throws Exception {                                                   public void testMoveFile_Errors() throws Exception {                                                
try {                                                                                                  try {                                                                                               
FileUtils.moveFile(null, new File("foo"));                                                             FileUtils.moveFile(null, new File("foo"));                                                          
fail("Expected NullPointerException when source is null");                                             fail("Expected NullPointerException when source is null");                                          
} catch (NullPointerException e) {                                                                     } catch (NullPointerException e) {                                                                  
}                                                                                                      }                                                                                                   
try {                                                                                                  try {                                                                                               
FileUtils.moveFile(new File("foo"), null);                                                             FileUtils.moveFile(new File("foo"), null);                                                          
fail("Expected NullPointerException when destination is null");                                        fail("Expected NullPointerException when destination is null");                                     
} catch (NullPointerException e) {                                                                     } catch (NullPointerException e) {                                                                  
}                                                                                                      }                                                                                                   
try {                                                                                                  try {                                                                                               
FileUtils.moveFile(new File("nonexistant"), new File("foo"));                                          FileUtils.moveFile(new File("nonexistant"), new File("foo"));                                       
fail("Expected FileNotFoundException for source");                                                     fail("Expected FileNotFoundException for source");                                                  
} catch (FileNotFoundException e) {                                                                    } catch (FileNotFoundException e) {                                                                 
}                                                                                                      }                                                                                                   
try {                                                                                                  try {                                                                                               
FileUtils.moveFile(getTestDirectory(), new File("foo"));                                               FileUtils.moveFile(getTestDirectory(), new File("foo"));                                            
fail("Expected IOException when source is a directory");                                               fail("Expected IOException when source is a directory");                                            
} catch (IOException e) {                                                                              } catch (IOException e) {                                                                           
}                                                                                                      }                                                                                                   
File testSourceFile = new File(getTestDirectory(), "testMoveFileSource");                              File testSourceFile = new File(getTestDirectory(), "testMoveFileSource");                           
File testDestFile = new File(getTestDirectory(), "testMoveFileSource");                                File testDestFile = new File(getTestDirectory(), "testMoveFileSource");                             
createFile(testSourceFile, 0);                                                                         createFile(testSourceFile, 0);                                                                      
createFile(testDestFile, 0);                                                                           createFile(testDestFile, 0);                                                                        
try {                                                                                                  try {                                                                                               
FileUtils.moveFile(testSourceFile, testDestFile);                                                      FileUtils.moveFile(testSourceFile, testDestFile);                                                   
fail("Expected IOException when dest already exists");                                               | fail("Expected FileExistsException when dest already exists");                                      
} catch (IOException e) {                                                                            | } catch (FileExistsException e) {                                                                   
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
