public void testFileDelete() {                                                                         public void testFileDelete() {                                                                      
try {                                                                                                  try {                                                                                               
checkAndNotify();                                                                                      checkAndNotify();                                                                                   
checkCollectionsEmpty("A");                                                                            checkCollectionsEmpty("A");                                                                         
File testDirA = new File(testDir, "test-dir-A");                                                       File testDirA = new File(testDir, "test-dir-A");                                                    
testDirA.mkdir();                                                                                      testDirA.mkdir();                                                                                   
touch(testDir);                                                                                      | testDir = touch(testDir);                                                                           
touch(testDirA);                                                                                     | testDirA = touch(testDirA);                                                                         
File testDirAFile1 = touch(new File(testDirA, "A-file1.java"));                                        File testDirAFile1 = touch(new File(testDirA, "A-file1.java"));                                     
File testDirAFile2 = touch(new File(testDirA, "A-file2.java"));                                        File testDirAFile2 = touch(new File(testDirA, "A-file2.java"));                                     
File testDirAFile3 = touch(new File(testDirA, "A-file3.java"));                                        File testDirAFile3 = touch(new File(testDirA, "A-file3.java"));                                     
File testDirAFile4 = touch(new File(testDirA, "A-file4.java"));                                        File testDirAFile4 = touch(new File(testDirA, "A-file4.java"));                                     
File testDirAFile5 = touch(new File(testDirA, "A-file5.java"));                                        File testDirAFile5 = touch(new File(testDirA, "A-file5.java"));                                     
assertTrue("B testDirAFile1 exists", testDirAFile1.exists());                                          assertTrue("B testDirAFile1 exists", testDirAFile1.exists());                                       
assertTrue("B testDirAFile2 exists", testDirAFile2.exists());                                          assertTrue("B testDirAFile2 exists", testDirAFile2.exists());                                       
assertTrue("B testDirAFile3 exists", testDirAFile3.exists());                                          assertTrue("B testDirAFile3 exists", testDirAFile3.exists());                                       
assertTrue("B testDirAFile4 exists", testDirAFile4.exists());                                          assertTrue("B testDirAFile4 exists", testDirAFile4.exists());                                       
assertTrue("B testDirAFile5 exists", testDirAFile5.exists());                                          assertTrue("B testDirAFile5 exists", testDirAFile5.exists());                                       
checkAndNotify();                                                                                      checkAndNotify();                                                                                   
checkCollectionSizes("B", 1, 0, 0, 5, 0, 0);                                                           checkCollectionSizes("B", 1, 0, 0, 5, 0, 0);                                                        
assertTrue("B testDirAFile1", listener.getCreatedFiles().contains(testDirAFile1));                     assertTrue("B testDirAFile1", listener.getCreatedFiles().contains(testDirAFile1));                  
assertTrue("B testDirAFile2", listener.getCreatedFiles().contains(testDirAFile2));                     assertTrue("B testDirAFile2", listener.getCreatedFiles().contains(testDirAFile2));                  
assertTrue("B testDirAFile3", listener.getCreatedFiles().contains(testDirAFile3));                     assertTrue("B testDirAFile3", listener.getCreatedFiles().contains(testDirAFile3));                  
assertTrue("B testDirAFile4", listener.getCreatedFiles().contains(testDirAFile4));                     assertTrue("B testDirAFile4", listener.getCreatedFiles().contains(testDirAFile4));                  
assertTrue("B testDirAFile5", listener.getCreatedFiles().contains(testDirAFile5));                     assertTrue("B testDirAFile5", listener.getCreatedFiles().contains(testDirAFile5));                  
checkAndNotify();                                                                                      checkAndNotify();                                                                                   
checkCollectionsEmpty("C");                                                                            checkCollectionsEmpty("C");                                                                         
FileUtils.deleteQuietly(testDirAFile1);                                                                FileUtils.deleteQuietly(testDirAFile1);                                                             
touch(testDirA);                                                                                     | testDirA = touch(testDirA);                                                                         
checkAndNotify();                                                                                      checkAndNotify();                                                                                   
checkCollectionSizes("D", 0, 1, 0, 0, 0, 1);                                                           checkCollectionSizes("D", 0, 1, 0, 0, 0, 1);                                                        
assertFalse("D testDirAFile1 exists", testDirAFile1.exists());                                         assertFalse("D testDirAFile1 exists", testDirAFile1.exists());                                      
assertTrue("D testDirAFile1", listener.getDeletedFiles().contains(testDirAFile1));                     assertTrue("D testDirAFile1", listener.getDeletedFiles().contains(testDirAFile1));                  
FileUtils.deleteQuietly(testDirAFile3);                                                                FileUtils.deleteQuietly(testDirAFile3);                                                             
touch(testDirA);                                                                                     | testDirA = touch(testDirA);                                                                         
checkAndNotify();                                                                                      checkAndNotify();                                                                                   
checkCollectionSizes("E", 0, 1, 0, 0, 0, 1);                                                           checkCollectionSizes("E", 0, 1, 0, 0, 0, 1);                                                        
assertFalse("E testDirAFile3 exists", testDirAFile3.exists());                                         assertFalse("E testDirAFile3 exists", testDirAFile3.exists());                                      
assertTrue("E testDirAFile3", listener.getDeletedFiles().contains(testDirAFile3));                     assertTrue("E testDirAFile3", listener.getDeletedFiles().contains(testDirAFile3));                  
FileUtils.deleteQuietly(testDirAFile5);                                                                FileUtils.deleteQuietly(testDirAFile5);                                                             
touch(testDirA);                                                                                     | testDirA = touch(testDirA);                                                                         
checkAndNotify();                                                                                      checkAndNotify();                                                                                   
checkCollectionSizes("F", 0, 1, 0, 0, 0, 1);                                                           checkCollectionSizes("F", 0, 1, 0, 0, 0, 1);                                                        
assertFalse("F testDirAFile5 exists", testDirAFile5.exists());                                         assertFalse("F testDirAFile5 exists", testDirAFile5.exists());                                      
assertTrue("F testDirAFile5", listener.getDeletedFiles().contains(testDirAFile5));                     assertTrue("F testDirAFile5", listener.getDeletedFiles().contains(testDirAFile5));                  
} catch (Exception e) {                                                                                } catch (Exception e) {                                                                             
fail("Threw " + e);                                                                                    fail("Threw " + e);                                                                                 
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
