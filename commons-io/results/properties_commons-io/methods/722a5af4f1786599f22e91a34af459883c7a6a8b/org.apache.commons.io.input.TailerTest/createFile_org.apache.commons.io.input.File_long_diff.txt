protected void createFile(final File file, final long size) throws IOException {                       protected void createFile(final File file, final long size) throws IOException {                    
if (!file.getParentFile().exists()) {                                                                  if (!file.getParentFile().exists()) {                                                               
throw new IOException("Cannot create file " + file + " as the parent directory does not exist");       throw new IOException("Cannot create file " + file + " as the parent directory does not exist");    
}                                                                                                      }                                                                                                   
final BufferedOutputStream output = new BufferedOutputStream(new FileOutputStream(file));            | try (final BufferedOutputStream output = new BufferedOutputStream(new FileOutputStream(file))) {    
try {                                                                                                |                                                                                                     
TestUtils.generateTestData(output, size);                                                              TestUtils.generateTestData(output, size);                                                           
} finally {                                                                                          |                                                                                                     
IOUtils.closeQuietly(output);                                                                        |                                                                                                     
}                                                                                                      }                                                                                                   
RandomAccessFile reader = null;                                                                        RandomAccessFile reader = null;                                                                     
try {                                                                                                  try {                                                                                               
while (reader == null) {                                                                               while (reader == null) {                                                                            
try {                                                                                                  try {                                                                                               
reader = new RandomAccessFile(file.getPath(), "r");                                                    reader = new RandomAccessFile(file.getPath(), "r");                                                 
} catch (final FileNotFoundException ignore) {                                                         } catch (final FileNotFoundException ignore) {                                                      
}                                                                                                      }                                                                                                   
try {                                                                                                  try {                                                                                               
TestUtils.sleep(200L);                                                                                 TestUtils.sleep(200L);                                                                              
} catch (final InterruptedException ignore) {                                                          } catch (final InterruptedException ignore) {                                                       
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
} finally {                                                                                            } finally {                                                                                         
IOUtils.closeQuietly(reader);                                                                          IOUtils.closeQuietly(reader);                                                                       
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
