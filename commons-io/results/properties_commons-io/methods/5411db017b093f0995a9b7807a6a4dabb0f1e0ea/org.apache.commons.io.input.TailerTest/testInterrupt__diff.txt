@Test                                                                                                  @Test                                                                                               
public void testInterrupt() throws Exception {                                                         public void testInterrupt() throws Exception {                                                      
final File file = new File(getTestDirectory(), "nosuchfile");                                          final File file = new File(getTestDirectory(), "nosuchfile");                                       
assertFalse("nosuchfile should not exist", file.exists());                                             assertFalse("nosuchfile should not exist", file.exists());                                          
final TestTailerListener listener = new TestTailerListener();                                          final TestTailerListener listener = new TestTailerListener();                                       
final int delay = 1000;                                                                                final int delay = 1000;                                                                             
final int idle = 50;                                                                                   final int idle = 50;                                                                                
Tailer tailer = new Tailer(file, listener, delay, false, 4096);                                      | tailer = new Tailer(file, listener, delay, false, 4096);                                            
final Thread thread = new Thread(tailer);                                                              final Thread thread = new Thread(tailer);                                                           
thread.setDaemon(true);                                                                                thread.setDaemon(true);                                                                             
thread.start();                                                                                        thread.start();                                                                                     
TestUtils.sleep(idle);                                                                                 TestUtils.sleep(idle);                                                                              
thread.interrupt();                                                                                    thread.interrupt();                                                                                 
tailer = null;                                                                                       |                                                                                                     
TestUtils.sleep(delay + idle);                                                                         TestUtils.sleep(delay + idle);                                                                      
assertNotNull("Missing InterruptedException", listener.exception);                                     assertNotNull("Missing InterruptedException", listener.exception);                                  
assertTrue("Unexpected Exception: " + listener.exception, listener.exception instanceof InterruptedE   assertTrue("Unexpected Exception: " + listener.exception, listener.exception instanceof InterruptedE
assertEquals("Expected init to be called", 1, listener.initialised);                                   assertEquals("Expected init to be called", 1, listener.initialised);                                
assertTrue("fileNotFound should be called", listener.notFound &gt; 0);                                 assertTrue("fileNotFound should be called", listener.notFound &gt; 0);                              
assertEquals("fileRotated should be not be called", 0, listener.rotated);                              assertEquals("fileRotated should be not be called", 0, listener.rotated);                           
assertEquals("end of file never reached", 0, listener.reachedEndOfFile);                               assertEquals("end of file never reached", 0, listener.reachedEndOfFile);                            
}                                                                                                      }                                                                                                   
