public void testTailer() throws Exception {
    long delay = 50;
    File file = new File(getTestDirectory(), "tailer1-test.txt");
    createFile(file, 0);
    TestTailerListener listener = new TestTailerListener();
    Tailer tailer = start(file, listener, delay, false);
    write(file, "Line one", "Line two");
    Thread.sleep(delay * 2);
    List<String> lines = listener.getLines();
    assertEquals("1 line count", 2, lines.size());
    assertEquals("1 line 1", "Line one", lines.get(0));
    assertEquals("1 line 2", "Line two", lines.get(1));
    listener.clear();
    write(file, "Line three");
    Thread.sleep(delay * 2);
    lines = listener.getLines();
    assertEquals("2 line count", 1, lines.size());
    assertEquals("2 line 3", "Line three", lines.get(0));
    listener.clear();
    lines = FileUtils.readLines(file);
    assertEquals("3 line count", 3, lines.size());
    assertEquals("3 line 1", "Line one", lines.get(0));
    assertEquals("3 line 2", "Line two", lines.get(1));
    assertEquals("3 line 3", "Line three", lines.get(2));
    file.delete();
    createFile(file, 0);
    Thread.sleep(delay * 2);
    write(file, "Line four");
    Thread.sleep(delay * 2);
    lines = listener.getLines();
    assertEquals("4 line count", 1, lines.size());
    assertEquals("4 line 3", "Line four", lines.get(0));
    listener.clear();
    tailer.stop();
    Thread.sleep(delay * 2);
    write(file, "Line five");
    assertEquals("4 line count", 0, listener.getLines().size());
    assertNull("Should not generate Exception", listener.exception);
    assertEquals("Expected init to be called", 1, listener.initialised);
    assertEquals("fileNotFound should not be called", 0, listener.notFound);
    assertEquals("fileRotated should be be called", 1, listener.rotated);
}