long freeSpaceUnix(String path, boolean kb, boolean posix) throws IOException {                        long freeSpaceUnix(String path, boolean kb, boolean posix) throws IOException {                     
if (path.length() == 0) {                                                                              if (path.length() == 0) {                                                                           
throw new IllegalArgumentException("Path must not be empty");                                          throw new IllegalArgumentException("Path must not be empty");                                       
}                                                                                                      }                                                                                                   
path = FilenameUtils.normalize(path);                                                                |                                                                                                     
String flags = "-";                                                                                    String flags = "-";                                                                                 
if (kb) {                                                                                              if (kb) {                                                                                           
flags += "k";                                                                                          flags += "k";                                                                                       
}                                                                                                      }                                                                                                   
if (posix) {                                                                                           if (posix) {                                                                                        
flags += "P";                                                                                          flags += "P";                                                                                       
}                                                                                                      }                                                                                                   
String[] cmdAttribs = (flags.length() &gt; 1 ? new String[] { DF, flags, path } : new String[] { DF,   String[] cmdAttribs = (flags.length() &gt; 1 ? new String[] { DF, flags, path } : new String[] { DF,
List&lt;String&gt; lines = performCommand(cmdAttribs, 3);                                              List&lt;String&gt; lines = performCommand(cmdAttribs, 3);                                           
if (lines.size() &lt; 2) {                                                                             if (lines.size() &lt; 2) {                                                                          
throw new IOException("Command line '" + DF + "' did not return info as expected " + "for path '" +    throw new IOException("Command line '" + DF + "' did not return info as expected " + "for path '" + 
}                                                                                                      }                                                                                                   
String line2 = lines.get(1);                                                                           String line2 = lines.get(1);                                                                        
StringTokenizer tok = new StringTokenizer(line2, " ");                                                 StringTokenizer tok = new StringTokenizer(line2, " ");                                              
if (tok.countTokens() &lt; 4) {                                                                        if (tok.countTokens() &lt; 4) {                                                                     
if (tok.countTokens() == 1 && lines.size() &gt;= 3) {                                                  if (tok.countTokens() == 1 && lines.size() &gt;= 3) {                                               
String line3 = lines.get(2);                                                                           String line3 = lines.get(2);                                                                        
tok = new StringTokenizer(line3, " ");                                                                 tok = new StringTokenizer(line3, " ");                                                              
} else {                                                                                               } else {                                                                                            
throw new IOException("Command line '" + DF + "' did not return data as expected " + "for path '" +    throw new IOException("Command line '" + DF + "' did not return data as expected " + "for path '" + 
}                                                                                                      }                                                                                                   
} else {                                                                                               } else {                                                                                            
tok.nextToken();                                                                                       tok.nextToken();                                                                                    
}                                                                                                      }                                                                                                   
tok.nextToken();                                                                                       tok.nextToken();                                                                                    
tok.nextToken();                                                                                       tok.nextToken();                                                                                    
String freeSpace = tok.nextToken();                                                                    String freeSpace = tok.nextToken();                                                                 
return parseBytes(freeSpace, path);                                                                    return parseBytes(freeSpace, path);                                                                 
}                                                                                                      }                                                                                                   
