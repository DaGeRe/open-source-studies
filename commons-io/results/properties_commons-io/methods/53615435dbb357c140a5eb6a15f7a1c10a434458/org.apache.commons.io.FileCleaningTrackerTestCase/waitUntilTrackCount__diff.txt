private void waitUntilTrackCount() throws Exception {                                                  private void waitUntilTrackCount() throws Exception {                                               
                                                                                                     | System.gc();                                                                                        
                                                                                                     | Thread.sleep(500);                                                                                  
int count = 0;                                                                                         int count = 0;                                                                                      
while (theInstance.getTrackCount() != 0 && count++ &lt; 5) {                                           while (theInstance.getTrackCount() != 0 && count++ &lt; 5) {                                        
List&lt;String&gt; list = new ArrayList&lt;String&gt;();                                               List&lt;String&gt; list = new ArrayList&lt;String&gt;();                                            
try {                                                                                                  try {                                                                                               
long i = 0;                                                                                            long i = 0;                                                                                         
while (theInstance.getTrackCount() != 0) {                                                             while (theInstance.getTrackCount() != 0) {                                                          
list.add("A Big String A Big String A Big String A Big String A Big String A Big String A Big String   list.add("A Big String A Big String A Big String A Big String A Big String A Big String A Big String
}                                                                                                      }                                                                                                   
} catch (Throwable ignored) {                                                                          } catch (Throwable ignored) {                                                                       
}                                                                                                      }                                                                                                   
list.clear();                                                                                        |                                                                                                     
list = null;                                                                                           list = null;                                                                                        
System.gc();                                                                                           System.gc();                                                                                        
Thread.sleep(1000);                                                                                    Thread.sleep(1000);                                                                                 
}                                                                                                      }                                                                                                   
if (theInstance.getTrackCount() != 0) {                                                                if (theInstance.getTrackCount() != 0) {                                                             
throw new IllegalStateException("Your JVM is not releasing References, try running the testcase with   throw new IllegalStateException("Your JVM is not releasing References, try running the testcase with
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
