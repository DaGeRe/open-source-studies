public void testListFiles() throws Exception {
    Collection files;
    Collection filenames;
    IOFileFilter fileFilter;
    IOFileFilter dirFilter;
    fileFilter = FileFilterUtils.trueFileFilter();
    files = FileUtils.listFiles(getLocalTestDirectory(), fileFilter, (IOFileFilter) null);
    filenames = filesToFilenames(files);
    assertTrue("'dummy-build.xml' is missing", filenames.contains("dummy-build.xml"));
    assertFalse("'dummy-index.html' shouldn't be found", filenames.contains("dummy-index.html"));
    assertFalse("'Entries' shouldn't be found", filenames.contains("Entries"));
    fileFilter = FileFilterUtils.trueFileFilter();
    dirFilter = FileFilterUtils.notFileFilter(FileFilterUtils.nameFileFilter("CVS"));
    files = FileUtils.listFiles(getLocalTestDirectory(), fileFilter, dirFilter);
    filenames = filesToFilenames(files);
    assertTrue("'dummy-build.xml' is missing", filenames.contains("dummy-build.xml"));
    assertTrue("'dummy-index.html' is missing", filenames.contains("dummy-index.html"));
    assertFalse("'Entries' shouldn't be found", filenames.contains("Entries"));
    fileFilter = FileFilterUtils.trueFileFilter();
    dirFilter = FileFilterUtils.makeCVSAware(null);
    files = FileUtils.listFiles(getLocalTestDirectory(), fileFilter, dirFilter);
    filenames = filesToFilenames(files);
    assertTrue("'dummy-build.xml' is missing", filenames.contains("dummy-build.xml"));
    assertTrue("'dummy-index.html' is missing", filenames.contains("dummy-index.html"));
    assertFalse("'Entries' shouldn't be found", filenames.contains("Entries"));
    fileFilter = FileFilterUtils.trueFileFilter();
    dirFilter = FileFilterUtils.prefixFileFilter("sub");
    dirFilter = FileFilterUtils.makeCVSAware(dirFilter);
    files = FileUtils.listFiles(getLocalTestDirectory(), fileFilter, dirFilter);
    filenames = filesToFilenames(files);
    assertTrue("'dummy-build.xml' is missing", filenames.contains("dummy-build.xml"));
    assertTrue("'dummy-index.html' is missing", filenames.contains("dummy-index.html"));
    assertFalse("'Entries' shouldn't be found", filenames.contains("Entries"));
    try {
        FileUtils.listFiles(getLocalTestDirectory(), (IOFileFilter) null, (IOFileFilter) null);
        fail("Expected error about null parameter");
    } catch (Exception e) {
    }
}