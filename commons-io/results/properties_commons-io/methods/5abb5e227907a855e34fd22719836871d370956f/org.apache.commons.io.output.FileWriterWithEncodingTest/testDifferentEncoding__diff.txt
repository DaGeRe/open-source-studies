public void testDifferentEncoding() throws Exception {                                                 public void testDifferentEncoding() throws Exception {                                              
Map&lt;String, Charset&gt; map = Charset.availableCharsets();                                        | if (Charset.isSupported("UTF-16BE")) {                                                              
if (map.containsKey("UTF-16BE")) {                                                                   |                                                                                                     
FileWriter fw1 = null;                                                                                 FileWriter fw1 = null;                                                                              
FileWriterWithEncoding fw2 = null;                                                                     FileWriterWithEncoding fw2 = null;                                                                  
try {                                                                                                  try {                                                                                               
fw1 = new FileWriter(file1);                                                                           fw1 = new FileWriter(file1);                                                                        
fw2 = new FileWriterWithEncoding(file2, defaultEncoding);                                              fw2 = new FileWriterWithEncoding(file2, defaultEncoding);                                           
assertEquals(true, file1.exists());                                                                    assertEquals(true, file1.exists());                                                                 
assertEquals(true, file2.exists());                                                                    assertEquals(true, file2.exists());                                                                 
fw1.write(textContent);                                                                                fw1.write(textContent);                                                                             
fw2.write(textContent);                                                                                fw2.write(textContent);                                                                             
fw1.flush();                                                                                           fw1.flush();                                                                                        
fw2.flush();                                                                                           fw2.flush();                                                                                        
try {                                                                                                  try {                                                                                               
checkFile(file1, file2);                                                                               checkFile(file1, file2);                                                                            
fail();                                                                                                fail();                                                                                             
} catch (AssertionFailedError ex) {                                                                    } catch (AssertionFailedError ex) {                                                                 
}                                                                                                      }                                                                                                   
} finally {                                                                                            } finally {                                                                                         
IOUtils.closeQuietly(fw1);                                                                             IOUtils.closeQuietly(fw1);                                                                          
IOUtils.closeQuietly(fw2);                                                                             IOUtils.closeQuietly(fw2);                                                                          
}                                                                                                      }                                                                                                   
assertEquals(true, file1.exists());                                                                    assertEquals(true, file1.exists());                                                                 
assertEquals(true, file2.exists());                                                                    assertEquals(true, file2.exists());                                                                 
}                                                                                                      }                                                                                                   
if (map.containsKey("UTF-16LE")) {                                                                   | if (Charset.isSupported("UTF-16LE")) {                                                              
FileWriter fw1 = null;                                                                                 FileWriter fw1 = null;                                                                              
FileWriterWithEncoding fw2 = null;                                                                     FileWriterWithEncoding fw2 = null;                                                                  
try {                                                                                                  try {                                                                                               
fw1 = new FileWriter(file1);                                                                           fw1 = new FileWriter(file1);                                                                        
fw2 = new FileWriterWithEncoding(file2, defaultEncoding);                                              fw2 = new FileWriterWithEncoding(file2, defaultEncoding);                                           
assertEquals(true, file1.exists());                                                                    assertEquals(true, file1.exists());                                                                 
assertEquals(true, file2.exists());                                                                    assertEquals(true, file2.exists());                                                                 
fw1.write(textContent);                                                                                fw1.write(textContent);                                                                             
fw2.write(textContent);                                                                                fw2.write(textContent);                                                                             
fw1.flush();                                                                                           fw1.flush();                                                                                        
fw2.flush();                                                                                           fw2.flush();                                                                                        
try {                                                                                                  try {                                                                                               
checkFile(file1, file2);                                                                               checkFile(file1, file2);                                                                            
fail();                                                                                                fail();                                                                                             
} catch (AssertionFailedError ex) {                                                                    } catch (AssertionFailedError ex) {                                                                 
}                                                                                                      }                                                                                                   
} finally {                                                                                            } finally {                                                                                         
IOUtils.closeQuietly(fw1);                                                                             IOUtils.closeQuietly(fw1);                                                                          
IOUtils.closeQuietly(fw2);                                                                             IOUtils.closeQuietly(fw2);                                                                          
}                                                                                                      }                                                                                                   
assertEquals(true, file1.exists());                                                                    assertEquals(true, file1.exists());                                                                 
assertEquals(true, file2.exists());                                                                    assertEquals(true, file2.exists());                                                                 
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
