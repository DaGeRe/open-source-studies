public void testMultiThreadCancel() {                                                                  public void testMultiThreadCancel() {                                                               
String cancelName = null;                                                                              String cancelName = null;                                                                           
TestMultiThreadCancelWalker walker = null;                                                             TestMultiThreadCancelWalker walker = null;                                                          
try {                                                                                                  try {                                                                                               
cancelName = "DirectoryWalker.java";                                                                   cancelName = "DirectoryWalker.java";                                                                
walker = new TestMultiThreadCancelWalker(cancelName, false);                                           walker = new TestMultiThreadCancelWalker(cancelName, false);                                        
walker.find(javaDir);                                                                                  walker.find(javaDir);                                                                               
fail("CancelException not thrown for '" + cancelName + "'");                                           fail("CancelException not thrown for '" + cancelName + "'");                                        
} catch (DirectoryWalker.CancelException cancel) {                                                     } catch (DirectoryWalker.CancelException cancel) {                                                  
File last = (File) walker.results.get(walker.results.size() - 1);                                    | File last = walker.results.get(walker.results.size() - 1);                                          
assertEquals(cancelName, last.getName());                                                              assertEquals(cancelName, last.getName());                                                           
assertEquals("Depth: " + cancelName, 5, cancel.getDepth());                                            assertEquals("Depth: " + cancelName, 5, cancel.getDepth());                                         
} catch (IOException ex) {                                                                             } catch (IOException ex) {                                                                          
fail("IOException: " + cancelName + " " + ex);                                                         fail("IOException: " + cancelName + " " + ex);                                                      
}                                                                                                      }                                                                                                   
try {                                                                                                  try {                                                                                               
cancelName = "commons";                                                                                cancelName = "commons";                                                                             
walker = new TestMultiThreadCancelWalker(cancelName, false);                                           walker = new TestMultiThreadCancelWalker(cancelName, false);                                        
walker.find(javaDir);                                                                                  walker.find(javaDir);                                                                               
fail("CancelException not thrown for '" + cancelName + "'");                                           fail("CancelException not thrown for '" + cancelName + "'");                                        
} catch (DirectoryWalker.CancelException cancel) {                                                     } catch (DirectoryWalker.CancelException cancel) {                                                  
assertEquals("File:  " + cancelName, cancelName, cancel.getFile().getName());                          assertEquals("File:  " + cancelName, cancelName, cancel.getFile().getName());                       
assertEquals("Depth: " + cancelName, 3, cancel.getDepth());                                            assertEquals("Depth: " + cancelName, 3, cancel.getDepth());                                         
} catch (IOException ex) {                                                                             } catch (IOException ex) {                                                                          
fail("IOException: " + cancelName + " " + ex);                                                         fail("IOException: " + cancelName + " " + ex);                                                      
}                                                                                                      }                                                                                                   
try {                                                                                                  try {                                                                                               
walker = new TestMultiThreadCancelWalker(cancelName, true);                                            walker = new TestMultiThreadCancelWalker(cancelName, true);                                         
List results = walker.find(javaDir);                                                                 | List&lt;File&gt; results = walker.find(javaDir);                                                    
File lastFile = (File) results.get(results.size() - 1);                                              | File lastFile = results.get(results.size() - 1);                                                    
assertEquals("Suppress:  " + cancelName, cancelName, lastFile.getName());                              assertEquals("Suppress:  " + cancelName, cancelName, lastFile.getName());                           
} catch (IOException ex) {                                                                             } catch (IOException ex) {                                                                          
fail("Suppress threw " + ex);                                                                          fail("Suppress threw " + ex);                                                                       
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
