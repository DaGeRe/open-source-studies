@Test                                                                                                  @Test                                                                                               
public void testOtherException() throws Exception {                                                    public void testOtherException() throws Exception {                                                 
final IOException exception = new IOException("test exception");                                       final IOException exception = new IOException("test exception");                                    
final OutputStream closed = new ClosedOutputStream();                                                | try (final OutputStream closed = new ClosedOutputStream();                                          
final TaggedOutputStream stream = new TaggedOutputStream(closed);                                    | final TaggedOutputStream stream = new TaggedOutputStream(closed)) {                                 
assertFalse(stream.isCauseOf(exception));                                                              assertFalse(stream.isCauseOf(exception));                                                           
assertFalse(stream.isCauseOf(new TaggedIOException(exception, UUID.randomUUID())));                    assertFalse(stream.isCauseOf(new TaggedIOException(exception, UUID.randomUUID())));                 
try {                                                                                                  try {                                                                                               
stream.throwIfCauseOf(exception);                                                                      stream.throwIfCauseOf(exception);                                                                   
} catch (final IOException e) {                                                                        } catch (final IOException e) {                                                                     
fail("Unexpected exception thrown");                                                                   fail("Unexpected exception thrown");                                                                
}                                                                                                      }                                                                                                   
try {                                                                                                  try {                                                                                               
stream.throwIfCauseOf(new TaggedIOException(exception, UUID.randomUUID()));                            stream.throwIfCauseOf(new TaggedIOException(exception, UUID.randomUUID()));                         
} catch (final IOException e) {                                                                        } catch (final IOException e) {                                                                     
fail("Unexpected exception thrown");                                                                   fail("Unexpected exception thrown");                                                                
}                                                                                                      }                                                                                                   
stream.close();                                                                                      |                                                                                                     
}                                                                                                      }                                                                                                   
                                                                                                     | }                                                                                                   
