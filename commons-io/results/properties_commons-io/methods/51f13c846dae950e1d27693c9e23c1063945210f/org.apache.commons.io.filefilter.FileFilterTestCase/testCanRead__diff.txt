@Test
public void testCanRead() throws Exception {
    final File readOnlyFile = new File(getTestDirectory(), "read-only-file1.txt");
    if (!readOnlyFile.getParentFile().exists()) {
        throw new IOException("Cannot create file " + readOnlyFile + " as the parent directory does not exist");
    }
    final BufferedOutputStream output = new BufferedOutputStream(new FileOutputStream(readOnlyFile));
    try {
        TestUtils.generateTestData(output, (long) 32);
    } finally {
        IOUtils.closeQuietly(output);
    }
    readOnlyFile.setReadOnly();
    assertFiltering(CanReadFileFilter.CAN_READ, readOnlyFile, true);
    assertFiltering(CanReadFileFilter.CANNOT_READ, readOnlyFile, false);
    assertFiltering(CanReadFileFilter.READ_ONLY, readOnlyFile, true);
    readOnlyFile.delete();
}