protected void createLineBasedFile(File file, String[] data) throws IOException {                      protected void createLineBasedFile(File file, String[] data) throws IOException {                   
if (!file.getParentFile().exists()) {                                                                | if (file.getParentFile() != null && !file.getParentFile().exists()) {                               
throw new IOException("Cannot create file " + file + " as the parent directory does not exist");       throw new IOException("Cannot create file " + file + " as the parent directory does not exist");    
}                                                                                                      }                                                                                                   
PrintWriter output = new PrintWriter(new OutputStreamWriter(new FileOutputStream(file), "UTF-8"));     PrintWriter output = new PrintWriter(new OutputStreamWriter(new FileOutputStream(file), "UTF-8"));  
try {                                                                                                  try {                                                                                               
for (int i = 0; i &lt; data.length; i++) {                                                             for (int i = 0; i &lt; data.length; i++) {                                                          
output.println(data[i]);                                                                               output.println(data[i]);                                                                            
}                                                                                                      }                                                                                                   
} finally {                                                                                            } finally {                                                                                         
IOUtils.closeQuietly(output);                                                                          IOUtils.closeQuietly(output);                                                                       
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
