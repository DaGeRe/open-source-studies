@SuppressWarnings("deprecation")                                                                     |                                                                                                     
@Test                                                                                                  @Test                                                                                               
public void testAlternateLockDir() throws IOException {                                                public void testAlternateLockDir() throws IOException {                                             
LockableFileWriter lfw1 = null;                                                                        LockableFileWriter lfw1 = null;                                                                     
LockableFileWriter lfw2 = null;                                                                        LockableFileWriter lfw2 = null;                                                                     
try {                                                                                                  try {                                                                                               
lfw1 = new LockableFileWriter(file, "UTF-8", true, altLockDir.getAbsolutePath());                      lfw1 = new LockableFileWriter(file, "UTF-8", true, altLockDir.getAbsolutePath());                   
assertTrue(file.exists());                                                                             assertTrue(file.exists());                                                                          
assertTrue(altLockFile.exists());                                                                      assertTrue(altLockFile.exists());                                                                   
try {                                                                                                  try {                                                                                               
lfw2 = new LockableFileWriter(file, Charsets.UTF_8, true, altLockDir.getAbsolutePath());             | lfw2 = new LockableFileWriter(file, StandardCharsets.UTF_8, true, altLockDir.getAbsolutePath());    
fail("Somehow able to open a locked file. ");                                                          fail("Somehow able to open a locked file. ");                                                       
} catch (final IOException ioe) {                                                                      } catch (final IOException ioe) {                                                                   
final String msg = ioe.getMessage();                                                                   final String msg = ioe.getMessage();                                                                
assertTrue("Exception message does not start correctly. ", msg.startsWith("Can't write file, lock ")   assertTrue("Exception message does not start correctly. ", msg.startsWith("Can't write file, lock ")
assertTrue(file.exists());                                                                             assertTrue(file.exists());                                                                          
assertTrue(altLockFile.exists());                                                                      assertTrue(altLockFile.exists());                                                                   
}                                                                                                      }                                                                                                   
} finally {                                                                                            } finally {                                                                                         
IOUtils.closeQuietly(lfw1);                                                                            IOUtils.closeQuietly(lfw1);                                                                         
IOUtils.closeQuietly(lfw2);                                                                            IOUtils.closeQuietly(lfw2);                                                                         
}                                                                                                      }                                                                                                   
assertTrue(file.exists());                                                                             assertTrue(file.exists());                                                                          
assertFalse(altLockFile.exists());                                                                     assertFalse(altLockFile.exists());                                                                  
}                                                                                                      }                                                                                                   
