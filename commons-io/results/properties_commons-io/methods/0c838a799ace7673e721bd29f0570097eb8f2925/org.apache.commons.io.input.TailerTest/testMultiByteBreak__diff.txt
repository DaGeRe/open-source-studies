@SuppressWarnings("deprecation")                                                                     |                                                                                                     
@Test                                                                                                  @Test                                                                                               
public void testMultiByteBreak() throws Exception {                                                    public void testMultiByteBreak() throws Exception {                                                 
System.out.println("testMultiByteBreak() Default charset: " + Charset.defaultCharset().displayName()   System.out.println("testMultiByteBreak() Default charset: " + Charset.defaultCharset().displayName()
final long delay = 50;                                                                                 final long delay = 50;                                                                              
final File origin = new File(this.getClass().getResource("/test-file-utf8.bin").toURI());              final File origin = new File(this.getClass().getResource("/test-file-utf8.bin").toURI());           
final File file = new File(getTestDirectory(), "testMultiByteBreak.txt");                              final File file = new File(getTestDirectory(), "testMultiByteBreak.txt");                           
createFile(file, 0);                                                                                   createFile(file, 0);                                                                                
final TestTailerListener listener = new TestTailerListener();                                          final TestTailerListener listener = new TestTailerListener();                                       
final String osname = System.getProperty("os.name");                                                   final String osname = System.getProperty("os.name");                                                
final boolean isWindows = osname.startsWith("Windows");                                                final boolean isWindows = osname.startsWith("Windows");                                             
final Charset charsetUTF8 = Charsets.UTF_8;                                                          | final Charset charsetUTF8 = StandardCharsets.UTF_8;                                                 
tailer = new Tailer(file, charsetUTF8, listener, delay, false, isWindows, 4096);                       tailer = new Tailer(file, charsetUTF8, listener, delay, false, isWindows, 4096);                    
final Thread thread = new Thread(tailer);                                                              final Thread thread = new Thread(tailer);                                                           
thread.start();                                                                                        thread.start();                                                                                     
Writer out = new OutputStreamWriter(new FileOutputStream(file), charsetUTF8);                          Writer out = new OutputStreamWriter(new FileOutputStream(file), charsetUTF8);                       
BufferedReader reader = null;                                                                          BufferedReader reader = null;                                                                       
try {                                                                                                  try {                                                                                               
List&lt;String&gt; lines = new ArrayList&lt;&gt;();                                                    List&lt;String&gt; lines = new ArrayList&lt;&gt;();                                                 
reader = new BufferedReader(new InputStreamReader(new FileInputStream(origin), charsetUTF8));          reader = new BufferedReader(new InputStreamReader(new FileInputStream(origin), charsetUTF8));       
String line;                                                                                           String line;                                                                                        
while ((line = reader.readLine()) != null) {                                                           while ((line = reader.readLine()) != null) {                                                        
out.write(line);                                                                                       out.write(line);                                                                                    
out.write("\n");                                                                                       out.write("\n");                                                                                    
lines.add(line);                                                                                       lines.add(line);                                                                                    
}                                                                                                      }                                                                                                   
out.close();                                                                                           out.close();                                                                                        
final long testDelayMillis = delay * 10;                                                               final long testDelayMillis = delay * 10;                                                            
TestUtils.sleep(testDelayMillis);                                                                      TestUtils.sleep(testDelayMillis);                                                                   
List&lt;String&gt; tailerlines = listener.getLines();                                                  List&lt;String&gt; tailerlines = listener.getLines();                                               
assertEquals("line count", lines.size(), tailerlines.size());                                          assertEquals("line count", lines.size(), tailerlines.size());                                       
for (int i = 0, len = lines.size(); i &lt; len; i++) {                                                 for (int i = 0, len = lines.size(); i &lt; len; i++) {                                              
final String expected = lines.get(i);                                                                  final String expected = lines.get(i);                                                               
final String actual = tailerlines.get(i);                                                              final String actual = tailerlines.get(i);                                                           
if (!expected.equals(actual)) {                                                                        if (!expected.equals(actual)) {                                                                     
fail("Line: " + i + "\nExp: (" + expected.length() + ") " + expected + "\nAct: (" + actual.length()    fail("Line: " + i + "\nExp: (" + expected.length() + ") " + expected + "\nAct: (" + actual.length() 
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
} finally {                                                                                            } finally {                                                                                         
tailer.stop();                                                                                         tailer.stop();                                                                                      
IOUtils.closeQuietly(reader);                                                                          IOUtils.closeQuietly(reader);                                                                       
IOUtils.closeQuietly(out);                                                                             IOUtils.closeQuietly(out);                                                                          
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
