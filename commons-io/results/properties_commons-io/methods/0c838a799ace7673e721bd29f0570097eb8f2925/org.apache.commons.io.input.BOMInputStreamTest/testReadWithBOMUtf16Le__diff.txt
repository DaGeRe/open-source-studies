@Test                                                                                                  @Test                                                                                               
public void testReadWithBOMUtf16Le() throws Exception {                                                public void testReadWithBOMUtf16Le() throws Exception {                                             
@SuppressWarnings("deprecation")                                                                     | final byte[] data = "ABC".getBytes(StandardCharsets.UTF_16LE);                                      
final byte[] data = "ABC".getBytes(Charsets.UTF_16LE);                                               |                                                                                                     
final BOMInputStream in = new BOMInputStream(createUtf16LeDataStream(data, true), ByteOrderMark.UTF_   final BOMInputStream in = new BOMInputStream(createUtf16LeDataStream(data, true), ByteOrderMark.UTF_
assertEquals('A', in.read());                                                                          assertEquals('A', in.read());                                                                       
assertEquals(0, in.read());                                                                            assertEquals(0, in.read());                                                                         
assertEquals('B', in.read());                                                                          assertEquals('B', in.read());                                                                       
assertEquals(0, in.read());                                                                            assertEquals(0, in.read());                                                                         
assertEquals('C', in.read());                                                                          assertEquals('C', in.read());                                                                       
assertEquals(0, in.read());                                                                            assertEquals(0, in.read());                                                                         
assertEquals(-1, in.read());                                                                           assertEquals(-1, in.read());                                                                        
assertTrue("hasBOM()", in.hasBOM());                                                                   assertTrue("hasBOM()", in.hasBOM());                                                                
assertTrue("hasBOM(UTF-16LE)", in.hasBOM(ByteOrderMark.UTF_16LE));                                     assertTrue("hasBOM(UTF-16LE)", in.hasBOM(ByteOrderMark.UTF_16LE));                                  
assertEquals("getBOM", ByteOrderMark.UTF_16LE, in.getBOM());                                           assertEquals("getBOM", ByteOrderMark.UTF_16LE, in.getBOM());                                        
try {                                                                                                  try {                                                                                               
in.hasBOM(ByteOrderMark.UTF_16BE);                                                                     in.hasBOM(ByteOrderMark.UTF_16BE);                                                                  
fail("Expected IllegalArgumentException");                                                             fail("Expected IllegalArgumentException");                                                          
} catch (final IllegalArgumentException e) {                                                           } catch (final IllegalArgumentException e) {                                                        
}                                                                                                      }                                                                                                   
in.close();                                                                                            in.close();                                                                                         
}                                                                                                      }                                                                                                   
