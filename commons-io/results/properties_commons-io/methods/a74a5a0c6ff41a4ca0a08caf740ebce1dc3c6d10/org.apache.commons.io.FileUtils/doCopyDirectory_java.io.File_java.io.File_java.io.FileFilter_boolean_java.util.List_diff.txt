private static void doCopyDirectory(File srcDir, File destDir, FileFilter filter, boolean preserveFi | private static void doCopyDirectory(File srcDir, File destDir, FileFilter filter, boolean preserveFi
if (destDir.exists()) {                                                                                if (destDir.exists()) {                                                                             
if (destDir.isDirectory() == false) {                                                                  if (destDir.isDirectory() == false) {                                                               
throw new IOException("Destination '" + destDir + "' exists but is not a directory");                  throw new IOException("Destination '" + destDir + "' exists but is not a directory");               
}                                                                                                      }                                                                                                   
} else {                                                                                               } else {                                                                                            
if (destDir.mkdirs() == false) {                                                                       if (destDir.mkdirs() == false) {                                                                    
throw new IOException("Destination '" + destDir + "' directory cannot be created");                    throw new IOException("Destination '" + destDir + "' directory cannot be created");                 
}                                                                                                      }                                                                                                   
if (preserveFileDate) {                                                                                if (preserveFileDate) {                                                                             
destDir.setLastModified(srcDir.lastModified());                                                        destDir.setLastModified(srcDir.lastModified());                                                     
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
if (destDir.canWrite() == false) {                                                                     if (destDir.canWrite() == false) {                                                                  
throw new IOException("Destination '" + destDir + "' cannot be written to");                           throw new IOException("Destination '" + destDir + "' cannot be written to");                        
}                                                                                                      }                                                                                                   
File[] files = filter == null ? srcDir.listFiles() : srcDir.listFiles(filter);                         File[] files = filter == null ? srcDir.listFiles() : srcDir.listFiles(filter);                      
if (files == null) {                                                                                   if (files == null) {                                                                                
throw new IOException("Failed to list contents of " + srcDir);                                         throw new IOException("Failed to list contents of " + srcDir);                                      
}                                                                                                      }                                                                                                   
for (int i = 0; i &lt; files.length; i++) {                                                            for (int i = 0; i &lt; files.length; i++) {                                                         
File copiedFile = new File(destDir, files[i].getName());                                               File copiedFile = new File(destDir, files[i].getName());                                            
if (exclusionList == null || !exclusionList.contains(files[i].getCanonicalPath())) {                   if (exclusionList == null || !exclusionList.contains(files[i].getCanonicalPath())) {                
if (files[i].isDirectory()) {                                                                          if (files[i].isDirectory()) {                                                                       
doCopyDirectory(files[i], copiedFile, filter, preserveFileDate, exclusionList);                        doCopyDirectory(files[i], copiedFile, filter, preserveFileDate, exclusionList);                     
} else {                                                                                               } else {                                                                                            
doCopyFile(files[i], copiedFile, preserveFileDate);                                                    doCopyFile(files[i], copiedFile, preserveFileDate);                                                 
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
