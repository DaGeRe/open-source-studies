@Test
public void testGetFreeSpace_String() throws Exception {
    if (File.separatorChar == '/') {
        final String[] cmd;
        String osName = System.getProperty("os.name");
        osName = osName.toLowerCase(Locale.ENGLISH);
        if (osName.contains("hp-ux") || osName.contains("aix")) {
            cmd = new String[] { "df", "-P", "/" };
        } else if (osName.contains("sunos") || osName.contains("sun os") || osName.contains("solaris")) {
            cmd = new String[] { "/usr/xpg4/bin/df", "-P", "/" };
        } else {
            cmd = new String[] { "df", "/" };
        }
        final Process proc = Runtime.getRuntime().exec(cmd);
        boolean kilobyteBlock = true;
        BufferedReader r = null;
        try {
            r = new BufferedReader(new InputStreamReader(proc.getInputStream()));
            final String line = r.readLine();
            Assert.assertNotNull("Unexpected null line", line);
            if (line.contains("512")) {
                kilobyteBlock = false;
            }
        } finally {
            IOUtils.closeQuietly(r);
        }
        @SuppressWarnings("deprecation")
        final long free = FileSystemUtils.freeSpace("/");
        final long kb = FileSystemUtils.freeSpaceKb("/");
        if (kilobyteBlock) {
            assertEquals(free, kb, 256d);
        } else {
            assertEquals(free / 2d, kb, 256d);
        }
    } else {
        @SuppressWarnings("deprecation")
        final long bytes = FileSystemUtils.freeSpace("");
        final long kb = FileSystemUtils.freeSpaceKb("");
        assertEquals((double) bytes / 1024, kb, 256d);
    }
}