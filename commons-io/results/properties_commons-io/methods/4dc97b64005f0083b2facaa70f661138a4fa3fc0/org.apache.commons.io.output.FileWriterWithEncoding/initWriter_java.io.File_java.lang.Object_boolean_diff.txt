private static Writer initWriter(final File file, final Object encoding, final boolean append) throw   private static Writer initWriter(final File file, final Object encoding, final boolean append) throw
if (file == null) {                                                                                    if (file == null) {                                                                                 
throw new NullPointerException("File is missing");                                                     throw new NullPointerException("File is missing");                                                  
}                                                                                                      }                                                                                                   
if (encoding == null) {                                                                                if (encoding == null) {                                                                             
throw new NullPointerException("Encoding is missing");                                                 throw new NullPointerException("Encoding is missing");                                              
}                                                                                                      }                                                                                                   
final boolean fileExistedAlready = file.exists();                                                    |                                                                                                     
OutputStream stream = null;                                                                            OutputStream stream = null;                                                                         
Writer writer = null;                                                                                | final boolean fileExistedAlready = file.exists();                                                   
try {                                                                                                  try {                                                                                               
stream = new FileOutputStream(file, append);                                                           stream = new FileOutputStream(file, append);                                                        
if (encoding instanceof Charset) {                                                                     if (encoding instanceof Charset) {                                                                  
writer = new OutputStreamWriter(stream, (Charset) encoding);                                         | return new OutputStreamWriter(stream, (Charset) encoding);                                          
} else if (encoding instanceof CharsetEncoder) {                                                       } else if (encoding instanceof CharsetEncoder) {                                                    
writer = new OutputStreamWriter(stream, (CharsetEncoder) encoding);                                  | return new OutputStreamWriter(stream, (CharsetEncoder) encoding);                                   
} else {                                                                                               } else {                                                                                            
writer = new OutputStreamWriter(stream, (String) encoding);                                          | return new OutputStreamWriter(stream, (String) encoding);                                           
}                                                                                                      }                                                                                                   
} catch (final IOException ex) {                                                                     | } catch (final IOException | RuntimeException ex) {                                                 
IOUtils.closeQuietly(writer);                                                                        | try {                                                                                               
IOUtils.closeQuietly(stream);                                                                        | if (stream != null) {                                                                               
if (fileExistedAlready == false) {                                                                   | stream.close();                                                                                     
FileUtils.deleteQuietly(file);                                                                       |                                                                                                     
}                                                                                                      }                                                                                                   
throw ex;                                                                                            | } catch (final IOException e) {                                                                     
} catch (final RuntimeException ex) {                                                                | ex.addSuppressed(e);                                                                                
IOUtils.closeQuietly(writer);                                                                        | }                                                                                                   
IOUtils.closeQuietly(stream);                                                                        |                                                                                                     
if (fileExistedAlready == false) {                                                                     if (fileExistedAlready == false) {                                                                  
FileUtils.deleteQuietly(file);                                                                         FileUtils.deleteQuietly(file);                                                                      
}                                                                                                      }                                                                                                   
throw ex;                                                                                              throw ex;                                                                                           
}                                                                                                      }                                                                                                   
return writer;                                                                                       |                                                                                                     
}                                                                                                      }                                                                                                   
