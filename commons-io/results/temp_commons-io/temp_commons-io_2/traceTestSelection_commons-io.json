{
  "url" : "https://github.com/apache/commons-io.git",
  "commits" : {
    "d6c608bde40de82cb3b7dce47c51d5b0bc9e9d94" : { },
    "7b1b3624d78e659e0bf80b061756d8c6e08640c6" : {
      "testcases" : {
        "org.apache.commons.io.input.CharSequenceInputStreamTest" : [ "testAvailable", "testBufferedRead_AvailableCharset" ]
      },
      "predecessor" : "d6c608bde40de82cb3b7dce47c51d5b0bc9e9d94"
    },
    "107bad489300392970d451e05fdc024e6d5f72b7" : { },
    "98577e2da894d78c682637c5aa32e44ccd0c828f" : { },
    "c33a5a0cfa12d48d66a700cc0ccd4e92cf4b22f7" : { },
    "897654b205a41b40c36f705361b0e2366dae6499" : { },
    "d3e99ef44f911b0448f9f82020b71dc392bc0082" : { },
    "a878281e93d707edf92d12cefd4f7f307df9553c" : { },
    "3775e6d352985cac43e3b00572f8dcc9fe826ac5" : { },
    "54eeaee27c4d73a5b3b6ee84e53ee9046919a18b" : { },
    "284886bd96c93740a26cac4c6e39a255fecf6062" : { },
    "b2da444800d4c5d472da58a6b776891621d11718" : {
      "testcases" : {
        "org.apache.commons.io.FileUtilsWaitForTestCase" : [ "testWaitFor", "testWaitForInterrupted" ]
      },
      "predecessor" : "284886bd96c93740a26cac4c6e39a255fecf6062"
    },
    "2e72f7494ae59cb11b11a43f87839315390beaf4" : { },
    "9146eca01bc208c9923aff6880b220a0fe3e6894" : { },
    "76c4ec233c1a61b1f46df6d6847b889c0a7a978a" : { },
    "7506aa1a2c648ca3da724aa83de41bf526239add" : { },
    "8f06c0ddc6fb9d17075e688265ac3767259bc5e4" : { },
    "1d031d6eb6e6861f38e228bd587ff74e7f6fcce8" : {
      "testcases" : {
        "org.apache.commons.io.DemuxTestCase" : [ "testOutputStream" ]
      },
      "predecessor" : "8f06c0ddc6fb9d17075e688265ac3767259bc5e4"
    },
    "426cd8c52ef1732ad3a57171429bf7704d80bcc0" : {
      "testcases" : {
        "org.apache.commons.io.DemuxTestCase" : [ "testOutputStream" ]
      },
      "predecessor" : "1d031d6eb6e6861f38e228bd587ff74e7f6fcce8"
    },
    "24df623ed69f86a13a2ec453f480a4e3f93b04ff" : {
      "testcases" : {
        "org.apache.commons.io.input.CharSequenceInputStreamTest" : [ "testAvailable", "testCharsetMismatchInfiniteLoop_RequiredCharsets", "testIO_356_B10_D10_S1_UTF8", "testIO_356_B10_D10_S2_UTF8", "testIO_356_B10_D13_S1_UTF8", "testLargeSingleByteRead_RequiredCharsets", "testLargeSingleByteRead_UTF8", "testMarkReset_USASCII", "testMarkReset_UTF8", "testSingleByteRead_RequiredCharsets", "testSingleByteRead_UTF16", "testSingleByteRead_UTF8", "testSkip_USASCII", "testSkip_UTF8" ]
      },
      "predecessor" : "426cd8c52ef1732ad3a57171429bf7704d80bcc0"
    },
    "d2edcde68b3fbaa68aa892f90ebcd0d7ec104176" : { },
    "2f02e64b2e90766ec1c35437b03b7d127c70af58" : { },
    "7c7c9372db6d79f950ee16ec8943dd76fc0f06e4" : { },
    "45524d8bdb5640b81d13ee63a072e88c81981a7e" : { },
    "318d3a57394781e05d2372fc2b2c095c02c25379" : { },
    "87a126f7cf7df3a3f83551a6421ab2ed1426a2d7" : { },
    "7908be284dc2e24e3d89787e64e272409d25338a" : { },
    "14a08584c7cf63dfadddaeec102820f9de901c60" : {
      "testcases" : {
        "org.apache.commons.io.output.WriterOutputStreamTest" : [ "testFlush", "testLargeUTF8WithBufferedWrite", "testLargeUTF8WithSingleByteWrite", "testUTF16BEWithBufferedWrite", "testUTF16BEWithSingleByteWrite", "testUTF16LEWithBufferedWrite", "testUTF16LEWithSingleByteWrite", "testUTF16WithBufferedWrite", "testUTF16WithSingleByteWrite", "testUTF8WithBufferedWrite", "testUTF8WithSingleByteWrite", "testWriteImmediately" ]
      },
      "predecessor" : "7908be284dc2e24e3d89787e64e272409d25338a"
    },
    "31373778a21bf4124ba2c120e384db8062f0a2b6" : { },
    "4a0bf370411e027ee9c7e835f4834593917aa35d" : { },
    "db551e3eb6805a69d4967265570811b011fd89f4" : { },
    "679e9cfe62ff26b1205f0a9de7a96f12fc771230" : { },
    "67f6f50a013d6eb6bdc4d0ed20b11081723d7054" : { },
    "e1c5de1bbe2bf93ea9e5212c0f71fb7255dbdcff" : { },
    "d9406824aeba0e977c0692971a6dbb2e62823886" : {
      "predecessor" : "e1c5de1bbe2bf93ea9e5212c0f71fb7255dbdcff"
    },
    "6c3a1bb78c3e92fded50c1c1e9f4c3e2e6e9dd4c" : {
      "predecessor" : "d9406824aeba0e977c0692971a6dbb2e62823886"
    },
    "6aa7ba1d927cc57769d4ed589326053849b235ea" : {
      "testcases" : {
        "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceOS_String_InitError", "testGetFreeSpaceOS_String_NullPath", "testGetFreeSpaceOS_String_Other", "testGetFreeSpaceOS_String_Unix", "testGetFreeSpaceOS_String_Windows", "testGetFreeSpaceUnix_String_EmptyPath", "testGetFreeSpaceUnix_String_EmptyResponse", "testGetFreeSpaceUnix_String_InvalidResponse1", "testGetFreeSpaceUnix_String_InvalidResponse2", "testGetFreeSpaceUnix_String_InvalidResponse3", "testGetFreeSpaceUnix_String_InvalidResponse4", "testGetFreeSpaceUnix_String_LongResponse", "testGetFreeSpaceUnix_String_LongResponseKb", "testGetFreeSpaceUnix_String_NormalResponseFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbLinux", "testGetFreeSpaceUnix_String_NormalResponseKbSolaris", "testGetFreeSpaceUnix_String_NormalResponseLinux", "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpaceWindows_String_quoted", "testGetFreeSpace_String" ]
      },
      "predecessor" : "6c3a1bb78c3e92fded50c1c1e9f4c3e2e6e9dd4c"
    },
    "3733512df9b172e0fdcf6cb0bdb7bc76131f0c8f" : { },
    "aa5a7fb583802372a8898b87bfd708412f839a0f" : { },
    "10b116c6559cd8ef555ac0962db515ec00b8ec0f" : { },
    "ac1a0ccf92a8ae27f1cd9562da400b636b2feabd" : { },
    "be499afb078e7c64c59ace84f811bfd2edfa9be6" : { },
    "0ac6369a0239d5ba310b9a86e7c26e35acecb982" : { },
    "3206b41cc6b60ef2854273ab0eee5e406f9f6efa" : {
      "testcases" : {
        "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpace_String" ]
      },
      "predecessor" : "0ac6369a0239d5ba310b9a86e7c26e35acecb982"
    },
    "0c3612764955e209ecf1ebdae609b2656d6debc3" : { },
    "c1d92d87157b7d5a27aa989eff14e302e15f96d7" : {
      "testcases" : {
        "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFilteringBufferedReader", "testFilteringFileReader", "testInvalidEncoding", "testMissingFile", "testNextLineOnlyDefaultEncoding", "testNextLineOnlyNullEncoding", "testNextLineOnlyUtf8Encoding", "testNextOnly", "testNextWithException", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ]
      },
      "predecessor" : "0c3612764955e209ecf1ebdae609b2656d6debc3"
    },
    "842bf6f447aac7d05c75c6143a5affe9e383b3b3" : {
      "predecessor" : "c1d92d87157b7d5a27aa989eff14e302e15f96d7"
    },
    "4dc97b64005f0083b2facaa70f661138a4fa3fc0" : {
      "testcases" : {
        "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy" ],
        "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce", "testDeleteNormal", "testDeleteQuietlyNormal" ],
        "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceUnix_String_EmptyResponse", "testGetFreeSpaceUnix_String_InvalidResponse1", "testGetFreeSpaceUnix_String_InvalidResponse2", "testGetFreeSpaceUnix_String_InvalidResponse3", "testGetFreeSpaceUnix_String_InvalidResponse4", "testGetFreeSpaceUnix_String_LongResponse", "testGetFreeSpaceUnix_String_LongResponseKb", "testGetFreeSpaceUnix_String_NormalResponseFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbLinux", "testGetFreeSpaceUnix_String_NormalResponseKbSolaris", "testGetFreeSpaceUnix_String_NormalResponseLinux", "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpaceWindows_String_quoted", "testGetFreeSpace_String" ],
        "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile" ],
        "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" : [ "testCleanDirWithASymlinkDir", "testCleanDirWithParentSymlinks", "testCleanDirWithSymlinkFile", "testIdentifiesSymlinkFile", "testStillClearsIfGivenDirectoryIsASymlink" ],
        "org.apache.commons.io.FileUtilsDirectoryContainsTestCase" : [ "testCanonicalPath", "testDirectoryContainsDirectory", "testDirectoryContainsFile", "testDirectoryDoesNotContainFile", "testDirectoryDoesNotContainsDirectory", "testDirectoryDoesNotExist", "testFileDoesNotExist", "testFileDoesNotExistBug", "testIO466", "testSameFile", "testUnrealizedContainment" ],
        "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ],
        "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension", "testListFiles", "testListFilesByExtension" ],
        "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedError_IO_128", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetBaseName_with_nullByte", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetFullPathNoEndSeparator_IO_248", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPathNoEndSeparator_with_null_byte", "testGetPath_with_nullbyte", "testGetPrefix", "testGetPrefixLength", "testGetPrefix_with_nullbyte", "testIndexOfExtension", "testIndexOfLastSeparator", "testInjectionFailure", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testIsExtension_injection", "testNormalize", "testNormalizeNoEndSeparator", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin", "testNormalize_with_nullbytes", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
        "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToOutputStreamWithBufferSize", "testCopy_inputStreamToOutputStream_nullIn", "testCopy_inputStreamToOutputStream_nullOut", "testCopy_inputStreamToWriter", "testCopy_inputStreamToWriter_Encoding", "testCopy_inputStreamToWriter_Encoding_nullEncoding", "testCopy_inputStreamToWriter_Encoding_nullIn", "testCopy_inputStreamToWriter_Encoding_nullOut", "testCopy_inputStreamToWriter_nullIn", "testCopy_inputStreamToWriter_nullOut", "testCopy_readerToOutputStream", "testCopy_readerToOutputStream_Encoding", "testCopy_readerToOutputStream_Encoding_nullEncoding", "testCopy_readerToOutputStream_Encoding_nullIn", "testCopy_readerToOutputStream_Encoding_nullOut", "testCopy_readerToOutputStream_nullIn", "testCopy_readerToOutputStream_nullOut", "testCopy_readerToWriter", "testCopy_readerToWriter_nullIn", "testCopy_readerToWriter_nullOut" ],
        "org.apache.commons.io.IOUtilsTestCase" : [ "testAsBufferedInputStream", "testAsBufferedInputStreamWithBufferSize", "testAsBufferedNull", "testAsBufferedOutputStream", "testAsBufferedOutputStreamWithBufferSize", "testAsBufferedReader", "testAsBufferedReaderWithBufferSize", "testAsBufferedWriter", "testAsBufferedWriterWithBufferSize", "testCloseQuietly_AllCloseableIOException", "testCloseQuietly_CloseableIOException", "testCloseQuietly_Selector", "testCloseQuietly_SelectorIOException", "testCloseQuietly_SelectorNull", "testCloseQuietly_SelectorTwice", "testCloseQuietly_ServerSocket", "testCloseQuietly_ServerSocketIOException", "testCloseQuietly_Socket", "testCloseQuietly_SocketIOException", "testConstants", "testContentEqualsIgnoreEOL", "testContentEquals_InputStream_InputStream", "testContentEquals_Reader_Reader", "testCopyLarge_CharExtraLength", "testCopyLarge_CharFullLength", "testCopyLarge_CharNoSkip", "testCopyLarge_CharSkip", "testCopyLarge_CharSkipInvalid", "testCopyLarge_ExtraLength", "testCopyLarge_FullLength", "testCopyLarge_NoSkip", "testCopyLarge_Skip", "testCopyLarge_SkipInvalid", "testCopy_ByteArray_OutputStream", "testCopy_ByteArray_Writer", "testCopy_String_Writer", "testReadFully_InputStream_ByteArray", "testReadFully_InputStream_Offset", "testReadFully_InputStream__ReturnByteArray", "testReadFully_ReadableByteChannel", "testReadFully_Reader", "testReadFully_Reader_Offset", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testRead_ReadableByteChannel", "testSkipFully_InputStream", "testSkipFully_ReadableByteChannel", "testSkipFully_Reader", "testSkip_FileReader", "testSkip_InputStream", "testSkip_ReadableByteChannel", "testStringToOutputStream", "testToBufferedInputStreamWithBufferSize_InputStream", "testToBufferedInputStream_InputStream", "testToByteArray_InputStream", "testToByteArray_InputStream_NegativeSize", "testToByteArray_InputStream_Size", "testToByteArray_InputStream_SizeIllegal", "testToByteArray_InputStream_SizeLong", "testToByteArray_InputStream_SizeZero", "testToByteArray_Reader", "testToByteArray_String", "testToByteArray_URI", "testToByteArray_URL", "testToByteArray_URLConnection", "testToCharArray_InputStream", "testToCharArray_InputStream_CharsetName", "testToCharArray_Reader", "testToInputStream_CharSequence", "testToInputStream_String", "testToString_ByteArray", "testToString_InputStream", "testToString_Reader", "testToString_URI", "testToString_URI_CharsetName", "testToString_URI_CharsetNameNull", "testToString_URL", "testToString_URL_CharsetName", "testToString_URL_CharsetNameNull" ],
        "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWriteLines_OutputStream", "testWriteLines_OutputStream_Encoding", "testWriteLines_OutputStream_Encoding_nullData", "testWriteLines_OutputStream_Encoding_nullEncoding", "testWriteLines_OutputStream_Encoding_nullSeparator", "testWriteLines_OutputStream_Encoding_nullStream", "testWriteLines_OutputStream_nullData", "testWriteLines_OutputStream_nullSeparator", "testWriteLines_OutputStream_nullStream", "testWriteLines_Writer", "testWriteLines_Writer_nullData", "testWriteLines_Writer_nullSeparator", "testWriteLines_Writer_nullStream", "testWrite_byteArrayToOutputStream", "testWrite_byteArrayToOutputStream_nullData", "testWrite_byteArrayToOutputStream_nullStream", "testWrite_byteArrayToWriter", "testWrite_byteArrayToWriter_Encoding", "testWrite_byteArrayToWriter_Encoding_nullData", "testWrite_byteArrayToWriter_Encoding_nullEncoding", "testWrite_byteArrayToWriter_Encoding_nullWriter", "testWrite_byteArrayToWriter_nullData", "testWrite_byteArrayToWriter_nullWriter", "testWrite_charArrayToOutputStream", "testWrite_charArrayToOutputStream_Encoding", "testWrite_charArrayToOutputStream_Encoding_nullData", "testWrite_charArrayToOutputStream_Encoding_nullStream", "testWrite_charArrayToOutputStream_nullData", "testWrite_charArrayToOutputStream_nullEncoding", "testWrite_charArrayToOutputStream_nullStream", "testWrite_charArrayToWriter", "testWrite_charArrayToWriter_Encoding_nullData", "testWrite_charArrayToWriter_Encoding_nullStream", "testWrite_charSequenceToOutputStream", "testWrite_charSequenceToOutputStream_Encoding", "testWrite_charSequenceToOutputStream_Encoding_nullData", "testWrite_charSequenceToOutputStream_Encoding_nullStream", "testWrite_charSequenceToOutputStream_nullData", "testWrite_charSequenceToOutputStream_nullEncoding", "testWrite_charSequenceToOutputStream_nullStream", "testWrite_charSequenceToWriter", "testWrite_charSequenceToWriter_Encoding_nullData", "testWrite_charSequenceToWriter_Encoding_nullStream", "testWrite_stringToOutputStream", "testWrite_stringToOutputStream_Encoding", "testWrite_stringToOutputStream_Encoding_nullData", "testWrite_stringToOutputStream_Encoding_nullStream", "testWrite_stringToOutputStream_nullData", "testWrite_stringToOutputStream_nullEncoding", "testWrite_stringToOutputStream_nullStream", "testWrite_stringToWriter", "testWrite_stringToWriter_Encoding_nullData", "testWrite_stringToWriter_Encoding_nullStream" ],
        "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testFilteringBufferedReader", "testFilteringFileReader", "testInvalidEncoding", "testMissingFile", "testNextLineOnlyDefaultEncoding", "testNextLineOnlyNullEncoding", "testNextLineOnlyUtf8Encoding", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
        "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "constructorArray_Null", "constructorIterable_Null", "constructorIterable_order" ],
        "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ],
        "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testCanRead", "testCanWrite", "testEmpty", "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset", "testMagicNumberFileFilterValidation", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testSizeFilter" ],
        "org.apache.commons.io.input.BoundedInputStreamTest" : [ "testReadArray" ],
        "org.apache.commons.io.input.TailerTest" : [ "testBufferBreak", "testIO335", "testInterrupt", "testLongFile", "testMultiByteBreak", "testStopWithNoFile", "testStopWithNoFileUsingExecutor", "testTailer", "testTailerEndOfFileReached", "testTailerEof" ],
        "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testHttpContent", "testRawContent" ],
        "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor", "testThreadFactory" ],
        "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ],
        "org.apache.commons.io.output.ByteArrayOutputStreamTestCase" : [ "testToInputStream", "testToInputStreamWithReset" ],
        "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testWriteToLarge", "testWriteToSmall" ],
        "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "constructor_File_directory", "constructor_File_encoding_badEncoding", "constructor_File_nullFile", "constructor_fileName_nullFile", "sameEncoding_CharsetEncoder_constructor", "sameEncoding_Charset_constructor", "sameEncoding_null_Charset_constructor", "sameEncoding_string_CharsetEncoder_constructor", "sameEncoding_string_Charset_constructor", "sameEncoding_string_constructor", "sameEncoding_string_string_constructor", "testDifferentEncoding" ],
        "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testConstructor_fileName_nullFile", "testFileLocked", "testFileNotLocked" ]
      },
      "predecessor" : "842bf6f447aac7d05c75c6143a5affe9e383b3b3"
    },
    "eaeffded81ec88f4d0e7494bd544821412435ce8" : {
      "predecessor" : "4dc97b64005f0083b2facaa70f661138a4fa3fc0"
    },
    "59bc597a256f0146b5bb05d951ae2d84963cf3df" : {
      "testcases" : {
        "org.apache.commons.io.input.BOMInputStreamTest" : [ "testReadXmlWithBOMUtf32Be", "testReadXmlWithBOMUtf32Le", "testReadXmlWithoutBOMUtf32Be", "testReadXmlWithoutBOMUtf32Le" ]
      },
      "predecessor" : "eaeffded81ec88f4d0e7494bd544821412435ce8"
    },
    "d58f0dd73515f5e2226aeaa4f431f7e43444432d" : { },
    "a2396b4637c11992de40d3715dfb41a738d5913b" : { },
    "fedbfc171fdfcb2b5e36a73e56f86d2d233f2439" : { },
    "51f13c846dae950e1d27693c9e23c1063945210f" : {
      "testcases" : {
        "org.apache.commons.io.CharsetsTestCase" : [ "testRequiredCharsets" ],
        "org.apache.commons.io.CopyUtilsTest" : [ "copy_byteArrayToOutputStream", "copy_byteArrayToWriter", "copy_inputStreamToWriter", "copy_readerToWriter", "copy_stringToOutputStream", "copy_stringToWriter", "testCopy_inputStreamToOutputStream", "testCopy_readerToOutputStream" ],
        "org.apache.commons.io.DemuxTestCase" : [ "testInputStream" ],
        "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testCancel", "testFilter", "testFilterAndLimitA", "testFilterAndLimitB", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile2", "testFilterDirAndFile3", "testFilterDirAndFile4", "testFilterString", "testHandleStartDirectoryFalse", "testLimitToCurrent", "testMissingStartDirectory", "testMultiThreadCancel" ],
        "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testFilter", "testFilterAndLimitA", "testFilterAndLimitB", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile2", "testFilterDirAndFile3", "testFilterDirAndFile4", "testHandleStartDirectoryFalse", "testLimitToCurrent", "testMissingStartDirectory" ],
        "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerNull" ],
        "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce" ],
        "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testCleanEmpty", "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile", "testThrowsOnNullList" ],
        "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" : [ "testCleanDirWithASymlinkDir", "testCleanDirWithParentSymlinks", "testCleanDirWithSymlinkFile", "testCorrectlyIdentifySymlinkWithParentSymLink", "testIdentifiesBrokenSymlinkFile", "testIdentifiesSymlinkDir", "testIdentifiesSymlinkFile", "testStillClearsIfGivenDirectoryIsASymlink" ],
        "org.apache.commons.io.FileUtilsDirectoryContainsTestCase" : [ "testCanonicalPath", "testDirectoryContainsDirectory", "testDirectoryContainsFile", "testDirectoryDoesNotContainFile", "testDirectoryDoesNotContainsDirectory", "testDirectoryDoesNotExist", "testFileDoesNotExist", "testFileDoesNotExistBug", "testIO466", "testSameFile", "testUnrealizedContainment" ],
        "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension", "testListFiles", "testListFilesByExtension" ],
        "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedError_IO_128", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetBaseName_with_nullByte", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetFullPathNoEndSeparator_IO_248", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPathNoEndSeparator_with_null_byte", "testGetPath_with_nullbyte", "testGetPrefix", "testGetPrefixLength", "testGetPrefix_with_nullbyte", "testIndexOfExtension", "testIndexOfLastSeparator", "testInjectionFailure", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testIsExtension_injection", "testNormalize", "testNormalizeNoEndSeparator", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin", "testNormalize_with_nullbytes", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
        "org.apache.commons.io.FilenameUtilsWildcardTestCase" : [ "testLocaleIndependence", "testMatch", "testMatch2", "testMatchCaseSpecified", "testMatchOnSystem", "testSplitOnTokens", "test_IO_246" ],
        "org.apache.commons.io.HexDumpTest" : [ "testDump" ],
        "org.apache.commons.io.IOUtilsTestCase" : [ "testAsBufferedInputStream", "testAsBufferedInputStreamWithBufferSize", "testAsBufferedNull", "testAsBufferedOutputStream", "testAsBufferedOutputStreamWithBufferSize", "testAsBufferedReader", "testAsBufferedReaderWithBufferSize", "testAsBufferedWriter", "testAsBufferedWriterWithBufferSize", "testCloseQuietly_AllCloseableIOException", "testCloseQuietly_CloseableIOException", "testCloseQuietly_Selector", "testCloseQuietly_SelectorIOException", "testCloseQuietly_SelectorNull", "testCloseQuietly_SelectorTwice", "testCloseQuietly_ServerSocket", "testCloseQuietly_ServerSocketIOException", "testCloseQuietly_Socket", "testCloseQuietly_SocketIOException", "testConstants", "testContentEqualsIgnoreEOL", "testContentEquals_InputStream_InputStream", "testContentEquals_Reader_Reader", "testCopyLarge_CharExtraLength", "testCopyLarge_CharFullLength", "testCopyLarge_CharNoSkip", "testCopyLarge_CharSkip", "testCopyLarge_CharSkipInvalid", "testCopyLarge_ExtraLength", "testCopyLarge_FullLength", "testCopyLarge_NoSkip", "testCopyLarge_Skip", "testCopyLarge_SkipInvalid", "testCopy_ByteArray_OutputStream", "testCopy_ByteArray_Writer", "testCopy_String_Writer", "testReadFully_InputStream_ByteArray", "testReadFully_InputStream_Offset", "testReadFully_InputStream__ReturnByteArray", "testReadFully_ReadableByteChannel", "testReadFully_Reader", "testReadFully_Reader_Offset", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testRead_ReadableByteChannel", "testSkipFully_InputStream", "testSkipFully_ReadableByteChannel", "testSkipFully_Reader", "testSkip_FileReader", "testSkip_InputStream", "testSkip_ReadableByteChannel", "testStringToOutputStream", "testToBufferedInputStreamWithBufferSize_InputStream", "testToBufferedInputStream_InputStream", "testToByteArray_InputStream", "testToByteArray_InputStream_NegativeSize", "testToByteArray_InputStream_Size", "testToByteArray_InputStream_SizeIllegal", "testToByteArray_InputStream_SizeLong", "testToByteArray_InputStream_SizeZero", "testToByteArray_Reader", "testToByteArray_String", "testToByteArray_URI", "testToByteArray_URL", "testToByteArray_URLConnection", "testToCharArray_InputStream", "testToCharArray_InputStream_CharsetName", "testToCharArray_Reader", "testToInputStream_CharSequence", "testToInputStream_String", "testToString_ByteArray", "testToString_InputStream", "testToString_Reader", "testToString_URI", "testToString_URI_CharsetName", "testToString_URI_CharsetNameNull", "testToString_URL", "testToString_URL_CharsetName", "testToString_URL_CharsetNameNull" ],
        "org.apache.commons.io.Java7SupportTest" : [ "createAndReadSymlink", "testIsSymLink" ],
        "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFilteringBufferedReader", "testFilteringFileReader", "testInvalidEncoding", "testMissingFile", "testNextLineOnlyDefaultEncoding", "testNextLineOnlyNullEncoding", "testNextLineOnlyUtf8Encoding", "testNextOnly", "testNextWithException", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
        "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "constructorArray_Null", "constructorIterable_Null", "constructorIterable_order" ],
        "org.apache.commons.io.comparator.DirectoryFileComparatorTest" : [ "testSortArray" ],
        "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : [ "testCaseSensitivity" ],
        "org.apache.commons.io.comparator.NameFileComparatorTest" : [ "testCaseSensitivity" ],
        "org.apache.commons.io.comparator.PathFileComparatorTest" : [ "testCaseSensitivity" ],
        "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ],
        "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testAnd", "testCanRead", "testCanWrite", "testDelegateFileFilter", "testDelegation", "testDeprecatedWildcard", "testDirectory", "testEmpty", "testEnsureTestCoverage", "testFalse", "testFileFilterUtils_and", "testFileFilterUtils_or", "testFiles", "testFilterArray", "testFilterArrayNullParameters", "testFilterArray_fromList", "testFilterList", "testFilterListNullParameters", "testFilterList_fromArray", "testFilterSet", "testFilterSetNullParameters", "testFilterSet_fromArray", "testHidden", "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset", "testMagicNumberFileFilterValidation", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNameFilterNullArrayArgument", "testNameFilterNullListArgument", "testNot", "testNullFilters", "testOr", "testPrefix", "testPrefixCaseInsensitive", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testTrue", "testWildcard" ],
        "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ],
        "org.apache.commons.io.input.CharSequenceInputStreamTest" : [ "testAvailable", "testBufferedRead_AvailableCharset", "testBufferedRead_RequiredCharset", "testBufferedRead_UTF8", "testCharsetMismatchInfiniteLoop_RequiredCharsets", "testLargeBufferedRead_RequiredCharsets", "testLargeBufferedRead_UTF8", "testLargeSingleByteRead_RequiredCharsets", "testLargeSingleByteRead_UTF8", "testMarkReset_USASCII", "testMarkReset_UTF8", "testMarkSupported", "testReadZero_EmptyString", "testReadZero_RequiredCharsets", "testSingleByteRead_RequiredCharsets", "testSingleByteRead_UTF16", "testSingleByteRead_UTF8", "testSkip_USASCII", "testSkip_UTF8" ],
        "org.apache.commons.io.input.ReaderInputStreamTest" : [ "testCharsetMismatchInfiniteLoop" ],
        "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile" : [ "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-20byteslength.bin, charset=ISO_8859_1)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-gbk.bin, charset=gbk)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-iso8859-1-shortlines-win-linebr.bin, charset=ISO_8859_1)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-iso8859-1.bin, charset=ISO_8859_1)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-shiftjis.bin, charset=Shift_JIS)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf16be.bin, charset=UTF-16BE)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf16le.bin, charset=UTF-16LE)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf8-cr-only.bin, charset=UTF-8)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf8-win-linebr.bin, charset=UTF-8)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf8.bin, charset=UTF-8)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-windows-31j.bin, charset=windows-31j)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-x-windows-949.bin, charset=x-windows-949)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-x-windows-950.bin, charset=x-windows-950)" ],
        "org.apache.commons.io.input.TailerTest" : [ "testBufferBreak", "testIO335", "testInterrupt", "testLongFile", "testMultiByteBreak", "testStopWithNoFile", "testStopWithNoFileUsingExecutor", "testTailer", "testTailerEndOfFileReached", "testTailerEof" ],
        "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testEncodingAttributeXML", "testHttp", "testRawBomUtf16", "testRawBomUtf32", "testRawBomUtf8", "testRawNoBomCp1047", "testRawNoBomIso8859_1", "testRawNoBomUsAscii", "testRawNoBomUtf16BE", "testRawNoBomUtf16LE", "testRawNoBomUtf32BE", "testRawNoBomUtf32LE", "testRawNoBomUtf8" ],
        "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor", "testMonitor", "testThreadFactory" ],
        "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile", "testToString" ],
        "org.apache.commons.io.output.AppendableOutputStreamTest" : [ "testWriteInt", "testWriteStringBuilder" ],
        "org.apache.commons.io.output.ByteArrayOutputStreamTestCase" : [ "testStream", "testToInputStream", "testToInputStreamWithReset" ],
        "org.apache.commons.io.output.ChunkedOutputStreamTest" : [ "defaultConstructor", "negative_chunksize_not_permitted", "write_four_chunks" ],
        "org.apache.commons.io.output.ChunkedWriterTest" : [ "negative_chunksize_not_permitted", "write_four_chunks", "write_two_chunks_default_constructor" ],
        "org.apache.commons.io.output.CloseShieldOutputStreamTest" : [ "testClose" ],
        "org.apache.commons.io.output.ClosedOutputStreamTest" : [ "testRead" ],
        "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testAboveThreshold", "testAtThreshold", "testBelowThreshold", "testTempFileAboveThreshold", "testTempFileAboveThresholdPrefixOnly", "testTempFileBelowThreshold", "testTempFileError", "testThresholdReached" ],
        "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "constructor_File_directory", "constructor_File_encoding_badEncoding", "constructor_File_nullFile", "constructor_fileName_nullFile", "sameEncoding_CharsetEncoder_constructor", "sameEncoding_Charset_constructor", "sameEncoding_null_Charset_constructor", "sameEncoding_string_CharsetEncoder_constructor", "sameEncoding_string_Charset_constructor", "sameEncoding_string_constructor", "sameEncoding_string_string_constructor", "testDifferentEncoding" ],
        "org.apache.commons.io.output.ProxyOutputStreamTest" : [ "testWrite", "testWriteNullBaSucceeds" ],
        "org.apache.commons.io.output.ProxyWriterTest" : [ "exceptions_in_append_char", "exceptions_in_append_charSequence", "exceptions_in_append_charSequence_offset", "exceptions_in_close", "exceptions_in_flush", "exceptions_in_write_char_array", "exceptions_in_write_int", "exceptions_in_write_offset_char_array", "exceptions_in_write_string", "exceptions_in_write_string_offset" ],
        "org.apache.commons.io.output.TaggedOutputStreamTest" : [ "testNormalStream" ],
        "org.apache.commons.io.output.ThresholdingOutputStreamTest" : [ "testSetByteCount" ],
        "org.apache.commons.io.serialization.MoreComplexObjectTest" : [ "trustJavaIncludingArrays", "trustJavaLang", "useBlacklist" ],
        "org.apache.commons.io.serialization.ValidatingObjectInputStreamTest" : [ "acceptCustomMatcher", "acceptPattern", "acceptWildcard", "customInvalidMethod", "exceptionIncludesClassName", "noAccept", "ourTestClassAcceptedFirst", "ourTestClassAcceptedFirstWildcard", "ourTestClassAcceptedSecond", "ourTestClassAcceptedSecondWildcard", "ourTestClassNotAccepted", "ourTestClassOnlyAccepted", "reject", "rejectCustomMatcher", "rejectOnly", "rejectPattern", "rejectPrecedence", "rejectWildcard" ],
        "org.apache.commons.io.serialization.WildcardClassNameMatcherTest" : [ "noPattern", "star", "starAndQuestionMark" ]
      },
      "predecessor" : "fedbfc171fdfcb2b5e36a73e56f86d2d233f2439"
    },
    "81210eb267181b766acaf201a424a80d96bb5bed" : {
      "testcases" : {
        "org.apache.commons.io.input.BoundedReaderTest" : [ "closeTest" ]
      },
      "predecessor" : "51f13c846dae950e1d27693c9e23c1063945210f"
    },
    "e6832682adbd29fc47e90109a59ed5dca0c9d742" : { },
    "b8225108253fc5e3bb83607200611024521609a9" : { },
    "5815293807b55cef2792edd9c440160ca8292b3f" : { },
    "261e73236c58e094d5d68c5a063152a7169beafd" : { },
    "209976ee53c9b584c013a9b0b21ec98ef733c6f1" : {
      "testcases" : {
        "org.apache.commons.io.input.TailerTest" : [ "testBufferBreak", "testLongFile" ],
        "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor", "testThreadFactory" ]
      },
      "predecessor" : "261e73236c58e094d5d68c5a063152a7169beafd"
    },
    "cf402c948b2144ea83c40edb00163b74505335d1" : { },
    "5e3359388b0732fd1b3d055036187525eea76521" : {
      "testcases" : {
        "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce", "testDeleteNormal", "testDeleteNull", "testDeleteQuietlyNormal", "testToString" ],
        "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testCleanEmpty", "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile", "testThrowsOnNullList" ],
        "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ],
        "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension", "testListFiles", "testListFilesByExtension" ],
        "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testConstructor_fileName_nullFile", "testFileLocked", "testFileNotLocked" ]
      },
      "predecessor" : "cf402c948b2144ea83c40edb00163b74505335d1"
    },
    "ab2aa8d6fdcdf5b3d326e7e86ac9d045f4859e98" : {
      "testcases" : {
        "org.apache.commons.io.CharsetsTestCase" : [ "testRequiredCharsets", "testToCharset" ],
        "org.apache.commons.io.input.CharSequenceInputStreamTest" : [ "testBufferedRead_RequiredCharset", "testCharsetMismatchInfiniteLoop_RequiredCharsets", "testLargeBufferedRead_RequiredCharsets", "testLargeSingleByteRead_RequiredCharsets", "testReadZero_RequiredCharsets", "testSingleByteRead_RequiredCharsets" ],
        "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize" : [ "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=256)", "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=1)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=256)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=3)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=8)", "testGBK(JUNIT_PARAMETERIZED-BlockSize=1)", "testGBK(JUNIT_PARAMETERIZED-BlockSize=256)", "testGBK(JUNIT_PARAMETERIZED-BlockSize=3)", "testGBK(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testGBK(JUNIT_PARAMETERIZED-BlockSize=8)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=1)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=256)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=3)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=8)", "testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=1)", "testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=256)", "testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=3)", "testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=8)", "testShiftJISFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testShiftJISFile(JUNIT_PARAMETERIZED-BlockSize=256)", "testShiftJISFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testShiftJISFile(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testShiftJISFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=8)", "testUnsupportedEncodingBig5(JUNIT_PARAMETERIZED-BlockSize=1)", "testUnsupportedEncodingBig5(JUNIT_PARAMETERIZED-BlockSize=256)", "testUnsupportedEncodingBig5(JUNIT_PARAMETERIZED-BlockSize=3)", "testUnsupportedEncodingBig5(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUnsupportedEncodingBig5(JUNIT_PARAMETERIZED-BlockSize=8)", "testUnsupportedEncodingUTF16(JUNIT_PARAMETERIZED-BlockSize=1)", "testUnsupportedEncodingUTF16(JUNIT_PARAMETERIZED-BlockSize=256)", "testUnsupportedEncodingUTF16(JUNIT_PARAMETERIZED-BlockSize=3)", "testUnsupportedEncodingUTF16(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUnsupportedEncodingUTF16(JUNIT_PARAMETERIZED-BlockSize=8)", "testWindows31jFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testWindows31jFile(JUNIT_PARAMETERIZED-BlockSize=256)", "testWindows31jFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testWindows31jFile(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testWindows31jFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testxWindows949File(JUNIT_PARAMETERIZED-BlockSize=1)", "testxWindows949File(JUNIT_PARAMETERIZED-BlockSize=256)", "testxWindows949File(JUNIT_PARAMETERIZED-BlockSize=3)", "testxWindows949File(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testxWindows949File(JUNIT_PARAMETERIZED-BlockSize=8)", "testxWindows950File(JUNIT_PARAMETERIZED-BlockSize=1)", "testxWindows950File(JUNIT_PARAMETERIZED-BlockSize=256)", "testxWindows950File(JUNIT_PARAMETERIZED-BlockSize=3)", "testxWindows950File(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testxWindows950File(JUNIT_PARAMETERIZED-BlockSize=8)" ],
        "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile" : [ "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf8-win-linebr.bin, charset=UTF-8)" ],
        "org.apache.commons.io.input.ReversedLinesFileReaderTestSimple" : [ "testFileSizeIsExactMultipleOfBlockSize", "testUnsupportedEncodingBig5", "testUnsupportedEncodingUTF16" ]
      },
      "predecessor" : "5e3359388b0732fd1b3d055036187525eea76521"
    },
    "2b9443351e9c89e812b4166f38c0f137eeaa0777" : { },
    "e180578289a5c65e19e430bd3300a72c9ba97a9b" : {
      "predecessor" : "2b9443351e9c89e812b4166f38c0f137eeaa0777"
    },
    "c6e63f2aae570a99bccbe8caf4f2164fb926d09a" : { },
    "092bc1c46f3fcb90bb5eaba1d502aa13ff365ba7" : { },
    "fe24fcae4fa7c308dcc8ac232e06f310e52545d6" : { },
    "d6beaa363bca8324c7a699ce797a89698d49ba54" : {
      "testcases" : {
        "org.apache.commons.io.IOUtilsTestCase" : [ "testCopy_ByteArray_OutputStream", "testCopy_ByteArray_Writer", "testCopy_String_Writer", "testStringToOutputStream", "testToBufferedInputStreamWithBufferSize_InputStream", "testToBufferedInputStream_InputStream", "testToByteArray_InputStream", "testToByteArray_String", "testToByteArray_URI", "testToByteArray_URL", "testToByteArray_URLConnection", "testToInputStream_CharSequence", "testToInputStream_String", "testToString_ByteArray", "testToString_Reader" ],
        "org.apache.commons.io.input.BoundedInputStreamTest" : [ "testReadArray" ],
        "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testHttpContent", "testRawContent" ],
        "org.apache.commons.io.output.ByteArrayOutputStreamTestCase" : [ "testToInputStream", "testToInputStreamWithReset" ]
      },
      "predecessor" : "fe24fcae4fa7c308dcc8ac232e06f310e52545d6"
    },
    "65e1c9c38becbee2f84d822cd65fd7dbce42b903" : {
      "testcases" : {
        "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testAboveThreshold", "testTempFileAboveThreshold", "testTempFileAboveThresholdPrefixOnly", "testThresholdReached", "testWriteToLarge" ]
      },
      "predecessor" : "d6beaa363bca8324c7a699ce797a89698d49ba54"
    },
    "2c771decc2fb117d73e40b17d2691cf9c1c3569d" : { },
    "dd5db159f7ab0e5ef8861d3e1d5a5cda5434073b" : { },
    "9ba9b49af72269568ff4bdf516ee233642d761f3" : { },
    "822bd135f3a54b8fbeb23c313535b13c18198c3a" : {
      "predecessor" : "9ba9b49af72269568ff4bdf516ee233642d761f3"
    },
    "941a9a6c2735543607e55fa0d54546b9b229c8e8" : { },
    "9e2b2c09732ca596331f7ca34ba4e0f03d70093d" : { },
    "c5f2e40e7a8234fe48e08d451d3152ba58a03ac6" : {
      "testcases" : {
        "org.apache.commons.io.CopyUtilsTest" : [ "copy_byteArrayToOutputStream", "copy_byteArrayToWriter", "copy_inputStreamToWriter", "copy_readerToWriter", "copy_stringToOutputStream", "copy_stringToWriter", "testCopy_inputStreamToOutputStream", "testCopy_readerToOutputStream" ],
        "org.apache.commons.io.DemuxTestCase" : [ "testOutputStream" ],
        "org.apache.commons.io.HexDumpTest" : [ "testDump" ],
        "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToOutputStreamWithBufferSize", "testCopy_inputStreamToOutputStream_nullIn", "testCopy_inputStreamToWriter", "testCopy_inputStreamToWriter_Encoding", "testCopy_inputStreamToWriter_Encoding_nullEncoding", "testCopy_inputStreamToWriter_Encoding_nullIn", "testCopy_inputStreamToWriter_nullIn", "testCopy_readerToOutputStream", "testCopy_readerToOutputStream_Encoding", "testCopy_readerToOutputStream_Encoding_nullEncoding", "testCopy_readerToOutputStream_Encoding_nullIn", "testCopy_readerToOutputStream_nullIn", "testCopy_readerToWriter", "testCopy_readerToWriter_nullIn" ],
        "org.apache.commons.io.IOUtilsTestCase" : [ "testCopy_ByteArray_OutputStream", "testCopy_ByteArray_Writer", "testToBufferedInputStreamWithBufferSize_InputStream", "testToBufferedInputStream_InputStream", "testToByteArray_InputStream", "testToByteArray_Reader", "testToByteArray_URI", "testToByteArray_URL", "testToByteArray_URLConnection", "testToInputStream_CharSequence", "testToInputStream_String", "testToString_ByteArray" ],
        "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWriteLines_OutputStream", "testWriteLines_OutputStream_Encoding", "testWriteLines_OutputStream_Encoding_nullData", "testWriteLines_OutputStream_Encoding_nullEncoding", "testWriteLines_OutputStream_Encoding_nullSeparator", "testWriteLines_OutputStream_nullData", "testWriteLines_OutputStream_nullSeparator", "testWriteLines_Writer", "testWriteLines_Writer_nullData", "testWriteLines_Writer_nullSeparator", "testWrite_byteArrayToOutputStream", "testWrite_byteArrayToOutputStream_nullData", "testWrite_byteArrayToWriter", "testWrite_byteArrayToWriter_Encoding", "testWrite_byteArrayToWriter_Encoding_nullData", "testWrite_byteArrayToWriter_Encoding_nullEncoding", "testWrite_byteArrayToWriter_nullData", "testWrite_charArrayToOutputStream", "testWrite_charArrayToOutputStream_Encoding", "testWrite_charArrayToOutputStream_Encoding_nullData", "testWrite_charArrayToOutputStream_nullData", "testWrite_charArrayToOutputStream_nullEncoding", "testWrite_charArrayToWriter", "testWrite_charArrayToWriter_Encoding_nullData", "testWrite_charSequenceToOutputStream", "testWrite_charSequenceToOutputStream_Encoding", "testWrite_charSequenceToOutputStream_Encoding_nullData", "testWrite_charSequenceToOutputStream_nullData", "testWrite_charSequenceToOutputStream_nullEncoding", "testWrite_charSequenceToWriter", "testWrite_charSequenceToWriter_Encoding_nullData", "testWrite_stringToOutputStream", "testWrite_stringToOutputStream_Encoding", "testWrite_stringToOutputStream_Encoding_nullData", "testWrite_stringToOutputStream_nullData", "testWrite_stringToOutputStream_nullEncoding", "testWrite_stringToWriter", "testWrite_stringToWriter_Encoding_nullData" ],
        "org.apache.commons.io.input.BoundedInputStreamTest" : [ "testReadArray" ],
        "org.apache.commons.io.output.ByteArrayOutputStreamTestCase" : [ "testStream", "testToInputStream", "testToInputStreamWithReset" ],
        "org.apache.commons.io.output.ChunkedOutputStreamTest" : [ "defaultConstructor", "negative_chunksize_not_permitted", "write_four_chunks" ],
        "org.apache.commons.io.output.ChunkedWriterTest" : [ "negative_chunksize_not_permitted", "write_four_chunks", "write_two_chunks_default_constructor" ],
        "org.apache.commons.io.output.CloseShieldOutputStreamTest" : [ "testClose" ],
        "org.apache.commons.io.output.ProxyOutputStreamTest" : [ "testWrite", "testWriteNullBaSucceeds" ],
        "org.apache.commons.io.output.ProxyWriterTest" : [ "exceptions_in_append_char", "exceptions_in_append_charSequence", "exceptions_in_append_charSequence_offset", "exceptions_in_close", "exceptions_in_flush", "exceptions_in_write_char_array", "exceptions_in_write_int", "exceptions_in_write_offset_char_array", "exceptions_in_write_string", "exceptions_in_write_string_offset" ],
        "org.apache.commons.io.output.TaggedOutputStreamTest" : [ "testNormalStream" ]
      },
      "predecessor" : "9e2b2c09732ca596331f7ca34ba4e0f03d70093d"
    },
    "c8dadeedd7255814bb282968f2092a1aa71e4ea1" : { },
    "96b43a3d6b731d38b4bc55456f12de7fcca7c3a1" : { },
    "46696f44ed3628ff660ef7c12aaed256a4450d87" : { },
    "3813270dcc2820f98872f061c26c75b36c569534" : { },
    "97fdb4b3a174b011ec1fa45125bf46c2edf4d6df" : { },
    "0b3139a73e03b5a92f2370d9b086d3208fe0b5a0" : { },
    "948e0271b96774552a0b0f69d0ae2d53b34e575e" : { },
    "9d432121e1c60557da3e159252a88885944e5f00" : {
      "testcases" : {
        "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerNull" ],
        "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce", "testDeleteNormal", "testDeleteNull", "testDeleteQuietlyNormal", "testToString" ],
        "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testCleanEmpty", "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile", "testThrowsOnNullList" ],
        "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" : [ "testCleanDirWithASymlinkDir", "testCleanDirWithParentSymlinks", "testCleanDirWithSymlinkFile", "testCorrectlyIdentifySymlinkWithParentSymLink", "testIdentifiesBrokenSymlinkFile", "testIdentifiesSymlinkDir", "testIdentifiesSymlinkFile", "testStillClearsIfGivenDirectoryIsASymlink" ],
        "org.apache.commons.io.FileUtilsDirectoryContainsTestCase" : [ "testCanonicalPath", "testDirectoryContainsDirectory", "testDirectoryContainsFile", "testDirectoryDoesNotContainFile", "testDirectoryDoesNotContainsDirectory", "testDirectoryDoesNotExist", "testFileDoesNotExist", "testFileDoesNotExistBug", "testIO466", "testSameFile", "testUnrealizedContainment" ],
        "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ],
        "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension", "testListFiles", "testListFilesByExtension" ],
        "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedError_IO_128", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetBaseName_with_nullByte", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetFullPathNoEndSeparator_IO_248", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPathNoEndSeparator_with_null_byte", "testGetPath_with_nullbyte", "testGetPrefix", "testGetPrefixLength", "testGetPrefix_with_nullbyte", "testIndexOfExtension", "testIndexOfLastSeparator", "testInjectionFailure", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testIsExtension_injection", "testNormalize", "testNormalizeNoEndSeparator", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin", "testNormalize_with_nullbytes", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
        "org.apache.commons.io.IOUtilsTestCase" : [ "testAsBufferedInputStream", "testAsBufferedInputStreamWithBufferSize", "testAsBufferedNull", "testAsBufferedOutputStream", "testAsBufferedOutputStreamWithBufferSize", "testAsBufferedReader", "testAsBufferedReaderWithBufferSize", "testAsBufferedWriter", "testAsBufferedWriterWithBufferSize", "testCloseQuietly_AllCloseableIOException", "testCloseQuietly_CloseableIOException", "testCloseQuietly_Selector", "testCloseQuietly_SelectorIOException", "testCloseQuietly_SelectorNull", "testCloseQuietly_SelectorTwice", "testCloseQuietly_ServerSocket", "testCloseQuietly_ServerSocketIOException", "testCloseQuietly_Socket", "testCloseQuietly_SocketIOException", "testConstants", "testContentEqualsIgnoreEOL", "testContentEquals_InputStream_InputStream", "testContentEquals_Reader_Reader", "testCopyLarge_CharExtraLength", "testCopyLarge_CharFullLength", "testCopyLarge_CharNoSkip", "testCopyLarge_CharSkip", "testCopyLarge_CharSkipInvalid", "testCopyLarge_ExtraLength", "testCopyLarge_FullLength", "testCopyLarge_NoSkip", "testCopyLarge_Skip", "testCopyLarge_SkipInvalid", "testCopy_ByteArray_OutputStream", "testCopy_ByteArray_Writer", "testCopy_String_Writer", "testReadFully_InputStream_ByteArray", "testReadFully_InputStream_Offset", "testReadFully_InputStream__ReturnByteArray", "testReadFully_ReadableByteChannel", "testReadFully_Reader", "testReadFully_Reader_Offset", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testRead_ReadableByteChannel", "testSkipFully_InputStream", "testSkipFully_ReadableByteChannel", "testSkipFully_Reader", "testSkip_FileReader", "testSkip_InputStream", "testSkip_ReadableByteChannel", "testStringToOutputStream", "testToBufferedInputStreamWithBufferSize_InputStream", "testToBufferedInputStream_InputStream", "testToByteArray_InputStream", "testToByteArray_InputStream_NegativeSize", "testToByteArray_InputStream_Size", "testToByteArray_InputStream_SizeIllegal", "testToByteArray_InputStream_SizeLong", "testToByteArray_InputStream_SizeZero", "testToByteArray_Reader", "testToByteArray_String", "testToByteArray_URI", "testToByteArray_URL", "testToByteArray_URLConnection", "testToCharArray_InputStream", "testToCharArray_InputStream_CharsetName", "testToCharArray_Reader", "testToInputStream_CharSequence", "testToInputStream_String", "testToString_ByteArray", "testToString_InputStream", "testToString_Reader", "testToString_URI", "testToString_URI_CharsetName", "testToString_URI_CharsetNameNull", "testToString_URL", "testToString_URL_CharsetName", "testToString_URL_CharsetNameNull" ],
        "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFilteringBufferedReader", "testFilteringFileReader", "testInvalidEncoding", "testMissingFile", "testNextLineOnlyDefaultEncoding", "testNextLineOnlyNullEncoding", "testNextLineOnlyUtf8Encoding", "testNextOnly", "testNextWithException", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
        "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "constructorArray_Null", "constructorIterable_Null", "constructorIterable_order" ],
        "org.apache.commons.io.comparator.DirectoryFileComparatorTest" : [ "testSortArray" ],
        "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : [ "testCaseSensitivity" ],
        "org.apache.commons.io.comparator.NameFileComparatorTest" : [ "testCaseSensitivity" ],
        "org.apache.commons.io.comparator.PathFileComparatorTest" : [ "testCaseSensitivity" ],
        "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ],
        "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testAnd", "testCanRead", "testCanWrite", "testDelegateFileFilter", "testDelegation", "testDeprecatedWildcard", "testDirectory", "testEmpty", "testEnsureTestCoverage", "testFalse", "testFileFilterUtils_and", "testFileFilterUtils_or", "testFiles", "testFilterArray", "testFilterArrayNullParameters", "testFilterArray_fromList", "testFilterList", "testFilterListNullParameters", "testFilterList_fromArray", "testFilterSet", "testFilterSetNullParameters", "testFilterSet_fromArray", "testHidden", "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset", "testMagicNumberFileFilterValidation", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNameFilterNullArrayArgument", "testNameFilterNullListArgument", "testNot", "testNullFilters", "testOr", "testPrefix", "testPrefixCaseInsensitive", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testTrue", "testWildcard" ],
        "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ],
        "org.apache.commons.io.input.TailerTest" : [ "testBufferBreak", "testIO335", "testInterrupt", "testLongFile", "testMultiByteBreak", "testStopWithNoFile", "testStopWithNoFileUsingExecutor", "testTailer", "testTailerEndOfFileReached", "testTailerEof" ],
        "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor", "testMonitor", "testThreadFactory" ],
        "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile", "testToString" ],
        "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "constructor_File_directory", "constructor_File_encoding_badEncoding", "constructor_File_nullFile", "constructor_fileName_nullFile", "sameEncoding_CharsetEncoder_constructor", "sameEncoding_Charset_constructor", "sameEncoding_null_Charset_constructor", "sameEncoding_string_CharsetEncoder_constructor", "sameEncoding_string_Charset_constructor", "sameEncoding_string_constructor", "sameEncoding_string_string_constructor", "testDifferentEncoding" ],
        "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testConstructor_fileName_nullFile", "testFileLocked", "testFileNotLocked" ]
      },
      "predecessor" : "948e0271b96774552a0b0f69d0ae2d53b34e575e"
    },
    "0c838a799ace7673e721bd29f0570097eb8f2925" : {
      "testcases" : {
        "org.apache.commons.io.CharsetsTestCase" : [ "testIso8859_1", "testUsAscii", "testUtf16", "testUtf16Be", "testUtf16Le", "testUtf8" ],
        "org.apache.commons.io.DemuxTestCase" : [ "testOutputStream" ],
        "org.apache.commons.io.IOUtilsTestCase" : [ "testContentEquals_InputStream_InputStream" ],
        "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset" ],
        "org.apache.commons.io.input.BOMInputStreamTest" : [ "skipReturnValueWithBom", "skipReturnValueWithoutBom", "testAvailableWithBOM", "testAvailableWithoutBOM", "testClose", "testEmptyBufferWithBOM", "testEmptyBufferWithoutBOM", "testGetBOMFirstThenRead", "testGetBOMFirstThenReadInclude", "testLargeBufferWithBOM", "testLargeBufferWithoutBOM", "testLeadingNonBOMBufferedRead", "testLeadingNonBOMSingleRead", "testMarkResetAfterReadWithBOM", "testMarkResetAfterReadWithoutBOM", "testMarkResetBeforeReadWithBOM", "testMarkResetBeforeReadWithoutBOM", "testNoBoms", "testReadEmpty", "testReadSmall", "testReadTwiceWithBOM", "testReadTwiceWithoutBOM", "testReadWithBOMInclude", "testReadWithBOMUtf16Be", "testReadWithBOMUtf16Le", "testReadWithBOMUtf32Be", "testReadWithBOMUtf32Le", "testReadWithBOMUtf8", "testReadWithMultipleBOM", "testReadWithoutBOM", "testReadXmlWithBOMUcs2", "testReadXmlWithBOMUtf16Be", "testReadXmlWithBOMUtf16Le", "testReadXmlWithBOMUtf8", "testSkipWithBOM", "testSkipWithoutBOM", "testSmallBufferWithBOM", "testSmallBufferWithoutBOM", "testSupportCode" ],
        "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize" : [ "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=256)", "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=1)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=256)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=3)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=8)", "testGBK(JUNIT_PARAMETERIZED-BlockSize=1)", "testGBK(JUNIT_PARAMETERIZED-BlockSize=256)", "testGBK(JUNIT_PARAMETERIZED-BlockSize=3)", "testGBK(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testGBK(JUNIT_PARAMETERIZED-BlockSize=8)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=1)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=256)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=3)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=8)", "testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=1)", "testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=256)", "testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=3)", "testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=8)", "testShiftJISFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testShiftJISFile(JUNIT_PARAMETERIZED-BlockSize=256)", "testShiftJISFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testShiftJISFile(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testShiftJISFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=8)", "testUnsupportedEncodingBig5(JUNIT_PARAMETERIZED-BlockSize=1)", "testUnsupportedEncodingBig5(JUNIT_PARAMETERIZED-BlockSize=256)", "testUnsupportedEncodingBig5(JUNIT_PARAMETERIZED-BlockSize=3)", "testUnsupportedEncodingBig5(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUnsupportedEncodingBig5(JUNIT_PARAMETERIZED-BlockSize=8)", "testUnsupportedEncodingUTF16(JUNIT_PARAMETERIZED-BlockSize=1)", "testUnsupportedEncodingUTF16(JUNIT_PARAMETERIZED-BlockSize=256)", "testUnsupportedEncodingUTF16(JUNIT_PARAMETERIZED-BlockSize=3)", "testUnsupportedEncodingUTF16(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUnsupportedEncodingUTF16(JUNIT_PARAMETERIZED-BlockSize=8)", "testWindows31jFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testWindows31jFile(JUNIT_PARAMETERIZED-BlockSize=256)", "testWindows31jFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testWindows31jFile(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testWindows31jFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testxWindows949File(JUNIT_PARAMETERIZED-BlockSize=1)", "testxWindows949File(JUNIT_PARAMETERIZED-BlockSize=256)", "testxWindows949File(JUNIT_PARAMETERIZED-BlockSize=3)", "testxWindows949File(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testxWindows949File(JUNIT_PARAMETERIZED-BlockSize=8)", "testxWindows950File(JUNIT_PARAMETERIZED-BlockSize=1)", "testxWindows950File(JUNIT_PARAMETERIZED-BlockSize=256)", "testxWindows950File(JUNIT_PARAMETERIZED-BlockSize=3)", "testxWindows950File(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testxWindows950File(JUNIT_PARAMETERIZED-BlockSize=8)" ],
        "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile" : [ "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-20byteslength.bin, charset=ISO_8859_1)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-gbk.bin, charset=gbk)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-iso8859-1-shortlines-win-linebr.bin, charset=ISO_8859_1)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-iso8859-1.bin, charset=ISO_8859_1)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-shiftjis.bin, charset=Shift_JIS)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf16be.bin, charset=UTF-16BE)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf16le.bin, charset=UTF-16LE)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf8-cr-only.bin, charset=UTF-8)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf8-win-linebr.bin, charset=UTF-8)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf8.bin, charset=UTF-8)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-windows-31j.bin, charset=windows-31j)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-x-windows-949.bin, charset=x-windows-949)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-x-windows-950.bin, charset=x-windows-950)" ],
        "org.apache.commons.io.input.ReversedLinesFileReaderTestSimple" : [ "testFileSizeIsExactMultipleOfBlockSize", "testUnsupportedEncodingBig5", "testUnsupportedEncodingUTF16" ],
        "org.apache.commons.io.input.TailerTest" : [ "testBufferBreak", "testLongFile", "testMultiByteBreak" ],
        "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir" ]
      },
      "predecessor" : "9d432121e1c60557da3e159252a88885944e5f00"
    },
    "5ea5c9624eee945ba6bf41e181066343e48272ce" : {
      "testcases" : {
        "org.apache.commons.io.CopyUtilsTest" : [ "copy_inputStreamToWriterWithEncoding", "testCopy_byteArrayToWriterWithEncoding", "testCtor" ],
        "org.apache.commons.io.IOExceptionWithCauseTestCase" : [ "testIOExceptionStringThrowable", "testIOExceptionThrowable" ],
        "org.apache.commons.io.TaggedIOExceptionTest" : [ "testTaggedIOException" ],
        "org.apache.commons.io.input.TaggedInputStreamTest" : [ "testBrokenStream", "testEmptyStream", "testNormalStream", "testOtherException" ],
        "org.apache.commons.io.input.TeeInputStreamTest" : [ "testMarkReset", "testReadEverything", "testReadNothing", "testReadOneByte", "testReadToArray", "testReadToArrayWithOffset", "testSkip" ],
        "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ],
        "org.apache.commons.io.output.TaggedOutputStreamTest" : [ "testBrokenStream", "testOtherException" ]
      },
      "predecessor" : "0c838a799ace7673e721bd29f0570097eb8f2925"
    },
    "7479b372cd4291d2a51e51dd10690952d9fd7019" : { },
    "30e5713a9b1cd210542aa574cf026c0417c202d9" : { },
    "676401d298098a99f9262c26b8e084628b1e3009" : { },
    "3867ddb393cadb8ecfe87509e922c0679c02947b" : { },
    "9b1882cf4a53c3d293d47a6e6bb6e0ba9b710529" : { },
    "bb3334507c5c9e9d3fd0462cb9366e8ce93eb7ba" : { },
    "6e33d3df3233e66f98a8dd2ae470752b768fcd54" : { },
    "6b57d2a14089735cf1c653a2717d05023a3be441" : {
      "testcases" : {
        "org.apache.commons.io.IOUtilsTestCase" : [ "testCopy_ByteArray_OutputStream", "testCopy_ByteArray_Writer", "testCopy_String_Writer", "testReadLines_InputStream", "testStringToOutputStream", "testToByteArray_Reader", "testToByteArray_String", "testToCharArray_InputStream", "testToInputStream_CharSequence", "testToInputStream_String", "testToString_ByteArray", "testToString_InputStream", "testToString_URI", "testToString_URL" ],
        "org.apache.commons.io.input.MessageDigestCalculatingInputStreamTest" : [ "test" ],
        "org.apache.commons.io.input.TailerTest" : [ "testLongFile" ],
        "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testConstructor_fileName_nullFile", "testFileLocked", "testFileNotLocked" ]
      },
      "predecessor" : "6e33d3df3233e66f98a8dd2ae470752b768fcd54"
    },
    "79b4df582d0035e196d4dc10894778fae58311ce" : {
      "testcases" : {
        "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy" ],
        "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce", "testDeleteNormal", "testDeleteQuietlyNormal" ],
        "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ],
        "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedError_IO_128", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetBaseName_with_nullByte", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetFullPathNoEndSeparator_IO_248", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPathNoEndSeparator_with_null_byte", "testGetPath_with_nullbyte", "testGetPrefix", "testGetPrefixLength", "testGetPrefix_with_nullbyte", "testIndexOfExtension", "testIndexOfLastSeparator", "testInjectionFailure", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testIsExtension_injection", "testNormalize", "testNormalizeNoEndSeparator", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin", "testNormalize_with_nullbytes", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
        "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "constructorArray_Null", "constructorIterable_Null", "constructorIterable_order" ],
        "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ],
        "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testCanRead", "testCanWrite", "testEmpty", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterStringOffset", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testSizeFilter" ]
      },
      "predecessor" : "6b57d2a14089735cf1c653a2717d05023a3be441"
    },
    "2bb4bec8391aa03f0e4d3a6f9292630243044726" : { },
    "8fce0fa77cddae14af022b6aacc32eb861fde99b" : { },
    "933796e9330ed5043ad8e76d9fa2cb8b1d3a8e3a" : {
      "testcases" : {
        "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceUnix_String_EmptyResponse", "testGetFreeSpaceUnix_String_InvalidResponse1", "testGetFreeSpaceUnix_String_InvalidResponse2", "testGetFreeSpaceUnix_String_InvalidResponse3", "testGetFreeSpaceUnix_String_InvalidResponse4", "testGetFreeSpaceUnix_String_LongResponse", "testGetFreeSpaceUnix_String_LongResponseKb", "testGetFreeSpaceUnix_String_NormalResponseFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbLinux", "testGetFreeSpaceUnix_String_NormalResponseKbSolaris", "testGetFreeSpaceUnix_String_NormalResponseLinux", "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpaceWindows_String_quoted", "testGetFreeSpace_String" ]
      },
      "predecessor" : "8fce0fa77cddae14af022b6aacc32eb861fde99b"
    },
    "2a915f5872beca562a72a1ded95652f87b5daaa3" : {
      "testcases" : {
        "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilter", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4", "testFilterString" ],
        "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testFilter", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ],
        "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension", "testListFiles", "testListFilesByExtension" ],
        "org.apache.commons.io.IOUtilsTestCase" : [ "testCloseQuietly_AllCloseableIOException", "testCloseQuietly_CloseableIOException" ],
        "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testFilteringBufferedReader", "testFilteringFileReader", "testNextLineOnlyDefaultEncoding", "testNextLineOnlyNullEncoding", "testNextLineOnlyUtf8Encoding", "testNextOnly", "testNextWithException", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
        "org.apache.commons.io.ThreadMonitorTestCase" : [ "testCompletedWithoutTimeout", "testNoTimeout", "testTimeout" ],
        "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "constructorArray_Null", "constructorIterable_Null", "constructorIterable_order" ],
        "org.apache.commons.io.comparator.DirectoryFileComparatorTest" : [ "testSortArray" ],
        "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : [ "testCaseSensitivity" ],
        "org.apache.commons.io.comparator.NameFileComparatorTest" : [ "testCaseSensitivity" ],
        "org.apache.commons.io.comparator.PathFileComparatorTest" : [ "testCaseSensitivity" ],
        "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ],
        "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testAnd", "testCanRead", "testCanWrite", "testDelegateFileFilter", "testDirectory", "testEmpty", "testFalse", "testFileFilterUtils_and", "testFileFilterUtils_or", "testFiles", "testFilterArrayNullParameters", "testHidden", "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNot", "testOr", "testSizeFilter", "testTrue" ],
        "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ],
        "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize" : [ "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=256)", "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=1)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=256)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=3)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=8)", "testGBK(JUNIT_PARAMETERIZED-BlockSize=1)", "testGBK(JUNIT_PARAMETERIZED-BlockSize=256)", "testGBK(JUNIT_PARAMETERIZED-BlockSize=3)", "testGBK(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testGBK(JUNIT_PARAMETERIZED-BlockSize=8)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=1)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=256)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=3)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=8)", "testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=1)", "testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=256)", "testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=3)", "testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=8)", "testShiftJISFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testShiftJISFile(JUNIT_PARAMETERIZED-BlockSize=256)", "testShiftJISFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testShiftJISFile(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testShiftJISFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=8)", "testWindows31jFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testWindows31jFile(JUNIT_PARAMETERIZED-BlockSize=256)", "testWindows31jFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testWindows31jFile(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testWindows31jFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testxWindows949File(JUNIT_PARAMETERIZED-BlockSize=1)", "testxWindows949File(JUNIT_PARAMETERIZED-BlockSize=256)", "testxWindows949File(JUNIT_PARAMETERIZED-BlockSize=3)", "testxWindows949File(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testxWindows949File(JUNIT_PARAMETERIZED-BlockSize=8)", "testxWindows950File(JUNIT_PARAMETERIZED-BlockSize=1)", "testxWindows950File(JUNIT_PARAMETERIZED-BlockSize=256)", "testxWindows950File(JUNIT_PARAMETERIZED-BlockSize=3)", "testxWindows950File(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testxWindows950File(JUNIT_PARAMETERIZED-BlockSize=8)" ],
        "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile" : [ "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-20byteslength.bin, charset=ISO_8859_1)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-gbk.bin, charset=gbk)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-iso8859-1-shortlines-win-linebr.bin, charset=ISO_8859_1)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-iso8859-1.bin, charset=ISO_8859_1)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-shiftjis.bin, charset=Shift_JIS)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf16be.bin, charset=UTF-16BE)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf16le.bin, charset=UTF-16LE)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf8-cr-only.bin, charset=UTF-8)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf8-win-linebr.bin, charset=UTF-8)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf8.bin, charset=UTF-8)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-windows-31j.bin, charset=windows-31j)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-x-windows-949.bin, charset=x-windows-949)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-x-windows-950.bin, charset=x-windows-950)" ],
        "org.apache.commons.io.input.ReversedLinesFileReaderTestSimple" : [ "testFileSizeIsExactMultipleOfBlockSize" ],
        "org.apache.commons.io.input.SwappedDataInputStreamTest" : [ "testReadBoolean", "testReadByte", "testReadChar", "testReadDouble", "testReadFloat", "testReadFully", "testReadInt", "testReadLine", "testReadLong", "testReadShort", "testReadUTF", "testReadUnsignedByte", "testReadUnsignedShort", "testSkipBytes" ],
        "org.apache.commons.io.input.TailerTest" : [ "testBufferBreak", "testIO335", "testInterrupt", "testLongFile", "testMultiByteBreak", "testStopWithNoFile", "testStopWithNoFileUsingExecutor", "testTailer", "testTailerEndOfFileReached", "testTailerEof" ],
        "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testCalculateHttpEncoding", "testCalculateHttpEncodingUtf32", "testCalculateRawEncodingAdditonalUTF16", "testCalculateRawEncodingAdditonalUTF32", "testCalculateRawEncodingNoBOM", "testCalculateRawEncodingStandard", "testCalculateRawEncodingStandardUtf32" ],
        "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor", "testThreadFactory" ],
        "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile", "testToString" ],
        "org.apache.commons.io.serialization.MoreComplexObjectTest" : [ "trustJavaIncludingArrays", "trustJavaLang", "useBlacklist" ],
        "org.apache.commons.io.serialization.ValidatingObjectInputStreamTest" : [ "acceptCustomMatcher", "acceptPattern", "acceptWildcard", "customInvalidMethod", "exceptionIncludesClassName", "noAccept", "ourTestClassAcceptedFirst", "ourTestClassAcceptedFirstWildcard", "ourTestClassAcceptedSecond", "ourTestClassAcceptedSecondWildcard", "ourTestClassNotAccepted", "ourTestClassOnlyAccepted", "reject", "rejectCustomMatcher", "rejectOnly", "rejectPattern", "rejectPrecedence", "rejectWildcard" ]
      },
      "predecessor" : "933796e9330ed5043ad8e76d9fa2cb8b1d3a8e3a"
    },
    "b1ee00d701a7bb247bc8f24e226cb8ad7411cb0a" : { },
    "31c0d3a8e94b1016843596acea17a63bed9d4558" : {
      "testcases" : {
        "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_inputStreamToOutputStream_nullOut", "testCopy_inputStreamToWriter_Encoding_nullOut", "testCopy_inputStreamToWriter_nullOut", "testCopy_readerToOutputStream_Encoding_nullOut", "testCopy_readerToOutputStream_nullOut", "testCopy_readerToWriter_nullOut" ],
        "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWriteLines_OutputStream_Encoding_nullStream", "testWriteLines_OutputStream_nullStream", "testWriteLines_Writer_nullStream", "testWrite_byteArrayToOutputStream_nullStream", "testWrite_byteArrayToWriter_Encoding_nullWriter", "testWrite_byteArrayToWriter_nullWriter", "testWrite_charArrayToOutputStream_Encoding_nullStream", "testWrite_charArrayToOutputStream_nullStream", "testWrite_charArrayToWriter_Encoding_nullStream", "testWrite_charSequenceToOutputStream_Encoding_nullStream", "testWrite_charSequenceToOutputStream_nullStream", "testWrite_charSequenceToWriter_Encoding_nullStream", "testWrite_stringToOutputStream_Encoding_nullStream", "testWrite_stringToOutputStream_nullStream", "testWrite_stringToWriter_Encoding_nullStream" ],
        "org.apache.commons.io.input.TailerTest" : [ "testBufferBreak", "testLongFile", "testTailerEof" ]
      },
      "predecessor" : "b1ee00d701a7bb247bc8f24e226cb8ad7411cb0a"
    },
    "e95134229b9066aa2f1d312a53f5a670d271dbfa" : {
      "testcases" : {
        "org.apache.commons.io.IOUtilsTestCase" : [ "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader" ],
        "org.apache.commons.io.input.TailerTest" : [ "testBufferBreak", "testLongFile", "testTailerEof" ],
        "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor", "testThreadFactory" ]
      },
      "predecessor" : "31c0d3a8e94b1016843596acea17a63bed9d4558"
    },
    "699d6f0eca65837501d7ab7a92ae2c614f8e6cbf" : {
      "predecessor" : "e95134229b9066aa2f1d312a53f5a670d271dbfa"
    },
    "fcc6361946b1809771e136af566518320006c01e" : { },
    "703228a3d40881ea52faada723726b05f6d77b8a" : {
      "testcases" : {
        "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpaceWindows_String_quoted" ],
        "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEqualsNormalized", "testEqualsNormalizedError_IO_128", "testEqualsNormalizedOnSystem", "testEquals_fullControl", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetFullPathNoEndSeparator_IO_248", "testGetPath", "testGetPathNoEndSeparator", "testGetPathNoEndSeparator_with_null_byte", "testGetPath_with_nullbyte", "testGetPrefix", "testGetPrefixLength", "testGetPrefix_with_nullbyte", "testNormalize", "testNormalizeNoEndSeparator", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin" ]
      },
      "predecessor" : "fcc6361946b1809771e136af566518320006c01e"
    },
    "593de775be9e5cb9c9a6cbcebe9a40ce80cc4bfd" : { },
    "4aebb1129d397b20c8f911ccdf1e3595f020d127" : { },
    "878133480c2854535a069084b86ef158d3027e81" : { },
    "54631643211e2dc29beaecc30e4eedf2928738d7" : { },
    "8b9fe1b01ce21003f6a6ff8391ad2a64f4d21030" : { },
    "4b5fa7d8d2d398a6eed0725ff4b2a8177da56896" : { },
    "45fbfb82fd1f5168a7183e78ece89da7a60e21fe" : {
      "testcases" : {
        "org.apache.commons.io.input.TailerTest" : [ "testBufferBreak", "testIO335", "testInterrupt", "testLongFile", "testMultiByteBreak", "testStopWithNoFile", "testStopWithNoFileUsingExecutor", "testTailer", "testTailerEndOfFileReached", "testTailerEof" ]
      },
      "predecessor" : "4b5fa7d8d2d398a6eed0725ff4b2a8177da56896"
    },
    "f44180b972e3f881da8a3f981a1ca4f720e48125" : { },
    "d675cd1362d502de0a94e0ff4d10e9c4ada579e4" : {
      "predecessor" : "f44180b972e3f881da8a3f981a1ca4f720e48125"
    },
    "b5a2c343d52885dada56baa5c681b4c63533cf52" : { },
    "46fc59ff1d9df4939c178ad749487bb5f5e7ab15" : { },
    "f5c46b9fc80754c601205e6ef13c5b7e9a5003e2" : {
      "predecessor" : "46fc59ff1d9df4939c178ad749487bb5f5e7ab15"
    },
    "722a5af4f1786599f22e91a34af459883c7a6a8b" : {
      "testcases" : {
        "org.apache.commons.io.input.TailerTest" : [ "testBufferBreak", "testIO335", "testLongFile", "testMultiByteBreak", "testTailer", "testTailerEndOfFileReached", "testTailerEof" ]
      },
      "predecessor" : "f5c46b9fc80754c601205e6ef13c5b7e9a5003e2"
    },
    "5411db017b093f0995a9b7807a6a4dabb0f1e0ea" : {
      "testcases" : {
        "org.apache.commons.io.input.TailerTest" : [ "testIO335", "testInterrupt", "testMultiByteBreak", "testStopWithNoFile", "testStopWithNoFileUsingExecutor", "testTailer", "testTailerEof" ]
      },
      "predecessor" : "722a5af4f1786599f22e91a34af459883c7a6a8b"
    },
    "31e141019010d27dfb3c1a1fb712433268b520f0" : {
      "predecessor" : "5411db017b093f0995a9b7807a6a4dabb0f1e0ea"
    },
    "419ad3e4aaeb2471c86eec1b6799675a70bc12cb" : {
      "testcases" : {
        "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerNull" ],
        "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce", "testDeleteNormal", "testDeleteNull", "testDeleteQuietlyNormal", "testToString" ],
        "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testCleanEmpty", "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile", "testThrowsOnNullList" ],
        "org.apache.commons.io.FileUtilsDirectoryContainsTestCase" : [ "testCanonicalPath", "testDirectoryContainsDirectory", "testDirectoryContainsFile", "testDirectoryDoesNotContainFile", "testDirectoryDoesNotContainsDirectory", "testDirectoryDoesNotExist", "testFileDoesNotExist", "testFileDoesNotExistBug", "testIO466", "testSameFile", "testUnrealizedContainment" ],
        "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ],
        "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension", "testListFiles", "testListFilesByExtension" ],
        "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedError_IO_128", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetBaseName_with_nullByte", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetFullPathNoEndSeparator_IO_248", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPathNoEndSeparator_with_null_byte", "testGetPath_with_nullbyte", "testGetPrefix", "testGetPrefixLength", "testGetPrefix_with_nullbyte", "testIndexOfExtension", "testIndexOfLastSeparator", "testInjectionFailure", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testIsExtension_injection", "testNormalize", "testNormalizeNoEndSeparator", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin", "testNormalize_with_nullbytes", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
        "org.apache.commons.io.IOUtilsTestCase" : [ "testAsBufferedInputStream", "testAsBufferedInputStreamWithBufferSize", "testAsBufferedNull", "testAsBufferedOutputStream", "testAsBufferedOutputStreamWithBufferSize", "testAsBufferedReader", "testAsBufferedReaderWithBufferSize", "testAsBufferedWriter", "testAsBufferedWriterWithBufferSize", "testCloseQuietly_AllCloseableIOException", "testCloseQuietly_CloseableIOException", "testCloseQuietly_Selector", "testCloseQuietly_SelectorIOException", "testCloseQuietly_SelectorNull", "testCloseQuietly_SelectorTwice", "testCloseQuietly_ServerSocket", "testCloseQuietly_ServerSocketIOException", "testCloseQuietly_Socket", "testCloseQuietly_SocketIOException", "testConstants", "testContentEqualsIgnoreEOL", "testContentEquals_InputStream_InputStream", "testContentEquals_Reader_Reader", "testCopyLarge_CharExtraLength", "testCopyLarge_CharFullLength", "testCopyLarge_CharNoSkip", "testCopyLarge_CharSkip", "testCopyLarge_CharSkipInvalid", "testCopyLarge_ExtraLength", "testCopyLarge_FullLength", "testCopyLarge_NoSkip", "testCopyLarge_Skip", "testCopyLarge_SkipInvalid", "testCopy_ByteArray_OutputStream", "testCopy_ByteArray_Writer", "testCopy_String_Writer", "testReadFully_InputStream_ByteArray", "testReadFully_InputStream_Offset", "testReadFully_InputStream__ReturnByteArray", "testReadFully_ReadableByteChannel", "testReadFully_Reader", "testReadFully_Reader_Offset", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testRead_ReadableByteChannel", "testResourceToByteArray_ExistingResourceAtRootPackage", "testResourceToByteArray_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToByteArray_ExistingResourceAtSubPackage", "testResourceToByteArray_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToByteArray_NonExistingResource", "testResourceToByteArray_NonExistingResource_WithClassLoader", "testResourceToByteArray_Null", "testResourceToByteArray_Null_WithClassLoader", "testResourceToString_ExistingResourceAtRootPackage", "testResourceToString_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToString_ExistingResourceAtSubPackage", "testResourceToString_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToString_NonExistingResource", "testResourceToString_NonExistingResource_WithClassLoader", "testResourceToString_NullCharset", "testResourceToString_NullCharset_WithClassLoader", "testResourceToString_NullResource", "testResourceToString_NullResource_WithClassLoader", "testResourceToURL_ExistingResourceAtRootPackage", "testResourceToURL_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToURL_ExistingResourceAtSubPackage", "testResourceToURL_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToURL_NonExistingResource", "testResourceToURL_NonExistingResource_WithClassLoader", "testResourceToURL_Null", "testResourceToURL_Null_WithClassLoader", "testSkipFully_InputStream", "testSkipFully_ReadableByteChannel", "testSkipFully_Reader", "testSkip_FileReader", "testSkip_InputStream", "testSkip_ReadableByteChannel", "testStringToOutputStream", "testToBufferedInputStreamWithBufferSize_InputStream", "testToBufferedInputStream_InputStream", "testToByteArray_InputStream", "testToByteArray_InputStream_NegativeSize", "testToByteArray_InputStream_Size", "testToByteArray_InputStream_SizeIllegal", "testToByteArray_InputStream_SizeLong", "testToByteArray_InputStream_SizeZero", "testToByteArray_Reader", "testToByteArray_String", "testToByteArray_URI", "testToByteArray_URL", "testToByteArray_URLConnection", "testToCharArray_InputStream", "testToCharArray_InputStream_CharsetName", "testToCharArray_Reader", "testToInputStream_CharSequence", "testToInputStream_String", "testToString_ByteArray", "testToString_InputStream", "testToString_Reader", "testToString_URI", "testToString_URI_CharsetName", "testToString_URI_CharsetNameNull", "testToString_URL", "testToString_URL_CharsetName", "testToString_URL_CharsetNameNull" ],
        "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFilteringBufferedReader", "testFilteringFileReader", "testInvalidEncoding", "testMissingFile", "testNextLineOnlyDefaultEncoding", "testNextLineOnlyNullEncoding", "testNextLineOnlyUtf8Encoding", "testNextOnly", "testNextWithException", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
        "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "constructorArray_Null", "constructorIterable_Null", "constructorIterable_order" ],
        "org.apache.commons.io.comparator.DirectoryFileComparatorTest" : [ "testSortArray" ],
        "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : [ "testCaseSensitivity" ],
        "org.apache.commons.io.comparator.NameFileComparatorTest" : [ "testCaseSensitivity" ],
        "org.apache.commons.io.comparator.PathFileComparatorTest" : [ "testCaseSensitivity" ],
        "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ],
        "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testAnd", "testCanRead", "testCanWrite", "testDelegateFileFilter", "testDelegation", "testDeprecatedWildcard", "testDirectory", "testEmpty", "testEnsureTestCoverage", "testFalse", "testFileFilterUtils_and", "testFileFilterUtils_or", "testFiles", "testFilterArray", "testFilterArrayNullParameters", "testFilterArray_fromList", "testFilterList", "testFilterListNullParameters", "testFilterList_fromArray", "testFilterSet", "testFilterSetNullParameters", "testFilterSet_fromArray", "testHidden", "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset", "testMagicNumberFileFilterValidation", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNameFilterNullArrayArgument", "testNameFilterNullListArgument", "testNot", "testNullFilters", "testOr", "testPrefix", "testPrefixCaseInsensitive", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testTrue", "testWildcard" ],
        "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ],
        "org.apache.commons.io.input.TailerTest" : [ "testBufferBreak", "testIO335", "testInterrupt", "testLongFile", "testMultiByteBreak", "testStopWithNoFile", "testStopWithNoFileUsingExecutor", "testTailer", "testTailerEndOfFileReached", "testTailerEof" ],
        "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "constructor_File_directory", "constructor_File_encoding_badEncoding", "constructor_File_nullFile", "constructor_fileName_nullFile", "sameEncoding_CharsetEncoder_constructor", "sameEncoding_Charset_constructor", "sameEncoding_null_Charset_constructor", "sameEncoding_string_CharsetEncoder_constructor", "sameEncoding_string_Charset_constructor", "sameEncoding_string_constructor", "sameEncoding_string_string_constructor", "testDifferentEncoding" ],
        "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testConstructor_fileName_nullFile", "testFileLocked", "testFileNotLocked" ]
      },
      "predecessor" : "31e141019010d27dfb3c1a1fb712433268b520f0"
    },
    "c295a589777a35730c90b26f28f7cc938d4053e3" : {
      "testcases" : {
        "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ]
      },
      "predecessor" : "419ad3e4aaeb2471c86eec1b6799675a70bc12cb"
    },
    "f00d97a6cea0a08c8112ffb8bd0b6847373899ae" : {
      "testcases" : {
        "org.apache.commons.io.IOUtilsTestCase" : [ "testToByteArray_InputStream_NegativeSize", "testToByteArray_InputStream_Size", "testToByteArray_InputStream_SizeIllegal", "testToByteArray_InputStream_SizeLong", "testToByteArray_InputStream_SizeZero" ],
        "org.apache.commons.io.input.TailerTest" : [ "testBufferBreak", "testLongFile", "testMultiByteBreak" ],
        "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor", "testThreadFactory" ]
      },
      "predecessor" : "c295a589777a35730c90b26f28f7cc938d4053e3"
    },
    "c29e08e98a4d1f12842375cb8fb259b8e5054b0f" : {
      "testcases" : {
        "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor", "testThreadFactory" ],
        "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory" ]
      },
      "predecessor" : "f00d97a6cea0a08c8112ffb8bd0b6847373899ae"
    },
    "70b9170cac5a47f6d55cdced51e94ac9a8fec28a" : {
      "testcases" : {
        "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testCancel", "testFilterDirAndFile2", "testFilterDirAndFile4", "testMultiThreadCancel" ],
        "org.apache.commons.io.input.ProxyReaderTest" : [ "testNullCharArray", "testNullCharBuffer" ],
        "org.apache.commons.io.input.TaggedInputStreamTest" : [ "testEmptyStream", "testNormalStream", "testOtherException" ],
        "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ],
        "org.apache.commons.io.output.ProxyWriterTest" : [ "appendChar", "appendCharSequence", "appendCharSequence_with_offset", "nullCharArray", "nullCharSequencec", "nullString", "writeCharArray", "writeCharArrayPartial", "writeInt", "writeString", "writeStringPartial" ]
      },
      "predecessor" : "c29e08e98a4d1f12842375cb8fb259b8e5054b0f"
    },
    "f7a11c99398a05d5bd251538242ac9b231dae7b3" : { },
    "d4f28d7ff397386b208823c577180938e15769d3" : {
      "testcases" : {
        "org.apache.commons.io.input.BOMInputStreamTest" : [ "skipReturnValueWithBom", "skipReturnValueWithoutBom", "testAvailableWithBOM", "testAvailableWithoutBOM", "testClose", "testEmptyBufferWithBOM", "testEmptyBufferWithoutBOM", "testGetBOMFirstThenRead", "testGetBOMFirstThenReadInclude", "testLargeBufferWithBOM", "testLargeBufferWithoutBOM", "testLeadingNonBOMBufferedRead", "testLeadingNonBOMSingleRead", "testMarkResetAfterReadWithBOM", "testMarkResetAfterReadWithoutBOM", "testMarkResetBeforeReadWithBOM", "testMarkResetBeforeReadWithoutBOM", "testNoBoms", "testReadEmpty", "testReadSmall", "testReadTwiceWithBOM", "testReadTwiceWithoutBOM", "testReadWithBOMInclude", "testReadWithBOMUtf16Be", "testReadWithBOMUtf16Le", "testReadWithBOMUtf32Be", "testReadWithBOMUtf32Le", "testReadWithBOMUtf8", "testReadWithMultipleBOM", "testReadWithoutBOM", "testReadXmlWithBOMUcs2", "testReadXmlWithBOMUtf16Be", "testReadXmlWithBOMUtf16Le", "testReadXmlWithBOMUtf32Be", "testReadXmlWithBOMUtf32Le", "testReadXmlWithBOMUtf8", "testReadXmlWithoutBOMUtf32Be", "testReadXmlWithoutBOMUtf32Le", "testSkipWithBOM", "testSkipWithoutBOM", "testSmallBufferWithBOM", "testSmallBufferWithoutBOM" ],
        "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testEncodingAttributeXML", "testHttp", "testHttpContent", "testRawBomUtf16", "testRawBomUtf32", "testRawBomUtf8", "testRawContent", "testRawNoBomCp1047", "testRawNoBomIso8859_1", "testRawNoBomUsAscii", "testRawNoBomUtf16BE", "testRawNoBomUtf16LE", "testRawNoBomUtf32BE", "testRawNoBomUtf32LE", "testRawNoBomUtf8" ],
        "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testCalculateHttpEncoding", "testCalculateHttpEncodingUtf32", "testCalculateRawEncodingAdditonalUTF16", "testCalculateRawEncodingAdditonalUTF32", "testCalculateRawEncodingNoBOM", "testCalculateRawEncodingStandard", "testCalculateRawEncodingStandardUtf32" ]
      },
      "predecessor" : "f7a11c99398a05d5bd251538242ac9b231dae7b3"
    },
    "936b820a4e9b9f96661c961bab87e4ec05ca0574" : {
      "predecessor" : "d4f28d7ff397386b208823c577180938e15769d3"
    },
    "acceb62960971477744f6731bbbc06abbabfe4f3" : { },
    "9990c66690467cf6c08be921947532729b7ee91c" : { },
    "92a07f9aa109f0f55af963f86e466c80718f9466" : {
      "predecessor" : "9990c66690467cf6c08be921947532729b7ee91c"
    },
    "5899f1eb7239ea26291b9e38490f5922b86158d8" : {
      "testcases" : {
        "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpaceWindows_String_quoted" ]
      },
      "predecessor" : "92a07f9aa109f0f55af963f86e466c80718f9466"
    },
    "733dc26a281e235d52c965b6053a4e16bd4f85de" : { },
    "46a2c6bebe30989d51d59e14def38a82e8edfd78" : {
      "testcases" : {
        "org.apache.commons.io.input.BOMInputStreamTest" : [ "testGetBOMFirstThenRead", "testGetBOMFirstThenReadInclude", "testReadEmpty", "testReadSmall", "testReadWithBOMInclude", "testReadWithBOMUtf16Be", "testReadWithBOMUtf16Le", "testReadWithBOMUtf32Be", "testReadWithBOMUtf32Le", "testReadWithBOMUtf8", "testReadWithMultipleBOM", "testReadWithoutBOM" ]
      },
      "predecessor" : "733dc26a281e235d52c965b6053a4e16bd4f85de"
    },
    "9543f75f4601278abcfd0a16cfea977399b89052" : { },
    "5f88079956ba7fc4551a5fc51dc28d82e33dc65f" : {
      "testcases" : {
        "org.apache.commons.io.ByteOrderMarkTestCase" : [ "charsetName", "constantCharsetNames", "errors", "get", "getBytes", "testEquals", "testHashCode", "testLength", "testToString" ],
        "org.apache.commons.io.DemuxTestCase" : [ "testInputStream", "testOutputStream" ],
        "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testCancel", "testFilter", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile2", "testFilterDirAndFile3", "testFilterDirAndFile4", "testFilterString", "testMultiThreadCancel" ],
        "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testCancel", "testFilter", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile2", "testFilterDirAndFile3", "testFilterDirAndFile4", "testMultiThreadCancel" ],
        "org.apache.commons.io.EndianUtilsTest" : [ "testCtor", "testEOFException", "testReadSwappedDouble", "testReadSwappedFloat", "testReadSwappedInteger", "testReadSwappedLong", "testReadSwappedShort", "testReadSwappedUnsignedInteger", "testReadSwappedUnsignedShort", "testSwapDouble", "testSwapFloat", "testSwapInteger", "testSwapLong", "testSwapShort", "testSymmetry", "testSymmetryOfLong", "testUnsignedOverrun", "testWriteSwappedDouble", "testWriteSwappedFloat", "testWriteSwappedInteger", "testWriteSwappedLong", "testWriteSwappedShort" ],
        "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerFile", "testFileCleanerNull" ],
        "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce", "testDeleteNormal", "testDeleteNull", "testDeleteQuietlyNormal", "testToString" ],
        "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpaceWindows_String_quoted", "testGetFreeSpace_String" ],
        "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testCleanEmpty", "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile", "testThrowsOnNullList" ],
        "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" : [ "testIdentifiesBrokenSymlinkFile", "testIdentifiesSymlinkFile" ],
        "org.apache.commons.io.FileUtilsDirectoryContainsTestCase" : [ "testCanonicalPath", "testDirectoryContainsDirectory", "testDirectoryContainsFile", "testDirectoryDoesNotContainFile", "testDirectoryDoesNotContainsDirectory", "testDirectoryDoesNotExist", "testFileDoesNotExist", "testFileDoesNotExistBug", "testIO466", "testSameFile", "testUnrealizedContainment" ],
        "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ],
        "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension", "testListFiles", "testListFilesByExtension" ],
        "org.apache.commons.io.FileUtilsWaitForTestCase" : [ "testWaitFor", "testWaitForInterrupted" ],
        "org.apache.commons.io.IOCaseTestCase" : [ "test_checkCompare_case", "test_checkCompare_functionality", "test_checkEndsWith_case", "test_checkEndsWith_functionality", "test_checkEquals_case", "test_checkEquals_functionality", "test_checkIndexOf_case", "test_checkIndexOf_functionality", "test_checkRegionMatches_case", "test_checkRegionMatches_functionality", "test_checkStartsWith_case", "test_checkStartsWith_functionality", "test_forName", "test_getName", "test_isCaseSensitive", "test_serialization", "test_toString" ],
        "org.apache.commons.io.IOUtilsTestCase" : [ "testAsBufferedInputStream", "testAsBufferedInputStreamWithBufferSize", "testAsBufferedNull", "testAsBufferedOutputStream", "testAsBufferedOutputStreamWithBufferSize", "testAsBufferedReader", "testAsBufferedReaderWithBufferSize", "testAsBufferedWriter", "testAsBufferedWriterWithBufferSize", "testCloseQuietly_AllCloseableIOException", "testCloseQuietly_CloseableIOException", "testCloseQuietly_Selector", "testCloseQuietly_SelectorIOException", "testCloseQuietly_SelectorNull", "testCloseQuietly_SelectorTwice", "testCloseQuietly_ServerSocket", "testCloseQuietly_ServerSocketIOException", "testCloseQuietly_Socket", "testCloseQuietly_SocketIOException", "testConstants", "testContentEqualsIgnoreEOL", "testContentEquals_InputStream_InputStream", "testContentEquals_Reader_Reader", "testCopyLarge_CharExtraLength", "testCopyLarge_CharFullLength", "testCopyLarge_CharNoSkip", "testCopyLarge_CharSkip", "testCopyLarge_CharSkipInvalid", "testCopyLarge_ExtraLength", "testCopyLarge_FullLength", "testCopyLarge_NoSkip", "testCopyLarge_Skip", "testCopyLarge_SkipInvalid", "testCopyLarge_SkipWithInvalidOffset", "testCopy_ByteArray_OutputStream", "testCopy_ByteArray_Writer", "testCopy_String_Writer", "testReadFully_InputStream_ByteArray", "testReadFully_InputStream_Offset", "testReadFully_InputStream__ReturnByteArray", "testReadFully_ReadableByteChannel", "testReadFully_Reader", "testReadFully_Reader_Offset", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testRead_ReadableByteChannel", "testResourceToByteArray_ExistingResourceAtRootPackage", "testResourceToByteArray_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToByteArray_ExistingResourceAtSubPackage", "testResourceToByteArray_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToByteArray_NonExistingResource", "testResourceToByteArray_NonExistingResource_WithClassLoader", "testResourceToByteArray_Null", "testResourceToByteArray_Null_WithClassLoader", "testResourceToString_ExistingResourceAtRootPackage", "testResourceToString_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToString_ExistingResourceAtSubPackage", "testResourceToString_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToString_NonExistingResource", "testResourceToString_NonExistingResource_WithClassLoader", "testResourceToString_NullCharset", "testResourceToString_NullCharset_WithClassLoader", "testResourceToString_NullResource", "testResourceToString_NullResource_WithClassLoader", "testResourceToURL_ExistingResourceAtRootPackage", "testResourceToURL_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToURL_ExistingResourceAtSubPackage", "testResourceToURL_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToURL_NonExistingResource", "testResourceToURL_NonExistingResource_WithClassLoader", "testResourceToURL_Null", "testResourceToURL_Null_WithClassLoader", "testSkipFully_InputStream", "testSkipFully_ReadableByteChannel", "testSkipFully_Reader", "testSkip_FileReader", "testSkip_InputStream", "testSkip_ReadableByteChannel", "testStringToOutputStream", "testToBufferedInputStreamWithBufferSize_InputStream", "testToBufferedInputStream_InputStream", "testToByteArray_InputStream", "testToByteArray_InputStream_NegativeSize", "testToByteArray_InputStream_Size", "testToByteArray_InputStream_SizeIllegal", "testToByteArray_InputStream_SizeLong", "testToByteArray_InputStream_SizeZero", "testToByteArray_Reader", "testToByteArray_String", "testToByteArray_URI", "testToByteArray_URL", "testToByteArray_URLConnection", "testToCharArray_InputStream", "testToCharArray_InputStream_CharsetName", "testToCharArray_Reader", "testToInputStream_CharSequence", "testToInputStream_String", "testToString_ByteArray", "testToString_InputStream", "testToString_Reader", "testToString_URI", "testToString_URI_CharsetName", "testToString_URI_CharsetNameNull", "testToString_URL", "testToString_URL_CharsetName", "testToString_URL_CharsetNameNull" ],
        "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFilteringBufferedReader", "testFilteringFileReader", "testInvalidEncoding", "testMissingFile", "testNextLineOnlyDefaultEncoding", "testNextLineOnlyNullEncoding", "testNextLineOnlyUtf8Encoding", "testNextOnly", "testNextWithException", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
        "org.apache.commons.io.ThreadMonitorTestCase" : [ "testCompletedWithoutTimeout", "testNoTimeout", "testTimeout" ],
        "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "constructorArray_Null", "constructorIterable_Null", "constructorIterable_order" ],
        "org.apache.commons.io.comparator.DirectoryFileComparatorTest" : [ "testSortArray" ],
        "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : [ "testCaseSensitivity" ],
        "org.apache.commons.io.comparator.NameFileComparatorTest" : [ "testCaseSensitivity" ],
        "org.apache.commons.io.comparator.PathFileComparatorTest" : [ "testCaseSensitivity" ],
        "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ],
        "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testAnd", "testCanRead", "testCanWrite", "testDelegateFileFilter", "testDelegation", "testDeprecatedWildcard", "testDirectory", "testEmpty", "testEnsureTestCoverage", "testFalse", "testFileFilterUtils_and", "testFileFilterUtils_or", "testFiles", "testFilterArray", "testFilterArrayNullParameters", "testFilterArray_fromList", "testFilterList", "testFilterListNullParameters", "testFilterList_fromArray", "testFilterSet", "testFilterSetNullParameters", "testFilterSet_fromArray", "testHidden", "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset", "testMagicNumberFileFilterValidation", "testMakeDirectoryOnly", "testMakeFileOnly", "testNameFilter", "testNameFilterNullArgument", "testNameFilterNullArrayArgument", "testNameFilterNullListArgument", "testNot", "testNullFilters", "testOr", "testPrefix", "testPrefixCaseInsensitive", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testTrue", "testWildcard" ],
        "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ],
        "org.apache.commons.io.input.AutoCloseInputStreamTest" : [ "testClose", "testRead", "testReadBuffer", "testReadBufferOffsetLength" ],
        "org.apache.commons.io.input.BOMInputStreamTest" : [ "skipReturnValueWithBom", "skipReturnValueWithoutBom", "testAvailableWithBOM", "testAvailableWithoutBOM", "testClose", "testEmptyBufferWithBOM", "testEmptyBufferWithoutBOM", "testGetBOMFirstThenRead", "testGetBOMFirstThenReadInclude", "testLargeBufferWithBOM", "testLargeBufferWithoutBOM", "testLeadingNonBOMBufferedRead", "testLeadingNonBOMSingleRead", "testMarkResetAfterReadWithBOM", "testMarkResetAfterReadWithoutBOM", "testMarkResetBeforeReadWithBOM", "testMarkResetBeforeReadWithoutBOM", "testNoBoms", "testReadEmpty", "testReadSmall", "testReadTwiceWithBOM", "testReadTwiceWithoutBOM", "testReadWithBOMInclude", "testReadWithBOMUtf16Be", "testReadWithBOMUtf16Le", "testReadWithBOMUtf32Be", "testReadWithBOMUtf32Le", "testReadWithBOMUtf8", "testReadWithMultipleBOM", "testReadWithoutBOM", "testReadXmlWithBOMUcs2", "testReadXmlWithBOMUtf16Be", "testReadXmlWithBOMUtf16Le", "testReadXmlWithBOMUtf32Be", "testReadXmlWithBOMUtf32Le", "testReadXmlWithBOMUtf8", "testReadXmlWithoutBOMUtf32Be", "testReadXmlWithoutBOMUtf32Le", "testSkipWithBOM", "testSkipWithoutBOM", "testSmallBufferWithBOM", "testSmallBufferWithoutBOM" ],
        "org.apache.commons.io.input.BoundedInputStreamTest" : [ "testReadSingle" ],
        "org.apache.commons.io.input.BoundedReaderTest" : [ "closeTest" ],
        "org.apache.commons.io.input.BrokenInputStreamTest" : [ "testAvailable", "testClose", "testRead", "testReset", "testSkip" ],
        "org.apache.commons.io.input.CharSequenceInputStreamTest" : [ "testAvailable", "testBufferedRead_AvailableCharset", "testBufferedRead_RequiredCharset", "testBufferedRead_UTF8", "testIO_356_B10_D10_S0_UTF16", "testIO_356_B10_D10_S0_UTF8", "testIO_356_B10_D13_S0_UTF8", "testIO_356_B10_D20_S0_UTF8", "testIO_356_Loop_UTF16", "testIO_356_Loop_UTF8", "testLargeBufferedRead_RequiredCharsets", "testLargeBufferedRead_UTF8" ],
        "org.apache.commons.io.input.CloseShieldInputStreamTest" : [ "testClose" ],
        "org.apache.commons.io.input.ClosedInputStreamTest" : [ "testRead" ],
        "org.apache.commons.io.input.CountingInputStreamTest" : [ "testCounting", "testEOF1", "testEOF2", "testEOF3", "testResetting", "testSkipping", "testZeroLength1", "testZeroLength2", "testZeroLength3" ],
        "org.apache.commons.io.input.InfiniteCircularInputStreamTest" : [ "should_cycle_bytes", "should_handle_whole_range_of_bytes" ],
        "org.apache.commons.io.input.MessageDigestCalculatingInputStreamTest" : [ "test" ],
        "org.apache.commons.io.input.NullInputStreamTest" : [ "testEOFException", "testMarkAndReset", "testMarkNotSupported", "testRead", "testReadByteArray", "testSkip" ],
        "org.apache.commons.io.input.NullReaderTest" : [ "testEOFException", "testMarkAndReset", "testMarkNotSupported", "testRead", "testReadCharArray", "testSkip" ],
        "org.apache.commons.io.input.ObservableInputStreamTest" : [ "testDataByteCalled", "testDataBytesCalled" ],
        "org.apache.commons.io.input.TailerTest" : [ "testBufferBreak", "testIO335", "testInterrupt", "testLongFile", "testMultiByteBreak", "testStopWithNoFile", "testStopWithNoFileUsingExecutor", "testTailer", "testTailerEndOfFileReached", "testTailerEof" ],
        "org.apache.commons.io.input.UnixLineEndingInputStreamTest" : [ "crAtEnd", "crOnlyEnsureAtEof", "crOnlyNotAtEof", "inTheMiddleOfTheLine", "multipleBlankLines", "retainLineFeed", "simpleString", "twoLinesAtEnd" ],
        "org.apache.commons.io.input.WindowsLineEndingInputStreamTest" : [ "inTheMiddleOfTheLine", "linuxLinefeeds", "malformed", "multipleBlankLines", "retainLineFeed", "simpleString", "twoLinesAtEnd" ],
        "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testEncodingAttributeXML", "testHttp", "testHttpContent", "testRawBomUtf16", "testRawBomUtf32", "testRawBomUtf8", "testRawContent", "testRawNoBomCp1047", "testRawNoBomIso8859_1", "testRawNoBomUsAscii", "testRawNoBomUtf16BE", "testRawNoBomUtf16LE", "testRawNoBomUtf32BE", "testRawNoBomUtf32LE", "testRawNoBomUtf8" ],
        "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testCalculateHttpEncoding", "testCalculateHttpEncodingUtf32", "testCalculateRawEncodingAdditonalUTF16", "testCalculateRawEncodingAdditonalUTF32", "testCalculateRawEncodingNoBOM", "testCalculateRawEncodingStandard", "testCalculateRawEncodingStandardUtf32" ],
        "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor", "testMonitor", "testThreadFactory" ],
        "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile", "testToString" ],
        "org.apache.commons.io.output.AppendableOutputStreamTest" : [ "testWriteInt", "testWriteStringBuilder" ],
        "org.apache.commons.io.output.BrokenOutputStreamTest" : [ "testClose", "testFlush", "testWrite" ],
        "org.apache.commons.io.output.ByteArrayOutputStreamTestCase" : [ "testStream", "testToInputStream", "testToInputStreamWithReset" ],
        "org.apache.commons.io.output.ChunkedOutputStreamTest" : [ "defaultConstructor", "negative_chunksize_not_permitted", "write_four_chunks" ],
        "org.apache.commons.io.output.ChunkedWriterTest" : [ "negative_chunksize_not_permitted", "write_four_chunks", "write_two_chunks_default_constructor" ],
        "org.apache.commons.io.output.CountingOutputStreamTest" : [ "testCounting" ],
        "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 1)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 1.024)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 128)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 16)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 2)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 2.048)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 256)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 32)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 4)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 4.096)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 512)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 64)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 8)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 1)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 1.024)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 128)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 16)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 2)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 2.048)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 256)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 32)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 4)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 4.096)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 512)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 64)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 8)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 1)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 1.024)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 128)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 16)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 2)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 2.048)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 256)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 32)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 4)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 4.096)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 512)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 64)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 8)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 1)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 1.024)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 128)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 16)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 2)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 2.048)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 256)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 32)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 4)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 4.096)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 512)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 64)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 8)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 1)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 1.024)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 128)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 16)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 2)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 2.048)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 256)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 32)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 4)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 4.096)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 512)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 64)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 8)" ],
        "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "constructor_File_directory", "constructor_File_encoding_badEncoding", "constructor_File_nullFile", "constructor_fileName_nullFile", "sameEncoding_CharsetEncoder_constructor", "sameEncoding_Charset_constructor", "sameEncoding_null_Charset_constructor", "sameEncoding_string_CharsetEncoder_constructor", "sameEncoding_string_Charset_constructor", "sameEncoding_string_constructor", "sameEncoding_string_string_constructor", "testDifferentEncoding" ],
        "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testConstructor_fileName_nullFile", "testFileLocked", "testFileNotLocked" ],
        "org.apache.commons.io.output.NullOutputStreamTest" : [ "testNull" ],
        "org.apache.commons.io.output.ProxyWriterTest" : [ "exceptions_in_append_char", "exceptions_in_append_charSequence", "exceptions_in_append_charSequence_offset", "exceptions_in_close", "exceptions_in_flush", "exceptions_in_write_char_array", "exceptions_in_write_int", "exceptions_in_write_offset_char_array", "exceptions_in_write_string", "exceptions_in_write_string_offset" ],
        "org.apache.commons.io.output.StringBuilderWriterTest" : [ "testAppendChar", "testAppendCharSequence", "testAppendCharSequencePortion", "testAppendConstructCapacity", "testAppendConstructNull", "testAppendConstructStringBuilder", "testClose", "testWriteChar", "testWriteCharArray", "testWriteCharArrayPortion", "testWriteString", "testWriteStringPortion" ],
        "org.apache.commons.io.output.TeeOutputStreamTest" : [ "testCloseBranchIOException", "testCloseMainIOException", "testTee" ],
        "org.apache.commons.io.output.ThresholdingOutputStreamTest" : [ "testSetByteCount" ],
        "org.apache.commons.io.output.WriterOutputStreamTest" : [ "testFlush", "testLargeUTF8WithBufferedWrite", "testLargeUTF8WithSingleByteWrite", "testUTF16BEWithBufferedWrite", "testUTF16BEWithSingleByteWrite", "testUTF16LEWithBufferedWrite", "testUTF16LEWithSingleByteWrite", "testUTF16WithBufferedWrite", "testUTF16WithSingleByteWrite", "testUTF8WithBufferedWrite", "testUTF8WithSingleByteWrite", "testWriteImmediately" ],
        "org.apache.commons.io.output.XmlStreamWriterTest" : [ "testDefaultEncoding", "testEBCDICEncoding", "testEUC_JPEncoding", "testEmpty", "testLatin15Encoding", "testLatin1Encoding", "testLatin7Encoding", "testNoXmlHeader", "testUTF16BEEncoding", "testUTF16Encoding", "testUTF16LEEncoding", "testUTF8Encoding" ],
        "org.apache.commons.io.serialization.FullClassNameMatcherTest" : [ "noNames", "withNames" ],
        "org.apache.commons.io.serialization.MoreComplexObjectTest" : [ "trustJavaIncludingArrays", "trustJavaLang", "useBlacklist" ],
        "org.apache.commons.io.serialization.RegexpClassNameMatcherTest" : [ "testNullPatternPattern", "testOrPattern", "testSimplePatternFromPattern", "testSimplePatternFromString" ],
        "org.apache.commons.io.serialization.ValidatingObjectInputStreamTest" : [ "acceptCustomMatcher", "acceptPattern", "acceptWildcard", "customInvalidMethod", "exceptionIncludesClassName", "noAccept", "ourTestClassAcceptedFirst", "ourTestClassAcceptedFirstWildcard", "ourTestClassAcceptedSecond", "ourTestClassAcceptedSecondWildcard", "ourTestClassNotAccepted", "ourTestClassOnlyAccepted", "reject", "rejectCustomMatcher", "rejectOnly", "rejectPattern", "rejectPrecedence", "rejectWildcard" ],
        "org.apache.commons.io.serialization.WildcardClassNameMatcherTest" : [ "noPattern", "star", "starAndQuestionMark" ]
      },
      "predecessor" : "9543f75f4601278abcfd0a16cfea977399b89052"
    },
    "a246ac809581b422fd18b4de086ebf120dd6ae8f" : { },
    "84a5fcfb48254e1e97a3fc22d30830387476f79c" : { },
    "78fc6c76d47aebb97ca625eb8f3f71be9176111d" : { },
    "651ad03ac546303af3ecb884af7f005d7b1598a4" : { },
    "2ae025fe5c4a7d2046c53072b0898e37a079fe62" : { },
    "14a80bc4daa3f6f2d63dbc36ffc0b3e526febe69" : { },
    "fdcc71dcd26491cecf22b369e2d580968f4515ab" : { },
    "d8e8908db227ec91608b386a65b5f8559d92d8c9" : {
      "testcases" : {
        "org.apache.commons.io.FileUtilsTestCase" : [ "testSizeOfDirectoryAsBigInteger" ],
        "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor", "testThreadFactory" ],
        "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testFileCreate", "testFileDelete", "testFileUpdate" ]
      },
      "predecessor" : "fdcc71dcd26491cecf22b369e2d580968f4515ab"
    },
    "06033035f09c662020ffe0300983697c78d3039a" : {
      "testcases" : {
        "org.apache.commons.io.FileUtilsTestCase" : [ "testSizeOfDirectoryAsBigInteger" ],
        "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor", "testThreadFactory" ],
        "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testFileCreate", "testFileDelete", "testFileUpdate" ]
      },
      "predecessor" : "d8e8908db227ec91608b386a65b5f8559d92d8c9"
    },
    "2196ff68d3f53213f3d07e38928805920089a03b" : { },
    "65657b874c03a1b6fee23653b01a9baad6a518e8" : { },
    "5e2ace28efe0476feb6a32794fe6b5e90e71eb7e" : { },
    "6e2ac190ce379fb19acb8b5cf06c0a1b25d19059" : {
      "testcases" : {
        "org.apache.commons.io.FileUtilsTestCase" : [ "testSizeOfDirectoryAsBigInteger" ],
        "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor", "testThreadFactory" ],
        "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testFileCreate", "testFileDelete", "testFileUpdate" ]
      },
      "predecessor" : "5e2ace28efe0476feb6a32794fe6b5e90e71eb7e"
    },
    "b014a06d5b333a6fa30fbfde065d95bc0374d4a9" : { },
    "dcf6e82f8610b89075e00711e186792053928c7e" : {
      "testcases" : {
        "org.apache.commons.io.FileSystemTestCase" : [ "testToLegalFileNameWindows" ]
      },
      "predecessor" : "b014a06d5b333a6fa30fbfde065d95bc0374d4a9"
    },
    "84a0d90783b095775b5d14b2a807497862d80db5" : {
      "predecessor" : "dcf6e82f8610b89075e00711e186792053928c7e"
    },
    "10c8db1b1ae0fd9be8b661dbf24643c0a9012d68" : {
      "testcases" : {
        "org.apache.commons.io.FileSystemTestCase" : [ "testToLegalFileNameWindows" ]
      },
      "predecessor" : "84a0d90783b095775b5d14b2a807497862d80db5"
    },
    "2bacf63927effbe494ea8888191b950037d4606f" : { },
    "4f50c37506de036bb34094095aaa6d4d831bfbb7" : {
      "testcases" : {
        "org.apache.commons.io.FileSystemTestCase" : [ "testIsLegalName", "testReplacementWithNUL", "testSorted", "testToLegalFileNameWindows" ]
      },
      "predecessor" : "2bacf63927effbe494ea8888191b950037d4606f"
    },
    "38b0ff19101496d89345213866e0940eb682a8bf" : { },
    "30280a9ba706b330cbf6b18e6f2f6660743c0f16" : {
      "predecessor" : "38b0ff19101496d89345213866e0940eb682a8bf"
    },
    "9cd31226588fa303886b9daac162d5aa753e8e15" : {
      "testcases" : {
        "org.apache.commons.io.FileSystemTestCase" : [ "testIsLegalName", "testIsReservedFileName" ]
      },
      "predecessor" : "30280a9ba706b330cbf6b18e6f2f6660743c0f16"
    },
    "c1b64e9d70875339f0f76bcc295cc0a735c1d4f3" : { },
    "65c4a9c0ec651dd99f28b9fae40378728d071985" : { },
    "f42a7b9cba328a538df1152cffcee70ea2501841" : { },
    "9310cd69b9b79add598b02b0b19066ec90bde64b" : { },
    "86cc77e21e15d1750d051598296c081809d15652" : {
      "testcases" : {
        "org.apache.commons.io.FileSystemTestCase" : [ "testIsLegalName", "testIsReservedFileName", "testReplacementWithNUL", "testSorted", "testToLegalFileNameWindows" ]
      },
      "predecessor" : "9310cd69b9b79add598b02b0b19066ec90bde64b"
    },
    "d3fc1a2877c165a57949414f5737ef00ffcd867d" : {
      "testcases" : {
        "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilter", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4", "testFilterString" ],
        "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testFilter", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ],
        "org.apache.commons.io.FileSystemTestCase" : [ "testIsLegalName", "testIsReservedFileName", "testReplacementWithNUL", "testSorted", "testToLegalFileNameWindows" ],
        "org.apache.commons.io.FileUtilsDirectoryContainsTestCase" : [ "testCanonicalPath", "testDirectoryContainsDirectory", "testDirectoryContainsFile", "testDirectoryDoesNotContainFile", "testDirectoryDoesNotContainsDirectory" ],
        "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension", "testListFiles", "testListFilesByExtension" ],
        "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered", "testIterateFiles", "testIterateFilesAndDirs", "testListFiles", "testListFilesWithDirs" ],
        "org.apache.commons.io.FilenameUtilsWildcardTestCase" : [ "testLocaleIndependence", "testMatch", "testMatch2", "testMatchCaseSpecified", "testMatchOnSystem", "test_IO_246" ],
        "org.apache.commons.io.IOCaseTestCase" : [ "test_checkCompare_case", "test_checkCompare_functionality", "test_checkEndsWith_case", "test_checkEndsWith_functionality", "test_checkEquals_case", "test_checkEquals_functionality", "test_checkIndexOf_case", "test_checkIndexOf_functionality", "test_checkRegionMatches_case", "test_checkRegionMatches_functionality", "test_checkStartsWith_case", "test_checkStartsWith_functionality", "test_forName", "test_getName", "test_isCaseSensitive", "test_serialization", "test_toString" ],
        "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "constructorArray_Null", "constructorIterable_Null", "constructorIterable_order" ],
        "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : [ "testCaseSensitivity" ],
        "org.apache.commons.io.comparator.NameFileComparatorTest" : [ "testCaseSensitivity" ],
        "org.apache.commons.io.comparator.PathFileComparatorTest" : [ "testCaseSensitivity" ],
        "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testDelegation", "testDeprecatedWildcard", "testEnsureTestCoverage", "testFalse", "testFileFilterUtils_and", "testFileFilterUtils_or", "testFilterArray", "testFilterArrayNullParameters", "testFilterArray_fromList", "testFilterList", "testFilterListNullParameters", "testFilterList_fromArray", "testFilterSet", "testFilterSetNullParameters", "testFilterSet_fromArray", "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset", "testMakeDirectoryOnly", "testMakeFileOnly", "testNameFilter", "testNameFilterNullArgument", "testNot", "testNullFilters", "testPrefix", "testPrefixCaseInsensitive", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testTrue", "testWildcard" ],
        "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ],
        "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor", "testMonitor", "testThreadFactory" ],
        "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile", "testToString" ],
        "org.apache.commons.io.serialization.MoreComplexObjectTest" : [ "trustJavaIncludingArrays", "trustJavaLang", "useBlacklist" ],
        "org.apache.commons.io.serialization.ValidatingObjectInputStreamTest" : [ "acceptWildcard", "ourTestClassAcceptedFirstWildcard", "ourTestClassAcceptedSecondWildcard", "rejectWildcard" ],
        "org.apache.commons.io.serialization.WildcardClassNameMatcherTest" : [ "noPattern", "star", "starAndQuestionMark" ]
      },
      "predecessor" : "86cc77e21e15d1750d051598296c081809d15652"
    },
    "d19259a7774e23ebdaac4af5ee4def8602fe2969" : {
      "testcases" : {
        "org.apache.commons.io.ByteOrderMarkTestCase" : [ "testToString" ],
        "org.apache.commons.io.input.BOMInputStreamTest" : [ "testReadWithBOMUtf16Be", "testReadWithBOMUtf16Le", "testReadWithBOMUtf32Be", "testReadWithBOMUtf32Le", "testReadWithBOMUtf8", "testReadXmlWithBOMUtf32Be", "testReadXmlWithBOMUtf32Le" ],
        "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testEncodingAttributeXML", "testHttp", "testHttpContent", "testRawBomUtf16", "testRawBomUtf32", "testRawBomUtf8", "testRawContent", "testRawNoBomCp1047", "testRawNoBomIso8859_1", "testRawNoBomUsAscii", "testRawNoBomUtf16BE", "testRawNoBomUtf16LE", "testRawNoBomUtf32BE", "testRawNoBomUtf32LE", "testRawNoBomUtf8" ],
        "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testAppXml", "testCalculateHttpEncoding", "testCalculateHttpEncodingUtf32", "testCalculateRawEncodingAdditonalUTF16", "testCalculateRawEncodingAdditonalUTF32", "testCalculateRawEncodingNoBOM", "testCalculateRawEncodingStandard", "testCalculateRawEncodingStandardUtf32", "testContentTypeEncoding", "testContentTypeMime", "testTextXml" ],
        "org.apache.commons.io.output.XmlStreamWriterTest" : [ "testDefaultEncoding", "testEBCDICEncoding", "testEUC_JPEncoding", "testEmpty", "testLatin15Encoding", "testLatin1Encoding", "testLatin7Encoding", "testNoXmlHeader", "testUTF16BEEncoding", "testUTF16Encoding", "testUTF16LEEncoding", "testUTF8Encoding" ]
      },
      "predecessor" : "d3fc1a2877c165a57949414f5737ef00ffcd867d"
    },
    "ed15b09985a073d0b17769bb9a28d3e41419a43b" : {
      "testcases" : {
        "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testEncodingAttributeXML", "testHttp", "testHttpContent", "testRawBomUtf16", "testRawBomUtf32", "testRawBomUtf8", "testRawContent", "testRawNoBomCp1047", "testRawNoBomIso8859_1", "testRawNoBomUsAscii", "testRawNoBomUtf16BE", "testRawNoBomUtf16LE", "testRawNoBomUtf32BE", "testRawNoBomUtf32LE", "testRawNoBomUtf8" ],
        "org.apache.commons.io.output.XmlStreamWriterTest" : [ "testDefaultEncoding", "testEBCDICEncoding", "testEUC_JPEncoding", "testEmpty", "testLatin15Encoding", "testLatin1Encoding", "testLatin7Encoding", "testNoXmlHeader", "testUTF16BEEncoding", "testUTF16Encoding", "testUTF16LEEncoding", "testUTF8Encoding" ]
      },
      "predecessor" : "d19259a7774e23ebdaac4af5ee4def8602fe2969"
    },
    "459cebc515b11fef06464b711b3b33cbc1dd8c26" : { },
    "947c01f6d8000122a174da3d668208eec877a799" : {
      "testcases" : {
        "org.apache.commons.io.FileUtilsTestCase" : [ "testSizeOfDirectoryAsBigInteger" ],
        "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "constructorIterable_order" ],
        "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : [ "testCaseSensitivity" ],
        "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor", "testThreadFactory" ],
        "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testFileCreate", "testFileDelete", "testFileUpdate" ]
      },
      "predecessor" : "459cebc515b11fef06464b711b3b33cbc1dd8c26"
    },
    "748eef8b96068cadc45894967f58f015860afb1b" : {
      "testcases" : {
        "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "constructorIterable_order" ],
        "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : [ "testCaseSensitivity" ]
      },
      "predecessor" : "947c01f6d8000122a174da3d668208eec877a799"
    },
    "cfb682e9da63f308d26e547bb7d0b350ef3eda42" : { },
    "27fb1044f1f244a9f8841f059392bd7e595797a3" : { },
    "467386105ad855e793a09632142c00cd01c5dd10" : {
      "testcases" : {
        "org.apache.commons.io.input.TailerTest" : [ "testBufferBreak", "testIO335", "testInterrupt", "testLongFile", "testMultiByteBreak", "testStopWithNoFile", "testStopWithNoFileUsingExecutor", "testTailer", "testTailerEndOfFileReached", "testTailerEof" ]
      },
      "predecessor" : "27fb1044f1f244a9f8841f059392bd7e595797a3"
    },
    "9e405ca54138b63a4daff58d14d0527fef1e8e66" : {
      "testcases" : {
        "org.apache.commons.io.input.TailerTest" : [ "testBufferBreak", "testIO335", "testInterrupt", "testLongFile", "testMultiByteBreak", "testStopWithNoFile", "testStopWithNoFileUsingExecutor", "testTailer", "testTailerEndOfFileReached", "testTailerEof" ]
      },
      "predecessor" : "467386105ad855e793a09632142c00cd01c5dd10"
    },
    "a653a4487774f57a7aff2c9dc1fe40b9b221cb6b" : { },
    "0f98e790a43b17ae1bb60d264931fb4f13300762" : {
      "testcases" : {
        "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpaceWindows_String_quoted" ],
        "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "constructorIterable_order" ],
        "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : [ "testCaseSensitivity" ]
      },
      "predecessor" : "a653a4487774f57a7aff2c9dc1fe40b9b221cb6b"
    },
    "8f957f527b9048f51aad91b544bed35c48bcf3a9" : {
      "predecessor" : "0f98e790a43b17ae1bb60d264931fb4f13300762"
    },
    "f03149e07dee90b23369d1cdb7f15c142df5e31d" : {
      "testcases" : {
        "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpaceWindows_String_quoted" ],
        "org.apache.commons.io.FileUtilsTestCase" : [ "testSizeOfDirectoryAsBigInteger" ],
        "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "constructorIterable_order" ],
        "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : [ "testCaseSensitivity" ],
        "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor", "testThreadFactory" ],
        "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testFileCreate", "testFileDelete", "testFileUpdate" ]
      },
      "predecessor" : "8f957f527b9048f51aad91b544bed35c48bcf3a9"
    },
    "8993c0060e4eb2d5bca20e3529a829a9dd90efdf" : {
      "testcases" : {
        "org.apache.commons.io.DemuxTestCase" : [ "testInputStream" ],
        "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles" ],
        "org.apache.commons.io.FileUtilsTestCase" : [ "testCompareSizeOf", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testSizeOf", "testSizeOfAsBigInteger", "testSizeOfDirectoryAsBigInteger", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFile5", "testToFileUtf8", "testToFiles1", "testToFiles2", "testToFiles4" ],
        "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes" ],
        "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testDelegateFileFilter", "testEmpty" ],
        "org.apache.commons.io.input.BOMInputStreamTest" : [ "testReadXmlWithBOMUtf32Be", "testReadXmlWithBOMUtf32Le" ],
        "org.apache.commons.io.input.CharSequenceReaderTest" : [ "testClose", "testMark", "testRead", "testReadCharArray", "testReadCharArrayPortion", "testSkip" ],
        "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize" : [ "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=256)", "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=1)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=256)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=3)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=8)", "testGBK(JUNIT_PARAMETERIZED-BlockSize=1)", "testGBK(JUNIT_PARAMETERIZED-BlockSize=3)", "testGBK(JUNIT_PARAMETERIZED-BlockSize=8)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=1)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=256)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=3)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=8)", "testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=1)", "testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=3)", "testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=8)", "testShiftJISFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testShiftJISFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testShiftJISFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=8)", "testWindows31jFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testWindows31jFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testWindows31jFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testxWindows949File(JUNIT_PARAMETERIZED-BlockSize=1)", "testxWindows949File(JUNIT_PARAMETERIZED-BlockSize=3)", "testxWindows949File(JUNIT_PARAMETERIZED-BlockSize=8)", "testxWindows950File(JUNIT_PARAMETERIZED-BlockSize=1)", "testxWindows950File(JUNIT_PARAMETERIZED-BlockSize=3)", "testxWindows950File(JUNIT_PARAMETERIZED-BlockSize=8)" ],
        "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile" : [ "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-20byteslength.bin, charset=ISO_8859_1)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-gbk.bin, charset=gbk)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-iso8859-1-shortlines-win-linebr.bin, charset=ISO_8859_1)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-iso8859-1.bin, charset=ISO_8859_1)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-shiftjis.bin, charset=Shift_JIS)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf16be.bin, charset=UTF-16BE)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf16le.bin, charset=UTF-16LE)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf8-cr-only.bin, charset=UTF-8)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf8-win-linebr.bin, charset=UTF-8)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf8.bin, charset=UTF-8)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-windows-31j.bin, charset=windows-31j)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-x-windows-949.bin, charset=x-windows-949)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-x-windows-950.bin, charset=x-windows-950)" ],
        "org.apache.commons.io.input.ReversedLinesFileReaderTestSimple" : [ "testFileSizeIsExactMultipleOfBlockSize" ],
        "org.apache.commons.io.input.UnixLineEndingInputStreamTest" : [ "crAtEnd", "crOnlyEnsureAtEof", "crOnlyNotAtEof", "inTheMiddleOfTheLine", "multipleBlankLines", "retainLineFeed", "simpleString", "twoLinesAtEnd" ],
        "org.apache.commons.io.input.WindowsLineEndingInputStreamTest" : [ "inTheMiddleOfTheLine", "linuxLinefeeds", "malformed", "multipleBlankLines", "retainLineFeed", "simpleString", "twoLinesAtEnd" ],
        "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testEncodingAttributeXML", "testHttp", "testHttpContent", "testLowerCaseEncodingWithTurkishLocale_IO_557", "testRawBomUtf16", "testRawBomUtf32", "testRawBomUtf8", "testRawContent", "testRawNoBomCp1047", "testRawNoBomIso8859_1", "testRawNoBomUsAscii", "testRawNoBomUtf16BE", "testRawNoBomUtf16LE", "testRawNoBomUtf32BE", "testRawNoBomUtf32LE", "testRawNoBomUtf8" ],
        "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testCalculateHttpEncoding", "testCalculateHttpEncodingUtf32", "testCalculateRawEncodingAdditonalUTF16", "testCalculateRawEncodingAdditonalUTF32", "testCalculateRawEncodingNoBOM", "testCalculateRawEncodingStandard", "testCalculateRawEncodingStandardUtf32" ]
      },
      "predecessor" : "f03149e07dee90b23369d1cdb7f15c142df5e31d"
    },
    "48f7e179e4c5f4e59afdf0bfb4ec5228692e00ec" : {
      "testcases" : {
        "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testFileCreate", "testFileDelete", "testFileUpdate" ]
      },
      "predecessor" : "8993c0060e4eb2d5bca20e3529a829a9dd90efdf"
    },
    "c329443d7d50b4d891bc8229988b838642a132cf" : { },
    "91a94d9f47b2bc928eaaf83d7c9dd06c235a2824" : {
      "testcases" : {
        "org.apache.commons.io.output.WriterOutputStreamTest" : [ "testFlush", "testLargeUTF8WithBufferedWrite", "testLargeUTF8WithSingleByteWrite", "testUTF16BEWithBufferedWrite", "testUTF16BEWithSingleByteWrite", "testUTF16LEWithBufferedWrite", "testUTF16LEWithSingleByteWrite", "testUTF16WithBufferedWrite", "testUTF16WithSingleByteWrite", "testUTF8WithBufferedWrite", "testUTF8WithSingleByteWrite", "testWriteImmediately" ]
      },
      "predecessor" : "c329443d7d50b4d891bc8229988b838642a132cf"
    },
    "68a73b54d6fd08ea2951ea1911e035a2390119bc" : {
      "testcases" : {
        "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor", "testThreadFactory" ],
        "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testFileCreate", "testFileDelete", "testFileUpdate" ]
      },
      "predecessor" : "91a94d9f47b2bc928eaaf83d7c9dd06c235a2824"
    },
    "b498cda5bc8d834ab311a6a3415e990100d8a81a" : {
      "testcases" : {
        "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile" : [ "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf8-win-linebr.bin, charset=UTF-8)" ]
      },
      "predecessor" : "68a73b54d6fd08ea2951ea1911e035a2390119bc"
    },
    "276b2825778c0f6286ead1dac0dfe5fca307e77a" : {
      "testcases" : {
        "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize" : [ "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=256)", "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=1)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=256)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=3)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=8)", "testGBK(JUNIT_PARAMETERIZED-BlockSize=1)", "testGBK(JUNIT_PARAMETERIZED-BlockSize=256)", "testGBK(JUNIT_PARAMETERIZED-BlockSize=3)", "testGBK(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testGBK(JUNIT_PARAMETERIZED-BlockSize=8)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=1)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=256)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=3)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=8)", "testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=1)", "testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=256)", "testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=3)", "testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=8)", "testShiftJISFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testShiftJISFile(JUNIT_PARAMETERIZED-BlockSize=256)", "testShiftJISFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testShiftJISFile(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testShiftJISFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=8)", "testWindows31jFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testWindows31jFile(JUNIT_PARAMETERIZED-BlockSize=256)", "testWindows31jFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testWindows31jFile(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testWindows31jFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testxWindows949File(JUNIT_PARAMETERIZED-BlockSize=1)", "testxWindows949File(JUNIT_PARAMETERIZED-BlockSize=256)", "testxWindows949File(JUNIT_PARAMETERIZED-BlockSize=3)", "testxWindows949File(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testxWindows949File(JUNIT_PARAMETERIZED-BlockSize=8)", "testxWindows950File(JUNIT_PARAMETERIZED-BlockSize=1)", "testxWindows950File(JUNIT_PARAMETERIZED-BlockSize=256)", "testxWindows950File(JUNIT_PARAMETERIZED-BlockSize=3)", "testxWindows950File(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testxWindows950File(JUNIT_PARAMETERIZED-BlockSize=8)" ],
        "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile" : [ "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-20byteslength.bin, charset=ISO_8859_1)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-gbk.bin, charset=gbk)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-iso8859-1-shortlines-win-linebr.bin, charset=ISO_8859_1)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-iso8859-1.bin, charset=ISO_8859_1)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-shiftjis.bin, charset=Shift_JIS)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf16be.bin, charset=UTF-16BE)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf16le.bin, charset=UTF-16LE)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf8-cr-only.bin, charset=UTF-8)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf8-win-linebr.bin, charset=UTF-8)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf8.bin, charset=UTF-8)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-windows-31j.bin, charset=windows-31j)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-x-windows-949.bin, charset=x-windows-949)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-x-windows-950.bin, charset=x-windows-950)" ],
        "org.apache.commons.io.input.ReversedLinesFileReaderTestSimple" : [ "testFileSizeIsExactMultipleOfBlockSize" ]
      },
      "predecessor" : "b498cda5bc8d834ab311a6a3415e990100d8a81a"
    },
    "90b2e46494eea8461523c55fd9cf3fe3d1bf00ce" : { },
    "9cd45f468cbb87eba7b667172d6c6a21ad914872" : { },
    "e4e03ef4c091f5a35da0d97a6a35224197b8be02" : {
      "testcases" : {
        "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpaceWindows_String_quoted" ],
        "org.apache.commons.io.FilenameUtilsWildcardTestCase" : [ "testMatch", "testMatch2", "testMatchOnSystem", "test_IO_246" ],
        "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "constructorIterable_order" ],
        "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : [ "testCaseSensitivity" ],
        "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testDeprecatedWildcard" ],
        "org.apache.commons.io.serialization.MoreComplexObjectTest" : [ "trustJavaIncludingArrays", "trustJavaLang", "useBlacklist" ],
        "org.apache.commons.io.serialization.ValidatingObjectInputStreamTest" : [ "acceptWildcard", "ourTestClassAcceptedFirstWildcard", "ourTestClassAcceptedSecondWildcard", "rejectWildcard" ],
        "org.apache.commons.io.serialization.WildcardClassNameMatcherTest" : [ "noPattern", "star", "starAndQuestionMark" ]
      },
      "predecessor" : "9cd45f468cbb87eba7b667172d6c6a21ad914872"
    },
    "d24dd1a3abc4624be55c0772ae4432686ee18792" : {
      "predecessor" : "e4e03ef4c091f5a35da0d97a6a35224197b8be02"
    },
    "71fc2c4c817a8c9bb41650d5b27a89e207a68c39" : {
      "testcases" : {
        "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFilesAndDirs", "testListFilesWithDirs" ]
      },
      "predecessor" : "d24dd1a3abc4624be55c0772ae4432686ee18792"
    },
    "f0751b65cf680456557aa1bf5c56b12f5c1a0fe0" : {
      "testcases" : {
        "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension", "testListFiles", "testListFilesByExtension" ],
        "org.apache.commons.io.FileUtilsTestCase" : [ "testIO300", "testIterateFiles", "testIterateFilesAndDirs", "testListFiles", "testListFilesWithDirs", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testSizeOfDirectory", "testSizeOfDirectoryAsBigInteger" ],
        "org.apache.commons.io.input.TailerTest" : [ "testBufferBreak", "testIO335", "testLongFile", "testMultiByteBreak" ],
        "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor", "testThreadFactory" ],
        "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testFileCreate", "testFileDelete", "testFileUpdate" ]
      },
      "predecessor" : "71fc2c4c817a8c9bb41650d5b27a89e207a68c39"
    },
    "d08dbbfdbc41cfafa122abf06d39ed543b473464" : {
      "testcases" : {
        "org.apache.commons.io.FileSystemTestCase" : [ "testIsLegalName", "testIsReservedFileName", "testReplacementWithNUL", "testSorted", "testToLegalFileNameWindows" ]
      },
      "predecessor" : "f0751b65cf680456557aa1bf5c56b12f5c1a0fe0"
    },
    "e9eb2d8b5a858bb6810c941ee7891c3adcf9949d" : { },
    "a4705cc3c310ffb422336b319891f63eef021f1c" : {
      "testcases" : {
        "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor", "testThreadFactory" ]
      },
      "predecessor" : "e9eb2d8b5a858bb6810c941ee7891c3adcf9949d"
    },
    "8bb1788ae75318bd5cca0c64893f616c82402399" : { },
    "98f8e1a4334084c900bec1f62bdfe190dce8d5df" : { },
    "bc10af423f2eaef8cfffe1c3ff06956afa3dd371" : { },
    "7791a851c4a303f47743b156007fb19c6ed8ed81" : {
      "predecessor" : "bc10af423f2eaef8cfffe1c3ff06956afa3dd371"
    },
    "2736b6fe0b3fa22ec8e2b4184897ecadb021fc78" : {
      "testcases" : {
        "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpaceWindows_String_quoted" ],
        "org.apache.commons.io.FileUtilsTestCase" : [ "testSizeOfDirectory", "testSizeOfDirectoryAsBigInteger" ],
        "org.apache.commons.io.FilenameUtilsWildcardTestCase" : [ "testLocaleIndependence", "testMatchCaseSpecified" ],
        "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testWildcard" ],
        "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor", "testThreadFactory" ],
        "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testFileCreate", "testFileDelete", "testFileUpdate" ]
      },
      "predecessor" : "7791a851c4a303f47743b156007fb19c6ed8ed81"
    },
    "71639e041876e4dca28785ac3e61d80ecc33db44" : { },
    "e996235aeb7908c74e85fdcdf1369a5e46672169" : {
      "predecessor" : "71639e041876e4dca28785ac3e61d80ecc33db44"
    },
    "0aeeb46737c5e4a5d8c21c26e6793956b0296cda" : {
      "predecessor" : "e996235aeb7908c74e85fdcdf1369a5e46672169"
    },
    "fe38f8892a2e99cfb6b941c48a57e1415d7ab223" : {
      "predecessor" : "0aeeb46737c5e4a5d8c21c26e6793956b0296cda"
    },
    "81694016b4ba3d20767a2de9808fcc358477ddc8" : { },
    "9e801d916c3d163a4cfcc822e50dd75ac7cefcc5" : {
      "testcases" : {
        "org.apache.commons.io.output.TeeOutputStreamTest" : [ "testTee" ]
      },
      "predecessor" : "81694016b4ba3d20767a2de9808fcc358477ddc8"
    },
    "ef0fb794d49e9184913581f561c87ba8c62d5e4e" : {
      "testcases" : {
        "org.apache.commons.io.FileSystemTestCase" : [ "testIsLegalName", "testIsReservedFileName", "testReplacementWithNUL", "testSorted", "testToLegalFileNameWindows" ]
      },
      "predecessor" : "9e801d916c3d163a4cfcc822e50dd75ac7cefcc5"
    },
    "e5f5eac9e65620e4697b922e0f49b7bbdb90695e" : {
      "predecessor" : "ef0fb794d49e9184913581f561c87ba8c62d5e4e"
    },
    "0298305934801cf65136ce20c59dd133d8ee4d17" : {
      "testcases" : {
        "org.apache.commons.io.FileUtilsTestCase" : [ "testSizeOfDirectoryAsBigInteger" ],
        "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor", "testThreadFactory" ],
        "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testFileCreate", "testFileDelete", "testFileUpdate" ]
      },
      "predecessor" : "e5f5eac9e65620e4697b922e0f49b7bbdb90695e"
    },
    "9ba69d7b9af1ab71e0ca2d0044f464261ae6a199" : {
      "predecessor" : "0298305934801cf65136ce20c59dd133d8ee4d17"
    },
    "6aeb140ebd5fb087a881cfadde2b00c2c987ab92" : { },
    "0775abc22a32baa8fbd99d86c393d5d85e32529e" : { },
    "04ab6d94e77c09a097aaf87b56d3fbebe31ebe51" : { },
    "4597f38c3608cfe8ef872144ed4bfe393a05dc84" : { },
    "c6b8a383de96cd0a8e94037a04510f162e4bbc68" : {
      "predecessor" : "4597f38c3608cfe8ef872144ed4bfe393a05dc84"
    },
    "23cc15832cdb86f856cf656b3bc2720258b8849c" : { },
    "44c5c5618d924a06fb9adae7856f31e75228d987" : {
      "testcases" : {
        "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpaceWindows_String_quoted" ],
        "org.apache.commons.io.FileUtilsCopyToFileTestCase" : [ "testCopyInputStreamToFile", "testCopyToFile" ],
        "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension", "testListFiles", "testListFilesByExtension" ],
        "org.apache.commons.io.FileUtilsTestCase" : [ "testCompareSizeOf", "testContentEquals", "testCopyURLToFile", "testCopyURLToFileWithTimeout", "testIterateFiles", "testIterateFilesAndDirs", "testListFiles", "testListFilesWithDirs", "testSizeOfDirectoryAsBigInteger" ],
        "org.apache.commons.io.input.TailerTest" : [ "testBufferBreak", "testLongFile", "testMultiByteBreak" ],
        "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor", "testStopWhileWaitingForNextInterval", "testThreadFactory" ],
        "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testFileCreate", "testFileDelete", "testFileUpdate" ]
      },
      "predecessor" : "23cc15832cdb86f856cf656b3bc2720258b8849c"
    },
    "c97e637951ba8bedf74725a62644d7578ce1aaa6" : { },
    "41059e4a4827e882b7c77667ff62c9b0567e5e21" : { },
    "078af456fd74c3726438bfe853492286d7006c06" : { },
    "7b813b674adc6c94a6c9a19524913c07b7d8bc9c" : {
      "testcases" : {
        "org.apache.commons.io.input.MessageDigestCalculatingInputStreamTest" : [ "test" ],
        "org.apache.commons.io.input.ObservableInputStreamTest" : [ "testDataByteCalled", "testDataBytesCalled" ]
      },
      "predecessor" : "078af456fd74c3726438bfe853492286d7006c06"
    },
    "559de2c461e94ab636c959149c775bb27111fb48" : {
      "predecessor" : "7b813b674adc6c94a6c9a19524913c07b7d8bc9c"
    },
    "58b0f795b31482daa6bb5473a8b2c398e029f5fb" : { },
    "cc1a99482b14b38bd2ab2319f0b1096c0db225ff" : {
      "predecessor" : "58b0f795b31482daa6bb5473a8b2c398e029f5fb"
    },
    "1f925d7ad6d9da7ec75ba29e8668dd3267f104c1" : { },
    "16c983693a235bdc45c6286a1e7b01d8ef58907e" : {
      "testcases" : {
        "org.apache.commons.io.FileUtilsTestCase" : [ "testContentEqualsIgnoreEOL" ],
        "org.apache.commons.io.IOUtilsTestCase" : [ "testResourceToByteArray_ExistingResourceAtRootPackage", "testResourceToByteArray_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToByteArray_ExistingResourceAtSubPackage", "testResourceToByteArray_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToString_ExistingResourceAtRootPackage", "testResourceToString_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToString_ExistingResourceAtSubPackage", "testResourceToString_ExistingResourceAtSubPackage_WithClassLoader" ]
      },
      "predecessor" : "1f925d7ad6d9da7ec75ba29e8668dd3267f104c1"
    },
    "769842a214286accf02cc40711e1a5e2f97da504" : { },
    "3ad22fe3d689781a76a92908d0bbc119b2c68892" : {
      "predecessor" : "769842a214286accf02cc40711e1a5e2f97da504"
    },
    "b487c9e8bc8410c7c0ca94f9494bcff90613946a" : { },
    "a265435033b6df7f204c58776e0fc8be997ac54a" : { },
    "b3f320fe5a91eeb42b330621c19e1c8046658ea7" : { },
    "5392c441786322b6358b42bab0f0bc7018e06aad" : {
      "testcases" : {
        "org.apache.commons.io.FileUtilsTestCase" : [ "testSizeOfDirectoryAsBigInteger" ],
        "org.apache.commons.io.input.TailerTest" : [ "testBufferBreak", "testLongFile" ]
      },
      "predecessor" : "b3f320fe5a91eeb42b330621c19e1c8046658ea7"
    },
    "d403c703ab8b8c015febdb887e9756caf67eb8b9" : {
      "testcases" : {
        "org.apache.commons.io.input.TailerTest" : [ "testBufferBreak", "testLongFile" ]
      },
      "predecessor" : "5392c441786322b6358b42bab0f0bc7018e06aad"
    },
    "b5990be69139f0b04919bc097144a105051aafcc" : {
      "testcases" : {
        "org.apache.commons.io.FileUtilsTestCase" : [ "testSizeOfDirectoryAsBigInteger" ],
        "org.apache.commons.io.input.TailerTest" : [ "testBufferBreak", "testLongFile" ]
      },
      "predecessor" : "d403c703ab8b8c015febdb887e9756caf67eb8b9"
    },
    "30f81c47f7ea0e9f743e08e73f48c0cfcfb746ff" : { },
    "f15433d69c96aec08c9a0c3c15a69edd8250ae2b" : {
      "predecessor" : "30f81c47f7ea0e9f743e08e73f48c0cfcfb746ff"
    },
    "7c05b02f646f03b247997be522568bbaee78d591" : { },
    "66fba1cb89dadd60c6901e0914e74b8c155dfa64" : { },
    "19cd138d25fb461dc57125589a026ca0fa8f7805" : { },
    "3e9210998975472eedcb87935a10906d6098f777" : { },
    "94aaf0649da33ad07a35c4dab29363227febce56" : {
      "testcases" : {
        "org.apache.commons.io.FileUtilsTestCase" : [ "testCompareSizeOf", "testCopyDirectoryFiltered", "testCopyDirectoryPreserveDates", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToDirectoryWithDirectory", "testCopyToDirectoryWithFile", "testCopyToDirectoryWithIterable", "testCopyToSelf", "testIncorrectOutputSize", "testMoveDirectory_CopyDelete", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testSizeOfDirectoryAsBigInteger" ],
        "org.apache.commons.io.input.TailerTest" : [ "testBufferBreak", "testLongFile" ],
        "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
        "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testFileCreate", "testFileDelete", "testFileUpdate" ]
      },
      "predecessor" : "3e9210998975472eedcb87935a10906d6098f777"
    },
    "62eef61f85e15fddcb54e95a68f270fe3614684b" : {
      "predecessor" : "94aaf0649da33ad07a35c4dab29363227febce56"
    },
    "533944f431e31fe281aea99a36404634111adce6" : {
      "testcases" : {
        "org.apache.commons.io.input.BOMInputStreamTest" : [ "skipReturnValueWithBom", "skipReturnValueWithoutBom", "testAvailableWithBOM", "testAvailableWithoutBOM", "testClose", "testEmptyBufferWithBOM", "testEmptyBufferWithoutBOM", "testGetBOMFirstThenRead", "testGetBOMFirstThenReadInclude", "testLargeBufferWithBOM", "testLargeBufferWithoutBOM", "testLeadingNonBOMBufferedRead", "testLeadingNonBOMSingleRead", "testMarkResetAfterReadWithBOM", "testMarkResetAfterReadWithoutBOM", "testMarkResetBeforeReadWithBOM", "testMarkResetBeforeReadWithoutBOM", "testReadEmpty", "testReadSmall", "testReadWithBOMInclude", "testReadWithBOMUtf16Be", "testReadWithBOMUtf16Le", "testReadWithBOMUtf32Be", "testReadWithBOMUtf32Le", "testReadWithBOMUtf8", "testReadWithMultipleBOM", "testReadWithoutBOM", "testSkipWithBOM", "testSkipWithoutBOM", "testSmallBufferWithBOM", "testSmallBufferWithoutBOM", "testSupportCode" ],
        "org.apache.commons.io.input.BoundedReaderTest" : [ "closeTest" ],
        "org.apache.commons.io.input.CharSequenceInputStreamTest" : [ "testBufferedRead_AvailableCharset", "testBufferedRead_RequiredCharset", "testBufferedRead_UTF8", "testLargeBufferedRead_RequiredCharsets", "testLargeBufferedRead_UTF8" ],
        "org.apache.commons.io.input.CharSequenceReaderTest" : [ "testMark", "testMarkSupported", "testRead", "testReadCharArray", "testReadCharArrayPortion" ],
        "org.apache.commons.io.input.ClosedInputStreamTest" : [ "testRead" ],
        "org.apache.commons.io.input.CountingInputStreamTest" : [ "testCounting", "testEOF1", "testEOF2", "testEOF3", "testResetting", "testSkipping", "testZeroLength1", "testZeroLength2", "testZeroLength3" ],
        "org.apache.commons.io.input.TailerTest" : [ "testBufferBreak", "testLongFile" ],
        "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
        "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testFileCreate", "testFileDelete", "testFileUpdate" ]
      },
      "predecessor" : "62eef61f85e15fddcb54e95a68f270fe3614684b"
    },
    "a931b223435e0ad2cd65d50153cdc071895ea958" : { },
    "ec3f268c041eb980eb9959d62616e0ab84243a4d" : { },
    "290ced5f70db2d51fb282f49a1f7f0d8e272cae3" : { },
    "a14aa925ecba88855c66b7e38b6dcf30c5b99ffe" : { },
    "085226e8473cae1c8ddf216fad002151465bfaa3" : {
      "testcases" : {
        "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testCanRead", "testCanWrite" ],
        "org.apache.commons.io.input.BOMInputStreamTest" : [ "testReadXmlWithBOMUcs2", "testReadXmlWithBOMUtf16Be", "testReadXmlWithBOMUtf16Le", "testReadXmlWithBOMUtf32Be", "testReadXmlWithBOMUtf32Le", "testReadXmlWithBOMUtf8", "testReadXmlWithoutBOMUtf32Be", "testReadXmlWithoutBOMUtf32Le" ],
        "org.apache.commons.io.output.ChunkedWriterTest" : [ "negative_chunksize_not_permitted", "write_four_chunks", "write_two_chunks_default_constructor" ],
        "org.apache.commons.io.output.CountingOutputStreamTest" : [ "testCounting" ],
        "org.apache.commons.io.output.NullOutputStreamTest" : [ "testNull" ],
        "org.apache.commons.io.output.NullWriterTest" : [ "testNull" ],
        "org.apache.commons.io.output.ProxyWriterTest" : [ "appendChar", "appendCharSequence", "appendCharSequence_with_offset", "exceptions_in_append_char", "exceptions_in_append_charSequence", "exceptions_in_append_charSequence_offset", "exceptions_in_close", "exceptions_in_flush", "exceptions_in_write_char_array", "exceptions_in_write_int", "exceptions_in_write_offset_char_array", "exceptions_in_write_string", "exceptions_in_write_string_offset", "nullCharArray", "nullCharSequencec", "nullString", "writeCharArray", "writeCharArrayPartial", "writeInt", "writeString", "writeStringPartial" ],
        "org.apache.commons.io.output.StringBuilderWriterTest" : [ "testAppendChar", "testAppendCharSequence", "testAppendCharSequencePortion", "testAppendConstructCapacity", "testAppendConstructNull", "testAppendConstructStringBuilder", "testClose", "testWriteChar", "testWriteCharArray", "testWriteCharArrayPortion", "testWriteString", "testWriteStringPortion" ],
        "org.apache.commons.io.output.TaggedOutputStreamTest" : [ "testNormalStream", "testOtherException" ],
        "org.apache.commons.io.output.TeeOutputStreamTest" : [ "testTee" ],
        "org.apache.commons.io.output.ThresholdingOutputStreamTest" : [ "testSetByteCount" ],
        "org.apache.commons.io.output.XmlStreamWriterTest" : [ "testEmpty" ]
      },
      "predecessor" : "a14aa925ecba88855c66b7e38b6dcf30c5b99ffe"
    },
    "41c73e390abb85f0c8bc4f3097056ddda246540b" : {
      "predecessor" : "085226e8473cae1c8ddf216fad002151465bfaa3"
    },
    "9bb3481aec6468da930fa2cae9b0710f33b1c5dc" : { },
    "a9e8244e42a3c746c27db06544d027fb897fe17e" : { },
    "390c981388242a2623567521ecd5cb4fcce698fc" : { },
    "042423214371eaba7000ae8b301adbd19532b729" : { },
    "880e64274e06e79b59a64231410280aa704b7dbb" : { },
    "5799ec50d7b220bc25f86828ce388a358aa2d9b4" : { },
    "e921bc6a8c63dc6b33e8e220aa28084bb2434222" : { }
  },
  "android" : false
}