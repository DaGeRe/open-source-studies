{
  "url" : "https://github.com/apache/commons-io.git",
  "testGoal" : null,
  "initialcommit" : {
    "commit" : "9561dfcf4949e5b69231e99e38572803632121ae",
    "jdk" : 8,
    "initialDependencies" : {
      "org.apache.commons.io.CopyUtilsTest#testCopy_byteArrayToOutputStream" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.CopyUtils",
          "method" : "copy",
          "parameters" : [ "byte[]", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.CopyUtilsTest",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.CopyUtilsTest",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.CopyUtilsTest",
          "method" : "testCopy_byteArrayToOutputStream",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "getBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "size",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "toByteArray",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream", "boolean", "boolean" ]
        } ]
      },
      "org.apache.commons.io.CopyUtilsTest#testCopy_byteArrayToWriter" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.CopyUtils",
          "method" : "copy",
          "parameters" : [ "byte[]", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.CopyUtils",
          "method" : "copy",
          "parameters" : [ "java.io.InputStream", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.CopyUtils",
          "method" : "copy",
          "parameters" : [ "java.io.Reader", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.CopyUtilsTest",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.CopyUtilsTest",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.CopyUtilsTest",
          "method" : "testCopy_byteArrayToWriter",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "getBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "size",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "toByteArray",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream", "boolean", "boolean" ]
        } ]
      },
      "org.apache.commons.io.CopyUtilsTest#testCopy_inputStreamToOutputStream" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.CopyUtils",
          "method" : "copy",
          "parameters" : [ "java.io.InputStream", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.CopyUtilsTest",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.CopyUtilsTest",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.CopyUtilsTest",
          "method" : "testCopy_inputStreamToOutputStream",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "available",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "read",
          "parameters" : [ "byte[]" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "getBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "size",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "toByteArray",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnCloseInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream", "boolean", "boolean" ]
        } ]
      },
      "org.apache.commons.io.CopyUtilsTest#testCopy_inputStreamToWriter" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.CopyUtils",
          "method" : "copy",
          "parameters" : [ "java.io.InputStream", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.CopyUtils",
          "method" : "copy",
          "parameters" : [ "java.io.Reader", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.CopyUtilsTest",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.CopyUtilsTest",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.CopyUtilsTest",
          "method" : "testCopy_inputStreamToWriter",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "available",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "read",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "getBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "size",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "toByteArray",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnCloseInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream", "boolean", "boolean" ]
        } ]
      },
      "org.apache.commons.io.CopyUtilsTest#testCopy_readerToOutputStream" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.CopyUtils",
          "method" : "copy",
          "parameters" : [ "java.io.Reader", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.CopyUtils",
          "method" : "copy",
          "parameters" : [ "java.io.Reader", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.CopyUtilsTest",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.CopyUtilsTest",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.CopyUtilsTest",
          "method" : "testCopy_readerToOutputStream",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "available",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "read",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "getBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "size",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "toByteArray",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "flush",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnCloseInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "flush",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.CopyUtilsTest#testCopy_readerToWriter" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.CopyUtils",
          "method" : "copy",
          "parameters" : [ "java.io.Reader", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.CopyUtilsTest",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.CopyUtilsTest",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.CopyUtilsTest",
          "method" : "testCopy_readerToWriter",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "available",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "read",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "getBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "size",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "toByteArray",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnCloseInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream", "boolean", "boolean" ]
        } ]
      },
      "org.apache.commons.io.CopyUtilsTest#testCopy_stringToOutputStream" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.CopyUtils",
          "method" : "copy",
          "parameters" : [ "java.io.Reader", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.CopyUtils",
          "method" : "copy",
          "parameters" : [ "java.lang.String", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.CopyUtilsTest",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.CopyUtilsTest",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.CopyUtilsTest",
          "method" : "testCopy_stringToOutputStream",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "getBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "size",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "toByteArray",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "flush",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "flush",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.CopyUtilsTest#testCopy_stringToWriter" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.CopyUtils",
          "method" : "copy",
          "parameters" : [ "java.lang.String", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.CopyUtilsTest",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.CopyUtilsTest",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.CopyUtilsTest",
          "method" : "testCopy_stringToWriter",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "getBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "size",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "toByteArray",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream", "boolean", "boolean" ]
        } ]
      },
      "org.apache.commons.io.DemuxTestCase#testInputStream" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.DemuxTestCase",
          "method" : "doJoin",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.DemuxTestCase",
          "method" : "doStart",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.DemuxTestCase",
          "method" : "getInput",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.DemuxTestCase",
          "method" : "startReader",
          "parameters" : [ "java.lang.String", "java.lang.String", "org.apache.commons.io.input.DemuxInputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.DemuxTestCase",
          "method" : "testInputStream",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.DemuxTestCase$ReaderThread",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "java.io.InputStream", "org.apache.commons.io.input.DemuxInputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.DemuxTestCase$ReaderThread",
          "method" : "getData",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.DemuxTestCase$ReaderThread",
          "method" : "run",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.DemuxInputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.DemuxInputStream",
          "method" : "bindStream",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.DemuxInputStream",
          "method" : "getStream",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.DemuxInputStream",
          "method" : "read",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.DemuxTestCase#testOutputStream" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.DemuxTestCase",
          "method" : "doJoin",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.DemuxTestCase",
          "method" : "doStart",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.DemuxTestCase",
          "method" : "getOutput",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.DemuxTestCase",
          "method" : "startWriter",
          "parameters" : [ "java.lang.String", "java.lang.String", "org.apache.commons.io.output.DemuxOutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.DemuxTestCase",
          "method" : "testOutputStream",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.DemuxTestCase$WriterThread",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "java.lang.String", "java.io.OutputStream", "org.apache.commons.io.output.DemuxOutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.DemuxTestCase$WriterThread",
          "method" : "run",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "getBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "toByteArray",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "write",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.DemuxOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.DemuxOutputStream",
          "method" : "bindStream",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.output.DemuxOutputStream",
          "method" : "getStream",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.DemuxOutputStream",
          "method" : "write",
          "parameters" : [ "int" ]
        } ]
      },
      "org.apache.commons.io.DirectoryWalkerTestCase#testCancel" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "<init>",
          "parameters" : [ "java.io.FileFilter", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "handleCancelled",
          "parameters" : [ "java.io.File", "java.util.Collection", "org.apache.commons.io.DirectoryWalker$CancelException" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "handleDirectory",
          "parameters" : [ "java.io.File", "int", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "handleDirectoryStart",
          "parameters" : [ "java.io.File", "int", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "handleStart",
          "parameters" : [ "java.io.File", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "walk",
          "parameters" : [ "java.io.File", "int", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "walk",
          "parameters" : [ "java.io.File", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker$CancelException",
          "method" : "<init>",
          "parameters" : [ "java.io.File", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker$CancelException",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "java.io.File", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker$CancelException",
          "method" : "getDepth",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker$CancelException",
          "method" : "getFile",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase",
          "method" : "testCancel",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase$TestCancelWalker",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase$TestCancelWalker",
          "method" : "find",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase$TestCancelWalker",
          "method" : "handleCancelled",
          "parameters" : [ "java.io.File", "java.util.Collection", "org.apache.commons.io.CancelException" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase$TestCancelWalker",
          "method" : "handleDirectoryEnd",
          "parameters" : [ "java.io.File", "int", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase$TestCancelWalker",
          "method" : "handleFile",
          "parameters" : [ "java.io.File", "int", "java.util.Collection" ]
        } ]
      },
      "org.apache.commons.io.DirectoryWalkerTestCase#testFilter" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "<init>",
          "parameters" : [ "java.io.FileFilter", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "handleDirectory",
          "parameters" : [ "java.io.File", "int", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "handleDirectoryStart",
          "parameters" : [ "java.io.File", "int", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "handleEnd",
          "parameters" : [ "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "handleStart",
          "parameters" : [ "java.io.File", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "walk",
          "parameters" : [ "java.io.File", "int", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "walk",
          "parameters" : [ "java.io.File", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase",
          "method" : "checkContainsFiles",
          "parameters" : [ "java.lang.String", "java.io.File[]", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase",
          "method" : "testFilter",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder",
          "method" : "<init>",
          "parameters" : [ "java.io.FileFilter", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder",
          "method" : "find",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder",
          "method" : "handleDirectoryEnd",
          "parameters" : [ "java.io.File", "int", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder",
          "method" : "handleFile",
          "parameters" : [ "java.io.File", "int", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "checkEquals",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.NameFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.OrFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        } ]
      },
      "org.apache.commons.io.DirectoryWalkerTestCase#testFilterAndLimitA" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "<init>",
          "parameters" : [ "java.io.FileFilter", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "handleDirectory",
          "parameters" : [ "java.io.File", "int", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "handleDirectoryStart",
          "parameters" : [ "java.io.File", "int", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "handleEnd",
          "parameters" : [ "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "handleStart",
          "parameters" : [ "java.io.File", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "walk",
          "parameters" : [ "java.io.File", "int", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "walk",
          "parameters" : [ "java.io.File", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase",
          "method" : "testFilterAndLimitA",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder",
          "method" : "<init>",
          "parameters" : [ "java.io.FileFilter", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder",
          "method" : "find",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder",
          "method" : "handleDirectoryEnd",
          "parameters" : [ "java.io.File", "int", "java.util.Collection" ]
        } ]
      },
      "org.apache.commons.io.DirectoryWalkerTestCase#testFilterAndLimitB" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "<init>",
          "parameters" : [ "java.io.FileFilter", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "handleDirectory",
          "parameters" : [ "java.io.File", "int", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "handleDirectoryStart",
          "parameters" : [ "java.io.File", "int", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "handleEnd",
          "parameters" : [ "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "handleStart",
          "parameters" : [ "java.io.File", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "walk",
          "parameters" : [ "java.io.File", "int", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "walk",
          "parameters" : [ "java.io.File", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase",
          "method" : "testFilterAndLimitB",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder",
          "method" : "<init>",
          "parameters" : [ "java.io.FileFilter", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder",
          "method" : "find",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder",
          "method" : "handleDirectoryEnd",
          "parameters" : [ "java.io.File", "int", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "checkEquals",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AndFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.DirectoryFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.NameFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.NotFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        } ]
      },
      "org.apache.commons.io.DirectoryWalkerTestCase#testFilterAndLimitC" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "<init>",
          "parameters" : [ "java.io.FileFilter", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "handleDirectory",
          "parameters" : [ "java.io.File", "int", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "handleDirectoryStart",
          "parameters" : [ "java.io.File", "int", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "handleEnd",
          "parameters" : [ "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "handleStart",
          "parameters" : [ "java.io.File", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "walk",
          "parameters" : [ "java.io.File", "int", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "walk",
          "parameters" : [ "java.io.File", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase",
          "method" : "testFilterAndLimitC",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder",
          "method" : "<init>",
          "parameters" : [ "java.io.FileFilter", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder",
          "method" : "find",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder",
          "method" : "handleDirectoryEnd",
          "parameters" : [ "java.io.File", "int", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder",
          "method" : "handleFile",
          "parameters" : [ "java.io.File", "int", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "checkEquals",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AndFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.DirectoryFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.NameFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.NotFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        } ]
      },
      "org.apache.commons.io.DirectoryWalkerTestCase#testFilterAndLimitD" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "<init>",
          "parameters" : [ "java.io.FileFilter", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "handleDirectory",
          "parameters" : [ "java.io.File", "int", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "handleDirectoryStart",
          "parameters" : [ "java.io.File", "int", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "handleEnd",
          "parameters" : [ "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "handleStart",
          "parameters" : [ "java.io.File", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "walk",
          "parameters" : [ "java.io.File", "int", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "walk",
          "parameters" : [ "java.io.File", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase",
          "method" : "checkContainsFiles",
          "parameters" : [ "java.lang.String", "java.io.File[]", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase",
          "method" : "testFilterAndLimitD",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder",
          "method" : "<init>",
          "parameters" : [ "java.io.FileFilter", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder",
          "method" : "find",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder",
          "method" : "handleDirectoryEnd",
          "parameters" : [ "java.io.File", "int", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder",
          "method" : "handleFile",
          "parameters" : [ "java.io.File", "int", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "checkEquals",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.NameFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.OrFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        } ]
      },
      "org.apache.commons.io.DirectoryWalkerTestCase#testFilterDirAndFile1" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "<init>",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "org.apache.commons.io.filefilter.IOFileFilter", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "handleDirectory",
          "parameters" : [ "java.io.File", "int", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "handleDirectoryStart",
          "parameters" : [ "java.io.File", "int", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "handleEnd",
          "parameters" : [ "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "handleStart",
          "parameters" : [ "java.io.File", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "walk",
          "parameters" : [ "java.io.File", "int", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "walk",
          "parameters" : [ "java.io.File", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase",
          "method" : "checkContainsFiles",
          "parameters" : [ "java.lang.String", "java.io.File[]", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase",
          "method" : "testFilterDirAndFile1",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder",
          "method" : "<init>",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "org.apache.commons.io.filefilter.IOFileFilter", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder",
          "method" : "find",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder",
          "method" : "handleDirectoryEnd",
          "parameters" : [ "java.io.File", "int", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder",
          "method" : "handleFile",
          "parameters" : [ "java.io.File", "int", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "checkEquals",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AbstractFileFilter",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AndFileFilter",
          "method" : "<init>",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AndFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AndFileFilter",
          "method" : "addFileFilter",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.DirectoryFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFileFilter",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterUtils",
          "method" : "makeDirectoryOnly",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterUtils",
          "method" : "makeFileOnly",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterUtils",
          "method" : "orFileFilter",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.NameFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.OrFileFilter",
          "method" : "<init>",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.OrFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.OrFileFilter",
          "method" : "addFileFilter",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter" ]
        } ]
      },
      "org.apache.commons.io.DirectoryWalkerTestCase#testFilterDirAndFile2" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "<init>",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "org.apache.commons.io.filefilter.IOFileFilter", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "handleDirectory",
          "parameters" : [ "java.io.File", "int", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "handleDirectoryStart",
          "parameters" : [ "java.io.File", "int", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "handleEnd",
          "parameters" : [ "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "handleStart",
          "parameters" : [ "java.io.File", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "walk",
          "parameters" : [ "java.io.File", "int", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "walk",
          "parameters" : [ "java.io.File", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase",
          "method" : "checkContainsFiles",
          "parameters" : [ "java.lang.String", "java.io.File[]", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase",
          "method" : "testFilterDirAndFile2",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder",
          "method" : "<init>",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "org.apache.commons.io.filefilter.IOFileFilter", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder",
          "method" : "find",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder",
          "method" : "handleDirectoryEnd",
          "parameters" : [ "java.io.File", "int", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder",
          "method" : "handleFile",
          "parameters" : [ "java.io.File", "int", "java.util.Collection" ]
        } ]
      },
      "org.apache.commons.io.DirectoryWalkerTestCase#testFilterDirAndFile3" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "<init>",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "org.apache.commons.io.filefilter.IOFileFilter", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "handleDirectory",
          "parameters" : [ "java.io.File", "int", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "handleDirectoryStart",
          "parameters" : [ "java.io.File", "int", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "handleEnd",
          "parameters" : [ "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "handleStart",
          "parameters" : [ "java.io.File", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "walk",
          "parameters" : [ "java.io.File", "int", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "walk",
          "parameters" : [ "java.io.File", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase",
          "method" : "checkContainsFiles",
          "parameters" : [ "java.lang.String", "java.io.File[]", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase",
          "method" : "directoriesOnly",
          "parameters" : [ "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase",
          "method" : "testFilterDirAndFile3",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder",
          "method" : "<init>",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "org.apache.commons.io.filefilter.IOFileFilter", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder",
          "method" : "find",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder",
          "method" : "handleDirectoryEnd",
          "parameters" : [ "java.io.File", "int", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder",
          "method" : "handleFile",
          "parameters" : [ "java.io.File", "int", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "checkEquals",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AbstractFileFilter",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AndFileFilter",
          "method" : "<init>",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AndFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AndFileFilter",
          "method" : "addFileFilter",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.DirectoryFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFileFilter",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterUtils",
          "method" : "makeDirectoryOnly",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterUtils",
          "method" : "makeFileOnly",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterUtils",
          "method" : "orFileFilter",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.NameFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.OrFileFilter",
          "method" : "<init>",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.OrFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.OrFileFilter",
          "method" : "addFileFilter",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.TrueFileFilter",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.TrueFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        } ]
      },
      "org.apache.commons.io.DirectoryWalkerTestCase#testFilterDirAndFile4" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "<init>",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "org.apache.commons.io.filefilter.IOFileFilter", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "handleDirectory",
          "parameters" : [ "java.io.File", "int", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "handleDirectoryStart",
          "parameters" : [ "java.io.File", "int", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "handleEnd",
          "parameters" : [ "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "handleStart",
          "parameters" : [ "java.io.File", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "walk",
          "parameters" : [ "java.io.File", "int", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "walk",
          "parameters" : [ "java.io.File", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase",
          "method" : "checkContainsFiles",
          "parameters" : [ "java.lang.String", "java.io.File[]", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase",
          "method" : "filesOnly",
          "parameters" : [ "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase",
          "method" : "testFilterDirAndFile4",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder",
          "method" : "<init>",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "org.apache.commons.io.filefilter.IOFileFilter", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder",
          "method" : "find",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder",
          "method" : "handleDirectoryEnd",
          "parameters" : [ "java.io.File", "int", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder",
          "method" : "handleFile",
          "parameters" : [ "java.io.File", "int", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "checkEquals",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AbstractFileFilter",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AndFileFilter",
          "method" : "<init>",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AndFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AndFileFilter",
          "method" : "addFileFilter",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.DirectoryFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFileFilter",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterUtils",
          "method" : "makeDirectoryOnly",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterUtils",
          "method" : "makeFileOnly",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterUtils",
          "method" : "orFileFilter",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.NameFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.OrFileFilter",
          "method" : "<init>",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.OrFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.OrFileFilter",
          "method" : "addFileFilter",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.TrueFileFilter",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.TrueFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        } ]
      },
      "org.apache.commons.io.DirectoryWalkerTestCase#testHandleStartDirectoryFalse" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "<init>",
          "parameters" : [ "java.io.FileFilter", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "handleEnd",
          "parameters" : [ "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "handleStart",
          "parameters" : [ "java.io.File", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "walk",
          "parameters" : [ "java.io.File", "int", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "walk",
          "parameters" : [ "java.io.File", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase",
          "method" : "testHandleStartDirectoryFalse",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase$TestFalseFileFinder",
          "method" : "<init>",
          "parameters" : [ "java.io.FileFilter", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase$TestFalseFileFinder",
          "method" : "handleDirectory",
          "parameters" : [ "java.io.File", "int", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder",
          "method" : "<init>",
          "parameters" : [ "java.io.FileFilter", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder",
          "method" : "find",
          "parameters" : [ "java.io.File" ]
        } ]
      },
      "org.apache.commons.io.DirectoryWalkerTestCase#testLimitToCurrent" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "<init>",
          "parameters" : [ "java.io.FileFilter", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "handleDirectory",
          "parameters" : [ "java.io.File", "int", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "handleDirectoryStart",
          "parameters" : [ "java.io.File", "int", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "handleEnd",
          "parameters" : [ "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "handleStart",
          "parameters" : [ "java.io.File", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "walk",
          "parameters" : [ "java.io.File", "int", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "walk",
          "parameters" : [ "java.io.File", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase",
          "method" : "testLimitToCurrent",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder",
          "method" : "<init>",
          "parameters" : [ "java.io.FileFilter", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder",
          "method" : "find",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder",
          "method" : "handleDirectoryEnd",
          "parameters" : [ "java.io.File", "int", "java.util.Collection" ]
        } ]
      },
      "org.apache.commons.io.DirectoryWalkerTestCase#testMissingStartDirectory" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "<init>",
          "parameters" : [ "java.io.FileFilter", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "handleDirectory",
          "parameters" : [ "java.io.File", "int", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "handleDirectoryStart",
          "parameters" : [ "java.io.File", "int", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "handleEnd",
          "parameters" : [ "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "handleRestricted",
          "parameters" : [ "java.io.File", "int", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "handleStart",
          "parameters" : [ "java.io.File", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "walk",
          "parameters" : [ "java.io.File", "int", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalker",
          "method" : "walk",
          "parameters" : [ "java.io.File", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase",
          "method" : "testMissingStartDirectory",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder",
          "method" : "<init>",
          "parameters" : [ "java.io.FileFilter", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder",
          "method" : "find",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder",
          "method" : "handleDirectoryEnd",
          "parameters" : [ "java.io.File", "int", "java.util.Collection" ]
        } ]
      },
      "org.apache.commons.io.EndianUtilsTest#testReadSwappedDouble" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "readSwappedDouble",
          "parameters" : [ "byte[]", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "readSwappedDouble",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "readSwappedLong",
          "parameters" : [ "byte[]", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "readSwappedLong",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.EndianUtilsTest",
          "method" : "testReadSwappedDouble",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.EndianUtilsTest#testReadSwappedFloat" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "read",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "readSwappedFloat",
          "parameters" : [ "byte[]", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "readSwappedFloat",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "readSwappedInteger",
          "parameters" : [ "byte[]", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "readSwappedInteger",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.EndianUtilsTest",
          "method" : "testReadSwappedFloat",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.EndianUtilsTest#testReadSwappedInteger" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "read",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "readSwappedInteger",
          "parameters" : [ "byte[]", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "readSwappedInteger",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.EndianUtilsTest",
          "method" : "testReadSwappedInteger",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.EndianUtilsTest#testReadSwappedLong" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "readSwappedLong",
          "parameters" : [ "byte[]", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "readSwappedLong",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.EndianUtilsTest",
          "method" : "testReadSwappedLong",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.EndianUtilsTest#testReadSwappedShort" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "read",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "readSwappedShort",
          "parameters" : [ "byte[]", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "readSwappedShort",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.EndianUtilsTest",
          "method" : "testReadSwappedShort",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.EndianUtilsTest#testReadSwappedUnsignedInteger" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "read",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "readSwappedUnsignedInteger",
          "parameters" : [ "byte[]", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "readSwappedUnsignedInteger",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.EndianUtilsTest",
          "method" : "testReadSwappedUnsignedInteger",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.EndianUtilsTest#testReadSwappedUnsignedShort" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "read",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "readSwappedUnsignedShort",
          "parameters" : [ "byte[]", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "readSwappedUnsignedShort",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.EndianUtilsTest",
          "method" : "testReadSwappedUnsignedShort",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.EndianUtilsTest#testSwapDouble" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "swapDouble",
          "parameters" : [ "double" ]
        }, {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "swapLong",
          "parameters" : [ "long" ]
        }, {
          "clazz" : "org.apache.commons.io.EndianUtilsTest",
          "method" : "testSwapDouble",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.EndianUtilsTest#testSwapFloat" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "swapFloat",
          "parameters" : [ "float" ]
        }, {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "swapInteger",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.EndianUtilsTest",
          "method" : "testSwapFloat",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.EndianUtilsTest#testSwapInteger" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "swapInteger",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.EndianUtilsTest",
          "method" : "testSwapInteger",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.EndianUtilsTest#testSwapLong" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "swapLong",
          "parameters" : [ "long" ]
        }, {
          "clazz" : "org.apache.commons.io.EndianUtilsTest",
          "method" : "testSwapLong",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.EndianUtilsTest#testSwapShort" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "swapShort",
          "parameters" : [ "short" ]
        }, {
          "clazz" : "org.apache.commons.io.EndianUtilsTest",
          "method" : "testSwapShort",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.EndianUtilsTest#testSymmetry" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "swapDouble",
          "parameters" : [ "double" ]
        }, {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "swapFloat",
          "parameters" : [ "float" ]
        }, {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "swapInteger",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "swapLong",
          "parameters" : [ "long" ]
        }, {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "swapShort",
          "parameters" : [ "short" ]
        }, {
          "clazz" : "org.apache.commons.io.EndianUtilsTest",
          "method" : "testSymmetry",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.EndianUtilsTest#testWriteSwappedDouble" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "writeSwappedDouble",
          "parameters" : [ "byte[]", "int", "double" ]
        }, {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "writeSwappedDouble",
          "parameters" : [ "java.io.OutputStream", "double" ]
        }, {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "writeSwappedLong",
          "parameters" : [ "byte[]", "int", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "writeSwappedLong",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.EndianUtilsTest",
          "method" : "testWriteSwappedDouble",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.EndianUtilsTest#testWriteSwappedFloat" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "writeSwappedFloat",
          "parameters" : [ "byte[]", "int", "float" ]
        }, {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "writeSwappedFloat",
          "parameters" : [ "java.io.OutputStream", "float" ]
        }, {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "writeSwappedInteger",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "writeSwappedInteger",
          "parameters" : [ "java.io.OutputStream", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.EndianUtilsTest",
          "method" : "testWriteSwappedFloat",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.EndianUtilsTest#testWriteSwappedInteger" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "writeSwappedInteger",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "writeSwappedInteger",
          "parameters" : [ "java.io.OutputStream", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.EndianUtilsTest",
          "method" : "testWriteSwappedInteger",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.EndianUtilsTest#testWriteSwappedLong" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "writeSwappedLong",
          "parameters" : [ "byte[]", "int", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "writeSwappedLong",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.EndianUtilsTest",
          "method" : "testWriteSwappedLong",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.EndianUtilsTest#testWriteSwappedShort" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "writeSwappedShort",
          "parameters" : [ "byte[]", "int", "short" ]
        }, {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "writeSwappedShort",
          "parameters" : [ "java.io.OutputStream", "short" ]
        }, {
          "clazz" : "org.apache.commons.io.EndianUtilsTest",
          "method" : "testWriteSwappedShort",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileCleanerTestCase#testFileCleanerDirectory" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileCleaner",
          "method" : "getTrackCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileCleaner",
          "method" : "track",
          "parameters" : [ "java.io.File", "java.lang.Object" ]
        }, {
          "clazz" : "org.apache.commons.io.FileCleaner",
          "method" : "track",
          "parameters" : [ "java.io.File", "java.lang.Object", "org.apache.commons.io.FileDeleteStrategy" ]
        }, {
          "clazz" : "org.apache.commons.io.FileCleaner$Tracker",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "org.apache.commons.io.FileDeleteStrategy", "java.lang.Object", "java.lang.ref.ReferenceQueue" ]
        }, {
          "clazz" : "org.apache.commons.io.FileCleaner$Tracker",
          "method" : "delete",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileCleanerTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileCleanerTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileCleanerTestCase",
          "method" : "testFileCleanerDirectory",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileCleanerTestCase",
          "method" : "waitUntilTrackCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileDeleteStrategy",
          "method" : "<init>",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileDeleteStrategy",
          "method" : "deleteQuietly",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileDeleteStrategy",
          "method" : "doDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileDeleteStrategy$ForceFileDeleteStrategy",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileCleanerTestCase#testFileCleanerDirectory_ForceStrategy" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileCleaner",
          "method" : "getTrackCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileCleaner",
          "method" : "track",
          "parameters" : [ "java.io.File", "java.lang.Object", "org.apache.commons.io.FileDeleteStrategy" ]
        }, {
          "clazz" : "org.apache.commons.io.FileCleaner$Tracker",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "org.apache.commons.io.FileDeleteStrategy", "java.lang.Object", "java.lang.ref.ReferenceQueue" ]
        }, {
          "clazz" : "org.apache.commons.io.FileCleaner$Tracker",
          "method" : "delete",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileCleanerTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileCleanerTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileCleanerTestCase",
          "method" : "testFileCleanerDirectory_ForceStrategy",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileCleanerTestCase",
          "method" : "waitUntilTrackCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileDeleteStrategy",
          "method" : "<init>",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileDeleteStrategy",
          "method" : "deleteQuietly",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileDeleteStrategy$ForceFileDeleteStrategy",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileDeleteStrategy$ForceFileDeleteStrategy",
          "method" : "doDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileCleanerTestCase#testFileCleanerDirectory_NullStrategy" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileCleaner",
          "method" : "getTrackCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileCleaner",
          "method" : "track",
          "parameters" : [ "java.io.File", "java.lang.Object", "org.apache.commons.io.FileDeleteStrategy" ]
        }, {
          "clazz" : "org.apache.commons.io.FileCleaner$Tracker",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "org.apache.commons.io.FileDeleteStrategy", "java.lang.Object", "java.lang.ref.ReferenceQueue" ]
        }, {
          "clazz" : "org.apache.commons.io.FileCleaner$Tracker",
          "method" : "delete",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileCleanerTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileCleanerTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileCleanerTestCase",
          "method" : "testFileCleanerDirectory_NullStrategy",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileCleanerTestCase",
          "method" : "waitUntilTrackCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileDeleteStrategy",
          "method" : "<init>",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileDeleteStrategy",
          "method" : "deleteQuietly",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileDeleteStrategy",
          "method" : "doDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileDeleteStrategy$ForceFileDeleteStrategy",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileCleanerTestCase#testFileCleanerFile" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileCleaner",
          "method" : "getTrackCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileCleaner",
          "method" : "track",
          "parameters" : [ "java.lang.String", "java.lang.Object" ]
        }, {
          "clazz" : "org.apache.commons.io.FileCleaner",
          "method" : "track",
          "parameters" : [ "java.lang.String", "java.lang.Object", "org.apache.commons.io.FileDeleteStrategy" ]
        }, {
          "clazz" : "org.apache.commons.io.FileCleaner$Tracker",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "org.apache.commons.io.FileDeleteStrategy", "java.lang.Object", "java.lang.ref.ReferenceQueue" ]
        }, {
          "clazz" : "org.apache.commons.io.FileCleaner$Tracker",
          "method" : "delete",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileCleanerTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileCleanerTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileCleanerTestCase",
          "method" : "testFileCleanerFile",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileCleanerTestCase",
          "method" : "waitUntilTrackCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileDeleteStrategy",
          "method" : "<init>",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileDeleteStrategy",
          "method" : "deleteQuietly",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileDeleteStrategy",
          "method" : "doDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileDeleteStrategy$ForceFileDeleteStrategy",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileCleanerTestCase#testFileCleanerNull" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileCleaner",
          "method" : "track",
          "parameters" : [ "java.io.File", "java.lang.Object" ]
        }, {
          "clazz" : "org.apache.commons.io.FileCleaner",
          "method" : "track",
          "parameters" : [ "java.io.File", "java.lang.Object", "org.apache.commons.io.FileDeleteStrategy" ]
        }, {
          "clazz" : "org.apache.commons.io.FileCleaner",
          "method" : "track",
          "parameters" : [ "java.lang.String", "java.lang.Object" ]
        }, {
          "clazz" : "org.apache.commons.io.FileCleaner",
          "method" : "track",
          "parameters" : [ "java.lang.String", "java.lang.Object", "org.apache.commons.io.FileDeleteStrategy" ]
        }, {
          "clazz" : "org.apache.commons.io.FileCleanerTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileCleanerTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileCleanerTestCase",
          "method" : "testFileCleanerNull",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileDeleteStrategy",
          "method" : "<init>",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileDeleteStrategy$ForceFileDeleteStrategy",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileDeleteStrategyTestCase#testDeleteForce" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileDeleteStrategy",
          "method" : "<init>",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileDeleteStrategy",
          "method" : "delete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileDeleteStrategy$ForceFileDeleteStrategy",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileDeleteStrategy$ForceFileDeleteStrategy",
          "method" : "doDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileDeleteStrategyTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileDeleteStrategyTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileDeleteStrategyTestCase",
          "method" : "testDeleteForce",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileDeleteStrategyTestCase#testDeleteNormal" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileDeleteStrategy",
          "method" : "<init>",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileDeleteStrategy",
          "method" : "delete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileDeleteStrategy",
          "method" : "doDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileDeleteStrategy$ForceFileDeleteStrategy",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileDeleteStrategyTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileDeleteStrategyTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileDeleteStrategyTestCase",
          "method" : "testDeleteNormal",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileDeleteStrategyTestCase#testDeleteNull" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileDeleteStrategy",
          "method" : "<init>",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileDeleteStrategy",
          "method" : "delete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileDeleteStrategy",
          "method" : "deleteQuietly",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileDeleteStrategy$ForceFileDeleteStrategy",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileDeleteStrategyTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileDeleteStrategyTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileDeleteStrategyTestCase",
          "method" : "testDeleteNull",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileDeleteStrategyTestCase#testDeleteQuietlyNormal" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileDeleteStrategy",
          "method" : "<init>",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileDeleteStrategy",
          "method" : "deleteQuietly",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileDeleteStrategy",
          "method" : "doDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileDeleteStrategy$ForceFileDeleteStrategy",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileDeleteStrategyTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileDeleteStrategyTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileDeleteStrategyTestCase",
          "method" : "testDeleteQuietlyNormal",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileDeleteStrategyTestCase#testToString" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileDeleteStrategy",
          "method" : "<init>",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileDeleteStrategy",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileDeleteStrategy$ForceFileDeleteStrategy",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileDeleteStrategyTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileDeleteStrategyTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileDeleteStrategyTestCase",
          "method" : "testToString",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileSystemUtilsTestCase#testGetFreeSpaceOS_String_InitError" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "freeSpaceOS",
          "parameters" : [ "java.lang.String", "int", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "testGetFreeSpaceOS_String_InitError",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileSystemUtilsTestCase#testGetFreeSpaceOS_String_NullPath" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "freeSpaceOS",
          "parameters" : [ "java.lang.String", "int", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "testGetFreeSpaceOS_String_NullPath",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileSystemUtilsTestCase#testGetFreeSpaceOS_String_Other" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "freeSpaceOS",
          "parameters" : [ "java.lang.String", "int", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "testGetFreeSpaceOS_String_Other",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileSystemUtilsTestCase#testGetFreeSpaceOS_String_Unix" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "freeSpaceOS",
          "parameters" : [ "java.lang.String", "int", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "testGetFreeSpaceOS_String_Unix",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileSystemUtilsTestCase#testGetFreeSpaceOS_String_Windows" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "freeSpaceOS",
          "parameters" : [ "java.lang.String", "int", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "testGetFreeSpaceOS_String_Windows",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileSystemUtilsTestCase#testGetFreeSpaceUnix_String_EmptyPath" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "freeSpaceUnix",
          "parameters" : [ "java.lang.String", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "testGetFreeSpaceUnix_String_EmptyPath",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils",
          "method" : "<init>",
          "parameters" : [ "int", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils",
          "method" : "<init>",
          "parameters" : [ "int", "java.lang.String", "java.lang.String" ]
        } ]
      },
      "org.apache.commons.io.FileSystemUtilsTestCase#testGetFreeSpaceUnix_String_EmptyResponse" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "freeSpaceUnix",
          "parameters" : [ "java.lang.String", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "performCommand",
          "parameters" : [ "java.lang.String[]", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "testGetFreeSpaceUnix_String_EmptyResponse",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils",
          "method" : "<init>",
          "parameters" : [ "int", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils",
          "method" : "<init>",
          "parameters" : [ "int", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils",
          "method" : "openProcess",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "doNormalize",
          "parameters" : [ "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "getPrefixLength",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSeparator",
          "parameters" : [ "char" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "normalize",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.Reader" ]
        } ]
      },
      "org.apache.commons.io.FileSystemUtilsTestCase#testGetFreeSpaceUnix_String_InvalidResponse1" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "freeSpaceUnix",
          "parameters" : [ "java.lang.String", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "performCommand",
          "parameters" : [ "java.lang.String[]", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "testGetFreeSpaceUnix_String_InvalidResponse1",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils",
          "method" : "<init>",
          "parameters" : [ "int", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils",
          "method" : "<init>",
          "parameters" : [ "int", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils",
          "method" : "openProcess",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "doNormalize",
          "parameters" : [ "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "getPrefixLength",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSeparator",
          "parameters" : [ "char" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "normalize",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.Reader" ]
        } ]
      },
      "org.apache.commons.io.FileSystemUtilsTestCase#testGetFreeSpaceUnix_String_InvalidResponse2" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "freeSpaceUnix",
          "parameters" : [ "java.lang.String", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "parseBytes",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "performCommand",
          "parameters" : [ "java.lang.String[]", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "testGetFreeSpaceUnix_String_InvalidResponse2",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils",
          "method" : "<init>",
          "parameters" : [ "int", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils",
          "method" : "<init>",
          "parameters" : [ "int", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils",
          "method" : "openProcess",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "doNormalize",
          "parameters" : [ "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "getPrefixLength",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSeparator",
          "parameters" : [ "char" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "normalize",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.Reader" ]
        } ]
      },
      "org.apache.commons.io.FileSystemUtilsTestCase#testGetFreeSpaceUnix_String_InvalidResponse3" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "freeSpaceUnix",
          "parameters" : [ "java.lang.String", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "parseBytes",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "performCommand",
          "parameters" : [ "java.lang.String[]", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "testGetFreeSpaceUnix_String_InvalidResponse3",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils",
          "method" : "<init>",
          "parameters" : [ "int", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils",
          "method" : "<init>",
          "parameters" : [ "int", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils",
          "method" : "openProcess",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "doNormalize",
          "parameters" : [ "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "getPrefixLength",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSeparator",
          "parameters" : [ "char" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "normalize",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.Reader" ]
        } ]
      },
      "org.apache.commons.io.FileSystemUtilsTestCase#testGetFreeSpaceUnix_String_InvalidResponse4" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "freeSpaceUnix",
          "parameters" : [ "java.lang.String", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "performCommand",
          "parameters" : [ "java.lang.String[]", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "testGetFreeSpaceUnix_String_InvalidResponse4",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils",
          "method" : "<init>",
          "parameters" : [ "int", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils",
          "method" : "<init>",
          "parameters" : [ "int", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils",
          "method" : "openProcess",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "doNormalize",
          "parameters" : [ "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "getPrefixLength",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSeparator",
          "parameters" : [ "char" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "normalize",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.Reader" ]
        } ]
      },
      "org.apache.commons.io.FileSystemUtilsTestCase#testGetFreeSpaceUnix_String_LongResponse" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "freeSpaceUnix",
          "parameters" : [ "java.lang.String", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "parseBytes",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "performCommand",
          "parameters" : [ "java.lang.String[]", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "testGetFreeSpaceUnix_String_LongResponse",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils",
          "method" : "<init>",
          "parameters" : [ "int", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils",
          "method" : "<init>",
          "parameters" : [ "int", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils",
          "method" : "openProcess",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "doNormalize",
          "parameters" : [ "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "getPrefixLength",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSeparator",
          "parameters" : [ "char" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "normalize",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.Reader" ]
        } ]
      },
      "org.apache.commons.io.FileSystemUtilsTestCase#testGetFreeSpaceUnix_String_LongResponseKb" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "freeSpaceUnix",
          "parameters" : [ "java.lang.String", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "parseBytes",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "performCommand",
          "parameters" : [ "java.lang.String[]", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "testGetFreeSpaceUnix_String_LongResponseKb",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils",
          "method" : "<init>",
          "parameters" : [ "int", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils",
          "method" : "<init>",
          "parameters" : [ "int", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils",
          "method" : "openProcess",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "doNormalize",
          "parameters" : [ "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "getPrefixLength",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSeparator",
          "parameters" : [ "char" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "normalize",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.Reader" ]
        } ]
      },
      "org.apache.commons.io.FileSystemUtilsTestCase#testGetFreeSpaceUnix_String_NormalResponseFreeBSD" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "freeSpaceUnix",
          "parameters" : [ "java.lang.String", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "parseBytes",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "performCommand",
          "parameters" : [ "java.lang.String[]", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "testGetFreeSpaceUnix_String_NormalResponseFreeBSD",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils",
          "method" : "<init>",
          "parameters" : [ "int", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils",
          "method" : "<init>",
          "parameters" : [ "int", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils",
          "method" : "openProcess",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "doNormalize",
          "parameters" : [ "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "getPrefixLength",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSeparator",
          "parameters" : [ "char" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "normalize",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.Reader" ]
        } ]
      },
      "org.apache.commons.io.FileSystemUtilsTestCase#testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "freeSpaceUnix",
          "parameters" : [ "java.lang.String", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "parseBytes",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "performCommand",
          "parameters" : [ "java.lang.String[]", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils",
          "method" : "<init>",
          "parameters" : [ "int", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils",
          "method" : "<init>",
          "parameters" : [ "int", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils",
          "method" : "openProcess",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "doNormalize",
          "parameters" : [ "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "getPrefixLength",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSeparator",
          "parameters" : [ "char" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "normalize",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.Reader" ]
        } ]
      },
      "org.apache.commons.io.FileSystemUtilsTestCase#testGetFreeSpaceUnix_String_NormalResponseKbLinux" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "freeSpaceUnix",
          "parameters" : [ "java.lang.String", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "parseBytes",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "performCommand",
          "parameters" : [ "java.lang.String[]", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "testGetFreeSpaceUnix_String_NormalResponseKbLinux",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils",
          "method" : "<init>",
          "parameters" : [ "int", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils",
          "method" : "<init>",
          "parameters" : [ "int", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils",
          "method" : "openProcess",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "doNormalize",
          "parameters" : [ "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "getPrefixLength",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSeparator",
          "parameters" : [ "char" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "normalize",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.Reader" ]
        } ]
      },
      "org.apache.commons.io.FileSystemUtilsTestCase#testGetFreeSpaceUnix_String_NormalResponseKbSolaris" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "freeSpaceUnix",
          "parameters" : [ "java.lang.String", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "parseBytes",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "performCommand",
          "parameters" : [ "java.lang.String[]", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "testGetFreeSpaceUnix_String_NormalResponseKbSolaris",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils",
          "method" : "<init>",
          "parameters" : [ "int", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils",
          "method" : "<init>",
          "parameters" : [ "int", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils",
          "method" : "openProcess",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "doNormalize",
          "parameters" : [ "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "getPrefixLength",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSeparator",
          "parameters" : [ "char" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "normalize",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.Reader" ]
        } ]
      },
      "org.apache.commons.io.FileSystemUtilsTestCase#testGetFreeSpaceUnix_String_NormalResponseLinux" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "freeSpaceUnix",
          "parameters" : [ "java.lang.String", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "parseBytes",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "performCommand",
          "parameters" : [ "java.lang.String[]", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "testGetFreeSpaceUnix_String_NormalResponseLinux",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils",
          "method" : "<init>",
          "parameters" : [ "int", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils",
          "method" : "<init>",
          "parameters" : [ "int", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils",
          "method" : "openProcess",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "doNormalize",
          "parameters" : [ "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "getPrefixLength",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSeparator",
          "parameters" : [ "char" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "normalize",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.Reader" ]
        } ]
      },
      "org.apache.commons.io.FileSystemUtilsTestCase#testGetFreeSpaceWindows_String_EmptyMultiLineResponse" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "freeSpaceWindows",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "performCommand",
          "parameters" : [ "java.lang.String[]", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "testGetFreeSpaceWindows_String_EmptyMultiLineResponse",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils",
          "method" : "<init>",
          "parameters" : [ "int", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils",
          "method" : "<init>",
          "parameters" : [ "int", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils",
          "method" : "openProcess",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "doNormalize",
          "parameters" : [ "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "getPrefixLength",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "normalize",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.Reader" ]
        } ]
      },
      "org.apache.commons.io.FileSystemUtilsTestCase#testGetFreeSpaceWindows_String_EmptyPath" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "freeSpaceWindows",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "parseBytes",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "parseDir",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "performCommand",
          "parameters" : [ "java.lang.String[]", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "testGetFreeSpaceWindows_String_EmptyPath",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils",
          "method" : "<init>",
          "parameters" : [ "int", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils",
          "method" : "openProcess",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "doNormalize",
          "parameters" : [ "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "normalize",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.Reader" ]
        } ]
      },
      "org.apache.commons.io.FileSystemUtilsTestCase#testGetFreeSpaceWindows_String_EmptyResponse" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "freeSpaceWindows",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "performCommand",
          "parameters" : [ "java.lang.String[]", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "testGetFreeSpaceWindows_String_EmptyResponse",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils",
          "method" : "<init>",
          "parameters" : [ "int", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils",
          "method" : "<init>",
          "parameters" : [ "int", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils",
          "method" : "openProcess",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "doNormalize",
          "parameters" : [ "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "getPrefixLength",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "normalize",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.Reader" ]
        } ]
      },
      "org.apache.commons.io.FileSystemUtilsTestCase#testGetFreeSpaceWindows_String_InvalidTextResponse" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "freeSpaceWindows",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "parseDir",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "performCommand",
          "parameters" : [ "java.lang.String[]", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "testGetFreeSpaceWindows_String_InvalidTextResponse",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils",
          "method" : "<init>",
          "parameters" : [ "int", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils",
          "method" : "<init>",
          "parameters" : [ "int", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils",
          "method" : "openProcess",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "doNormalize",
          "parameters" : [ "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "getPrefixLength",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "normalize",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.Reader" ]
        } ]
      },
      "org.apache.commons.io.FileSystemUtilsTestCase#testGetFreeSpaceWindows_String_NoSuchDirectoryResponse" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "freeSpaceWindows",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "performCommand",
          "parameters" : [ "java.lang.String[]", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils",
          "method" : "<init>",
          "parameters" : [ "int", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils",
          "method" : "<init>",
          "parameters" : [ "int", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils",
          "method" : "openProcess",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "doNormalize",
          "parameters" : [ "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "getPrefixLength",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "normalize",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.Reader" ]
        } ]
      },
      "org.apache.commons.io.FileSystemUtilsTestCase#testGetFreeSpaceWindows_String_NormalResponse" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "freeSpaceWindows",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "parseBytes",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "parseDir",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "performCommand",
          "parameters" : [ "java.lang.String[]", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "testGetFreeSpaceWindows_String_NormalResponse",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils",
          "method" : "<init>",
          "parameters" : [ "int", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils",
          "method" : "openProcess",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "doNormalize",
          "parameters" : [ "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "getPrefixLength",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "normalize",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.Reader" ]
        } ]
      },
      "org.apache.commons.io.FileSystemUtilsTestCase#testGetFreeSpaceWindows_String_ParseCommaFormatBytes" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "freeSpaceWindows",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "parseBytes",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "parseDir",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "performCommand",
          "parameters" : [ "java.lang.String[]", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "testGetFreeSpaceWindows_String_ParseCommaFormatBytes",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils",
          "method" : "<init>",
          "parameters" : [ "int", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils",
          "method" : "<init>",
          "parameters" : [ "int", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils",
          "method" : "openProcess",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "doNormalize",
          "parameters" : [ "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "normalize",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.Reader" ]
        } ]
      },
      "org.apache.commons.io.FileSystemUtilsTestCase#testGetFreeSpaceWindows_String_StripDrive" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "freeSpaceWindows",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "parseBytes",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "parseDir",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "performCommand",
          "parameters" : [ "java.lang.String[]", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "testGetFreeSpaceWindows_String_StripDrive",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils",
          "method" : "<init>",
          "parameters" : [ "int", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils",
          "method" : "openProcess",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "doNormalize",
          "parameters" : [ "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "getPrefixLength",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSeparator",
          "parameters" : [ "char" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "normalize",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.Reader" ]
        } ]
      },
      "org.apache.commons.io.FileSystemUtilsTestCase#testGetFreeSpace_String" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "freeSpace",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "freeSpaceKb",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "freeSpaceOS",
          "parameters" : [ "java.lang.String", "int", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "freeSpaceUnix",
          "parameters" : [ "java.lang.String", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "openProcess",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "parseBytes",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtils",
          "method" : "performCommand",
          "parameters" : [ "java.lang.String[]", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileSystemUtilsTestCase",
          "method" : "testGetFreeSpace_String",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "doNormalize",
          "parameters" : [ "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "getPrefixLength",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSeparator",
          "parameters" : [ "char" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "normalize",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.Reader" ]
        } ]
      },
      "org.apache.commons.io.FileUtilsCleanDirectoryTestCase#testCleanEmpty" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsCleanDirectoryTestCase",
          "method" : "chmod",
          "parameters" : [ "java.io.File", "int", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsCleanDirectoryTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsCleanDirectoryTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsCleanDirectoryTestCase",
          "method" : "testCleanEmpty",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileUtilsCleanDirectoryTestCase#testDeletesNested" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "touch",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsCleanDirectoryTestCase",
          "method" : "chmod",
          "parameters" : [ "java.io.File", "int", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsCleanDirectoryTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsCleanDirectoryTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsCleanDirectoryTestCase",
          "method" : "testDeletesNested",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        } ]
      },
      "org.apache.commons.io.FileUtilsCleanDirectoryTestCase#testDeletesRegular" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "touch",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsCleanDirectoryTestCase",
          "method" : "chmod",
          "parameters" : [ "java.io.File", "int", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsCleanDirectoryTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsCleanDirectoryTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsCleanDirectoryTestCase",
          "method" : "testDeletesRegular",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        } ]
      },
      "org.apache.commons.io.FileUtilsCleanDirectoryTestCase#testThrowsOnCannotDeleteFile" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "touch",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsCleanDirectoryTestCase",
          "method" : "chmod",
          "parameters" : [ "java.io.File", "int", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsCleanDirectoryTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsCleanDirectoryTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsCleanDirectoryTestCase",
          "method" : "testThrowsOnCannotDeleteFile",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        } ]
      },
      "org.apache.commons.io.FileUtilsCleanDirectoryTestCase#testThrowsOnNullList" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsCleanDirectoryTestCase",
          "method" : "chmod",
          "parameters" : [ "java.io.File", "int", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsCleanDirectoryTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsCleanDirectoryTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsCleanDirectoryTestCase",
          "method" : "testThrowsOnNullList",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileUtilsFileNewerTestCase#testIsFileNewer" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "isFileNewer",
          "parameters" : [ "java.io.File", "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "isFileNewer",
          "parameters" : [ "java.io.File", "java.util.Date" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "isFileNewer",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsFileNewerTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsFileNewerTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsFileNewerTestCase",
          "method" : "testIsFileNewer",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsFileNewerTestCase",
          "method" : "testIsFileNewer",
          "parameters" : [ "java.lang.String", "java.io.File", "long", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileUtilsFileNewerTestCase#testIsFileNewerImaginaryFile" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "isFileNewer",
          "parameters" : [ "java.io.File", "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "isFileNewer",
          "parameters" : [ "java.io.File", "java.util.Date" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "isFileNewer",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsFileNewerTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsFileNewerTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsFileNewerTestCase",
          "method" : "testIsFileNewer",
          "parameters" : [ "java.lang.String", "java.io.File", "long", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsFileNewerTestCase",
          "method" : "testIsFileNewerImaginaryFile",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileUtilsFileNewerTestCase#testIsFileNewerNoDate" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "isFileNewer",
          "parameters" : [ "java.io.File", "java.util.Date" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsFileNewerTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsFileNewerTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsFileNewerTestCase",
          "method" : "testIsFileNewerNoDate",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileUtilsFileNewerTestCase#testIsFileNewerNoFile" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "isFileNewer",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsFileNewerTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsFileNewerTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsFileNewerTestCase",
          "method" : "testIsFileNewerNoFile",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileUtilsFileNewerTestCase#testIsFileNewerNoFileReference" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "isFileNewer",
          "parameters" : [ "java.io.File", "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsFileNewerTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsFileNewerTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsFileNewerTestCase",
          "method" : "testIsFileNewerNoFileReference",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileUtilsListFilesTestCase#testListFiles" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "innerListFiles",
          "parameters" : [ "java.util.Collection", "java.io.File", "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "listFiles",
          "parameters" : [ "java.io.File", "org.apache.commons.io.filefilter.IOFileFilter", "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "touch",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsListFilesTestCase",
          "method" : "filesToFilenames",
          "parameters" : [ "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsListFilesTestCase",
          "method" : "getLocalTestDirectory",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsListFilesTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsListFilesTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsListFilesTestCase",
          "method" : "testListFiles",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "checkEquals",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AbstractFileFilter",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AndFileFilter",
          "method" : "<init>",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AndFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AndFileFilter",
          "method" : "addFileFilter",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.DirectoryFileFilter",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.DirectoryFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FalseFileFilter",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FalseFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterUtils",
          "method" : "andFileFilter",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterUtils",
          "method" : "directoryFileFilter",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterUtils",
          "method" : "makeCVSAware",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterUtils",
          "method" : "nameFileFilter",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterUtils",
          "method" : "notFileFilter",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterUtils",
          "method" : "orFileFilter",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterUtils",
          "method" : "prefixFileFilter",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterUtils",
          "method" : "trueFileFilter",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.NameFileFilter",
          "method" : "<init>",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.NameFileFilter",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "org.apache.commons.io.IOCase" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.NameFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.NotFileFilter",
          "method" : "<init>",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.NotFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.OrFileFilter",
          "method" : "<init>",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.OrFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.OrFileFilter",
          "method" : "addFileFilter",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.PrefixFileFilter",
          "method" : "<init>",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.PrefixFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.TrueFileFilter",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.TrueFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileUtilsListFilesTestCase#testListFilesByExtension" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "innerListFiles",
          "parameters" : [ "java.util.Collection", "java.io.File", "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "listFiles",
          "parameters" : [ "java.io.File", "java.lang.String[]", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "listFiles",
          "parameters" : [ "java.io.File", "org.apache.commons.io.filefilter.IOFileFilter", "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "toSuffixes",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "touch",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsListFilesTestCase",
          "method" : "filesToFilenames",
          "parameters" : [ "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsListFilesTestCase",
          "method" : "getLocalTestDirectory",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsListFilesTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsListFilesTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsListFilesTestCase",
          "method" : "testListFilesByExtension",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AbstractFileFilter",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AndFileFilter",
          "method" : "<init>",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AndFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AndFileFilter",
          "method" : "addFileFilter",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.DirectoryFileFilter",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.DirectoryFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FalseFileFilter",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FalseFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterUtils",
          "method" : "andFileFilter",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterUtils",
          "method" : "notFileFilter",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterUtils",
          "method" : "orFileFilter",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.NotFileFilter",
          "method" : "<init>",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.NotFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.OrFileFilter",
          "method" : "<init>",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.OrFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.OrFileFilter",
          "method" : "addFileFilter",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.SuffixFileFilter",
          "method" : "<init>",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.SuffixFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.TrueFileFilter",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.TrueFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileUtilsTestCase#testByteCountToDisplaySize" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "byteCountToDisplaySize",
          "parameters" : [ "long" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "testByteCountToDisplaySize",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileUtilsTestCase#testChecksum" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "checksum",
          "parameters" : [ "java.io.File", "java.util.zip.Checksum" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "writeStringToFile",
          "parameters" : [ "java.io.File", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "testChecksum",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.InputStream", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copyLarge",
          "parameters" : [ "java.io.InputStream", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "write",
          "parameters" : [ "java.lang.String", "java.io.OutputStream", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.output.NullOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.NullOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileUtilsTestCase#testChecksumCRC32" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "checksum",
          "parameters" : [ "java.io.File", "java.util.zip.Checksum" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "checksumCRC32",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "writeStringToFile",
          "parameters" : [ "java.io.File", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "testChecksumCRC32",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.InputStream", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copyLarge",
          "parameters" : [ "java.io.InputStream", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "write",
          "parameters" : [ "java.lang.String", "java.io.OutputStream", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.output.NullOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.NullOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileUtilsTestCase#testChecksumDouble" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "checksum",
          "parameters" : [ "java.io.File", "java.util.zip.Checksum" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "writeStringToFile",
          "parameters" : [ "java.io.File", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "testChecksumDouble",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.InputStream", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copyLarge",
          "parameters" : [ "java.io.InputStream", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "write",
          "parameters" : [ "java.lang.String", "java.io.OutputStream", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.output.NullOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.NullOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileUtilsTestCase#testChecksumOnDirectory" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "checksum",
          "parameters" : [ "java.io.File", "java.util.zip.Checksum" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "testChecksumOnDirectory",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileUtilsTestCase#testChecksumOnNullChecksum" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "checksum",
          "parameters" : [ "java.io.File", "java.util.zip.Checksum" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "writeStringToFile",
          "parameters" : [ "java.io.File", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "testChecksumOnNullChecksum",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.InputStream", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copyLarge",
          "parameters" : [ "java.io.InputStream", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "write",
          "parameters" : [ "java.lang.String", "java.io.OutputStream", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.output.NullOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileUtilsTestCase#testChecksumOnNullFile" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "checksum",
          "parameters" : [ "java.io.File", "java.util.zip.Checksum" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "testChecksumOnNullFile",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileUtilsTestCase#testContentEquals" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "contentEquals",
          "parameters" : [ "java.io.File", "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "copyURLToFile",
          "parameters" : [ "java.net.URL", "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "testContentEquals",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "contentEquals",
          "parameters" : [ "java.io.InputStream", "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.InputStream", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copyLarge",
          "parameters" : [ "java.io.InputStream", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileUtilsTestCase#testCopyDirectoryErrors" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "copyDirectory",
          "parameters" : [ "java.io.File", "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "copyDirectory",
          "parameters" : [ "java.io.File", "java.io.File", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "doCopyDirectory",
          "parameters" : [ "java.io.File", "java.io.File", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "testCopyDirectoryErrors",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileUtilsTestCase#testCopyDirectoryToDirectory_NonExistingDest" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "copyDirectory",
          "parameters" : [ "java.io.File", "java.io.File", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "copyDirectoryToDirectory",
          "parameters" : [ "java.io.File", "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "doCopyDirectory",
          "parameters" : [ "java.io.File", "java.io.File", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "doCopyFile",
          "parameters" : [ "java.io.File", "java.io.File", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "sizeOfDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "writeStringToFile",
          "parameters" : [ "java.io.File", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "testCopyDirectoryToDirectory_NonExistingDest",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.InputStream", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copyLarge",
          "parameters" : [ "java.io.InputStream", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "write",
          "parameters" : [ "java.lang.String", "java.io.OutputStream", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileUtilsTestCase#testCopyDirectoryToExistingDest" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "copyDirectory",
          "parameters" : [ "java.io.File", "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "copyDirectory",
          "parameters" : [ "java.io.File", "java.io.File", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "doCopyDirectory",
          "parameters" : [ "java.io.File", "java.io.File", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "doCopyFile",
          "parameters" : [ "java.io.File", "java.io.File", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "sizeOfDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "writeStringToFile",
          "parameters" : [ "java.io.File", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "testCopyDirectoryToExistingDest",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.InputStream", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copyLarge",
          "parameters" : [ "java.io.InputStream", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "write",
          "parameters" : [ "java.lang.String", "java.io.OutputStream", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileUtilsTestCase#testCopyDirectoryToNonExistingDest" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "copyDirectory",
          "parameters" : [ "java.io.File", "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "copyDirectory",
          "parameters" : [ "java.io.File", "java.io.File", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "doCopyDirectory",
          "parameters" : [ "java.io.File", "java.io.File", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "doCopyFile",
          "parameters" : [ "java.io.File", "java.io.File", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "sizeOfDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "writeStringToFile",
          "parameters" : [ "java.io.File", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "testCopyDirectoryToNonExistingDest",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.InputStream", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copyLarge",
          "parameters" : [ "java.io.InputStream", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "write",
          "parameters" : [ "java.lang.String", "java.io.OutputStream", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileUtilsTestCase#testCopyFile1" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "copyFile",
          "parameters" : [ "java.io.File", "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "copyFile",
          "parameters" : [ "java.io.File", "java.io.File", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "doCopyFile",
          "parameters" : [ "java.io.File", "java.io.File", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "testCopyFile1",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.InputStream", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copyLarge",
          "parameters" : [ "java.io.InputStream", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileUtilsTestCase#testCopyFile1ToDir" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "copyFile",
          "parameters" : [ "java.io.File", "java.io.File", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "copyFileToDirectory",
          "parameters" : [ "java.io.File", "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "doCopyFile",
          "parameters" : [ "java.io.File", "java.io.File", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "testCopyFile1ToDir",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.InputStream", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copyLarge",
          "parameters" : [ "java.io.InputStream", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileUtilsTestCase#testCopyFile2" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "copyFile",
          "parameters" : [ "java.io.File", "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "copyFile",
          "parameters" : [ "java.io.File", "java.io.File", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "doCopyFile",
          "parameters" : [ "java.io.File", "java.io.File", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "testCopyFile2",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.InputStream", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copyLarge",
          "parameters" : [ "java.io.InputStream", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileUtilsTestCase#testCopyFile2ToDir" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "copyFile",
          "parameters" : [ "java.io.File", "java.io.File", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "copyFileToDirectory",
          "parameters" : [ "java.io.File", "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "doCopyFile",
          "parameters" : [ "java.io.File", "java.io.File", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "testCopyFile2ToDir",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.InputStream", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copyLarge",
          "parameters" : [ "java.io.InputStream", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileUtilsTestCase#testCopyFile2WithoutFileDatePreservation" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "copyFile",
          "parameters" : [ "java.io.File", "java.io.File", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "doCopyFile",
          "parameters" : [ "java.io.File", "java.io.File", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "testCopyFile2WithoutFileDatePreservation",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.InputStream", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copyLarge",
          "parameters" : [ "java.io.InputStream", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileUtilsTestCase#testCopyToSelf" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "copyFile",
          "parameters" : [ "java.io.File", "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "copyFile",
          "parameters" : [ "java.io.File", "java.io.File", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "doCopyFile",
          "parameters" : [ "java.io.File", "java.io.File", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "testCopyToSelf",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.InputStream", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copyLarge",
          "parameters" : [ "java.io.InputStream", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileUtilsTestCase#testCopyURLToFile" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "copyURLToFile",
          "parameters" : [ "java.net.URL", "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "testCopyURLToFile",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "contentEquals",
          "parameters" : [ "java.io.InputStream", "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.InputStream", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copyLarge",
          "parameters" : [ "java.io.InputStream", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileUtilsTestCase#testFileUtils" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "readFileToString",
          "parameters" : [ "java.io.File", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "writeStringToFile",
          "parameters" : [ "java.io.File", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "testFileUtils",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.InputStream", "java.io.Writer", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.Reader", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copyLarge",
          "parameters" : [ "java.io.Reader", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "toString",
          "parameters" : [ "java.io.InputStream", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "write",
          "parameters" : [ "java.lang.String", "java.io.OutputStream", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileUtilsTestCase#testForceDeleteAFile1" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "testForceDeleteAFile1",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileUtilsTestCase#testForceDeleteAFile2" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "testForceDeleteAFile2",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileUtilsTestCase#testForceDeleteDir" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "testForceDeleteDir",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileUtilsTestCase#testForceMkdir" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceMkdir",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "testForceMkdir",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileUtilsTestCase#testIsFileNewerOlder" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "isFileNewer",
          "parameters" : [ "java.io.File", "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "isFileNewer",
          "parameters" : [ "java.io.File", "java.util.Date" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "isFileNewer",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "isFileOlder",
          "parameters" : [ "java.io.File", "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "isFileOlder",
          "parameters" : [ "java.io.File", "java.util.Date" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "isFileOlder",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "testIsFileNewerOlder",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileUtilsTestCase#testIterateFiles" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "innerListFiles",
          "parameters" : [ "java.util.Collection", "java.io.File", "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "iterateFiles",
          "parameters" : [ "java.io.File", "org.apache.commons.io.filefilter.IOFileFilter", "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "listFiles",
          "parameters" : [ "java.io.File", "org.apache.commons.io.filefilter.IOFileFilter", "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "testIterateFiles",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "splitOnTokens",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "wildcardMatch",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "wildcardMatch",
          "parameters" : [ "java.lang.String", "java.lang.String", "org.apache.commons.io.IOCase" ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "convertCase",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AbstractFileFilter",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AndFileFilter",
          "method" : "<init>",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AndFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AndFileFilter",
          "method" : "addFileFilter",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.DirectoryFileFilter",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.DirectoryFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterUtils",
          "method" : "andFileFilter",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterUtils",
          "method" : "notFileFilter",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterUtils",
          "method" : "orFileFilter",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.NotFileFilter",
          "method" : "<init>",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.NotFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.OrFileFilter",
          "method" : "<init>",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.OrFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.OrFileFilter",
          "method" : "addFileFilter",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.WildcardFilter",
          "method" : "<init>",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.WildcardFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileUtilsTestCase#testListFiles" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "innerListFiles",
          "parameters" : [ "java.util.Collection", "java.io.File", "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "listFiles",
          "parameters" : [ "java.io.File", "org.apache.commons.io.filefilter.IOFileFilter", "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "testListFiles",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "splitOnTokens",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "wildcardMatch",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "wildcardMatch",
          "parameters" : [ "java.lang.String", "java.lang.String", "org.apache.commons.io.IOCase" ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "convertCase",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AbstractFileFilter",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AndFileFilter",
          "method" : "<init>",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AndFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AndFileFilter",
          "method" : "addFileFilter",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.DirectoryFileFilter",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.DirectoryFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterUtils",
          "method" : "andFileFilter",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterUtils",
          "method" : "notFileFilter",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterUtils",
          "method" : "orFileFilter",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.NotFileFilter",
          "method" : "<init>",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.NotFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.OrFileFilter",
          "method" : "<init>",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.OrFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.OrFileFilter",
          "method" : "addFileFilter",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.WildcardFilter",
          "method" : "<init>",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.WildcardFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileUtilsTestCase#testReadFileToByteArray" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "readFileToByteArray",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "testReadFileToByteArray",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.InputStream", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copyLarge",
          "parameters" : [ "java.io.InputStream", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "toByteArray",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "getBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "toByteArray",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileUtilsTestCase#testReadFileToString" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "readFileToString",
          "parameters" : [ "java.io.File", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "testReadFileToString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.InputStream", "java.io.Writer", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.Reader", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copyLarge",
          "parameters" : [ "java.io.Reader", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "toString",
          "parameters" : [ "java.io.InputStream", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileUtilsTestCase#testReadLines" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "readLines",
          "parameters" : [ "java.io.File", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "testReadLines",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "readLines",
          "parameters" : [ "java.io.InputStream", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "readLines",
          "parameters" : [ "java.io.Reader" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createLineBasedFile",
          "parameters" : [ "java.io.File", "java.lang.String[]" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "deleteFile",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "newFile",
          "parameters" : [ "java.lang.String" ]
        } ]
      },
      "org.apache.commons.io.FileUtilsTestCase#testSizeOfDirectory" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "sizeOfDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "testSizeOfDirectory",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileUtilsTestCase#testToFile1" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "toFile",
          "parameters" : [ "java.net.URL" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "testToFile1",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileUtilsTestCase#testToFile2" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "toFile",
          "parameters" : [ "java.net.URL" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "testToFile2",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileUtilsTestCase#testToFile3" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "toFile",
          "parameters" : [ "java.net.URL" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "testToFile3",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileUtilsTestCase#testToFile4" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "toFile",
          "parameters" : [ "java.net.URL" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "testToFile4",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileUtilsTestCase#testToFiles1" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "toFile",
          "parameters" : [ "java.net.URL" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "toFiles",
          "parameters" : [ "java.net.URL[]" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "testToFiles1",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileUtilsTestCase#testToFiles2" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "toFile",
          "parameters" : [ "java.net.URL" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "toFiles",
          "parameters" : [ "java.net.URL[]" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "testToFiles2",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileUtilsTestCase#testToFiles3" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "toFiles",
          "parameters" : [ "java.net.URL[]" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "testToFiles3",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileUtilsTestCase#testToFiles4" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "toFile",
          "parameters" : [ "java.net.URL" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "toFiles",
          "parameters" : [ "java.net.URL[]" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "testToFiles4",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileUtilsTestCase#testToURLs1" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "toURLs",
          "parameters" : [ "java.io.File[]" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "testToURLs1",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileUtilsTestCase#testTouch" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "touch",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "testTouch",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileUtilsTestCase#testWriteByteArrayToFile" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "writeByteArrayToFile",
          "parameters" : [ "java.io.File", "byte[]" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "testWriteByteArrayToFile",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "assertEqualContent",
          "parameters" : [ "byte[]", "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileUtilsTestCase#testWriteLines_3arg_nullSeparator" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "readFileToString",
          "parameters" : [ "java.io.File", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "writeLines",
          "parameters" : [ "java.io.File", "java.lang.String", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "writeLines",
          "parameters" : [ "java.io.File", "java.lang.String", "java.util.Collection", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "testWriteLines_3arg_nullSeparator",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.InputStream", "java.io.Writer", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.Reader", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copyLarge",
          "parameters" : [ "java.io.Reader", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "toString",
          "parameters" : [ "java.io.InputStream", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "writeLines",
          "parameters" : [ "java.util.Collection", "java.lang.String", "java.io.OutputStream", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "newFile",
          "parameters" : [ "java.lang.String" ]
        } ]
      },
      "org.apache.commons.io.FileUtilsTestCase#testWriteLines_4arg" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "readFileToString",
          "parameters" : [ "java.io.File", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "writeLines",
          "parameters" : [ "java.io.File", "java.lang.String", "java.util.Collection", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "testWriteLines_4arg",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.InputStream", "java.io.Writer", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.Reader", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copyLarge",
          "parameters" : [ "java.io.Reader", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "toString",
          "parameters" : [ "java.io.InputStream", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "writeLines",
          "parameters" : [ "java.util.Collection", "java.lang.String", "java.io.OutputStream", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "newFile",
          "parameters" : [ "java.lang.String" ]
        } ]
      },
      "org.apache.commons.io.FileUtilsTestCase#testWriteLines_4arg_Writer_nullData" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "writeLines",
          "parameters" : [ "java.io.File", "java.lang.String", "java.util.Collection", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "testWriteLines_4arg_Writer_nullData",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "writeLines",
          "parameters" : [ "java.util.Collection", "java.lang.String", "java.io.OutputStream", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "newFile",
          "parameters" : [ "java.lang.String" ]
        } ]
      },
      "org.apache.commons.io.FileUtilsTestCase#testWriteLines_4arg_nullSeparator" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "readFileToString",
          "parameters" : [ "java.io.File", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "writeLines",
          "parameters" : [ "java.io.File", "java.lang.String", "java.util.Collection", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "testWriteLines_4arg_nullSeparator",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.InputStream", "java.io.Writer", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.Reader", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copyLarge",
          "parameters" : [ "java.io.Reader", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "toString",
          "parameters" : [ "java.io.InputStream", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "writeLines",
          "parameters" : [ "java.util.Collection", "java.lang.String", "java.io.OutputStream", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "newFile",
          "parameters" : [ "java.lang.String" ]
        } ]
      },
      "org.apache.commons.io.FileUtilsTestCase#testWriteStringToFile1" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "writeStringToFile",
          "parameters" : [ "java.io.File", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "testWriteStringToFile1",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "write",
          "parameters" : [ "java.lang.String", "java.io.OutputStream", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "assertEqualContent",
          "parameters" : [ "byte[]", "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileUtilsTestCase#testWriteStringToFile2" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "writeStringToFile",
          "parameters" : [ "java.io.File", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsTestCase",
          "method" : "testWriteStringToFile2",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "write",
          "parameters" : [ "java.lang.String", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "write",
          "parameters" : [ "java.lang.String", "java.io.OutputStream", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "assertEqualContent",
          "parameters" : [ "byte[]", "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FileUtilsWaitForTestCase#testWaitFor" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "waitFor",
          "parameters" : [ "java.io.File", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsWaitForTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsWaitForTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtilsWaitForTestCase",
          "method" : "testWaitFor",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FilenameUtilsTestCase#testConcat" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "concat",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "doNormalize",
          "parameters" : [ "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "getPrefixLength",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSeparator",
          "parameters" : [ "char" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "normalize",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "testConcat",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FilenameUtilsTestCase#testEquals" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "equals",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "equals",
          "parameters" : [ "java.lang.String", "java.lang.String", "boolean", "org.apache.commons.io.IOCase" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "testEquals",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "checkEquals",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FilenameUtilsTestCase#testEqualsNormalized" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "doNormalize",
          "parameters" : [ "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "equals",
          "parameters" : [ "java.lang.String", "java.lang.String", "boolean", "org.apache.commons.io.IOCase" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "equalsNormalized",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "getPrefixLength",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSeparator",
          "parameters" : [ "char" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "normalize",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "testEqualsNormalized",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "checkEquals",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FilenameUtilsTestCase#testEqualsNormalizedOnSystem" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "doNormalize",
          "parameters" : [ "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "equals",
          "parameters" : [ "java.lang.String", "java.lang.String", "boolean", "org.apache.commons.io.IOCase" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "equalsNormalizedOnSystem",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "getPrefixLength",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSeparator",
          "parameters" : [ "char" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "normalize",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "testEqualsNormalizedOnSystem",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "checkEquals",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FilenameUtilsTestCase#testEqualsOnSystem" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "equals",
          "parameters" : [ "java.lang.String", "java.lang.String", "boolean", "org.apache.commons.io.IOCase" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "equalsOnSystem",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "testEqualsOnSystem",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "checkEquals",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FilenameUtilsTestCase#testEquals_fullControl" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "doNormalize",
          "parameters" : [ "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "equals",
          "parameters" : [ "java.lang.String", "java.lang.String", "boolean", "org.apache.commons.io.IOCase" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "getPrefixLength",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSeparator",
          "parameters" : [ "char" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "normalize",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "testEquals_fullControl",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "checkEquals",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FilenameUtilsTestCase#testGetBaseName" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "getBaseName",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "getName",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "indexOfExtension",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "indexOfLastSeparator",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "removeExtension",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "testGetBaseName",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FilenameUtilsTestCase#testGetExtension" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "getExtension",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "indexOfExtension",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "indexOfLastSeparator",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "testGetExtension",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FilenameUtilsTestCase#testGetFullPath" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "doGetFullPath",
          "parameters" : [ "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "getFullPath",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "getPrefix",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "getPrefixLength",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "indexOfLastSeparator",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSeparator",
          "parameters" : [ "char" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "testGetFullPath",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FilenameUtilsTestCase#testGetFullPathNoEndSeparator" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "doGetFullPath",
          "parameters" : [ "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "getFullPathNoEndSeparator",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "getPrefixLength",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "indexOfLastSeparator",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSeparator",
          "parameters" : [ "char" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "testGetFullPathNoEndSeparator",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FilenameUtilsTestCase#testGetName" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "getName",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "indexOfLastSeparator",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "testGetName",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FilenameUtilsTestCase#testGetPath" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "doGetPath",
          "parameters" : [ "java.lang.String", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "getPath",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "getPrefixLength",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "indexOfLastSeparator",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSeparator",
          "parameters" : [ "char" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "testGetPath",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FilenameUtilsTestCase#testGetPathNoEndSeparator" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "doGetPath",
          "parameters" : [ "java.lang.String", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "getPath",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "getPathNoEndSeparator",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "getPrefixLength",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "indexOfLastSeparator",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSeparator",
          "parameters" : [ "char" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "testGetPathNoEndSeparator",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FilenameUtilsTestCase#testGetPrefix" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "getPrefix",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "getPrefixLength",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSeparator",
          "parameters" : [ "char" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "testGetPrefix",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FilenameUtilsTestCase#testGetPrefixLength" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "getPrefixLength",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSeparator",
          "parameters" : [ "char" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "testGetPrefixLength",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FilenameUtilsTestCase#testIndexOfExtension" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "indexOfExtension",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "indexOfLastSeparator",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "testIndexOfExtension",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FilenameUtilsTestCase#testIndexOfLastSeparator" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "indexOfLastSeparator",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "testIndexOfLastSeparator",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FilenameUtilsTestCase#testIsExtension" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "getExtension",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "indexOfExtension",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "indexOfLastSeparator",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isExtension",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "testIsExtension",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FilenameUtilsTestCase#testIsExtensionArray" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "getExtension",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "indexOfExtension",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "indexOfLastSeparator",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isExtension",
          "parameters" : [ "java.lang.String", "java.lang.String[]" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "testIsExtensionArray",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FilenameUtilsTestCase#testIsExtensionCollection" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "getExtension",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "indexOfExtension",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "indexOfLastSeparator",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isExtension",
          "parameters" : [ "java.lang.String", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "testIsExtensionCollection",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FilenameUtilsTestCase#testNormalize" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "doNormalize",
          "parameters" : [ "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "getPrefixLength",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSeparator",
          "parameters" : [ "char" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "normalize",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "testNormalize",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FilenameUtilsTestCase#testNormalizeNoEndSeparator" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "doNormalize",
          "parameters" : [ "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "getPrefixLength",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSeparator",
          "parameters" : [ "char" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "normalizeNoEndSeparator",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "testNormalizeNoEndSeparator",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FilenameUtilsTestCase#testRemoveExtension" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "indexOfExtension",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "indexOfLastSeparator",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "removeExtension",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "testRemoveExtension",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FilenameUtilsTestCase#testSeparatorsToSystem" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "separatorsToSystem",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "separatorsToUnix",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "testSeparatorsToSystem",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FilenameUtilsTestCase#testSeparatorsToUnix" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "separatorsToUnix",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "testSeparatorsToUnix",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FilenameUtilsTestCase#testSeparatorsToWindows" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "separatorsToWindows",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsTestCase",
          "method" : "testSeparatorsToWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.FilenameUtilsWildcardTestCase#testMatch" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "splitOnTokens",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "wildcardMatch",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "wildcardMatch",
          "parameters" : [ "java.lang.String", "java.lang.String", "org.apache.commons.io.IOCase" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsWildcardTestCase",
          "method" : "testMatch",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "convertCase",
          "parameters" : [ "java.lang.String" ]
        } ]
      },
      "org.apache.commons.io.FilenameUtilsWildcardTestCase#testMatch2" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "splitOnTokens",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "wildcardMatch",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "wildcardMatch",
          "parameters" : [ "java.lang.String", "java.lang.String", "org.apache.commons.io.IOCase" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsWildcardTestCase",
          "method" : "assertMatch",
          "parameters" : [ "java.lang.String", "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsWildcardTestCase",
          "method" : "testMatch2",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "convertCase",
          "parameters" : [ "java.lang.String" ]
        } ]
      },
      "org.apache.commons.io.FilenameUtilsWildcardTestCase#testMatchCaseSpecified" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "splitOnTokens",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "wildcardMatch",
          "parameters" : [ "java.lang.String", "java.lang.String", "org.apache.commons.io.IOCase" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsWildcardTestCase",
          "method" : "testMatchCaseSpecified",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "convertCase",
          "parameters" : [ "java.lang.String" ]
        } ]
      },
      "org.apache.commons.io.FilenameUtilsWildcardTestCase#testMatchOnSystem" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "splitOnTokens",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "wildcardMatch",
          "parameters" : [ "java.lang.String", "java.lang.String", "org.apache.commons.io.IOCase" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "wildcardMatchOnSystem",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsWildcardTestCase",
          "method" : "testMatchOnSystem",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "convertCase",
          "parameters" : [ "java.lang.String" ]
        } ]
      },
      "org.apache.commons.io.FilenameUtilsWildcardTestCase#testSplitOnTokens" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "splitOnTokens",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsWildcardTestCase",
          "method" : "assertArrayEquals",
          "parameters" : [ "java.lang.Object[]", "java.lang.Object[]" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtilsWildcardTestCase",
          "method" : "testSplitOnTokens",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.HexDumpTest#testDump" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.HexDump",
          "method" : "dump",
          "parameters" : [ "byte" ]
        }, {
          "clazz" : "org.apache.commons.io.HexDump",
          "method" : "dump",
          "parameters" : [ "byte[]", "long", "java.io.OutputStream", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.HexDump",
          "method" : "dump",
          "parameters" : [ "long" ]
        }, {
          "clazz" : "org.apache.commons.io.HexDumpTest",
          "method" : "testDump",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.HexDumpTest",
          "method" : "toAscii",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.HexDumpTest",
          "method" : "toHex",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "getBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "toByteArray",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        } ]
      },
      "org.apache.commons.io.IOCaseTestCase#test_checkEndsWith_case" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "checkEndsWith",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOCaseTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOCaseTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOCaseTestCase",
          "method" : "test_checkEndsWith_case",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOCaseTestCase#test_checkEndsWith_functionality" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "checkEndsWith",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOCaseTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOCaseTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOCaseTestCase",
          "method" : "test_checkEndsWith_functionality",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOCaseTestCase#test_checkEquals_case" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "checkEquals",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOCaseTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOCaseTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOCaseTestCase",
          "method" : "test_checkEquals_case",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOCaseTestCase#test_checkEquals_functionality" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "checkEquals",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOCaseTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOCaseTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOCaseTestCase",
          "method" : "test_checkEquals_functionality",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOCaseTestCase#test_checkRegionMatches_case" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "checkRegionMatches",
          "parameters" : [ "java.lang.String", "int", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOCaseTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOCaseTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOCaseTestCase",
          "method" : "test_checkRegionMatches_case",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOCaseTestCase#test_checkRegionMatches_functionality" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "checkRegionMatches",
          "parameters" : [ "java.lang.String", "int", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOCaseTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOCaseTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOCaseTestCase",
          "method" : "test_checkRegionMatches_functionality",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOCaseTestCase#test_checkStartsWith_case" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "checkStartsWith",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOCaseTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOCaseTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOCaseTestCase",
          "method" : "test_checkStartsWith_case",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOCaseTestCase#test_checkStartsWith_functionality" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "checkStartsWith",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOCaseTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOCaseTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOCaseTestCase",
          "method" : "test_checkStartsWith_functionality",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOCaseTestCase#test_forName" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "forName",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOCaseTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOCaseTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOCaseTestCase",
          "method" : "test_forName",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOCaseTestCase#test_getName" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "getName",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOCaseTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOCaseTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOCaseTestCase",
          "method" : "test_getName",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOCaseTestCase#test_isCaseSensitive" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "isCaseSensitive",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOCaseTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOCaseTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOCaseTestCase",
          "method" : "test_isCaseSensitive",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOCaseTestCase#test_serialization" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "forName",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "readResolve",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOCaseTestCase",
          "method" : "serialize",
          "parameters" : [ "org.apache.commons.io.IOCase" ]
        }, {
          "clazz" : "org.apache.commons.io.IOCaseTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOCaseTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOCaseTestCase",
          "method" : "test_serialization",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOCaseTestCase#test_toString" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOCaseTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOCaseTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOCaseTestCase",
          "method" : "test_toString",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOUtilsCopyTestCase#testCopy_inputStreamToOutputStream" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.InputStream", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copyLarge",
          "parameters" : [ "java.io.InputStream", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsCopyTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsCopyTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsCopyTestCase",
          "method" : "testCopy_inputStreamToOutputStream",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "available",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "read",
          "parameters" : [ "byte[]" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "getBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "size",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "toByteArray",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnCloseInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream", "boolean", "boolean" ]
        } ]
      },
      "org.apache.commons.io.IOUtilsCopyTestCase#testCopy_inputStreamToOutputStream_nullIn" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.InputStream", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copyLarge",
          "parameters" : [ "java.io.InputStream", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsCopyTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsCopyTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsCopyTestCase",
          "method" : "testCopy_inputStreamToOutputStream_nullIn",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        } ]
      },
      "org.apache.commons.io.IOUtilsCopyTestCase#testCopy_inputStreamToOutputStream_nullOut" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.InputStream", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copyLarge",
          "parameters" : [ "java.io.InputStream", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsCopyTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsCopyTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsCopyTestCase",
          "method" : "testCopy_inputStreamToOutputStream_nullOut",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOUtilsCopyTestCase#testCopy_inputStreamToWriter" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.InputStream", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.Reader", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copyLarge",
          "parameters" : [ "java.io.Reader", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsCopyTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsCopyTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsCopyTestCase",
          "method" : "testCopy_inputStreamToWriter",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "available",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "read",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "getBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "size",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "toByteArray",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnCloseInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "off",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOUtilsCopyTestCase#testCopy_inputStreamToWriter_Encoding" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.InputStream", "java.io.Writer", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.Reader", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copyLarge",
          "parameters" : [ "java.io.Reader", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsCopyTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsCopyTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsCopyTestCase",
          "method" : "testCopy_inputStreamToWriter_Encoding",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "available",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "read",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "getBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "toByteArray",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnCloseInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "off",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOUtilsCopyTestCase#testCopy_inputStreamToWriter_Encoding_nullEncoding" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.InputStream", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.InputStream", "java.io.Writer", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.Reader", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copyLarge",
          "parameters" : [ "java.io.Reader", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsCopyTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsCopyTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsCopyTestCase",
          "method" : "testCopy_inputStreamToWriter_Encoding_nullEncoding",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "available",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "read",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "getBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "size",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "toByteArray",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnCloseInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "off",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOUtilsCopyTestCase#testCopy_inputStreamToWriter_Encoding_nullIn" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.InputStream", "java.io.Writer", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsCopyTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsCopyTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsCopyTestCase",
          "method" : "testCopy_inputStreamToWriter_Encoding_nullIn",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream", "boolean", "boolean" ]
        } ]
      },
      "org.apache.commons.io.IOUtilsCopyTestCase#testCopy_inputStreamToWriter_Encoding_nullOut" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.InputStream", "java.io.Writer", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.Reader", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copyLarge",
          "parameters" : [ "java.io.Reader", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsCopyTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsCopyTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsCopyTestCase",
          "method" : "testCopy_inputStreamToWriter_Encoding_nullOut",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOUtilsCopyTestCase#testCopy_inputStreamToWriter_nullIn" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.InputStream", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsCopyTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsCopyTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsCopyTestCase",
          "method" : "testCopy_inputStreamToWriter_nullIn",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream", "boolean", "boolean" ]
        } ]
      },
      "org.apache.commons.io.IOUtilsCopyTestCase#testCopy_inputStreamToWriter_nullOut" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.InputStream", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.Reader", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copyLarge",
          "parameters" : [ "java.io.Reader", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsCopyTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsCopyTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsCopyTestCase",
          "method" : "testCopy_inputStreamToWriter_nullOut",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOUtilsCopyTestCase#testCopy_readerToOutputStream" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.Reader", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.Reader", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copyLarge",
          "parameters" : [ "java.io.Reader", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsCopyTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsCopyTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsCopyTestCase",
          "method" : "testCopy_readerToOutputStream",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "available",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "read",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "getBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "size",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "toByteArray",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "flush",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnCloseInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "flush",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOUtilsCopyTestCase#testCopy_readerToOutputStream_Encoding" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.Reader", "java.io.OutputStream", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.Reader", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copyLarge",
          "parameters" : [ "java.io.Reader", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsCopyTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsCopyTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsCopyTestCase",
          "method" : "testCopy_readerToOutputStream_Encoding",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "available",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "read",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "getBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "toByteArray",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "flush",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnCloseInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "flush",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOUtilsCopyTestCase#testCopy_readerToOutputStream_Encoding_nullEncoding" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.Reader", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.Reader", "java.io.OutputStream", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.Reader", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copyLarge",
          "parameters" : [ "java.io.Reader", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsCopyTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsCopyTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsCopyTestCase",
          "method" : "testCopy_readerToOutputStream_Encoding_nullEncoding",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "available",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "read",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "getBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "size",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "toByteArray",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "flush",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnCloseInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "flush",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOUtilsCopyTestCase#testCopy_readerToOutputStream_Encoding_nullIn" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.Reader", "java.io.OutputStream", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.Reader", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copyLarge",
          "parameters" : [ "java.io.Reader", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsCopyTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsCopyTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsCopyTestCase",
          "method" : "testCopy_readerToOutputStream_Encoding_nullIn",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream", "boolean", "boolean" ]
        } ]
      },
      "org.apache.commons.io.IOUtilsCopyTestCase#testCopy_readerToOutputStream_Encoding_nullOut" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.Reader", "java.io.OutputStream", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsCopyTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsCopyTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsCopyTestCase",
          "method" : "testCopy_readerToOutputStream_Encoding_nullOut",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnCloseInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        } ]
      },
      "org.apache.commons.io.IOUtilsCopyTestCase#testCopy_readerToOutputStream_nullIn" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.Reader", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.Reader", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copyLarge",
          "parameters" : [ "java.io.Reader", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsCopyTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsCopyTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsCopyTestCase",
          "method" : "testCopy_readerToOutputStream_nullIn",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream", "boolean", "boolean" ]
        } ]
      },
      "org.apache.commons.io.IOUtilsCopyTestCase#testCopy_readerToOutputStream_nullOut" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.Reader", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsCopyTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsCopyTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsCopyTestCase",
          "method" : "testCopy_readerToOutputStream_nullOut",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnCloseInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        } ]
      },
      "org.apache.commons.io.IOUtilsCopyTestCase#testCopy_readerToWriter" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.Reader", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copyLarge",
          "parameters" : [ "java.io.Reader", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsCopyTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsCopyTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsCopyTestCase",
          "method" : "testCopy_readerToWriter",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "available",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "read",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "getBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "size",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "toByteArray",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnCloseInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "off",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOUtilsCopyTestCase#testCopy_readerToWriter_nullIn" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.Reader", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copyLarge",
          "parameters" : [ "java.io.Reader", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsCopyTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsCopyTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsCopyTestCase",
          "method" : "testCopy_readerToWriter_nullIn",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream", "boolean", "boolean" ]
        } ]
      },
      "org.apache.commons.io.IOUtilsCopyTestCase#testCopy_readerToWriter_nullOut" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.Reader", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copyLarge",
          "parameters" : [ "java.io.Reader", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsCopyTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsCopyTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsCopyTestCase",
          "method" : "testCopy_readerToWriter_nullOut",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "read",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnCloseInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        } ]
      },
      "org.apache.commons.io.IOUtilsTestCase#testByteArrayToOutputStream" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.CopyUtils",
          "method" : "copy",
          "parameters" : [ "byte[]", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.InputStream", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copyLarge",
          "parameters" : [ "java.io.InputStream", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "toByteArray",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsTestCase",
          "method" : "testByteArrayToOutputStream",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "getBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "toByteArray",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "assertEqualContent",
          "parameters" : [ "java.io.File", "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "checkFile",
          "parameters" : [ "java.io.File", "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "checkWrite",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "deleteFile",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "newFile",
          "parameters" : [ "java.lang.String" ]
        } ]
      },
      "org.apache.commons.io.IOUtilsTestCase#testByteArrayToString" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.InputStream", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copyLarge",
          "parameters" : [ "java.io.InputStream", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "toByteArray",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "toString",
          "parameters" : [ "byte[]" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsTestCase",
          "method" : "assertEqualContent",
          "parameters" : [ "byte[]", "byte[]" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsTestCase",
          "method" : "testByteArrayToString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "getBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "toByteArray",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOUtilsTestCase#testByteArrayToWriter" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.CopyUtils",
          "method" : "copy",
          "parameters" : [ "byte[]", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.CopyUtils",
          "method" : "copy",
          "parameters" : [ "java.io.InputStream", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.CopyUtils",
          "method" : "copy",
          "parameters" : [ "java.io.Reader", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.InputStream", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copyLarge",
          "parameters" : [ "java.io.InputStream", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "toByteArray",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsTestCase",
          "method" : "testByteArrayToWriter",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "getBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "toByteArray",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "assertEqualContent",
          "parameters" : [ "java.io.File", "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "checkFile",
          "parameters" : [ "java.io.File", "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "checkWrite",
          "parameters" : [ "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "deleteFile",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "newFile",
          "parameters" : [ "java.lang.String" ]
        } ]
      },
      "org.apache.commons.io.IOUtilsTestCase#testConstants" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsTestCase",
          "method" : "testConstants",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOUtilsTestCase#testInputStreamToByteArray" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.InputStream", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copyLarge",
          "parameters" : [ "java.io.InputStream", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "toByteArray",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsTestCase",
          "method" : "testInputStreamToByteArray",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "getBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "toByteArray",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "assertEqualContent",
          "parameters" : [ "byte[]", "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOUtilsTestCase#testInputStreamToCharArray" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.InputStream", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.Reader", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copyLarge",
          "parameters" : [ "java.io.Reader", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "toCharArray",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsTestCase",
          "method" : "testInputStreamToCharArray",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "assertEqualContent",
          "parameters" : [ "char[]", "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOUtilsTestCase#testInputStreamToCharArrayWithEncoding" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.InputStream", "java.io.Writer", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.Reader", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copyLarge",
          "parameters" : [ "java.io.Reader", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "toCharArray",
          "parameters" : [ "java.io.InputStream", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsTestCase",
          "method" : "testInputStreamToCharArrayWithEncoding",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "assertEqualContent",
          "parameters" : [ "char[]", "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOUtilsTestCase#testInputStreamToString" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.InputStream", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.Reader", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copyLarge",
          "parameters" : [ "java.io.Reader", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "toString",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsTestCase",
          "method" : "testInputStreamToString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOUtilsTestCase#testReadLines_InputStream" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "readLines",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "readLines",
          "parameters" : [ "java.io.Reader" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsTestCase",
          "method" : "testReadLines_InputStream",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createLineBasedFile",
          "parameters" : [ "java.io.File", "java.lang.String[]" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "deleteFile",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "newFile",
          "parameters" : [ "java.lang.String" ]
        } ]
      },
      "org.apache.commons.io.IOUtilsTestCase#testReadLines_InputStream_String" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "readLines",
          "parameters" : [ "java.io.InputStream", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "readLines",
          "parameters" : [ "java.io.Reader" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsTestCase",
          "method" : "testReadLines_InputStream_String",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createLineBasedFile",
          "parameters" : [ "java.io.File", "java.lang.String[]" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "deleteFile",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "newFile",
          "parameters" : [ "java.lang.String" ]
        } ]
      },
      "org.apache.commons.io.IOUtilsTestCase#testReadLines_Reader" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.Reader" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "readLines",
          "parameters" : [ "java.io.Reader" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsTestCase",
          "method" : "testReadLines_Reader",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createLineBasedFile",
          "parameters" : [ "java.io.File", "java.lang.String[]" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "deleteFile",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "newFile",
          "parameters" : [ "java.lang.String" ]
        } ]
      },
      "org.apache.commons.io.IOUtilsTestCase#testReaderToCharArray" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.Reader", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copyLarge",
          "parameters" : [ "java.io.Reader", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "toCharArray",
          "parameters" : [ "java.io.Reader" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsTestCase",
          "method" : "testReaderToCharArray",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "assertEqualContent",
          "parameters" : [ "char[]", "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOUtilsTestCase#testReaderToString" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.Reader", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copyLarge",
          "parameters" : [ "java.io.Reader", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "toString",
          "parameters" : [ "java.io.Reader" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsTestCase",
          "method" : "testReaderToString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOUtilsTestCase#testStringToByteArray" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.Reader", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copyLarge",
          "parameters" : [ "java.io.Reader", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "toByteArray",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "toString",
          "parameters" : [ "java.io.Reader" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsTestCase",
          "method" : "assertEqualContent",
          "parameters" : [ "byte[]", "byte[]" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsTestCase",
          "method" : "testStringToByteArray",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOUtilsTestCase#testStringToInputStream" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.InputStream", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copyLarge",
          "parameters" : [ "java.io.InputStream", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "toByteArray",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "toInputStream",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "toInputStream",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsTestCase",
          "method" : "assertEqualContent",
          "parameters" : [ "byte[]", "byte[]" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsTestCase",
          "method" : "testStringToInputStream",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "getBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "toByteArray",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOUtilsTestCase#testStringToOutputStream" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.CopyUtils",
          "method" : "copy",
          "parameters" : [ "java.io.Reader", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.CopyUtils",
          "method" : "copy",
          "parameters" : [ "java.lang.String", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.Reader", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copyLarge",
          "parameters" : [ "java.io.Reader", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "toString",
          "parameters" : [ "java.io.Reader" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsTestCase",
          "method" : "testStringToOutputStream",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "assertEqualContent",
          "parameters" : [ "java.io.File", "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "checkFile",
          "parameters" : [ "java.io.File", "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "checkWrite",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "deleteFile",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "newFile",
          "parameters" : [ "java.lang.String" ]
        } ]
      },
      "org.apache.commons.io.IOUtilsTestCase#testStringToWriter" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.CopyUtils",
          "method" : "copy",
          "parameters" : [ "java.lang.String", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.Reader", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copyLarge",
          "parameters" : [ "java.io.Reader", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "toString",
          "parameters" : [ "java.io.Reader" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsTestCase",
          "method" : "testStringToWriter",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "assertEqualContent",
          "parameters" : [ "java.io.File", "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "checkFile",
          "parameters" : [ "java.io.File", "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "checkWrite",
          "parameters" : [ "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "deleteFile",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "newFile",
          "parameters" : [ "java.lang.String" ]
        } ]
      },
      "org.apache.commons.io.IOUtilsWriteTestCase#testWriteLines_OutputStream" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "writeLines",
          "parameters" : [ "java.util.Collection", "java.lang.String", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "testWriteLines_OutputStream",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "getBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "toByteArray",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "flush",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "flush",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "off",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOUtilsWriteTestCase#testWriteLines_OutputStream_Encoding" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "writeLines",
          "parameters" : [ "java.util.Collection", "java.lang.String", "java.io.OutputStream", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "testWriteLines_OutputStream_Encoding",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "getBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "toByteArray",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "toString",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "flush",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "flush",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "off",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOUtilsWriteTestCase#testWriteLines_OutputStream_Encoding_nullData" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "writeLines",
          "parameters" : [ "java.util.Collection", "java.lang.String", "java.io.OutputStream", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "testWriteLines_OutputStream_Encoding_nullData",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "size",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "flush",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "flush",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "off",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOUtilsWriteTestCase#testWriteLines_OutputStream_Encoding_nullEncoding" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "writeLines",
          "parameters" : [ "java.util.Collection", "java.lang.String", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "writeLines",
          "parameters" : [ "java.util.Collection", "java.lang.String", "java.io.OutputStream", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "testWriteLines_OutputStream_Encoding_nullEncoding",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "getBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "toByteArray",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "flush",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "flush",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "off",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOUtilsWriteTestCase#testWriteLines_OutputStream_Encoding_nullSeparator" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "writeLines",
          "parameters" : [ "java.util.Collection", "java.lang.String", "java.io.OutputStream", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "testWriteLines_OutputStream_Encoding_nullSeparator",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "getBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "toByteArray",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "flush",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "flush",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "off",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOUtilsWriteTestCase#testWriteLines_OutputStream_Encoding_nullStream" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "writeLines",
          "parameters" : [ "java.util.Collection", "java.lang.String", "java.io.OutputStream", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "testWriteLines_OutputStream_Encoding_nullStream",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOUtilsWriteTestCase#testWriteLines_OutputStream_nullData" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "writeLines",
          "parameters" : [ "java.util.Collection", "java.lang.String", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "testWriteLines_OutputStream_nullData",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "size",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "flush",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "flush",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "off",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOUtilsWriteTestCase#testWriteLines_OutputStream_nullSeparator" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "writeLines",
          "parameters" : [ "java.util.Collection", "java.lang.String", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "testWriteLines_OutputStream_nullSeparator",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "getBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "toByteArray",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "flush",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "flush",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "off",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOUtilsWriteTestCase#testWriteLines_OutputStream_nullStream" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "writeLines",
          "parameters" : [ "java.util.Collection", "java.lang.String", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "testWriteLines_OutputStream_nullStream",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOUtilsWriteTestCase#testWriteLines_Writer" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "writeLines",
          "parameters" : [ "java.util.Collection", "java.lang.String", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "testWriteLines_Writer",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "getBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "toByteArray",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "off",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOUtilsWriteTestCase#testWriteLines_Writer_nullData" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "writeLines",
          "parameters" : [ "java.util.Collection", "java.lang.String", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "testWriteLines_Writer_nullData",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "size",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "off",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOUtilsWriteTestCase#testWriteLines_Writer_nullSeparator" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "writeLines",
          "parameters" : [ "java.util.Collection", "java.lang.String", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "testWriteLines_Writer_nullSeparator",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "getBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "toByteArray",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "off",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOUtilsWriteTestCase#testWriteLines_Writer_nullStream" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "writeLines",
          "parameters" : [ "java.util.Collection", "java.lang.String", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "testWriteLines_Writer_nullStream",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOUtilsWriteTestCase#testWrite_byteArrayToOutputStream" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "write",
          "parameters" : [ "byte[]", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "testWrite_byteArrayToOutputStream",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "getBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "size",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "toByteArray",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "flush",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "flush",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "off",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOUtilsWriteTestCase#testWrite_byteArrayToOutputStream_nullData" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "write",
          "parameters" : [ "byte[]", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "testWrite_byteArrayToOutputStream_nullData",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "size",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "flush",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "flush",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "off",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOUtilsWriteTestCase#testWrite_byteArrayToOutputStream_nullStream" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "write",
          "parameters" : [ "byte[]", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "testWrite_byteArrayToOutputStream_nullStream",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOUtilsWriteTestCase#testWrite_byteArrayToWriter" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "write",
          "parameters" : [ "byte[]", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "testWrite_byteArrayToWriter",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "getBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "size",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "toByteArray",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "off",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOUtilsWriteTestCase#testWrite_byteArrayToWriter_Encoding" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "write",
          "parameters" : [ "byte[]", "java.io.Writer", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "testWrite_byteArrayToWriter_Encoding",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "getBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "toByteArray",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "off",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOUtilsWriteTestCase#testWrite_byteArrayToWriter_Encoding_nullData" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "write",
          "parameters" : [ "byte[]", "java.io.Writer", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "testWrite_byteArrayToWriter_Encoding_nullData",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "size",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "off",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOUtilsWriteTestCase#testWrite_byteArrayToWriter_Encoding_nullEncoding" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "write",
          "parameters" : [ "byte[]", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "write",
          "parameters" : [ "byte[]", "java.io.Writer", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "testWrite_byteArrayToWriter_Encoding_nullEncoding",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "getBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "size",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "toByteArray",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "off",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOUtilsWriteTestCase#testWrite_byteArrayToWriter_Encoding_nullWriter" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "write",
          "parameters" : [ "byte[]", "java.io.Writer", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "testWrite_byteArrayToWriter_Encoding_nullWriter",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOUtilsWriteTestCase#testWrite_byteArrayToWriter_nullData" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "write",
          "parameters" : [ "byte[]", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "testWrite_byteArrayToWriter_nullData",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "size",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "off",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOUtilsWriteTestCase#testWrite_byteArrayToWriter_nullWriter" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "write",
          "parameters" : [ "byte[]", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "testWrite_byteArrayToWriter_nullWriter",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOUtilsWriteTestCase#testWrite_charArrayToOutputStream" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "write",
          "parameters" : [ "char[]", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "testWrite_charArrayToOutputStream",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "getBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "size",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "toByteArray",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "flush",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "flush",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "off",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOUtilsWriteTestCase#testWrite_charArrayToOutputStream_Encoding" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "write",
          "parameters" : [ "char[]", "java.io.OutputStream", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "testWrite_charArrayToOutputStream_Encoding",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "getBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "toByteArray",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "flush",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "flush",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "off",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOUtilsWriteTestCase#testWrite_charArrayToOutputStream_Encoding_nullData" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "write",
          "parameters" : [ "char[]", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "testWrite_charArrayToOutputStream_Encoding_nullData",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "size",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "flush",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "flush",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "off",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOUtilsWriteTestCase#testWrite_charArrayToOutputStream_Encoding_nullStream" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "write",
          "parameters" : [ "char[]", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "testWrite_charArrayToOutputStream_Encoding_nullStream",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOUtilsWriteTestCase#testWrite_charArrayToOutputStream_nullData" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "write",
          "parameters" : [ "char[]", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "testWrite_charArrayToOutputStream_nullData",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "size",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "flush",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "flush",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "off",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOUtilsWriteTestCase#testWrite_charArrayToOutputStream_nullEncoding" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "write",
          "parameters" : [ "char[]", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "write",
          "parameters" : [ "char[]", "java.io.OutputStream", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "testWrite_charArrayToOutputStream_nullEncoding",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "getBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "size",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "toByteArray",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "flush",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "flush",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "off",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOUtilsWriteTestCase#testWrite_charArrayToOutputStream_nullStream" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "write",
          "parameters" : [ "char[]", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "testWrite_charArrayToOutputStream_nullStream",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOUtilsWriteTestCase#testWrite_charArrayToWriter" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "write",
          "parameters" : [ "char[]", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "testWrite_charArrayToWriter",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "getBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "size",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "toByteArray",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "off",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOUtilsWriteTestCase#testWrite_charArrayToWriter_Encoding_nullData" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "write",
          "parameters" : [ "char[]", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "testWrite_charArrayToWriter_Encoding_nullData",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "size",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "off",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOUtilsWriteTestCase#testWrite_charArrayToWriter_Encoding_nullStream" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "write",
          "parameters" : [ "char[]", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "testWrite_charArrayToWriter_Encoding_nullStream",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOUtilsWriteTestCase#testWrite_stringToOutputStream" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "write",
          "parameters" : [ "java.lang.String", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "testWrite_stringToOutputStream",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "getBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "size",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "toByteArray",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "flush",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "flush",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "off",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOUtilsWriteTestCase#testWrite_stringToOutputStream_Encoding" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "write",
          "parameters" : [ "java.lang.String", "java.io.OutputStream", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "testWrite_stringToOutputStream_Encoding",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "getBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "toByteArray",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "flush",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "flush",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "off",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOUtilsWriteTestCase#testWrite_stringToOutputStream_Encoding_nullData" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "write",
          "parameters" : [ "java.lang.String", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "testWrite_stringToOutputStream_Encoding_nullData",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "size",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "flush",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "flush",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "off",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOUtilsWriteTestCase#testWrite_stringToOutputStream_Encoding_nullStream" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "write",
          "parameters" : [ "java.lang.String", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "testWrite_stringToOutputStream_Encoding_nullStream",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOUtilsWriteTestCase#testWrite_stringToOutputStream_nullData" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "write",
          "parameters" : [ "java.lang.String", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "testWrite_stringToOutputStream_nullData",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "size",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "flush",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "flush",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "off",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOUtilsWriteTestCase#testWrite_stringToOutputStream_nullEncoding" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "write",
          "parameters" : [ "java.lang.String", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "write",
          "parameters" : [ "java.lang.String", "java.io.OutputStream", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "testWrite_stringToOutputStream_nullEncoding",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "getBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "size",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "toByteArray",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "flush",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "flush",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "off",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOUtilsWriteTestCase#testWrite_stringToOutputStream_nullStream" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "write",
          "parameters" : [ "java.lang.String", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "testWrite_stringToOutputStream_nullStream",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOUtilsWriteTestCase#testWrite_stringToWriter" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "write",
          "parameters" : [ "java.lang.String", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "testWrite_stringToWriter",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "getBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "size",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "toByteArray",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "off",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOUtilsWriteTestCase#testWrite_stringToWriter_Encoding_nullData" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "write",
          "parameters" : [ "java.lang.String", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "testWrite_stringToWriter_Encoding_nullData",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "size",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream",
          "method" : "off",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.IOUtilsWriteTestCase#testWrite_stringToWriter_Encoding_nullStream" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "write",
          "parameters" : [ "java.lang.String", "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtilsWriteTestCase",
          "method" : "testWrite_stringToWriter_Encoding_nullStream",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.LineIteratorTestCase#testCloseEarly" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "lineIterator",
          "parameters" : [ "java.io.File", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "writeLines",
          "parameters" : [ "java.io.File", "java.lang.String", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "writeLines",
          "parameters" : [ "java.io.File", "java.lang.String", "java.util.Collection", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.Reader" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "lineIterator",
          "parameters" : [ "java.io.InputStream", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "writeLines",
          "parameters" : [ "java.util.Collection", "java.lang.String", "java.io.OutputStream", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "<init>",
          "parameters" : [ "java.io.Reader" ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "close",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "closeQuietly",
          "parameters" : [ "org.apache.commons.io.LineIterator" ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "hasNext",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "isValidLine",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "next",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "nextLine",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.LineIteratorTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "java.lang.String", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.LineIteratorTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.LineIteratorTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.LineIteratorTestCase",
          "method" : "testCloseEarly",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.LineIteratorTestCase#testConstructor" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "<init>",
          "parameters" : [ "java.io.Reader" ]
        }, {
          "clazz" : "org.apache.commons.io.LineIteratorTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.LineIteratorTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.LineIteratorTestCase",
          "method" : "testConstructor",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.LineIteratorTestCase#testFiltering" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "writeLines",
          "parameters" : [ "java.io.File", "java.lang.String", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "writeLines",
          "parameters" : [ "java.io.File", "java.lang.String", "java.util.Collection", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.Reader" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "writeLines",
          "parameters" : [ "java.util.Collection", "java.lang.String", "java.io.OutputStream", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "<init>",
          "parameters" : [ "java.io.Reader" ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "close",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "closeQuietly",
          "parameters" : [ "org.apache.commons.io.LineIterator" ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "hasNext",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "next",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "nextLine",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "remove",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.LineIteratorTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "java.lang.String", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.LineIteratorTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.LineIteratorTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.LineIteratorTestCase",
          "method" : "testFiltering",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.LineIteratorTestCase#testInvalidEncoding" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "lineIterator",
          "parameters" : [ "java.io.File", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "writeLines",
          "parameters" : [ "java.io.File", "java.lang.String", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "writeLines",
          "parameters" : [ "java.io.File", "java.lang.String", "java.util.Collection", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "lineIterator",
          "parameters" : [ "java.io.InputStream", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "writeLines",
          "parameters" : [ "java.util.Collection", "java.lang.String", "java.io.OutputStream", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "closeQuietly",
          "parameters" : [ "org.apache.commons.io.LineIterator" ]
        }, {
          "clazz" : "org.apache.commons.io.LineIteratorTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "java.lang.String", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.LineIteratorTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.LineIteratorTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.LineIteratorTestCase",
          "method" : "testInvalidEncoding",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.LineIteratorTestCase#testMissingFile" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "lineIterator",
          "parameters" : [ "java.io.File", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "closeQuietly",
          "parameters" : [ "org.apache.commons.io.LineIterator" ]
        }, {
          "clazz" : "org.apache.commons.io.LineIteratorTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.LineIteratorTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.LineIteratorTestCase",
          "method" : "testMissingFile",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.LineIteratorTestCase#testNextLineOnly" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "lineIterator",
          "parameters" : [ "java.io.File", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "writeLines",
          "parameters" : [ "java.io.File", "java.lang.String", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "writeLines",
          "parameters" : [ "java.io.File", "java.lang.String", "java.util.Collection", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.Reader" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "lineIterator",
          "parameters" : [ "java.io.InputStream", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "writeLines",
          "parameters" : [ "java.util.Collection", "java.lang.String", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "writeLines",
          "parameters" : [ "java.util.Collection", "java.lang.String", "java.io.OutputStream", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "<init>",
          "parameters" : [ "java.io.Reader" ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "close",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "closeQuietly",
          "parameters" : [ "org.apache.commons.io.LineIterator" ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "hasNext",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "isValidLine",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "nextLine",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.LineIteratorTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "java.lang.String", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.LineIteratorTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.LineIteratorTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.LineIteratorTestCase",
          "method" : "testNextLineOnly",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.LineIteratorTestCase#testNextOnly" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "lineIterator",
          "parameters" : [ "java.io.File", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "writeLines",
          "parameters" : [ "java.io.File", "java.lang.String", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "writeLines",
          "parameters" : [ "java.io.File", "java.lang.String", "java.util.Collection", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.Reader" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "lineIterator",
          "parameters" : [ "java.io.InputStream", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "writeLines",
          "parameters" : [ "java.util.Collection", "java.lang.String", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "writeLines",
          "parameters" : [ "java.util.Collection", "java.lang.String", "java.io.OutputStream", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "<init>",
          "parameters" : [ "java.io.Reader" ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "close",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "closeQuietly",
          "parameters" : [ "org.apache.commons.io.LineIterator" ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "hasNext",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "isValidLine",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "next",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "nextLine",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.LineIteratorTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "java.lang.String", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.LineIteratorTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.LineIteratorTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.LineIteratorTestCase",
          "method" : "testNextOnly",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.LineIteratorTestCase#testOneLines" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "lineIterator",
          "parameters" : [ "java.io.File", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "writeLines",
          "parameters" : [ "java.io.File", "java.lang.String", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "writeLines",
          "parameters" : [ "java.io.File", "java.lang.String", "java.util.Collection", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.Reader" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "lineIterator",
          "parameters" : [ "java.io.InputStream", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "writeLines",
          "parameters" : [ "java.util.Collection", "java.lang.String", "java.io.OutputStream", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "<init>",
          "parameters" : [ "java.io.Reader" ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "close",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "closeQuietly",
          "parameters" : [ "org.apache.commons.io.LineIterator" ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "hasNext",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "isValidLine",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "next",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "nextLine",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "remove",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.LineIteratorTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "java.lang.String", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.LineIteratorTestCase",
          "method" : "doTestFileWithSpecifiedLines",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.LineIteratorTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.LineIteratorTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.LineIteratorTestCase",
          "method" : "testOneLines",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.LineIteratorTestCase#testThreeLines" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "lineIterator",
          "parameters" : [ "java.io.File", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "writeLines",
          "parameters" : [ "java.io.File", "java.lang.String", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "writeLines",
          "parameters" : [ "java.io.File", "java.lang.String", "java.util.Collection", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.Reader" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "lineIterator",
          "parameters" : [ "java.io.InputStream", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "writeLines",
          "parameters" : [ "java.util.Collection", "java.lang.String", "java.io.OutputStream", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "<init>",
          "parameters" : [ "java.io.Reader" ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "close",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "closeQuietly",
          "parameters" : [ "org.apache.commons.io.LineIterator" ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "hasNext",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "isValidLine",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "next",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "nextLine",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "remove",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.LineIteratorTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "java.lang.String", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.LineIteratorTestCase",
          "method" : "doTestFileWithSpecifiedLines",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.LineIteratorTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.LineIteratorTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.LineIteratorTestCase",
          "method" : "testThreeLines",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.LineIteratorTestCase#testTwoLines" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "lineIterator",
          "parameters" : [ "java.io.File", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "writeLines",
          "parameters" : [ "java.io.File", "java.lang.String", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "writeLines",
          "parameters" : [ "java.io.File", "java.lang.String", "java.util.Collection", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.Reader" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "lineIterator",
          "parameters" : [ "java.io.InputStream", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "writeLines",
          "parameters" : [ "java.util.Collection", "java.lang.String", "java.io.OutputStream", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "<init>",
          "parameters" : [ "java.io.Reader" ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "close",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "closeQuietly",
          "parameters" : [ "org.apache.commons.io.LineIterator" ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "hasNext",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "isValidLine",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "next",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "nextLine",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "remove",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.LineIteratorTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "java.lang.String", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.LineIteratorTestCase",
          "method" : "doTestFileWithSpecifiedLines",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.LineIteratorTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.LineIteratorTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.LineIteratorTestCase",
          "method" : "testTwoLines",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.LineIteratorTestCase#testValidEncoding" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "lineIterator",
          "parameters" : [ "java.io.File", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "writeLines",
          "parameters" : [ "java.io.File", "java.lang.String", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "writeLines",
          "parameters" : [ "java.io.File", "java.lang.String", "java.util.Collection", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.Reader" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "lineIterator",
          "parameters" : [ "java.io.InputStream", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "writeLines",
          "parameters" : [ "java.util.Collection", "java.lang.String", "java.io.OutputStream", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "<init>",
          "parameters" : [ "java.io.Reader" ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "close",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "closeQuietly",
          "parameters" : [ "org.apache.commons.io.LineIterator" ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "hasNext",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "isValidLine",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "next",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "nextLine",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.LineIteratorTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "java.lang.String", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.LineIteratorTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.LineIteratorTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.LineIteratorTestCase",
          "method" : "testValidEncoding",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.LineIteratorTestCase#testZeroLines" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "lineIterator",
          "parameters" : [ "java.io.File", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "writeLines",
          "parameters" : [ "java.io.File", "java.lang.String", "java.util.Collection" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "writeLines",
          "parameters" : [ "java.io.File", "java.lang.String", "java.util.Collection", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.Reader" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "lineIterator",
          "parameters" : [ "java.io.InputStream", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "writeLines",
          "parameters" : [ "java.util.Collection", "java.lang.String", "java.io.OutputStream", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "<init>",
          "parameters" : [ "java.io.Reader" ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "close",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "closeQuietly",
          "parameters" : [ "org.apache.commons.io.LineIterator" ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "hasNext",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "next",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "nextLine",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.LineIterator",
          "method" : "remove",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.LineIteratorTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "java.lang.String", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.LineIteratorTestCase",
          "method" : "doTestFileWithSpecifiedLines",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.LineIteratorTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.LineIteratorTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.LineIteratorTestCase",
          "method" : "testZeroLines",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.filefilter.FileFilterTestCase#testAgeFilter" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "isFileNewer",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AbstractFileFilter",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AbstractFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AgeFileFilter",
          "method" : "<init>",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AgeFileFilter",
          "method" : "<init>",
          "parameters" : [ "java.io.File", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AgeFileFilter",
          "method" : "<init>",
          "parameters" : [ "java.util.Date" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AgeFileFilter",
          "method" : "<init>",
          "parameters" : [ "java.util.Date", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AgeFileFilter",
          "method" : "<init>",
          "parameters" : [ "long" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AgeFileFilter",
          "method" : "<init>",
          "parameters" : [ "long", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AgeFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "assertFiltering",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "java.io.File", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "testAgeFilter",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterUtils",
          "method" : "ageFileFilter",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterUtils",
          "method" : "ageFileFilter",
          "parameters" : [ "java.io.File", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterUtils",
          "method" : "ageFileFilter",
          "parameters" : [ "java.util.Date" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterUtils",
          "method" : "ageFileFilter",
          "parameters" : [ "java.util.Date", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterUtils",
          "method" : "ageFileFilter",
          "parameters" : [ "long" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterUtils",
          "method" : "ageFileFilter",
          "parameters" : [ "long", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.filefilter.FileFilterTestCase#testAnd" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AbstractFileFilter",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AndFileFilter",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AndFileFilter",
          "method" : "<init>",
          "parameters" : [ "java.util.List" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AndFileFilter",
          "method" : "<init>",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AndFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AndFileFilter",
          "method" : "addFileFilter",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AndFileFilter",
          "method" : "getFileFilters",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FalseFileFilter",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FalseFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "assertFiltering",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "java.io.File", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "testAnd",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.TrueFileFilter",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.TrueFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.filefilter.FileFilterTestCase#testCanRead" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AbstractFileFilter",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AbstractFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AndFileFilter",
          "method" : "<init>",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AndFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AndFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AndFileFilter",
          "method" : "addFileFilter",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.CanReadFileFilter",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.CanReadFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.CanWriteFileFilter",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.CanWriteFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "assertFiltering",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "java.io.File", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "testCanRead",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.NotFileFilter",
          "method" : "<init>",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.NotFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.NotFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.filefilter.FileFilterTestCase#testCanWrite" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AbstractFileFilter",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AbstractFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.CanWriteFileFilter",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.CanWriteFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "assertFiltering",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "java.io.File", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "testCanWrite",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.NotFileFilter",
          "method" : "<init>",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.NotFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.NotFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.filefilter.FileFilterTestCase#testDelegateFileFilter" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AbstractFileFilter",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AbstractFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.DelegateFileFilter",
          "method" : "<init>",
          "parameters" : [ "java.io.FileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.DelegateFileFilter",
          "method" : "<init>",
          "parameters" : [ "java.io.FilenameFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.DelegateFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.DelegateFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "assertFiltering",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "java.io.File", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "testDelegateFileFilter",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.OrFileFilter",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.OrFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.OrFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.filefilter.FileFilterTestCase#testDeprecatedWildcard" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "splitOnTokens",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "wildcardMatch",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "wildcardMatch",
          "parameters" : [ "java.lang.String", "java.lang.String", "org.apache.commons.io.IOCase" ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "convertCase",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AbstractFileFilter",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "assertFiltering",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "java.io.File", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "testDeprecatedWildcard",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.WildcardFilter",
          "method" : "<init>",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.WildcardFilter",
          "method" : "<init>",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.WildcardFilter",
          "method" : "<init>",
          "parameters" : [ "java.util.List" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.WildcardFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.WildcardFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.filefilter.FileFilterTestCase#testDirectory" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AbstractFileFilter",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AbstractFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.DirectoryFileFilter",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.DirectoryFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "assertFiltering",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "java.io.File", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "testDirectory",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.filefilter.FileFilterTestCase#testEmpty" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AbstractFileFilter",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AbstractFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.EmptyFileFilter",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.EmptyFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "assertFiltering",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "java.io.File", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "testEmpty",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.NotFileFilter",
          "method" : "<init>",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.NotFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.NotFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.filefilter.FileFilterTestCase#testFalse" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FalseFileFilter",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FalseFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "assertFiltering",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "java.io.File", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "testFalse",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterUtils",
          "method" : "falseFileFilter",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.filefilter.FileFilterTestCase#testFiles" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AbstractFileFilter",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AbstractFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFileFilter",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "assertFiltering",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "java.io.File", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "testFiles",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.filefilter.FileFilterTestCase#testHidden" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AbstractFileFilter",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AbstractFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "assertFiltering",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "java.io.File", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "testHidden",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.HiddenFileFilter",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.HiddenFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.NotFileFilter",
          "method" : "<init>",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.NotFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.NotFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.filefilter.FileFilterTestCase#testMakeCVSAware" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "checkEquals",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AbstractFileFilter",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AbstractFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AndFileFilter",
          "method" : "<init>",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AndFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AndFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AndFileFilter",
          "method" : "addFileFilter",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.DirectoryFileFilter",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.DirectoryFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "assertFiltering",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "java.io.File", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "testMakeCVSAware",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterUtils",
          "method" : "andFileFilter",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterUtils",
          "method" : "directoryFileFilter",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterUtils",
          "method" : "makeCVSAware",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterUtils",
          "method" : "nameFileFilter",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterUtils",
          "method" : "notFileFilter",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.NameFileFilter",
          "method" : "<init>",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.NameFileFilter",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "org.apache.commons.io.IOCase" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.NameFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.NameFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.NotFileFilter",
          "method" : "<init>",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.NotFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.NotFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.filefilter.FileFilterTestCase#testMakeDirectoryOnly" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "checkEquals",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AbstractFileFilter",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AbstractFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AndFileFilter",
          "method" : "<init>",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AndFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AndFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AndFileFilter",
          "method" : "addFileFilter",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.DirectoryFileFilter",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.DirectoryFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "assertFiltering",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "java.io.File", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "testMakeDirectoryOnly",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterUtils",
          "method" : "makeDirectoryOnly",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterUtils",
          "method" : "nameFileFilter",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.NameFileFilter",
          "method" : "<init>",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.NameFileFilter",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "org.apache.commons.io.IOCase" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.NameFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.NameFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.filefilter.FileFilterTestCase#testMakeFileOnly" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "checkEquals",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AbstractFileFilter",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AbstractFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AndFileFilter",
          "method" : "<init>",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AndFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AndFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AndFileFilter",
          "method" : "addFileFilter",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFileFilter",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "assertFiltering",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "java.io.File", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "testMakeFileOnly",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterUtils",
          "method" : "makeFileOnly",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterUtils",
          "method" : "nameFileFilter",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.NameFileFilter",
          "method" : "<init>",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.NameFileFilter",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "org.apache.commons.io.IOCase" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.NameFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.NameFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.filefilter.FileFilterTestCase#testMakeSVNAware" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "checkEquals",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AbstractFileFilter",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AbstractFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AndFileFilter",
          "method" : "<init>",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AndFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AndFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AndFileFilter",
          "method" : "addFileFilter",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.DirectoryFileFilter",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.DirectoryFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "assertFiltering",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "java.io.File", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "testMakeSVNAware",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterUtils",
          "method" : "andFileFilter",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterUtils",
          "method" : "directoryFileFilter",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterUtils",
          "method" : "makeSVNAware",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterUtils",
          "method" : "nameFileFilter",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterUtils",
          "method" : "notFileFilter",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.NameFileFilter",
          "method" : "<init>",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.NameFileFilter",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "org.apache.commons.io.IOCase" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.NameFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.NameFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.NotFileFilter",
          "method" : "<init>",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.NotFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.NotFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.filefilter.FileFilterTestCase#testNameFilter" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "checkEquals",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AbstractFileFilter",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "assertFiltering",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "java.io.File", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "testNameFilter",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.NameFileFilter",
          "method" : "<init>",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.NameFileFilter",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "org.apache.commons.io.IOCase" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.NameFileFilter",
          "method" : "<init>",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.NameFileFilter",
          "method" : "<init>",
          "parameters" : [ "java.lang.String[]", "org.apache.commons.io.IOCase" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.NameFileFilter",
          "method" : "<init>",
          "parameters" : [ "java.util.List" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.NameFileFilter",
          "method" : "<init>",
          "parameters" : [ "java.util.List", "org.apache.commons.io.IOCase" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.NameFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.filefilter.FileFilterTestCase#testNameFilterNullArgument" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AbstractFileFilter",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "testNameFilterNullArgument",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.NameFileFilter",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "org.apache.commons.io.IOCase" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.filefilter.FileFilterTestCase#testNameFilterNullArrayArgument" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AbstractFileFilter",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "testNameFilterNullArrayArgument",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.NameFileFilter",
          "method" : "<init>",
          "parameters" : [ "java.lang.String[]", "org.apache.commons.io.IOCase" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.filefilter.FileFilterTestCase#testNameFilterNullListArgument" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AbstractFileFilter",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "testNameFilterNullListArgument",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.NameFileFilter",
          "method" : "<init>",
          "parameters" : [ "java.util.List", "org.apache.commons.io.IOCase" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.filefilter.FileFilterTestCase#testNot" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AbstractFileFilter",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "assertFiltering",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "java.io.File", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "testNot",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterUtils",
          "method" : "notFileFilter",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterUtils",
          "method" : "trueFileFilter",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.NotFileFilter",
          "method" : "<init>",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.NotFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.TrueFileFilter",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.TrueFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.filefilter.FileFilterTestCase#testOr" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AbstractFileFilter",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FalseFileFilter",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FalseFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FalseFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "assertFiltering",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "java.io.File", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "testOr",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.OrFileFilter",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.OrFileFilter",
          "method" : "<init>",
          "parameters" : [ "java.util.List" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.OrFileFilter",
          "method" : "<init>",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.OrFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.OrFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.OrFileFilter",
          "method" : "addFileFilter",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.OrFileFilter",
          "method" : "getFileFilters",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.OrFileFilter",
          "method" : "removeFileFilter",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.OrFileFilter",
          "method" : "setFileFilters",
          "parameters" : [ "java.util.List" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.TrueFileFilter",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.TrueFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.TrueFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.filefilter.FileFilterTestCase#testPrefix" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AbstractFileFilter",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "assertFiltering",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "java.io.File", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "testPrefix",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterUtils",
          "method" : "prefixFileFilter",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.PrefixFileFilter",
          "method" : "<init>",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.PrefixFileFilter",
          "method" : "<init>",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.PrefixFileFilter",
          "method" : "<init>",
          "parameters" : [ "java.util.List" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.PrefixFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.PrefixFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.filefilter.FileFilterTestCase#testSizeFilter" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceDelete",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AbstractFileFilter",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AbstractFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AndFileFilter",
          "method" : "<init>",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AndFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AndFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AndFileFilter",
          "method" : "addFileFilter",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "assertFiltering",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "java.io.File", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "testSizeFilter",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterUtils",
          "method" : "sizeFileFilter",
          "parameters" : [ "long" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterUtils",
          "method" : "sizeFileFilter",
          "parameters" : [ "long", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterUtils",
          "method" : "sizeRangeFileFilter",
          "parameters" : [ "long", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.SizeFileFilter",
          "method" : "<init>",
          "parameters" : [ "long" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.SizeFileFilter",
          "method" : "<init>",
          "parameters" : [ "long", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.SizeFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "createFile",
          "parameters" : [ "java.io.File", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "generateTestData",
          "parameters" : [ "java.io.OutputStream", "long" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.filefilter.FileFilterTestCase#testSuffix" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AbstractFileFilter",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "assertFiltering",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "java.io.File", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "testSuffix",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterUtils",
          "method" : "orFileFilter",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterUtils",
          "method" : "suffixFileFilter",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.OrFileFilter",
          "method" : "<init>",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.OrFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.OrFileFilter",
          "method" : "addFileFilter",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.SuffixFileFilter",
          "method" : "<init>",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.SuffixFileFilter",
          "method" : "<init>",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.SuffixFileFilter",
          "method" : "<init>",
          "parameters" : [ "java.util.List" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.SuffixFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.SuffixFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.filefilter.FileFilterTestCase#testTrue" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "assertFiltering",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "java.io.File", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "testTrue",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterUtils",
          "method" : "trueFileFilter",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.TrueFileFilter",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.TrueFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.filefilter.FileFilterTestCase#testWildcard" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "cleanDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "deleteDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "isSystemWindows",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "splitOnTokens",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.FilenameUtils",
          "method" : "wildcardMatch",
          "parameters" : [ "java.lang.String", "java.lang.String", "org.apache.commons.io.IOCase" ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.IOCase",
          "method" : "convertCase",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.AbstractFileFilter",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "assertFiltering",
          "parameters" : [ "org.apache.commons.io.filefilter.IOFileFilter", "java.io.File", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.FileFilterTestCase",
          "method" : "testWildcard",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.WildcardFileFilter",
          "method" : "<init>",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.WildcardFileFilter",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "org.apache.commons.io.IOCase" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.WildcardFileFilter",
          "method" : "<init>",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.WildcardFileFilter",
          "method" : "<init>",
          "parameters" : [ "java.lang.String[]", "org.apache.commons.io.IOCase" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.WildcardFileFilter",
          "method" : "<init>",
          "parameters" : [ "java.util.List" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.WildcardFileFilter",
          "method" : "<init>",
          "parameters" : [ "java.util.List", "org.apache.commons.io.IOCase" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.WildcardFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.filefilter.WildcardFileFilter",
          "method" : "accept",
          "parameters" : [ "java.io.File", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.input.ClassLoaderObjectInputStreamTest#testExpected" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.input.ClassLoaderObjectInputStream",
          "method" : "<init>",
          "parameters" : [ "java.lang.ClassLoader", "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.ClassLoaderObjectInputStream",
          "method" : "resolveClass",
          "parameters" : [ "java.io.ObjectStreamClass" ]
        }, {
          "clazz" : "org.apache.commons.io.input.ClassLoaderObjectInputStreamTest",
          "method" : "testExpected",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.input.CountingInputStreamTest#testCounting" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.input.CountingInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.CountingInputStream",
          "method" : "getByteCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.CountingInputStream",
          "method" : "getCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.CountingInputStream",
          "method" : "read",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.CountingInputStream",
          "method" : "read",
          "parameters" : [ "byte[]" ]
        }, {
          "clazz" : "org.apache.commons.io.input.CountingInputStream",
          "method" : "read",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.input.CountingInputStreamTest",
          "method" : "testCounting",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "read",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "read",
          "parameters" : [ "byte[]" ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "read",
          "parameters" : [ "byte[]", "int", "int" ]
        } ]
      },
      "org.apache.commons.io.input.CountingInputStreamTest#testEOF1" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.input.CountingInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.CountingInputStream",
          "method" : "getByteCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.CountingInputStream",
          "method" : "getCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.CountingInputStream",
          "method" : "read",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.CountingInputStreamTest",
          "method" : "testEOF1",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "read",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.input.CountingInputStreamTest#testEOF2" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.input.CountingInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.CountingInputStream",
          "method" : "getByteCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.CountingInputStream",
          "method" : "getCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.CountingInputStream",
          "method" : "read",
          "parameters" : [ "byte[]" ]
        }, {
          "clazz" : "org.apache.commons.io.input.CountingInputStreamTest",
          "method" : "testEOF2",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "read",
          "parameters" : [ "byte[]" ]
        } ]
      },
      "org.apache.commons.io.input.CountingInputStreamTest#testEOF3" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.input.CountingInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.CountingInputStream",
          "method" : "getByteCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.CountingInputStream",
          "method" : "getCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.CountingInputStream",
          "method" : "read",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.input.CountingInputStreamTest",
          "method" : "testEOF3",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "read",
          "parameters" : [ "byte[]", "int", "int" ]
        } ]
      },
      "org.apache.commons.io.input.CountingInputStreamTest#testResetting" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.input.CountingInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.CountingInputStream",
          "method" : "getByteCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.CountingInputStream",
          "method" : "getCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.CountingInputStream",
          "method" : "read",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.input.CountingInputStream",
          "method" : "resetByteCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.CountingInputStream",
          "method" : "resetCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.CountingInputStreamTest",
          "method" : "testResetting",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "read",
          "parameters" : [ "byte[]", "int", "int" ]
        } ]
      },
      "org.apache.commons.io.input.CountingInputStreamTest#testSkipping" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.input.CountingInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.CountingInputStream",
          "method" : "getByteCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.CountingInputStream",
          "method" : "getCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.CountingInputStream",
          "method" : "read",
          "parameters" : [ "byte[]" ]
        }, {
          "clazz" : "org.apache.commons.io.input.CountingInputStream",
          "method" : "skip",
          "parameters" : [ "long" ]
        }, {
          "clazz" : "org.apache.commons.io.input.CountingInputStreamTest",
          "method" : "testSkipping",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "read",
          "parameters" : [ "byte[]" ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "skip",
          "parameters" : [ "long" ]
        } ]
      },
      "org.apache.commons.io.input.CountingInputStreamTest#testZeroLength1" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.input.CountingInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.CountingInputStream",
          "method" : "getByteCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.CountingInputStream",
          "method" : "getCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.CountingInputStream",
          "method" : "read",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.CountingInputStreamTest",
          "method" : "testZeroLength1",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "read",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.input.CountingInputStreamTest#testZeroLength2" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.input.CountingInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.CountingInputStream",
          "method" : "getByteCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.CountingInputStream",
          "method" : "getCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.CountingInputStream",
          "method" : "read",
          "parameters" : [ "byte[]" ]
        }, {
          "clazz" : "org.apache.commons.io.input.CountingInputStreamTest",
          "method" : "testZeroLength2",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "read",
          "parameters" : [ "byte[]" ]
        } ]
      },
      "org.apache.commons.io.input.CountingInputStreamTest#testZeroLength3" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.input.CountingInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.CountingInputStream",
          "method" : "getByteCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.CountingInputStream",
          "method" : "getCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.CountingInputStream",
          "method" : "read",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.input.CountingInputStreamTest",
          "method" : "testZeroLength3",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "read",
          "parameters" : [ "byte[]", "int", "int" ]
        } ]
      },
      "org.apache.commons.io.input.NullInputStreamTest#testEOFException" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.input.NullInputStream",
          "method" : "<init>",
          "parameters" : [ "long", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullInputStream",
          "method" : "doEndOfFile",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullInputStream",
          "method" : "getPosition",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullInputStream",
          "method" : "read",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullInputStreamTest",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullInputStreamTest",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullInputStreamTest",
          "method" : "testEOFException",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullInputStreamTest$TestNullInputStream",
          "method" : "<init>",
          "parameters" : [ "int", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullInputStreamTest$TestNullInputStream",
          "method" : "processByte",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.input.NullInputStreamTest#testMarkAndReset" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.input.NullInputStream",
          "method" : "<init>",
          "parameters" : [ "long", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullInputStream",
          "method" : "getPosition",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullInputStream",
          "method" : "mark",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullInputStream",
          "method" : "markSupported",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullInputStream",
          "method" : "read",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullInputStream",
          "method" : "reset",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullInputStreamTest",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullInputStreamTest",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullInputStreamTest",
          "method" : "testMarkAndReset",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullInputStreamTest$TestNullInputStream",
          "method" : "<init>",
          "parameters" : [ "int", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullInputStreamTest$TestNullInputStream",
          "method" : "processByte",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.input.NullInputStreamTest#testMarkNotSupported" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.input.NullInputStream",
          "method" : "<init>",
          "parameters" : [ "long", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullInputStream",
          "method" : "mark",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullInputStream",
          "method" : "markSupported",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullInputStream",
          "method" : "reset",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullInputStreamTest",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullInputStreamTest",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullInputStreamTest",
          "method" : "testMarkNotSupported",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullInputStreamTest$TestNullInputStream",
          "method" : "<init>",
          "parameters" : [ "int", "boolean", "boolean" ]
        } ]
      },
      "org.apache.commons.io.input.NullInputStreamTest#testRead" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.input.NullInputStream",
          "method" : "<init>",
          "parameters" : [ "long" ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullInputStream",
          "method" : "<init>",
          "parameters" : [ "long", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullInputStream",
          "method" : "available",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullInputStream",
          "method" : "close",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullInputStream",
          "method" : "doEndOfFile",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullInputStream",
          "method" : "getPosition",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullInputStream",
          "method" : "read",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullInputStreamTest",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullInputStreamTest",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullInputStreamTest",
          "method" : "testRead",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullInputStreamTest$TestNullInputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullInputStreamTest$TestNullInputStream",
          "method" : "processByte",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.input.NullInputStreamTest#testReadByteArray" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.input.NullInputStream",
          "method" : "<init>",
          "parameters" : [ "long" ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullInputStream",
          "method" : "<init>",
          "parameters" : [ "long", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullInputStream",
          "method" : "close",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullInputStream",
          "method" : "doEndOfFile",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullInputStream",
          "method" : "getPosition",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullInputStream",
          "method" : "read",
          "parameters" : [ "byte[]" ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullInputStream",
          "method" : "read",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullInputStreamTest",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullInputStreamTest",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullInputStreamTest",
          "method" : "testReadByteArray",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullInputStreamTest$TestNullInputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullInputStreamTest$TestNullInputStream",
          "method" : "processBytes",
          "parameters" : [ "byte[]", "int", "int" ]
        } ]
      },
      "org.apache.commons.io.input.NullInputStreamTest#testSkip" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.input.NullInputStream",
          "method" : "<init>",
          "parameters" : [ "long", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullInputStream",
          "method" : "doEndOfFile",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullInputStream",
          "method" : "getPosition",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullInputStream",
          "method" : "read",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullInputStream",
          "method" : "skip",
          "parameters" : [ "long" ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullInputStreamTest",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullInputStreamTest",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullInputStreamTest",
          "method" : "testSkip",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullInputStreamTest$TestNullInputStream",
          "method" : "<init>",
          "parameters" : [ "int", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullInputStreamTest$TestNullInputStream",
          "method" : "processByte",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.input.NullReaderTest#testEOFException" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.input.NullReader",
          "method" : "<init>",
          "parameters" : [ "long", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullReader",
          "method" : "doEndOfFile",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullReader",
          "method" : "getPosition",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullReader",
          "method" : "read",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullReaderTest",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullReaderTest",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullReaderTest",
          "method" : "testEOFException",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullReaderTest$TestNullReader",
          "method" : "<init>",
          "parameters" : [ "int", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullReaderTest$TestNullReader",
          "method" : "processChar",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.input.NullReaderTest#testMarkAndReset" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.input.NullReader",
          "method" : "<init>",
          "parameters" : [ "long", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullReader",
          "method" : "getPosition",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullReader",
          "method" : "mark",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullReader",
          "method" : "markSupported",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullReader",
          "method" : "read",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullReader",
          "method" : "reset",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullReaderTest",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullReaderTest",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullReaderTest",
          "method" : "testMarkAndReset",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullReaderTest$TestNullReader",
          "method" : "<init>",
          "parameters" : [ "int", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullReaderTest$TestNullReader",
          "method" : "processChar",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.input.NullReaderTest#testMarkNotSupported" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.input.NullReader",
          "method" : "<init>",
          "parameters" : [ "long", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullReader",
          "method" : "mark",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullReader",
          "method" : "markSupported",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullReader",
          "method" : "reset",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullReaderTest",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullReaderTest",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullReaderTest",
          "method" : "testMarkNotSupported",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullReaderTest$TestNullReader",
          "method" : "<init>",
          "parameters" : [ "int", "boolean", "boolean" ]
        } ]
      },
      "org.apache.commons.io.input.NullReaderTest#testRead" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.input.NullReader",
          "method" : "<init>",
          "parameters" : [ "long" ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullReader",
          "method" : "<init>",
          "parameters" : [ "long", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullReader",
          "method" : "close",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullReader",
          "method" : "doEndOfFile",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullReader",
          "method" : "getPosition",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullReader",
          "method" : "read",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullReaderTest",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullReaderTest",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullReaderTest",
          "method" : "testRead",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullReaderTest$TestNullReader",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullReaderTest$TestNullReader",
          "method" : "processChar",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.input.NullReaderTest#testReadCharArray" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.input.NullReader",
          "method" : "<init>",
          "parameters" : [ "long" ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullReader",
          "method" : "<init>",
          "parameters" : [ "long", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullReader",
          "method" : "close",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullReader",
          "method" : "doEndOfFile",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullReader",
          "method" : "getPosition",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullReader",
          "method" : "read",
          "parameters" : [ "char[]" ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullReader",
          "method" : "read",
          "parameters" : [ "char[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullReaderTest",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullReaderTest",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullReaderTest",
          "method" : "testReadCharArray",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullReaderTest$TestNullReader",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullReaderTest$TestNullReader",
          "method" : "processChars",
          "parameters" : [ "char[]", "int", "int" ]
        } ]
      },
      "org.apache.commons.io.input.NullReaderTest#testSkip" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.input.NullReader",
          "method" : "<init>",
          "parameters" : [ "long", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullReader",
          "method" : "doEndOfFile",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullReader",
          "method" : "getPosition",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullReader",
          "method" : "read",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullReader",
          "method" : "skip",
          "parameters" : [ "long" ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullReaderTest",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullReaderTest",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullReaderTest",
          "method" : "testSkip",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullReaderTest$TestNullReader",
          "method" : "<init>",
          "parameters" : [ "int", "boolean", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.input.NullReaderTest$TestNullReader",
          "method" : "processChar",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.input.SwappedDataInputStreamTest#testReadBoolean" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStream",
          "method" : "readBoolean",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStream",
          "method" : "readByte",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStreamTest",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStreamTest",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStreamTest",
          "method" : "testReadBoolean",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.input.SwappedDataInputStreamTest#testReadByte" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStream",
          "method" : "readByte",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStreamTest",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStreamTest",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStreamTest",
          "method" : "testReadByte",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.input.SwappedDataInputStreamTest#testReadChar" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "read",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "readSwappedShort",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStream",
          "method" : "readChar",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStream",
          "method" : "readShort",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStreamTest",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStreamTest",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStreamTest",
          "method" : "testReadChar",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.input.SwappedDataInputStreamTest#testReadDouble" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "readSwappedDouble",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "readSwappedLong",
          "parameters" : [ "byte[]", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "readSwappedLong",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStream",
          "method" : "readDouble",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStreamTest",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStreamTest",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStreamTest",
          "method" : "testReadDouble",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.input.SwappedDataInputStreamTest#testReadFloat" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "read",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "readSwappedFloat",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "readSwappedInteger",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStream",
          "method" : "readFloat",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStreamTest",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStreamTest",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStreamTest",
          "method" : "testReadFloat",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.input.SwappedDataInputStreamTest#testReadFully" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "read",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStream",
          "method" : "readFully",
          "parameters" : [ "byte[]" ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStream",
          "method" : "readFully",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStreamTest",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStreamTest",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStreamTest",
          "method" : "testReadFully",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.input.SwappedDataInputStreamTest#testReadInt" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "read",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "readSwappedInteger",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStream",
          "method" : "readInt",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStreamTest",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStreamTest",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStreamTest",
          "method" : "testReadInt",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.input.SwappedDataInputStreamTest#testReadLine" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStream",
          "method" : "readLine",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStreamTest",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStreamTest",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStreamTest",
          "method" : "testReadLine",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.input.SwappedDataInputStreamTest#testReadLong" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "readSwappedLong",
          "parameters" : [ "byte[]", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "readSwappedLong",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStream",
          "method" : "readLong",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStreamTest",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStreamTest",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStreamTest",
          "method" : "testReadLong",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.input.SwappedDataInputStreamTest#testReadShort" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "read",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "readSwappedShort",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStream",
          "method" : "readShort",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStreamTest",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStreamTest",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStreamTest",
          "method" : "testReadShort",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.input.SwappedDataInputStreamTest#testReadUTF" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStream",
          "method" : "readUTF",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStreamTest",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStreamTest",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStreamTest",
          "method" : "testReadUTF",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.input.SwappedDataInputStreamTest#testReadUnsignedByte" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStream",
          "method" : "readUnsignedByte",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStreamTest",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStreamTest",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStreamTest",
          "method" : "testReadUnsignedByte",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.input.SwappedDataInputStreamTest#testReadUnsignedShort" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "read",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "readSwappedUnsignedShort",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStream",
          "method" : "readUnsignedShort",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStreamTest",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStreamTest",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStreamTest",
          "method" : "testReadUnsignedShort",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.input.SwappedDataInputStreamTest#testSkipBytes" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "read",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.EndianUtils",
          "method" : "readSwappedInteger",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.ProxyInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStream",
          "method" : "readInt",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStream",
          "method" : "skipBytes",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStreamTest",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStreamTest",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.input.SwappedDataInputStreamTest",
          "method" : "testSkipBytes",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.output.ByteArrayOutputStreamTestCase#testStream" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "getBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "reset",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "size",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "toByteArray",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "toString",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "write",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "writeTo",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStreamTestCase",
          "method" : "byteCmp",
          "parameters" : [ "byte[]", "byte[]" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStreamTestCase",
          "method" : "checkByteArrays",
          "parameters" : [ "byte[]", "byte[]" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStreamTestCase",
          "method" : "checkStreams",
          "parameters" : [ "org.apache.commons.io.output.ByteArrayOutputStream", "org.apache.commons.io.output.java.io.ByteArrayOutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStreamTestCase",
          "method" : "testStream",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStreamTestCase",
          "method" : "writeData",
          "parameters" : [ "org.apache.commons.io.output.ByteArrayOutputStream", "org.apache.commons.io.output.java.io.ByteArrayOutputStream", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStreamTestCase",
          "method" : "writeData",
          "parameters" : [ "org.apache.commons.io.output.ByteArrayOutputStream", "org.apache.commons.io.output.java.io.ByteArrayOutputStream", "int[]" ]
        } ]
      },
      "org.apache.commons.io.output.CountingOutputStreamTest#testCounting" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.output.CountingOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.output.CountingOutputStream",
          "method" : "getByteCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.CountingOutputStream",
          "method" : "getCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.CountingOutputStream",
          "method" : "resetByteCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.CountingOutputStream",
          "method" : "resetCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.CountingOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]" ]
        }, {
          "clazz" : "org.apache.commons.io.output.CountingOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.CountingOutputStream",
          "method" : "write",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.CountingOutputStreamTest",
          "method" : "assertByteArrayEquals",
          "parameters" : [ "java.lang.String", "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.CountingOutputStreamTest",
          "method" : "testCounting",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "write",
          "parameters" : [ "int" ]
        } ]
      },
      "org.apache.commons.io.output.DeferredFileOutputStreamTest#testAboveThreshold" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "getBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "writeTo",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.output.DeferredFileOutputStream",
          "method" : "<init>",
          "parameters" : [ "int", "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.output.DeferredFileOutputStream",
          "method" : "close",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.DeferredFileOutputStream",
          "method" : "getData",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.DeferredFileOutputStream",
          "method" : "getStream",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.DeferredFileOutputStream",
          "method" : "isInMemory",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.DeferredFileOutputStream",
          "method" : "thresholdReached",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.DeferredFileOutputStreamTest",
          "method" : "testAboveThreshold",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.DeferredFileOutputStreamTest",
          "method" : "verifyResultFile",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ThresholdingOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ThresholdingOutputStream",
          "method" : "checkThreshold",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ThresholdingOutputStream",
          "method" : "close",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ThresholdingOutputStream",
          "method" : "flush",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ThresholdingOutputStream",
          "method" : "isThresholdExceeded",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ThresholdingOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        } ]
      },
      "org.apache.commons.io.output.DeferredFileOutputStreamTest#testAtThreshold" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "close",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "getBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "toByteArray",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.DeferredFileOutputStream",
          "method" : "<init>",
          "parameters" : [ "int", "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.output.DeferredFileOutputStream",
          "method" : "close",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.DeferredFileOutputStream",
          "method" : "getData",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.DeferredFileOutputStream",
          "method" : "getStream",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.DeferredFileOutputStream",
          "method" : "isInMemory",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.DeferredFileOutputStreamTest",
          "method" : "testAtThreshold",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ThresholdingOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ThresholdingOutputStream",
          "method" : "checkThreshold",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ThresholdingOutputStream",
          "method" : "close",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ThresholdingOutputStream",
          "method" : "flush",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ThresholdingOutputStream",
          "method" : "isThresholdExceeded",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ThresholdingOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        } ]
      },
      "org.apache.commons.io.output.DeferredFileOutputStreamTest#testBelowThreshold" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "close",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "getBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "toByteArray",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.DeferredFileOutputStream",
          "method" : "<init>",
          "parameters" : [ "int", "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.output.DeferredFileOutputStream",
          "method" : "close",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.DeferredFileOutputStream",
          "method" : "getData",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.DeferredFileOutputStream",
          "method" : "getStream",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.DeferredFileOutputStream",
          "method" : "isInMemory",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.DeferredFileOutputStreamTest",
          "method" : "testBelowThreshold",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ThresholdingOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ThresholdingOutputStream",
          "method" : "checkThreshold",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ThresholdingOutputStream",
          "method" : "close",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ThresholdingOutputStream",
          "method" : "flush",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ThresholdingOutputStream",
          "method" : "isThresholdExceeded",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ThresholdingOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        } ]
      },
      "org.apache.commons.io.output.DeferredFileOutputStreamTest#testThresholdReached" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "getBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "writeTo",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.output.DeferredFileOutputStream",
          "method" : "<init>",
          "parameters" : [ "int", "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.output.DeferredFileOutputStream",
          "method" : "close",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.DeferredFileOutputStream",
          "method" : "getData",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.DeferredFileOutputStream",
          "method" : "getStream",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.DeferredFileOutputStream",
          "method" : "isInMemory",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.DeferredFileOutputStream",
          "method" : "thresholdReached",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.DeferredFileOutputStreamTest",
          "method" : "testThresholdReached",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.DeferredFileOutputStreamTest",
          "method" : "verifyResultFile",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ThresholdingOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ThresholdingOutputStream",
          "method" : "checkThreshold",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ThresholdingOutputStream",
          "method" : "close",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ThresholdingOutputStream",
          "method" : "flush",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ThresholdingOutputStream",
          "method" : "isThresholdExceeded",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ThresholdingOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        } ]
      },
      "org.apache.commons.io.output.DeferredFileOutputStreamTest#testWriteToLarge" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.InputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copy",
          "parameters" : [ "java.io.InputStream", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "copyLarge",
          "parameters" : [ "java.io.InputStream", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "getBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "toByteArray",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "writeTo",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.output.DeferredFileOutputStream",
          "method" : "<init>",
          "parameters" : [ "int", "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.output.DeferredFileOutputStream",
          "method" : "close",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.DeferredFileOutputStream",
          "method" : "getStream",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.DeferredFileOutputStream",
          "method" : "isInMemory",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.DeferredFileOutputStream",
          "method" : "thresholdReached",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.DeferredFileOutputStream",
          "method" : "writeTo",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.output.DeferredFileOutputStreamTest",
          "method" : "testWriteToLarge",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.DeferredFileOutputStreamTest",
          "method" : "verifyResultFile",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ThresholdingOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ThresholdingOutputStream",
          "method" : "checkThreshold",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ThresholdingOutputStream",
          "method" : "close",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ThresholdingOutputStream",
          "method" : "flush",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ThresholdingOutputStream",
          "method" : "isThresholdExceeded",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ThresholdingOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]" ]
        } ]
      },
      "org.apache.commons.io.output.DeferredFileOutputStreamTest#testWriteToSmall" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "close",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "getBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "needNewBuffer",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "toByteArray",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ByteArrayOutputStream",
          "method" : "writeTo",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.output.DeferredFileOutputStream",
          "method" : "<init>",
          "parameters" : [ "int", "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.output.DeferredFileOutputStream",
          "method" : "close",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.DeferredFileOutputStream",
          "method" : "getStream",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.DeferredFileOutputStream",
          "method" : "isInMemory",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.DeferredFileOutputStream",
          "method" : "writeTo",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.output.DeferredFileOutputStreamTest",
          "method" : "testWriteToSmall",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ThresholdingOutputStream",
          "method" : "<init>",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ThresholdingOutputStream",
          "method" : "checkThreshold",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ThresholdingOutputStream",
          "method" : "close",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ThresholdingOutputStream",
          "method" : "flush",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ThresholdingOutputStream",
          "method" : "isThresholdExceeded",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.ThresholdingOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]" ]
        } ]
      },
      "org.apache.commons.io.output.LockableFileWriterTest#testAlternateLockDir" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceMkdir",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.output.LockableFileWriter",
          "method" : "<init>",
          "parameters" : [ "java.io.File", "boolean", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.output.LockableFileWriter",
          "method" : "<init>",
          "parameters" : [ "java.io.File", "java.lang.String", "boolean", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.output.LockableFileWriter",
          "method" : "close",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.LockableFileWriter",
          "method" : "createLock",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.LockableFileWriter",
          "method" : "initWriter",
          "parameters" : [ "java.io.File", "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.output.LockableFileWriter",
          "method" : "testLockDir",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.output.LockableFileWriterTest",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.LockableFileWriterTest",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.LockableFileWriterTest",
          "method" : "testAlternateLockDir",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.output.LockableFileWriterTest#testConstructor_File_directory" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceMkdir",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.output.LockableFileWriter",
          "method" : "<init>",
          "parameters" : [ "java.io.File", "java.lang.String", "boolean", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.output.LockableFileWriterTest",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.LockableFileWriterTest",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.LockableFileWriterTest",
          "method" : "testConstructor_File_directory",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.output.LockableFileWriterTest#testConstructor_File_encoding_badEncoding" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceMkdir",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.output.LockableFileWriter",
          "method" : "<init>",
          "parameters" : [ "java.io.File", "java.lang.String", "boolean", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.output.LockableFileWriter",
          "method" : "createLock",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.LockableFileWriter",
          "method" : "initWriter",
          "parameters" : [ "java.io.File", "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.output.LockableFileWriter",
          "method" : "testLockDir",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.output.LockableFileWriterTest",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.LockableFileWriterTest",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.LockableFileWriterTest",
          "method" : "testConstructor_File_encoding_badEncoding",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.output.LockableFileWriterTest#testConstructor_File_nullFile" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.output.LockableFileWriter",
          "method" : "<init>",
          "parameters" : [ "java.io.File", "java.lang.String", "boolean", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.output.LockableFileWriterTest",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.LockableFileWriterTest",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.LockableFileWriterTest",
          "method" : "testConstructor_File_nullFile",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.output.LockableFileWriterTest#testConstructor_fileName_nullFile" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.output.LockableFileWriterTest",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.LockableFileWriterTest",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.LockableFileWriterTest",
          "method" : "testConstructor_fileName_nullFile",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.output.LockableFileWriterTest#testFileLocked" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceMkdir",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.output.LockableFileWriter",
          "method" : "<init>",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.output.LockableFileWriter",
          "method" : "<init>",
          "parameters" : [ "java.io.File", "boolean", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.output.LockableFileWriter",
          "method" : "<init>",
          "parameters" : [ "java.io.File", "java.lang.String", "boolean", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.output.LockableFileWriter",
          "method" : "close",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.LockableFileWriter",
          "method" : "createLock",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.LockableFileWriter",
          "method" : "initWriter",
          "parameters" : [ "java.io.File", "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.output.LockableFileWriter",
          "method" : "testLockDir",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.output.LockableFileWriterTest",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.LockableFileWriterTest",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.LockableFileWriterTest",
          "method" : "testFileLocked",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.output.LockableFileWriterTest#testFileNotLocked" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.FileUtils",
          "method" : "forceMkdir",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.IOUtils",
          "method" : "closeQuietly",
          "parameters" : [ "java.io.Writer" ]
        }, {
          "clazz" : "org.apache.commons.io.output.LockableFileWriter",
          "method" : "<init>",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.output.LockableFileWriter",
          "method" : "<init>",
          "parameters" : [ "java.io.File", "boolean", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.output.LockableFileWriter",
          "method" : "<init>",
          "parameters" : [ "java.io.File", "java.lang.String", "boolean", "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.output.LockableFileWriter",
          "method" : "close",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.LockableFileWriter",
          "method" : "createLock",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.LockableFileWriter",
          "method" : "initWriter",
          "parameters" : [ "java.io.File", "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.apache.commons.io.output.LockableFileWriter",
          "method" : "testLockDir",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.apache.commons.io.output.LockableFileWriterTest",
          "method" : "setUp",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.LockableFileWriterTest",
          "method" : "tearDown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.LockableFileWriterTest",
          "method" : "testFileNotLocked",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.testtools.FileBasedTestCase",
          "method" : "getTestDirectory",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.output.NullOutputStreamTest#testNull" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.output.NullOutputStream",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.NullOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]" ]
        }, {
          "clazz" : "org.apache.commons.io.output.NullOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.NullOutputStream",
          "method" : "write",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.NullOutputStreamTest",
          "method" : "testNull",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.output.NullWriterTest#testNull" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.output.NullWriter",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.NullWriter",
          "method" : "close",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.NullWriter",
          "method" : "flush",
          "parameters" : [ ]
        }, {
          "clazz" : "org.apache.commons.io.output.NullWriter",
          "method" : "write",
          "parameters" : [ "char[]" ]
        }, {
          "clazz" : "org.apache.commons.io.output.NullWriter",
          "method" : "write",
          "parameters" : [ "char[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.NullWriter",
          "method" : "write",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.NullWriter",
          "method" : "write",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.apache.commons.io.output.NullWriter",
          "method" : "write",
          "parameters" : [ "java.lang.String", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.NullWriterTest",
          "method" : "testNull",
          "parameters" : [ ]
        } ]
      },
      "org.apache.commons.io.output.TeeOutputStreamTest#testTee" : {
        "entities" : [ {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.ProxyOutputStream",
          "method" : "write",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.TeeOutputStream",
          "method" : "<init>",
          "parameters" : [ "java.io.OutputStream", "java.io.OutputStream" ]
        }, {
          "clazz" : "org.apache.commons.io.output.TeeOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]" ]
        }, {
          "clazz" : "org.apache.commons.io.output.TeeOutputStream",
          "method" : "write",
          "parameters" : [ "byte[]", "int", "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.TeeOutputStream",
          "method" : "write",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.apache.commons.io.output.TeeOutputStreamTest",
          "method" : "assertByteArrayEquals",
          "parameters" : [ "java.lang.String", "byte[]", "byte[]" ]
        }, {
          "clazz" : "org.apache.commons.io.output.TeeOutputStreamTest",
          "method" : "testTee",
          "parameters" : [ ]
        } ]
      }
    }
  },
  "commits" : {
    "7abbdd16ebee8cf4dc3d44e11f3a0f5b530c84ad" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "9561dfcf4949e5b69231e99e38572803632121ae",
      "changedClazzes" : {
        "org.apache.commons.io.DirectoryWalker" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testCancel", "testFilter", "testFilterAndLimitA", "testFilterAndLimitB", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile2", "testFilterDirAndFile3", "testFilterDirAndFile4", "testHandleStartDirectoryFalse", "testLimitToCurrent", "testMissingStartDirectory" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker#<init>" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testMultiThreadCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker#checkIfCancelled(java.io.File,int,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testMultiThreadCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker#handleCancelled(java.io.File,java.util.Collection,org.apache.commons.io.DirectoryWalker$CancelException)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testMultiThreadCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker#handleDirectory(java.io.File,int,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testMultiThreadCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker#handleDirectoryStart(java.io.File,int,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testMultiThreadCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker#handleStart(java.io.File,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testMultiThreadCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker#walk(java.io.File,int,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testMultiThreadCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker$CancelException#<init>(java.io.File,int)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testMultiThreadCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker$CancelException#getDepth" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testMultiThreadCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker$CancelException#getFile" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testMultiThreadCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCase" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testCancel", "testFilter", "testFilterAndLimitA", "testFilterAndLimitB", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile2", "testFilterDirAndFile3", "testFilterDirAndFile4", "testHandleStartDirectoryFalse", "testLimitToCurrent", "testMissingStartDirectory", "testMultiThreadCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCase#setUp" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testMultiThreadCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCase#tearDown" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testMultiThreadCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCase#testMultiThreadCancel" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testMultiThreadCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCase$TestCancelWalker" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCase$TestFalseFileFinder" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testHandleStartDirectoryFalse" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilter", "testFilterAndLimitA", "testFilterAndLimitB", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile2", "testFilterDirAndFile3", "testFilterDirAndFile4", "testHandleStartDirectoryFalse", "testLimitToCurrent", "testMissingStartDirectory" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCase$TestMultiThreadCancelWalker#<init>(java.lang.String,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testMultiThreadCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCase$TestMultiThreadCancelWalker#find(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testMultiThreadCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCase$TestMultiThreadCancelWalker#handleCancelled(java.io.File,java.util.Collection,org.apache.commons.io.CancelException)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testMultiThreadCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCase$TestMultiThreadCancelWalker#handleDirectoryEnd(java.io.File,int,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testMultiThreadCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCase$TestMultiThreadCancelWalker#handleFile(java.io.File,int,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testMultiThreadCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCase$TestMultiThreadCancelWalker#handleIsCancelled(java.io.File,int,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testMultiThreadCancel" ]
          }
        }
      }
    },
    "e7ca7823f0c4ab695b915d960833a265a383f064" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "7abbdd16ebee8cf4dc3d44e11f3a0f5b530c84ad",
      "changedClazzes" : { }
    },
    "1d0c2d0ba1ddc78070e415d05b2bd26cb288cecb" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "e7ca7823f0c4ab695b915d960833a265a383f064",
      "changedClazzes" : {
        "org.apache.commons.io.IOUtils#copy(java.io.Reader,java.io.Writer)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testFileUtils", "testReadFileToString", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_nullSeparator" ],
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_inputStreamToWriter", "testCopy_inputStreamToWriter_Encoding", "testCopy_inputStreamToWriter_Encoding_nullEncoding", "testCopy_inputStreamToWriter_Encoding_nullOut", "testCopy_inputStreamToWriter_nullOut", "testCopy_readerToOutputStream", "testCopy_readerToOutputStream_Encoding", "testCopy_readerToOutputStream_Encoding_nullEncoding", "testCopy_readerToOutputStream_Encoding_nullIn", "testCopy_readerToOutputStream_nullIn", "testCopy_readerToWriter", "testCopy_readerToWriter_nullIn", "testCopy_readerToWriter_nullOut" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testInputStreamToCharArray", "testInputStreamToCharArrayWithEncoding", "testInputStreamToString", "testReaderToCharArray", "testReaderToString", "testStringToByteArray", "testStringToOutputStream", "testStringToWriter" ]
          }
        },
        "org.apache.commons.io.IOUtilsCopyTestCase#testCopy_inputStreamToOutputStream_IO84" : { },
        "org.apache.commons.io.IOUtilsCopyTestCase#testCopy_readerToWriter_IO84" : { }
      }
    },
    "bf78bafa9586d847996d6d8e426d765026641645" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "1d0c2d0ba1ddc78070e415d05b2bd26cb288cecb",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils#touch(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testTouch" ]
          }
        }
      }
    },
    "f732c9a50cbaf0675e8b1846c8d3480c06f297a2" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "bf78bafa9586d847996d6d8e426d765026641645",
      "changedClazzes" : { }
    },
    "9c18390762527fe8d1bf7af8ded586566cdbb59c" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "f732c9a50cbaf0675e8b1846c8d3480c06f297a2",
      "changedClazzes" : {
        "org.apache.commons.io.FileCleaner" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerFile", "testFileCleanerNull" ]
          }
        },
        "org.apache.commons.io.FileCleaner#addTracker(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinished_NoTrackAfter" ]
          }
        },
        "org.apache.commons.io.FileCleaner#exitWhenFinished" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter" ]
          }
        },
        "org.apache.commons.io.FileCleaner#getTrackCount" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst" ]
          }
        },
        "org.apache.commons.io.FileCleaner#track(java.lang.String,java.lang.Object)" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinished_NoTrackAfter" ]
          }
        },
        "org.apache.commons.io.FileCleaner$Reaper#<init>" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2" ]
          }
        },
        "org.apache.commons.io.FileCleaner$Reaper#run" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2" ]
          }
        },
        "org.apache.commons.io.FileCleaner$Tracker" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerFile" ]
          }
        },
        "org.apache.commons.io.FileCleaner$Tracker#<init>(java.lang.String,org.apache.commons.io.FileDeleteStrategy,java.lang.Object,java.lang.ref.ReferenceQueue)" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2" ]
          }
        },
        "org.apache.commons.io.FileCleaner$Tracker#delete" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2" ]
          }
        },
        "org.apache.commons.io.FileCleanerTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerFile", "testFileCleanerNull" ]
          }
        },
        "org.apache.commons.io.FileCleanerTestCase#setUp" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter" ]
          }
        },
        "org.apache.commons.io.FileCleanerTestCase#tearDown" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter" ]
          }
        },
        "org.apache.commons.io.FileCleanerTestCase#testFileCleanerExitWhenFinished1" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerExitWhenFinished1" ]
          }
        },
        "org.apache.commons.io.FileCleanerTestCase#testFileCleanerExitWhenFinished2" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerExitWhenFinished2" ]
          }
        },
        "org.apache.commons.io.FileCleanerTestCase#testFileCleanerExitWhenFinishedFirst" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerExitWhenFinishedFirst" ]
          }
        },
        "org.apache.commons.io.FileCleanerTestCase#testFileCleanerExitWhenFinished_NoTrackAfter" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerExitWhenFinished_NoTrackAfter" ]
          }
        },
        "org.apache.commons.io.FileCleanerTestCase#waitUntilTrackCount" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst" ]
          }
        },
        "org.apache.commons.io.FileDeleteStrategy#<init>(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2" ]
          }
        },
        "org.apache.commons.io.FileDeleteStrategy#deleteQuietly(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2" ]
          }
        },
        "org.apache.commons.io.FileDeleteStrategy#doDelete(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2" ]
          }
        },
        "org.apache.commons.io.FileDeleteStrategy$ForceFileDeleteStrategy#<init>" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2" ]
          }
        },
        "org.apache.commons.io.FileUtils#cleanDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter" ]
          }
        },
        "org.apache.commons.io.FileUtils#deleteDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#getTestDirectory" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter" ]
          }
        }
      }
    },
    "bd9fa4b496e3dbb6074e33b04e4c78ba153d3835" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "9c18390762527fe8d1bf7af8ded586566cdbb59c",
      "changedClazzes" : { }
    },
    "82c471f355b50381d775b806047756306c8f6823" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "bd9fa4b496e3dbb6074e33b04e4c78ba153d3835",
      "changedClazzes" : { }
    },
    "3a359fbc81d647b605423eb23dd5774bd8bff482" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "82c471f355b50381d775b806047756306c8f6823",
      "changedClazzes" : { }
    },
    "97028915e2d3a4538f6409a577441bd3d6a9894a" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "3a359fbc81d647b605423eb23dd5774bd8bff482",
      "changedClazzes" : { }
    },
    "6ca31cd68b732df0ffe5b7734252a71f9f7e7ab0" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "97028915e2d3a4538f6409a577441bd3d6a9894a",
      "changedClazzes" : { }
    },
    "a354d0a5ebbb00a9758f93e72d51078177576918" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "6ca31cd68b732df0ffe5b7734252a71f9f7e7ab0",
      "changedClazzes" : {
        "org.apache.commons.io.EndianUtils#readSwappedLong(java.io.InputStream)" : {
          "testcases" : {
            "org.apache.commons.io.EndianUtilsTest" : [ "testReadSwappedDouble", "testReadSwappedLong" ],
            "org.apache.commons.io.input.SwappedDataInputStreamTest" : [ "testReadDouble", "testReadLong" ]
          }
        }
      }
    },
    "740afb04f70a27cee28eb8ade5d1b819be71c502" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "a354d0a5ebbb00a9758f93e72d51078177576918",
      "changedClazzes" : {
        "org.apache.commons.io.EndianUtils#readSwappedDouble(byte[],int)" : {
          "testcases" : {
            "org.apache.commons.io.EndianUtilsTest" : [ "testSymmetryOfLong" ]
          }
        },
        "org.apache.commons.io.EndianUtils#readSwappedLong(byte[],int)" : {
          "testcases" : {
            "org.apache.commons.io.EndianUtilsTest" : [ "testSymmetryOfLong" ]
          }
        },
        "org.apache.commons.io.EndianUtils#writeSwappedDouble(byte[],int,double)" : {
          "testcases" : {
            "org.apache.commons.io.EndianUtilsTest" : [ "testSymmetryOfLong" ]
          }
        },
        "org.apache.commons.io.EndianUtils#writeSwappedLong(byte[],int,long)" : {
          "testcases" : {
            "org.apache.commons.io.EndianUtilsTest" : [ "testSymmetryOfLong" ]
          }
        },
        "org.apache.commons.io.EndianUtilsTest" : {
          "testcases" : {
            "org.apache.commons.io.EndianUtilsTest" : [ "testReadSwappedDouble", "testReadSwappedFloat", "testReadSwappedInteger", "testReadSwappedLong", "testReadSwappedShort", "testReadSwappedUnsignedInteger", "testReadSwappedUnsignedShort", "testSwapDouble", "testSwapFloat", "testSwapInteger", "testSwapLong", "testSwapShort", "testSymmetry", "testSymmetryOfLong", "testWriteSwappedDouble", "testWriteSwappedFloat", "testWriteSwappedInteger", "testWriteSwappedLong", "testWriteSwappedShort" ]
          }
        },
        "org.apache.commons.io.EndianUtilsTest#testSymmetryOfLong" : {
          "testcases" : {
            "org.apache.commons.io.EndianUtilsTest" : [ "testSymmetryOfLong" ]
          }
        }
      }
    },
    "8c689c63db031223e93df006194baf4bbe39ec5c" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "740afb04f70a27cee28eb8ade5d1b819be71c502",
      "changedClazzes" : { }
    },
    "2e4604700c06619f6f3f69c589fc651aa4c2cd93" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "8c689c63db031223e93df006194baf4bbe39ec5c",
      "changedClazzes" : { }
    },
    "20304bc48aec7c7d4f44ca5aa34ec9a634def7ee" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "2e4604700c06619f6f3f69c589fc651aa4c2cd93",
      "changedClazzes" : { }
    },
    "9d45063b605e3a2a4fa89d82834d9d5a3a3c5111" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "20304bc48aec7c7d4f44ca5aa34ec9a634def7ee",
      "changedClazzes" : { }
    },
    "a6ddf9c05634fb7dc93ebf4b424a74033c978abb" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "9d45063b605e3a2a4fa89d82834d9d5a3a3c5111",
      "changedClazzes" : {
        "org.apache.commons.io.filefilter.FileFilterTestCase" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testAnd", "testCanRead", "testCanWrite", "testDelegateFileFilter", "testDeprecatedWildcard", "testDirectory", "testEmpty", "testFalse", "testFiles", "testHidden", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNameFilterNullArrayArgument", "testNameFilterNullListArgument", "testNot", "testOr", "testPrefix", "testSizeFilter", "testSuffix", "testTrue", "testWildcard" ]
          }
        }
      }
    },
    "808b5eb9c2139b828e513efd0fa4c86f6ae1666f" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "a6ddf9c05634fb7dc93ebf4b424a74033c978abb",
      "changedClazzes" : { }
    },
    "e590959d94f63ec375f6fbdd4ea145846025c6ed" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "808b5eb9c2139b828e513efd0fa4c86f6ae1666f",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerNull" ],
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce" ],
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testCleanEmpty", "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile", "testThrowsOnNullList" ],
            "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteDir", "testForceMkdir", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testReadFileToByteArray", "testReadFileToString", "testReadLines", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2" ],
            "org.apache.commons.io.FileUtilsWaitForTestCase" : [ "testWaitFor" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPrefix", "testGetPrefixLength", "testIndexOfExtension", "testIndexOfLastSeparator", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testNormalize", "testNormalizeNoEndSeparator", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testByteArrayToOutputStream", "testByteArrayToString", "testByteArrayToWriter", "testConstants", "testInputStreamToByteArray", "testInputStreamToCharArray", "testInputStreamToCharArrayWithEncoding", "testInputStreamToString", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testReaderToCharArray", "testReaderToString", "testStringToByteArray", "testStringToInputStream", "testStringToOutputStream", "testStringToWriter" ],
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFiltering", "testInvalidEncoding", "testMissingFile", "testNextLineOnly", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testAnd", "testCanRead", "testCanWrite", "testDelegateFileFilter", "testDeprecatedWildcard", "testDirectory", "testEmpty", "testFalse", "testFiles", "testHidden", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNameFilterNullArrayArgument", "testNameFilterNullListArgument", "testNot", "testOr", "testPrefix", "testSizeFilter", "testSuffix", "testTrue", "testWildcard" ],
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testFileLocked", "testFileNotLocked" ]
          }
        }
      }
    },
    "d577e3d97166c4ffa12d67c33532a76cec9aa5d0" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "e590959d94f63ec375f6fbdd4ea145846025c6ed",
      "changedClazzes" : {
        "org.apache.commons.io.EndianUtils#readSwappedLong(byte[],int)" : {
          "testcases" : {
            "org.apache.commons.io.EndianUtilsTest" : [ "testReadSwappedDouble", "testReadSwappedLong", "testSymmetryOfLong" ],
            "org.apache.commons.io.input.SwappedDataInputStreamTest" : [ "testReadDouble", "testReadLong" ]
          }
        }
      }
    },
    "80f7658f9c950bdde4642b6298a1f7539e61877b" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "d577e3d97166c4ffa12d67c33532a76cec9aa5d0",
      "changedClazzes" : { }
    },
    "4109764d5ce4c99d965300e47b09695f721768c7" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "80f7658f9c950bdde4642b6298a1f7539e61877b",
      "changedClazzes" : { }
    },
    "09a6cbfe4abf8693528dbc6588b4c3ba0a2836da" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "4109764d5ce4c99d965300e47b09695f721768c7",
      "changedClazzes" : {
        "org.apache.commons.io.FilenameUtils#splitOnTokens(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testListFiles" ],
            "org.apache.commons.io.FilenameUtilsWildcardTestCase" : [ "testMatch", "testMatch2", "testMatchCaseSpecified", "testMatchOnSystem", "testSplitOnTokens" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testDeprecatedWildcard", "testWildcard" ]
          }
        }
      }
    },
    "d6f6b4edfd2f23592abc95d07c38007b8215af14" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "09a6cbfe4abf8693528dbc6588b4c3ba0a2836da",
      "changedClazzes" : {
        "org.apache.commons.io.filefilter.AndFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilterAndLimitB", "testFilterAndLimitC", "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testListFiles" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAnd", "testCanRead", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testSizeFilter" ]
          }
        },
        "org.apache.commons.io.filefilter.OrFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilter", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testListFiles" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testDelegateFileFilter", "testOr", "testSuffix" ]
          }
        }
      }
    },
    "6295f654839d88b6c7a41f2c6a50f4f218575e7d" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "d6f6b4edfd2f23592abc95d07c38007b8215af14",
      "changedClazzes" : { }
    },
    "0f77ce2f3f6440a19178fa32aab3d5c9a012bb05" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "6295f654839d88b6c7a41f2c6a50f4f218575e7d",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerNull" ],
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce" ],
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testCleanEmpty", "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile", "testThrowsOnNullList" ],
            "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteDir", "testForceMkdir", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testReadFileToByteArray", "testReadFileToString", "testReadLines", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2" ],
            "org.apache.commons.io.FileUtilsWaitForTestCase" : [ "testWaitFor" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPrefix", "testGetPrefixLength", "testIndexOfExtension", "testIndexOfLastSeparator", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testNormalize", "testNormalizeNoEndSeparator", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testByteArrayToOutputStream", "testByteArrayToString", "testByteArrayToWriter", "testConstants", "testInputStreamToByteArray", "testInputStreamToCharArray", "testInputStreamToCharArrayWithEncoding", "testInputStreamToString", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testReaderToCharArray", "testReaderToString", "testStringToByteArray", "testStringToInputStream", "testStringToOutputStream", "testStringToWriter" ],
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFiltering", "testInvalidEncoding", "testMissingFile", "testNextLineOnly", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testAnd", "testCanRead", "testCanWrite", "testDelegateFileFilter", "testDeprecatedWildcard", "testDirectory", "testEmpty", "testFalse", "testFiles", "testHidden", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNameFilterNullArrayArgument", "testNameFilterNullListArgument", "testNot", "testOr", "testPrefix", "testSizeFilter", "testSuffix", "testTrue", "testWildcard" ],
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testFileLocked", "testFileNotLocked" ]
          }
        },
        "org.apache.commons.io.FileUtils#cleanDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ]
          }
        },
        "org.apache.commons.io.FileUtils#deleteDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ]
          }
        },
        "org.apache.commons.io.FileUtils#forceDelete(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ]
          }
        },
        "org.apache.commons.io.FileUtils#openOutputStream(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteDir", "testForceMkdir", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testReadFileToByteArray", "testReadFileToString", "testReadLines", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#setUp" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#tearDown" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_notExists" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#test_openOutputStream_exists" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "test_openOutputStream_exists" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#test_openOutputStream_existsButIsDirectory" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "test_openOutputStream_existsButIsDirectory" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#test_openOutputStream_notExists" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "test_openOutputStream_notExists" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#test_openOutputStream_notExistsCannotCreate" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "test_openOutputStream_notExistsCannotCreate" ]
          }
        },
        "org.apache.commons.io.IOUtils#closeQuietly(java.io.OutputStream)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "test_openOutputStream_exists" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#createFile(java.io.File,long)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#createLineBasedFile(java.io.File,java.lang.String[])" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "test_openOutputStream_exists" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#generateTestData(java.io.OutputStream,long)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#getTestDirectory" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ]
          }
        }
      }
    },
    "53ff5a5b15f8b6fccdf163e66d10bdd85bb12715" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "0f77ce2f3f6440a19178fa32aab3d5c9a012bb05",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils#copyURLToFile(java.net.URL,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testContentEquals", "testCopyURLToFile" ]
          }
        },
        "org.apache.commons.io.FileUtils#openOutputStream(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ]
          }
        },
        "org.apache.commons.io.FileUtils#touch(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testTouch" ]
          }
        },
        "org.apache.commons.io.FileUtils#writeByteArrayToFile(java.io.File,byte[])" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteByteArrayToFile" ]
          }
        },
        "org.apache.commons.io.FileUtils#writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator" ],
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testFiltering", "testInvalidEncoding", "testNextLineOnly", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ]
          }
        },
        "org.apache.commons.io.FileUtils#writeStringToFile(java.io.File,java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnNullChecksum", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToNonExistingDest", "testFileUtils", "testWriteStringToFile1", "testWriteStringToFile2" ]
          }
        }
      }
    },
    "4bc539ca1a037912681b7879d16b05af636b4657" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "53ff5a5b15f8b6fccdf163e66d10bdd85bb12715",
      "changedClazzes" : { }
    },
    "a809c5d991abc12f4e0f7ab66c45724aa07d18f4" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "4bc539ca1a037912681b7879d16b05af636b4657",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtilsTestCase#test_openOutputStream_existsButIsDirectory" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "test_openOutputStream_existsButIsDirectory" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#test_openOutputStream_notExistsCannotCreate" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "test_openOutputStream_notExistsCannotCreate" ]
          }
        }
      }
    },
    "4ba80d2eacf6e2071899bcb9349f1d874b3e2259" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "a809c5d991abc12f4e0f7ab66c45724aa07d18f4",
      "changedClazzes" : { }
    },
    "283bc423a6aa3b1ab580054373b2314e02a6285a" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "4ba80d2eacf6e2071899bcb9349f1d874b3e2259",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerNull" ],
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce" ],
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testCleanEmpty", "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile", "testThrowsOnNullList" ],
            "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteDir", "testForceMkdir", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testReadFileToByteArray", "testReadFileToString", "testReadLines", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ],
            "org.apache.commons.io.FileUtilsWaitForTestCase" : [ "testWaitFor" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPrefix", "testGetPrefixLength", "testIndexOfExtension", "testIndexOfLastSeparator", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testNormalize", "testNormalizeNoEndSeparator", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testByteArrayToOutputStream", "testByteArrayToString", "testByteArrayToWriter", "testConstants", "testInputStreamToByteArray", "testInputStreamToCharArray", "testInputStreamToCharArrayWithEncoding", "testInputStreamToString", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testReaderToCharArray", "testReaderToString", "testStringToByteArray", "testStringToInputStream", "testStringToOutputStream", "testStringToWriter" ],
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFiltering", "testInvalidEncoding", "testMissingFile", "testNextLineOnly", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testAnd", "testCanRead", "testCanWrite", "testDelegateFileFilter", "testDeprecatedWildcard", "testDirectory", "testEmpty", "testFalse", "testFiles", "testHidden", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNameFilterNullArrayArgument", "testNameFilterNullListArgument", "testNot", "testOr", "testPrefix", "testSizeFilter", "testSuffix", "testTrue", "testWildcard" ],
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testFileLocked", "testFileNotLocked" ]
          }
        },
        "org.apache.commons.io.FileUtils#cleanDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists" ]
          }
        },
        "org.apache.commons.io.FileUtils#deleteDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists" ]
          }
        },
        "org.apache.commons.io.FileUtils#forceDelete(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists" ]
          }
        },
        "org.apache.commons.io.FileUtils#openInputStream(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteDir", "testForceMkdir", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testReadFileToByteArray", "testReadFileToString", "testReadLines", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#setUp" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#tearDown" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#test_openInputStream_exists" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "test_openInputStream_exists" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#test_openInputStream_existsButIsDirectory" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "test_openInputStream_existsButIsDirectory" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#test_openInputStream_notExists" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "test_openInputStream_notExists" ]
          }
        },
        "org.apache.commons.io.IOUtils#closeQuietly(java.io.InputStream)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "test_openInputStream_exists" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#createFile(java.io.File,long)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#createLineBasedFile(java.io.File,java.lang.String[])" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "test_openInputStream_exists" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#generateTestData(java.io.OutputStream,long)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#getTestDirectory" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists" ]
          }
        }
      }
    },
    "f43c85acca857f7557de29bc7cc614bd1bead8a7" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "283bc423a6aa3b1ab580054373b2314e02a6285a",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerNull" ],
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce" ],
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testCleanEmpty", "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile", "testThrowsOnNullList" ],
            "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteDir", "testForceMkdir", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testReadFileToByteArray", "testReadFileToString", "testReadLines", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ],
            "org.apache.commons.io.FileUtilsWaitForTestCase" : [ "testWaitFor" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPrefix", "testGetPrefixLength", "testIndexOfExtension", "testIndexOfLastSeparator", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testNormalize", "testNormalizeNoEndSeparator", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testByteArrayToOutputStream", "testByteArrayToString", "testByteArrayToWriter", "testConstants", "testInputStreamToByteArray", "testInputStreamToCharArray", "testInputStreamToCharArrayWithEncoding", "testInputStreamToString", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testReaderToCharArray", "testReaderToString", "testStringToByteArray", "testStringToInputStream", "testStringToOutputStream", "testStringToWriter" ],
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFiltering", "testInvalidEncoding", "testMissingFile", "testNextLineOnly", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testAnd", "testCanRead", "testCanWrite", "testDelegateFileFilter", "testDeprecatedWildcard", "testDirectory", "testEmpty", "testFalse", "testFiles", "testHidden", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNameFilterNullArrayArgument", "testNameFilterNullListArgument", "testNot", "testOr", "testPrefix", "testSizeFilter", "testSuffix", "testTrue", "testWildcard" ],
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testFileLocked", "testFileNotLocked" ]
          }
        }
      }
    },
    "6eca4c05986bac88d1b65af83348a754efa36559" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "f43c85acca857f7557de29bc7cc614bd1bead8a7",
      "changedClazzes" : {
        "org.apache.commons.io.output.ByteArrayOutputStream" : {
          "testcases" : {
            "org.apache.commons.io.CopyUtilsTest" : [ "testCopy_byteArrayToOutputStream", "testCopy_byteArrayToWriter", "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToWriter", "testCopy_readerToOutputStream", "testCopy_readerToWriter", "testCopy_stringToOutputStream", "testCopy_stringToWriter" ],
            "org.apache.commons.io.DemuxTestCase" : [ "testOutputStream" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testReadFileToByteArray" ],
            "org.apache.commons.io.HexDumpTest" : [ "testDump" ],
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToOutputStream_nullIn", "testCopy_inputStreamToWriter", "testCopy_inputStreamToWriter_Encoding", "testCopy_inputStreamToWriter_Encoding_nullEncoding", "testCopy_inputStreamToWriter_Encoding_nullIn", "testCopy_inputStreamToWriter_nullIn", "testCopy_readerToOutputStream", "testCopy_readerToOutputStream_Encoding", "testCopy_readerToOutputStream_Encoding_nullEncoding", "testCopy_readerToOutputStream_Encoding_nullIn", "testCopy_readerToOutputStream_nullIn", "testCopy_readerToWriter", "testCopy_readerToWriter_nullIn" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testByteArrayToOutputStream", "testByteArrayToString", "testByteArrayToWriter", "testInputStreamToByteArray", "testStringToInputStream" ],
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWriteLines_OutputStream", "testWriteLines_OutputStream_Encoding", "testWriteLines_OutputStream_Encoding_nullData", "testWriteLines_OutputStream_Encoding_nullEncoding", "testWriteLines_OutputStream_Encoding_nullSeparator", "testWriteLines_OutputStream_nullData", "testWriteLines_OutputStream_nullSeparator", "testWriteLines_Writer", "testWriteLines_Writer_nullData", "testWriteLines_Writer_nullSeparator", "testWrite_byteArrayToOutputStream", "testWrite_byteArrayToOutputStream_nullData", "testWrite_byteArrayToWriter", "testWrite_byteArrayToWriter_Encoding", "testWrite_byteArrayToWriter_Encoding_nullData", "testWrite_byteArrayToWriter_Encoding_nullEncoding", "testWrite_byteArrayToWriter_nullData", "testWrite_charArrayToOutputStream", "testWrite_charArrayToOutputStream_Encoding", "testWrite_charArrayToOutputStream_Encoding_nullData", "testWrite_charArrayToOutputStream_nullData", "testWrite_charArrayToOutputStream_nullEncoding", "testWrite_charArrayToWriter", "testWrite_charArrayToWriter_Encoding_nullData", "testWrite_stringToOutputStream", "testWrite_stringToOutputStream_Encoding", "testWrite_stringToOutputStream_Encoding_nullData", "testWrite_stringToOutputStream_nullData", "testWrite_stringToOutputStream_nullEncoding", "testWrite_stringToWriter", "testWrite_stringToWriter_Encoding_nullData" ],
            "org.apache.commons.io.output.ByteArrayOutputStreamTestCase" : [ "testStream" ],
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testAboveThreshold", "testAtThreshold", "testBelowThreshold", "testThresholdReached", "testWriteToLarge", "testWriteToSmall" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStreamTestCase#testStream" : {
          "testcases" : {
            "org.apache.commons.io.output.ByteArrayOutputStreamTestCase" : [ "testStream" ]
          }
        }
      }
    },
    "c658828d7b66e6638968506236a3a761815c8984" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "6eca4c05986bac88d1b65af83348a754efa36559",
      "changedClazzes" : { }
    },
    "3e300278eca4c60bc35f9784e20e1bdb0bc8f0e7" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "c658828d7b66e6638968506236a3a761815c8984",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerNull" ],
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce" ],
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testCleanEmpty", "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile", "testThrowsOnNullList" ],
            "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteDir", "testForceMkdir", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testReadFileToByteArray", "testReadFileToString", "testReadLines", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ],
            "org.apache.commons.io.FileUtilsWaitForTestCase" : [ "testWaitFor" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPrefix", "testGetPrefixLength", "testIndexOfExtension", "testIndexOfLastSeparator", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testNormalize", "testNormalizeNoEndSeparator", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testByteArrayToOutputStream", "testByteArrayToString", "testByteArrayToWriter", "testConstants", "testInputStreamToByteArray", "testInputStreamToCharArray", "testInputStreamToCharArrayWithEncoding", "testInputStreamToString", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testReaderToCharArray", "testReaderToString", "testStringToByteArray", "testStringToInputStream", "testStringToOutputStream", "testStringToWriter" ],
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFiltering", "testInvalidEncoding", "testMissingFile", "testNextLineOnly", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testAnd", "testCanRead", "testCanWrite", "testDelegateFileFilter", "testDeprecatedWildcard", "testDirectory", "testEmpty", "testFalse", "testFiles", "testHidden", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNameFilterNullArrayArgument", "testNameFilterNullListArgument", "testNot", "testOr", "testPrefix", "testSizeFilter", "testSuffix", "testTrue", "testWildcard" ],
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testFileLocked", "testFileNotLocked" ]
          }
        }
      }
    },
    "f67327e2e9bd022cf2444e7dc889f5665927e107" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "3e300278eca4c60bc35f9784e20e1bdb0bc8f0e7",
      "changedClazzes" : { }
    },
    "8f4a512c3daa74f8c716234afa6f03b5ba9e2e5f" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "f67327e2e9bd022cf2444e7dc889f5665927e107",
      "changedClazzes" : {
        "org.apache.commons.io.EndianUtils#readSwappedLong(byte[],int)" : {
          "testcases" : {
            "org.apache.commons.io.EndianUtilsTest" : [ "testReadSwappedDouble", "testReadSwappedLong", "testSymmetryOfLong" ],
            "org.apache.commons.io.input.SwappedDataInputStreamTest" : [ "testReadDouble", "testReadLong" ]
          }
        }
      }
    },
    "6ca93e4c6043f4d285132792e29847fd8df59816" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "8f4a512c3daa74f8c716234afa6f03b5ba9e2e5f",
      "changedClazzes" : { }
    },
    "6040c8542dee335267d8a3f76c92d3a8a0b57d43" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "6ca93e4c6043f4d285132792e29847fd8df59816",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils#readFileToString(java.io.File)" : { }
      }
    },
    "9010e78e5b76bc80ca6acb5fe548b85105a6a6db" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "6040c8542dee335267d8a3f76c92d3a8a0b57d43",
      "changedClazzes" : { }
    },
    "f90391e0cc9d090ccf925e58799ef6240f6efd91" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "9010e78e5b76bc80ca6acb5fe548b85105a6a6db",
      "changedClazzes" : { }
    },
    "0f306c72f45f1a4f6b657e74e5a2c4acd63440bc" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "f90391e0cc9d090ccf925e58799ef6240f6efd91",
      "changedClazzes" : { }
    },
    "21c7e1350dc9246b8978f703c7a477ef83df4502" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "0f306c72f45f1a4f6b657e74e5a2c4acd63440bc",
      "changedClazzes" : { }
    },
    "238e3b5cf499be0f7e64e1e09b3c94ab5ee94016" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "21c7e1350dc9246b8978f703c7a477ef83df4502",
      "changedClazzes" : { }
    },
    "1a8cbe445e7d7593b40ef883ca76fe3f0c78d96a" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "238e3b5cf499be0f7e64e1e09b3c94ab5ee94016",
      "changedClazzes" : { }
    },
    "99e0418883705cb9c89b79fb80d9309833abdaa5" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "1a8cbe445e7d7593b40ef883ca76fe3f0c78d96a",
      "changedClazzes" : { }
    },
    "80dea5ea1901d8352706627e2219ef11f84c3d4c" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "99e0418883705cb9c89b79fb80d9309833abdaa5",
      "changedClazzes" : { }
    },
    "9fa8d7ae0380e4dd162bd7c96b987e950d76888a" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "80dea5ea1901d8352706627e2219ef11f84c3d4c",
      "changedClazzes" : {
        "org.apache.commons.io.filefilter.FileFilterTestCase#testDirectory" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testDirectory" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase#testFiles" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFiles" ]
          }
        }
      }
    },
    "09ba9fd00151cce8503c331e115aa470d47acc6c" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "9fa8d7ae0380e4dd162bd7c96b987e950d76888a",
      "changedClazzes" : { }
    },
    "28f7c150908bc1364ee5c6c25bd30a79c726826f" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "09ba9fd00151cce8503c331e115aa470d47acc6c",
      "changedClazzes" : { }
    },
    "18c151c4d64d2ea7e722636a6f59c5e5bdd7663d" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "28f7c150908bc1364ee5c6c25bd30a79c726826f",
      "changedClazzes" : { }
    },
    "3b61d31814043cdcdf5d27c783c981367d006d2e" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "18c151c4d64d2ea7e722636a6f59c5e5bdd7663d",
      "changedClazzes" : { }
    },
    "ccd7863b547f1ed2925e4364bfda87506e1534b1" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "3b61d31814043cdcdf5d27c783c981367d006d2e",
      "changedClazzes" : { }
    },
    "b6f2a2e8b920270e117735091d3eff95ef7129b8" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "ccd7863b547f1ed2925e4364bfda87506e1534b1",
      "changedClazzes" : { }
    },
    "a7bf99f613119f47fdbb68b253021a2949862fad" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "b6f2a2e8b920270e117735091d3eff95ef7129b8",
      "changedClazzes" : { }
    },
    "61519de47f8742caf9ccfc2a1ca734796effb3a9" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "a7bf99f613119f47fdbb68b253021a2949862fad",
      "changedClazzes" : { }
    },
    "d981b95df458230c30beffa819f3110274bbf7fe" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "61519de47f8742caf9ccfc2a1ca734796effb3a9",
      "changedClazzes" : { }
    },
    "403949d8075f3aca227825b69de2de21342071e9" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "d981b95df458230c30beffa819f3110274bbf7fe",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils#cleanDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile" ]
          }
        },
        "org.apache.commons.io.FileUtils#deleteDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile" ]
          }
        },
        "org.apache.commons.io.FileUtils#forceDelete(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile" ]
          }
        },
        "org.apache.commons.io.FileUtils#openOutputStream(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteDir", "testForceMkdir", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testReadFileToByteArray", "testReadFileToString", "testReadLines", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#openOutputStream_noParent(boolean)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#setUp" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#tearDown" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#test_openOutputStream_noParentCreateFile" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "test_openOutputStream_noParentCreateFile" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#test_openOutputStream_noParentNoFile" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "test_openOutputStream_noParentNoFile" ]
          }
        },
        "org.apache.commons.io.IOUtils#closeQuietly(java.io.OutputStream)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "test_openOutputStream_noParentCreateFile" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#createFile(java.io.File,long)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#createLineBasedFile(java.io.File,java.lang.String[])" : { },
        "org.apache.commons.io.testtools.FileBasedTestCase#generateTestData(java.io.OutputStream,long)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#getTestDirectory" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile" ]
          }
        }
      }
    },
    "82912208ea8e27cbb8265e1622e74ee3f655c918" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "403949d8075f3aca227825b69de2de21342071e9",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerNull" ],
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce" ],
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testCleanEmpty", "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile", "testThrowsOnNullList" ],
            "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteDir", "testForceMkdir", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testReadFileToByteArray", "testReadFileToString", "testReadLines", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ],
            "org.apache.commons.io.FileUtilsWaitForTestCase" : [ "testWaitFor" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPrefix", "testGetPrefixLength", "testIndexOfExtension", "testIndexOfLastSeparator", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testNormalize", "testNormalizeNoEndSeparator", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testByteArrayToOutputStream", "testByteArrayToString", "testByteArrayToWriter", "testConstants", "testInputStreamToByteArray", "testInputStreamToCharArray", "testInputStreamToCharArrayWithEncoding", "testInputStreamToString", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testReaderToCharArray", "testReaderToString", "testStringToByteArray", "testStringToInputStream", "testStringToOutputStream", "testStringToWriter" ],
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFiltering", "testInvalidEncoding", "testMissingFile", "testNextLineOnly", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testAnd", "testCanRead", "testCanWrite", "testDelegateFileFilter", "testDeprecatedWildcard", "testDirectory", "testEmpty", "testFalse", "testFiles", "testHidden", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNameFilterNullArrayArgument", "testNameFilterNullListArgument", "testNot", "testOr", "testPrefix", "testSizeFilter", "testSuffix", "testTrue", "testWildcard" ],
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testFileLocked", "testFileNotLocked" ]
          }
        }
      }
    },
    "b39b80e2235786c1a24ca38b4bbf33bae031e738" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "82912208ea8e27cbb8265e1622e74ee3f655c918",
      "changedClazzes" : { }
    },
    "5100fa554aa13bdb46c7f2706aa8fa0d0ac1b6bc" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "b39b80e2235786c1a24ca38b4bbf33bae031e738",
      "changedClazzes" : { }
    },
    "5c3215b8001f8bc54052ff31c6172a76ca5804d2" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "5100fa554aa13bdb46c7f2706aa8fa0d0ac1b6bc",
      "changedClazzes" : { }
    },
    "2aead0f6c9cd8cf66bccbf1ca22335262f5b1799" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "5c3215b8001f8bc54052ff31c6172a76ca5804d2",
      "changedClazzes" : { }
    },
    "b7b2fdba6a6dfe39ebc38ddce7dc7f6de60b67f8" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "2aead0f6c9cd8cf66bccbf1ca22335262f5b1799",
      "changedClazzes" : { }
    },
    "b7ee5814c25c878350c95bcabcd6b3a5e870df25" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "b7b2fdba6a6dfe39ebc38ddce7dc7f6de60b67f8",
      "changedClazzes" : { }
    },
    "341ca46ca59f70ac4dfa96bac3d1a3ae551e42ca" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "b7ee5814c25c878350c95bcabcd6b3a5e870df25",
      "changedClazzes" : { }
    },
    "bdaad67a3ebec47f2a8ca80b518e01be9099c6cc" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "341ca46ca59f70ac4dfa96bac3d1a3ae551e42ca",
      "changedClazzes" : { }
    },
    "38e660547221710d0afdefc41ce859e00e640d1f" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "bdaad67a3ebec47f2a8ca80b518e01be9099c6cc",
      "changedClazzes" : { }
    },
    "aa1ba1e649a6b9afa5393b0a1599db0fe1df3a57" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "38e660547221710d0afdefc41ce859e00e640d1f",
      "changedClazzes" : { }
    },
    "431c428c4df6a7197a8703ad50f9dc5d3501130b" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "aa1ba1e649a6b9afa5393b0a1599db0fe1df3a57",
      "changedClazzes" : {
        "org.apache.commons.io.FileCleaner" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerFile", "testFileCleanerNull" ]
          }
        },
        "org.apache.commons.io.FileCleaner$Reaper" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerFile" ]
          }
        },
        "org.apache.commons.io.FileCleaner$Tracker" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerFile" ]
          }
        },
        "org.apache.commons.io.FileCleanerTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerFile", "testFileCleanerNull" ]
          }
        },
        "org.apache.commons.io.FileCleaningTracker" : { },
        "org.apache.commons.io.FileCleaningTracker#<init>" : {
          "testcases" : {
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerFile", "testFileCleanerNull" ]
          }
        },
        "org.apache.commons.io.FileCleaningTracker#addTracker(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)" : {
          "testcases" : {
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerFile" ]
          }
        },
        "org.apache.commons.io.FileCleaningTracker#exitWhenFinished" : {
          "testcases" : {
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter" ]
          }
        },
        "org.apache.commons.io.FileCleaningTracker#getTrackCount" : {
          "testcases" : {
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerFile" ]
          }
        },
        "org.apache.commons.io.FileCleaningTracker#track(java.io.File,java.lang.Object)" : {
          "testcases" : {
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerFile", "testFileCleanerNull" ]
          }
        },
        "org.apache.commons.io.FileCleaningTracker$Reaper#<init>(org.apache.commons.io.FileCleaningTracker)" : {
          "testcases" : {
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerFile" ]
          }
        },
        "org.apache.commons.io.FileCleaningTracker$Reaper#run" : {
          "testcases" : {
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2" ]
          }
        },
        "org.apache.commons.io.FileCleaningTracker$Tracker#<init>(java.lang.String,org.apache.commons.io.FileDeleteStrategy,java.lang.Object,java.lang.ref.ReferenceQueue)" : {
          "testcases" : {
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerFile" ]
          }
        },
        "org.apache.commons.io.FileCleaningTracker$Tracker#delete" : {
          "testcases" : {
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2" ]
          }
        },
        "org.apache.commons.io.FileCleaningTrackerTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerFile", "testFileCleanerNull" ]
          }
        },
        "org.apache.commons.io.FileCleaningTrackerTestCase#newInstance" : {
          "testcases" : {
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerFile", "testFileCleanerNull" ]
          }
        },
        "org.apache.commons.io.FileCleaningTrackerTestCase#setUp" : {
          "testcases" : {
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerFile", "testFileCleanerNull" ]
          }
        },
        "org.apache.commons.io.FileCleaningTrackerTestCase#tearDown" : {
          "testcases" : {
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerNull" ]
          }
        },
        "org.apache.commons.io.FileCleaningTrackerTestCase#testFileCleanerDirectory" : {
          "testcases" : {
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory" ]
          }
        },
        "org.apache.commons.io.FileCleaningTrackerTestCase#testFileCleanerDirectory_ForceStrategy" : {
          "testcases" : {
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory_ForceStrategy" ]
          }
        },
        "org.apache.commons.io.FileCleaningTrackerTestCase#testFileCleanerDirectory_NullStrategy" : {
          "testcases" : {
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory_NullStrategy" ]
          }
        },
        "org.apache.commons.io.FileCleaningTrackerTestCase#testFileCleanerExitWhenFinished1" : {
          "testcases" : {
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerExitWhenFinished1" ]
          }
        },
        "org.apache.commons.io.FileCleaningTrackerTestCase#testFileCleanerExitWhenFinished2" : {
          "testcases" : {
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerExitWhenFinished2" ]
          }
        },
        "org.apache.commons.io.FileCleaningTrackerTestCase#testFileCleanerExitWhenFinishedFirst" : {
          "testcases" : {
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerExitWhenFinishedFirst" ]
          }
        },
        "org.apache.commons.io.FileCleaningTrackerTestCase#testFileCleanerExitWhenFinished_NoTrackAfter" : {
          "testcases" : {
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerExitWhenFinished_NoTrackAfter" ]
          }
        },
        "org.apache.commons.io.FileCleaningTrackerTestCase#testFileCleanerFile" : {
          "testcases" : {
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerFile" ]
          }
        },
        "org.apache.commons.io.FileCleaningTrackerTestCase#testFileCleanerNull" : {
          "testcases" : {
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerNull" ]
          }
        },
        "org.apache.commons.io.FileCleaningTrackerTestCase#waitUntilTrackCount" : {
          "testcases" : {
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerFile" ]
          }
        },
        "org.apache.commons.io.FileDeleteStrategy#<init>(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerFile", "testFileCleanerNull" ]
          }
        },
        "org.apache.commons.io.FileDeleteStrategy#deleteQuietly(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2" ]
          }
        },
        "org.apache.commons.io.FileDeleteStrategy#doDelete(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2" ]
          }
        },
        "org.apache.commons.io.FileDeleteStrategy$ForceFileDeleteStrategy#<init>" : {
          "testcases" : {
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerFile", "testFileCleanerNull" ]
          }
        },
        "org.apache.commons.io.FileUtils#cleanDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerNull" ]
          }
        },
        "org.apache.commons.io.FileUtils#deleteDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerNull" ]
          }
        },
        "org.apache.commons.io.IOUtils#closeQuietly(java.io.OutputStream)" : {
          "testcases" : {
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#createFile(java.io.File,long)" : {
          "testcases" : {
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#generateTestData(java.io.OutputStream,long)" : {
          "testcases" : {
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#getTestDirectory" : {
          "testcases" : {
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerFile", "testFileCleanerNull" ]
          }
        }
      }
    },
    "b85271ae3c09f1dbfda7f6613afc5f1e318d8a2a" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "431c428c4df6a7197a8703ad50f9dc5d3501130b",
      "changedClazzes" : {
        "org.apache.commons.io.FileCleaningTracker" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerFile", "testFileCleanerNull" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerFile", "testFileCleanerNull" ]
          }
        },
        "org.apache.commons.io.FileCleaningTracker$Reaper" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerFile" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerFile" ]
          }
        },
        "org.apache.commons.io.FileCleaningTracker$Tracker" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerFile" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerFile" ]
          }
        },
        "org.apache.commons.io.FileUtilsCleanDirectoryTestCase#testThrowsOnCannotDeleteFile" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testThrowsOnCannotDeleteFile" ]
          }
        },
        "org.apache.commons.io.FileUtilsCleanDirectoryTestCase#testThrowsOnNullList" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testThrowsOnNullList" ]
          }
        }
      }
    },
    "22415cee58033d5e6b2f3afd4114be2ae929d0f2" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "b85271ae3c09f1dbfda7f6613afc5f1e318d8a2a",
      "changedClazzes" : { }
    },
    "c14b099dcd729c8c60c53972c4e457448277b962" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "22415cee58033d5e6b2f3afd4114be2ae929d0f2",
      "changedClazzes" : { }
    },
    "15e3a2dfb5859a0ed98025734f37da867bf0ba1c" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "c14b099dcd729c8c60c53972c4e457448277b962",
      "changedClazzes" : { }
    },
    "663372845b665ea4895be4b09ccd896c2616cfdd" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "15e3a2dfb5859a0ed98025734f37da867bf0ba1c",
      "changedClazzes" : {
        "org.apache.commons.io.filefilter.AbstractFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testListFiles" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testAnd", "testCanRead", "testCanWrite", "testDelegateFileFilter", "testDeprecatedWildcard", "testDirectory", "testEmpty", "testFiles", "testHidden", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNameFilterNullArrayArgument", "testNameFilterNullListArgument", "testNot", "testOr", "testPrefix", "testSizeFilter", "testSuffix", "testWildcard" ]
          }
        },
        "org.apache.commons.io.filefilter.AgeFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter" ]
          }
        },
        "org.apache.commons.io.filefilter.AndFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilterAndLimitB", "testFilterAndLimitC", "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testListFiles" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAnd", "testCanRead", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testSizeFilter" ]
          }
        },
        "org.apache.commons.io.filefilter.DelegateFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testDelegateFileFilter" ]
          }
        },
        "org.apache.commons.io.filefilter.NameFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilter", "testFilterAndLimitB", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNameFilterNullArrayArgument", "testNameFilterNullListArgument" ]
          }
        },
        "org.apache.commons.io.filefilter.NotFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilterAndLimitB", "testFilterAndLimitC" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testListFiles" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testCanRead", "testCanWrite", "testEmpty", "testHidden", "testMakeCVSAware", "testMakeSVNAware", "testNot" ]
          }
        },
        "org.apache.commons.io.filefilter.OrFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilter", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testListFiles" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testDelegateFileFilter", "testOr", "testSuffix" ]
          }
        },
        "org.apache.commons.io.filefilter.PrefixFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testPrefix" ]
          }
        },
        "org.apache.commons.io.filefilter.SizeFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testSizeFilter" ]
          }
        },
        "org.apache.commons.io.filefilter.SuffixFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFilesByExtension" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testSuffix" ]
          }
        },
        "org.apache.commons.io.filefilter.WildcardFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testWildcard" ]
          }
        }
      }
    },
    "6bc05de06fffc5a2f2a67e4e8526bc6d7d0939b4" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "663372845b665ea4895be4b09ccd896c2616cfdd",
      "changedClazzes" : {
        "org.apache.commons.io.EndianUtils#read(java.io.InputStream)" : {
          "testcases" : {
            "org.apache.commons.io.EndianUtilsTest" : [ "testUnsignedOverrun" ]
          }
        },
        "org.apache.commons.io.EndianUtils#readSwappedUnsignedInteger(byte[],int)" : {
          "testcases" : {
            "org.apache.commons.io.EndianUtilsTest" : [ "testUnsignedOverrun" ]
          }
        },
        "org.apache.commons.io.EndianUtilsTest" : {
          "testcases" : {
            "org.apache.commons.io.EndianUtilsTest" : [ "testReadSwappedDouble", "testReadSwappedFloat", "testReadSwappedInteger", "testReadSwappedLong", "testReadSwappedShort", "testReadSwappedUnsignedInteger", "testReadSwappedUnsignedShort", "testSwapDouble", "testSwapFloat", "testSwapInteger", "testSwapLong", "testSwapShort", "testSymmetry", "testSymmetryOfLong", "testUnsignedOverrun", "testWriteSwappedDouble", "testWriteSwappedFloat", "testWriteSwappedInteger", "testWriteSwappedLong", "testWriteSwappedShort" ]
          }
        },
        "org.apache.commons.io.EndianUtilsTest#testUnsignedOverrun" : {
          "testcases" : {
            "org.apache.commons.io.EndianUtilsTest" : [ "testUnsignedOverrun" ]
          }
        }
      }
    },
    "a2ad873a29d208ac1f003bad7f828201aa11c5b9" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "6bc05de06fffc5a2f2a67e4e8526bc6d7d0939b4",
      "changedClazzes" : { }
    },
    "d74896c990d86aecb525d200b666ef743d398802" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "a2ad873a29d208ac1f003bad7f828201aa11c5b9",
      "changedClazzes" : { }
    },
    "4c9e36c05ceddbd2e0db62fc5d214738df4fd732" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "d74896c990d86aecb525d200b666ef743d398802",
      "changedClazzes" : { }
    },
    "7461d3dba020ab4904aac0d4bbc03db8eb78d059" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "4c9e36c05ceddbd2e0db62fc5d214738df4fd732",
      "changedClazzes" : {
        "org.apache.commons.io.output.ThresholdingOutputStream" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testAboveThreshold", "testAtThreshold", "testBelowThreshold", "testThresholdReached", "testWriteToLarge", "testWriteToSmall" ]
          }
        }
      }
    },
    "c6b82c0d77466f62370b6b31d58f7bb1eb6a5285" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "7461d3dba020ab4904aac0d4bbc03db8eb78d059",
      "changedClazzes" : { }
    },
    "186225b7d611ab2252024d4a38d8fb1091b7ebab" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "c6b82c0d77466f62370b6b31d58f7bb1eb6a5285",
      "changedClazzes" : {
        "org.apache.commons.io.FileCleaningTracker" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerFile", "testFileCleanerNull" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerFile", "testFileCleanerNull" ]
          }
        },
        "org.apache.commons.io.FileCleaningTracker$Reaper" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerFile" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerFile" ]
          }
        },
        "org.apache.commons.io.FileCleaningTracker$Tracker" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerFile" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerFile" ]
          }
        }
      }
    },
    "4d5c7d78b4b43639a9a215ffa48c9cbf03645dd5" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "186225b7d611ab2252024d4a38d8fb1091b7ebab",
      "changedClazzes" : { }
    },
    "71415efc09bde5683822efff05d4676a3ebebdf6" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "4d5c7d78b4b43639a9a215ffa48c9cbf03645dd5",
      "changedClazzes" : { }
    },
    "ee9f718e51578dacd1d47cfdc6c06ac972fe1f2c" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "71415efc09bde5683822efff05d4676a3ebebdf6",
      "changedClazzes" : { }
    },
    "be4dcb1cfe190eaa1b8664462b1c7e8883749721" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "ee9f718e51578dacd1d47cfdc6c06ac972fe1f2c",
      "changedClazzes" : { }
    },
    "1d55657a4a22138b399974bf7f4a3a79a2f06f4c" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "be4dcb1cfe190eaa1b8664462b1c7e8883749721",
      "changedClazzes" : { }
    },
    "fa01f1c412bfb2811720c42866fd5edb75153930" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "1d55657a4a22138b399974bf7f4a3a79a2f06f4c",
      "changedClazzes" : { }
    },
    "e70975a9155cc53890c0e2fe643e3c382acd5bd3" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "fa01f1c412bfb2811720c42866fd5edb75153930",
      "changedClazzes" : { }
    },
    "bebeffd9d2fa9b8d6c323924e3c258c7c7800e9a" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "e70975a9155cc53890c0e2fe643e3c382acd5bd3",
      "changedClazzes" : { }
    },
    "742c51feeaf75542ab9db6782ad3d2ad506fb871" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "bebeffd9d2fa9b8d6c323924e3c258c7c7800e9a",
      "changedClazzes" : { }
    },
    "77de03035fcafbabed74339d499c5ecf74ee8154" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "742c51feeaf75542ab9db6782ad3d2ad506fb871",
      "changedClazzes" : { }
    },
    "9795de4ac6a5f536cb21609dc9933ece25f4a786" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "77de03035fcafbabed74339d499c5ecf74ee8154",
      "changedClazzes" : { }
    },
    "0b12293f3a7c0cdffc0c364032a13f6d5206198c" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "9795de4ac6a5f536cb21609dc9933ece25f4a786",
      "changedClazzes" : { }
    },
    "340976505a7c5256b36d3d866f245f03d082da88" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "0b12293f3a7c0cdffc0c364032a13f6d5206198c",
      "changedClazzes" : { }
    },
    "a3be89190107963e28c0b005a2a8aababdeceaaa" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "340976505a7c5256b36d3d866f245f03d082da88",
      "changedClazzes" : { }
    },
    "bc1eea1514d83f9457e4be5b5c3d466b00138b22" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "a3be89190107963e28c0b005a2a8aababdeceaaa",
      "changedClazzes" : { }
    },
    "e9c0d85e170310086fde3c415c5928dfecf7f5eb" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "bc1eea1514d83f9457e4be5b5c3d466b00138b22",
      "changedClazzes" : { }
    },
    "43cb8e9bdb3cf72f5a5f702d2f1a7403fadd6b6f" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "e9c0d85e170310086fde3c415c5928dfecf7f5eb",
      "changedClazzes" : { }
    },
    "42d861059ea9342dcbbf36b849ab9bcdaf14e536" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "43cb8e9bdb3cf72f5a5f702d2f1a7403fadd6b6f",
      "changedClazzes" : { }
    },
    "6fcfae0852d7310235eeb2f39df25ea112dadb2e" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "42d861059ea9342dcbbf36b849ab9bcdaf14e536",
      "changedClazzes" : { }
    },
    "8665eb1653c9e6a001f371f118d69ce9b034dd2c" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "6fcfae0852d7310235eeb2f39df25ea112dadb2e",
      "changedClazzes" : { }
    },
    "e941766cc5320b9ac004c508e7c5b29fd37fbfa6" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "8665eb1653c9e6a001f371f118d69ce9b034dd2c",
      "changedClazzes" : { }
    },
    "9666d74ab32fb942ecdce00cdbf94be374a7bb31" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "e941766cc5320b9ac004c508e7c5b29fd37fbfa6",
      "changedClazzes" : {
        "org.apache.commons.io.filefilter.FileFilterTestCase" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testAnd", "testCanRead", "testCanWrite", "testDelegateFileFilter", "testDeprecatedWildcard", "testDirectory", "testEmpty", "testFalse", "testFiles", "testHidden", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNameFilterNullArrayArgument", "testNameFilterNullListArgument", "testNot", "testOr", "testPrefix", "testSizeFilter", "testSuffix", "testTrue", "testWildcard" ]
          }
        },
        "org.apache.commons.io.filefilter.PrefixFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testPrefix" ]
          }
        },
        "org.apache.commons.io.filefilter.SuffixFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFilesByExtension" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testSuffix" ]
          }
        }
      }
    },
    "2aaaa2a2582e8a6f14a85c0e49164583e0fa6b1e" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "9666d74ab32fb942ecdce00cdbf94be374a7bb31",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils#cleanDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testPrefixCaseInsensitive", "testRegex", "testSuffixCaseInsensitive" ]
          }
        },
        "org.apache.commons.io.FileUtils#deleteDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testPrefixCaseInsensitive", "testRegex", "testSuffixCaseInsensitive" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#isSystemWindows" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testPrefixCaseInsensitive", "testSuffixCaseInsensitive" ]
          }
        },
        "org.apache.commons.io.IOCase#<init>(java.lang.String,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testPrefixCaseInsensitive", "testSuffixCaseInsensitive" ]
          }
        },
        "org.apache.commons.io.IOCase#checkEndsWith(java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testSuffixCaseInsensitive" ]
          }
        },
        "org.apache.commons.io.IOCase#checkStartsWith(java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testPrefixCaseInsensitive" ]
          }
        },
        "org.apache.commons.io.filefilter.AbstractFileFilter#<init>" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testPrefixCaseInsensitive", "testRegex", "testSuffixCaseInsensitive" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testAnd", "testCanRead", "testCanWrite", "testDelegateFileFilter", "testDeprecatedWildcard", "testDirectory", "testEmpty", "testFalse", "testFiles", "testHidden", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNameFilterNullArrayArgument", "testNameFilterNullListArgument", "testNot", "testOr", "testPrefix", "testPrefixCaseInsensitive", "testRegex", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testTrue", "testWildcard" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase#assertFiltering(org.apache.commons.io.filefilter.IOFileFilter,java.io.File,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testPrefixCaseInsensitive", "testRegex", "testSuffixCaseInsensitive" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase#setUp" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testPrefixCaseInsensitive", "testRegex", "testSuffixCaseInsensitive" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase#tearDown" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testPrefixCaseInsensitive", "testRegex", "testSuffixCaseInsensitive" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase#testPrefixCaseInsensitive" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testPrefixCaseInsensitive" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase#testRegex" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testRegex" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase#testSuffixCaseInsensitive" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testSuffixCaseInsensitive" ]
          }
        },
        "org.apache.commons.io.filefilter.PrefixFileFilter#<init>(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testPrefixCaseInsensitive" ]
          }
        },
        "org.apache.commons.io.filefilter.PrefixFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testPrefixCaseInsensitive" ]
          }
        },
        "org.apache.commons.io.filefilter.RegexFilter" : { },
        "org.apache.commons.io.filefilter.RegexFilter#<init>(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testRegex" ]
          }
        },
        "org.apache.commons.io.filefilter.RegexFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testRegex" ]
          }
        },
        "org.apache.commons.io.filefilter.SuffixFileFilter#<init>(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testSuffixCaseInsensitive" ]
          }
        },
        "org.apache.commons.io.filefilter.SuffixFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testSuffixCaseInsensitive" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#getTestDirectory" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testPrefixCaseInsensitive", "testRegex", "testSuffixCaseInsensitive" ]
          }
        }
      }
    },
    "17929c2789dfa7e6fd4404c2806ff3b12ba88efe" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "2aaaa2a2582e8a6f14a85c0e49164583e0fa6b1e",
      "changedClazzes" : {
        "org.apache.commons.io.filefilter.FileFilterTestCase#testRegex" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testRegex" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testListFiles" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testFalse", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNot", "testPrefix", "testSizeFilter", "testSuffix", "testTrue" ]
          }
        },
        "org.apache.commons.io.filefilter.RegexFilter" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testRegex" ]
          }
        }
      }
    },
    "ea3781d3e141599cb3a36f8a236366927a9d10fe" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "17929c2789dfa7e6fd4404c2806ff3b12ba88efe",
      "changedClazzes" : {
        "org.apache.commons.io.filefilter.FileFilterTestCase#testRegex" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testRegex" ]
          }
        },
        "org.apache.commons.io.filefilter.RegexFilter#<init>(java.util.regex.Pattern)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testRegex" ]
          }
        }
      }
    },
    "4a02524aef7f78af52cc7c7beedfa1eb83f8ccb5" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "ea3781d3e141599cb3a36f8a236366927a9d10fe",
      "changedClazzes" : {
        "org.apache.commons.io.FilenameUtils#equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testEquals", "testEqualsNormalized", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl" ]
          }
        },
        "org.apache.commons.io.FilenameUtilsTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPrefix", "testGetPrefixLength", "testIndexOfExtension", "testIndexOfLastSeparator", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testNormalize", "testNormalizeNoEndSeparator", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ]
          }
        }
      }
    },
    "d82a2bac09321150fc38e342ccf572e6561f9a23" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "4a02524aef7f78af52cc7c7beedfa1eb83f8ccb5",
      "changedClazzes" : {
        "org.apache.commons.io.input.AutoCloseInputStream" : { },
        "org.apache.commons.io.input.AutoCloseInputStream#<init>(java.io.InputStream)" : {
          "testcases" : {
            "org.apache.commons.io.input.AutoCloseInputStreamTest" : [ "testClose", "testRead", "testReadBuffer", "testReadBufferOffsetLength" ]
          }
        },
        "org.apache.commons.io.input.AutoCloseInputStream#close" : {
          "testcases" : {
            "org.apache.commons.io.input.AutoCloseInputStreamTest" : [ "testClose", "testRead", "testReadBuffer", "testReadBufferOffsetLength" ]
          }
        },
        "org.apache.commons.io.input.AutoCloseInputStream#read" : {
          "testcases" : {
            "org.apache.commons.io.input.AutoCloseInputStreamTest" : [ "testReadBufferOffsetLength" ]
          }
        },
        "org.apache.commons.io.input.AutoCloseInputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.input.AutoCloseInputStreamTest" : [ "testClose", "testRead", "testReadBuffer", "testReadBufferOffsetLength" ]
          }
        },
        "org.apache.commons.io.input.AutoCloseInputStreamTest#setUp" : {
          "testcases" : {
            "org.apache.commons.io.input.AutoCloseInputStreamTest" : [ "testClose", "testRead", "testReadBuffer", "testReadBufferOffsetLength" ]
          }
        },
        "org.apache.commons.io.input.AutoCloseInputStreamTest#testClose" : {
          "testcases" : {
            "org.apache.commons.io.input.AutoCloseInputStreamTest" : [ "testClose" ]
          }
        },
        "org.apache.commons.io.input.AutoCloseInputStreamTest#testRead" : {
          "testcases" : {
            "org.apache.commons.io.input.AutoCloseInputStreamTest" : [ "testRead" ]
          }
        },
        "org.apache.commons.io.input.AutoCloseInputStreamTest#testReadBuffer" : {
          "testcases" : {
            "org.apache.commons.io.input.AutoCloseInputStreamTest" : [ "testReadBuffer" ]
          }
        },
        "org.apache.commons.io.input.AutoCloseInputStreamTest#testReadBufferOffsetLength" : {
          "testcases" : {
            "org.apache.commons.io.input.AutoCloseInputStreamTest" : [ "testReadBufferOffsetLength" ]
          }
        },
        "org.apache.commons.io.input.CloseShieldInputStream" : { },
        "org.apache.commons.io.input.CloseShieldInputStream#<init>(java.io.InputStream)" : {
          "testcases" : {
            "org.apache.commons.io.input.CloseShieldInputStreamTest" : [ "testClose" ]
          }
        },
        "org.apache.commons.io.input.CloseShieldInputStream#close" : {
          "testcases" : {
            "org.apache.commons.io.input.CloseShieldInputStreamTest" : [ "testClose" ]
          }
        },
        "org.apache.commons.io.input.CloseShieldInputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.input.CloseShieldInputStreamTest" : [ "testClose" ]
          }
        },
        "org.apache.commons.io.input.CloseShieldInputStreamTest#setUp" : {
          "testcases" : {
            "org.apache.commons.io.input.CloseShieldInputStreamTest" : [ "testClose" ]
          }
        },
        "org.apache.commons.io.input.CloseShieldInputStreamTest#testClose" : {
          "testcases" : {
            "org.apache.commons.io.input.CloseShieldInputStreamTest" : [ "testClose" ]
          }
        },
        "org.apache.commons.io.input.ClosedInputStream" : { },
        "org.apache.commons.io.input.ClosedInputStream#<init>" : {
          "testcases" : {
            "org.apache.commons.io.input.AutoCloseInputStreamTest" : [ "testClose", "testRead", "testReadBuffer", "testReadBufferOffsetLength" ],
            "org.apache.commons.io.input.CloseShieldInputStreamTest" : [ "testClose" ],
            "org.apache.commons.io.input.ClosedInputStreamTest" : [ "testRead" ]
          }
        },
        "org.apache.commons.io.input.ClosedInputStream#read" : {
          "testcases" : {
            "org.apache.commons.io.input.AutoCloseInputStreamTest" : [ "testClose", "testReadBuffer", "testReadBufferOffsetLength" ],
            "org.apache.commons.io.input.CloseShieldInputStreamTest" : [ "testClose" ],
            "org.apache.commons.io.input.ClosedInputStreamTest" : [ "testRead" ]
          }
        },
        "org.apache.commons.io.input.ClosedInputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.input.ClosedInputStreamTest" : [ "testRead" ]
          }
        },
        "org.apache.commons.io.input.ClosedInputStreamTest#testRead" : {
          "testcases" : {
            "org.apache.commons.io.input.ClosedInputStreamTest" : [ "testRead" ]
          }
        },
        "org.apache.commons.io.input.PackageTestSuite#suite" : { },
        "org.apache.commons.io.input.ProxyInputStream#<init>(java.io.InputStream)" : {
          "testcases" : {
            "org.apache.commons.io.input.AutoCloseInputStreamTest" : [ "testClose", "testRead", "testReadBuffer", "testReadBufferOffsetLength" ],
            "org.apache.commons.io.input.CloseShieldInputStreamTest" : [ "testClose" ]
          }
        },
        "org.apache.commons.io.input.ProxyInputStream#read" : {
          "testcases" : {
            "org.apache.commons.io.input.CloseShieldInputStreamTest" : [ "testClose" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream#<init>" : {
          "testcases" : {
            "org.apache.commons.io.output.CloseShieldOutputStreamTest" : [ "testClose" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream#getBuffer(int)" : {
          "testcases" : {
            "org.apache.commons.io.output.CloseShieldOutputStreamTest" : [ "testClose" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream#needNewBuffer(int)" : {
          "testcases" : {
            "org.apache.commons.io.output.CloseShieldOutputStreamTest" : [ "testClose" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream#size" : {
          "testcases" : {
            "org.apache.commons.io.output.CloseShieldOutputStreamTest" : [ "testClose" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream#toByteArray" : {
          "testcases" : {
            "org.apache.commons.io.output.CloseShieldOutputStreamTest" : [ "testClose" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream#write(int)" : {
          "testcases" : {
            "org.apache.commons.io.output.CloseShieldOutputStreamTest" : [ "testClose" ]
          }
        },
        "org.apache.commons.io.output.CloseShieldOutputStream" : { },
        "org.apache.commons.io.output.CloseShieldOutputStream#<init>(java.io.OutputStream)" : {
          "testcases" : {
            "org.apache.commons.io.output.CloseShieldOutputStreamTest" : [ "testClose" ]
          }
        },
        "org.apache.commons.io.output.CloseShieldOutputStream#close" : {
          "testcases" : {
            "org.apache.commons.io.output.CloseShieldOutputStreamTest" : [ "testClose" ]
          }
        },
        "org.apache.commons.io.output.CloseShieldOutputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.output.CloseShieldOutputStreamTest" : [ "testClose" ]
          }
        },
        "org.apache.commons.io.output.CloseShieldOutputStreamTest#setUp" : {
          "testcases" : {
            "org.apache.commons.io.output.CloseShieldOutputStreamTest" : [ "testClose" ]
          }
        },
        "org.apache.commons.io.output.CloseShieldOutputStreamTest#testClose" : {
          "testcases" : {
            "org.apache.commons.io.output.CloseShieldOutputStreamTest" : [ "testClose" ]
          }
        },
        "org.apache.commons.io.output.ClosedOutputStream" : { },
        "org.apache.commons.io.output.ClosedOutputStream#<init>" : {
          "testcases" : {
            "org.apache.commons.io.output.CloseShieldOutputStreamTest" : [ "testClose" ],
            "org.apache.commons.io.output.ClosedOutputStreamTest" : [ "testRead" ]
          }
        },
        "org.apache.commons.io.output.ClosedOutputStream#write(int)" : {
          "testcases" : {
            "org.apache.commons.io.output.CloseShieldOutputStreamTest" : [ "testClose" ],
            "org.apache.commons.io.output.ClosedOutputStreamTest" : [ "testRead" ]
          }
        },
        "org.apache.commons.io.output.ClosedOutputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.output.ClosedOutputStreamTest" : [ "testRead" ]
          }
        },
        "org.apache.commons.io.output.ClosedOutputStreamTest#testRead" : {
          "testcases" : {
            "org.apache.commons.io.output.ClosedOutputStreamTest" : [ "testRead" ]
          }
        },
        "org.apache.commons.io.output.PackageTestSuite#suite" : { },
        "org.apache.commons.io.output.ProxyOutputStream#<init>(java.io.OutputStream)" : {
          "testcases" : {
            "org.apache.commons.io.output.CloseShieldOutputStreamTest" : [ "testClose" ]
          }
        },
        "org.apache.commons.io.output.ProxyOutputStream#write(int)" : {
          "testcases" : {
            "org.apache.commons.io.output.CloseShieldOutputStreamTest" : [ "testClose" ]
          }
        }
      }
    },
    "1b4e77faebd6a9c43fc57a6aeefb605c9188acfe" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "d82a2bac09321150fc38e342ccf572e6561f9a23",
      "changedClazzes" : {
        "org.apache.commons.io.filefilter.FileFilterTestCase#testRegex" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testRegex" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#regex(java.lang.String,int)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testRegex" ]
          }
        },
        "org.apache.commons.io.filefilter.RegexFileFilter" : { }
      }
    },
    "422ce6fa23b426ab71f271d4643ce9163cf707d3" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "1b4e77faebd6a9c43fc57a6aeefb605c9188acfe",
      "changedClazzes" : {
        "org.apache.commons.io.input.ProxyInputStream#<init>(java.io.InputStream)" : {
          "testcases" : {
            "org.apache.commons.io.input.TeeInputStreamTest" : [ "testMarkReset", "testReadEverything", "testReadNothing", "testReadOneByte", "testReadToArray", "testReadToArrayWithOffset", "testSkip" ]
          }
        },
        "org.apache.commons.io.input.ProxyInputStream#mark(int)" : {
          "testcases" : {
            "org.apache.commons.io.input.TeeInputStreamTest" : [ "testMarkReset" ]
          }
        },
        "org.apache.commons.io.input.ProxyInputStream#read" : {
          "testcases" : {
            "org.apache.commons.io.input.TeeInputStreamTest" : [ "testReadToArrayWithOffset" ]
          }
        },
        "org.apache.commons.io.input.ProxyInputStream#reset" : {
          "testcases" : {
            "org.apache.commons.io.input.TeeInputStreamTest" : [ "testMarkReset" ]
          }
        },
        "org.apache.commons.io.input.ProxyInputStream#skip(long)" : {
          "testcases" : {
            "org.apache.commons.io.input.TeeInputStreamTest" : [ "testSkip" ]
          }
        },
        "org.apache.commons.io.input.TeeInputStream" : { },
        "org.apache.commons.io.input.TeeInputStream#<init>(java.io.InputStream,java.io.OutputStream)" : {
          "testcases" : {
            "org.apache.commons.io.input.TeeInputStreamTest" : [ "testMarkReset", "testReadEverything", "testReadNothing", "testReadOneByte", "testReadToArray", "testReadToArrayWithOffset", "testSkip" ]
          }
        },
        "org.apache.commons.io.input.TeeInputStream#read" : {
          "testcases" : {
            "org.apache.commons.io.input.TeeInputStreamTest" : [ "testReadToArrayWithOffset" ]
          }
        },
        "org.apache.commons.io.input.TeeInputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.input.TeeInputStreamTest" : [ "testMarkReset", "testReadEverything", "testReadNothing", "testReadOneByte", "testReadToArray", "testReadToArrayWithOffset", "testSkip" ]
          }
        },
        "org.apache.commons.io.input.TeeInputStreamTest#setUp" : {
          "testcases" : {
            "org.apache.commons.io.input.TeeInputStreamTest" : [ "testMarkReset", "testReadEverything", "testReadNothing", "testReadOneByte", "testReadToArray", "testReadToArrayWithOffset", "testSkip" ]
          }
        },
        "org.apache.commons.io.input.TeeInputStreamTest#testMarkReset" : {
          "testcases" : {
            "org.apache.commons.io.input.TeeInputStreamTest" : [ "testMarkReset" ]
          }
        },
        "org.apache.commons.io.input.TeeInputStreamTest#testReadEverything" : {
          "testcases" : {
            "org.apache.commons.io.input.TeeInputStreamTest" : [ "testReadEverything" ]
          }
        },
        "org.apache.commons.io.input.TeeInputStreamTest#testReadNothing" : {
          "testcases" : {
            "org.apache.commons.io.input.TeeInputStreamTest" : [ "testReadNothing" ]
          }
        },
        "org.apache.commons.io.input.TeeInputStreamTest#testReadOneByte" : {
          "testcases" : {
            "org.apache.commons.io.input.TeeInputStreamTest" : [ "testReadOneByte" ]
          }
        },
        "org.apache.commons.io.input.TeeInputStreamTest#testReadToArray" : {
          "testcases" : {
            "org.apache.commons.io.input.TeeInputStreamTest" : [ "testReadToArray" ]
          }
        },
        "org.apache.commons.io.input.TeeInputStreamTest#testReadToArrayWithOffset" : {
          "testcases" : {
            "org.apache.commons.io.input.TeeInputStreamTest" : [ "testReadToArrayWithOffset" ]
          }
        },
        "org.apache.commons.io.input.TeeInputStreamTest#testSkip" : {
          "testcases" : {
            "org.apache.commons.io.input.TeeInputStreamTest" : [ "testSkip" ]
          }
        }
      }
    },
    "91e47f76a97d4e549a92f0a01137529e9bee257f" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "422ce6fa23b426ab71f271d4643ce9163cf707d3",
      "changedClazzes" : {
        "org.apache.commons.io.input.TeeInputStream" : {
          "testcases" : {
            "org.apache.commons.io.input.TeeInputStreamTest" : [ "testMarkReset", "testReadEverything", "testReadNothing", "testReadOneByte", "testReadToArray", "testReadToArrayWithOffset", "testSkip" ]
          }
        }
      }
    },
    "d2bd4422c37efd98bcf11009d5eba0d91f891118" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "91e47f76a97d4e549a92f0a01137529e9bee257f",
      "changedClazzes" : {
        "org.apache.commons.io.filefilter.FileFilterTestCase#testRegex" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testRegex" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testListFiles" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testFalse", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNot", "testPrefix", "testRegex", "testSizeFilter", "testSuffix", "testTrue" ]
          }
        }
      }
    },
    "fb24a474dee4ca92f28d5d589f38d11d635b543b" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "d2bd4422c37efd98bcf11009d5eba0d91f891118",
      "changedClazzes" : {
        "org.apache.commons.io.output.ByteArrayOutputStream#<init>" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testTempFileAboveThreshold", "testTempFileAboveThresholdPrefixOnly", "testTempFileBelowThreshold", "testTempFileError" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream#close" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testTempFileBelowThreshold" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream#getBuffer(int)" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testTempFileAboveThreshold", "testTempFileAboveThresholdPrefixOnly" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream#needNewBuffer(int)" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testTempFileAboveThreshold", "testTempFileAboveThresholdPrefixOnly", "testTempFileBelowThreshold", "testTempFileError" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream#write(byte[],int,int)" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testTempFileBelowThreshold" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream#writeTo(java.io.OutputStream)" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testTempFileAboveThreshold", "testTempFileAboveThresholdPrefixOnly" ]
          }
        },
        "org.apache.commons.io.output.DeferredFileOutputStream" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testAboveThreshold", "testAtThreshold", "testBelowThreshold", "testThresholdReached", "testWriteToLarge", "testWriteToSmall" ]
          }
        },
        "org.apache.commons.io.output.DeferredFileOutputStream#<init>(int,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testTempFileAboveThreshold", "testTempFileAboveThresholdPrefixOnly", "testTempFileBelowThreshold", "testTempFileError" ]
          }
        },
        "org.apache.commons.io.output.DeferredFileOutputStream#close" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testTempFileAboveThreshold", "testTempFileAboveThresholdPrefixOnly", "testTempFileBelowThreshold" ]
          }
        },
        "org.apache.commons.io.output.DeferredFileOutputStream#getData" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testTempFileAboveThreshold", "testTempFileAboveThresholdPrefixOnly" ]
          }
        },
        "org.apache.commons.io.output.DeferredFileOutputStream#getFile" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testTempFileAboveThreshold", "testTempFileAboveThresholdPrefixOnly", "testTempFileBelowThreshold" ]
          }
        },
        "org.apache.commons.io.output.DeferredFileOutputStream#getStream" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testTempFileAboveThreshold", "testTempFileAboveThresholdPrefixOnly", "testTempFileBelowThreshold" ]
          }
        },
        "org.apache.commons.io.output.DeferredFileOutputStream#isInMemory" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testTempFileAboveThreshold", "testTempFileAboveThresholdPrefixOnly", "testTempFileBelowThreshold" ]
          }
        },
        "org.apache.commons.io.output.DeferredFileOutputStream#thresholdReached" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testTempFileAboveThreshold", "testTempFileAboveThresholdPrefixOnly" ]
          }
        },
        "org.apache.commons.io.output.DeferredFileOutputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testAboveThreshold", "testAtThreshold", "testBelowThreshold", "testTempFileAboveThreshold", "testTempFileAboveThresholdPrefixOnly", "testTempFileBelowThreshold", "testTempFileError", "testThresholdReached", "testWriteToLarge", "testWriteToSmall" ]
          }
        },
        "org.apache.commons.io.output.DeferredFileOutputStreamTest#testTempFileAboveThreshold" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testTempFileAboveThreshold" ]
          }
        },
        "org.apache.commons.io.output.DeferredFileOutputStreamTest#testTempFileAboveThresholdPrefixOnly" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testTempFileAboveThresholdPrefixOnly" ]
          }
        },
        "org.apache.commons.io.output.DeferredFileOutputStreamTest#testTempFileBelowThreshold" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testTempFileBelowThreshold" ]
          }
        },
        "org.apache.commons.io.output.DeferredFileOutputStreamTest#testTempFileError" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testTempFileError" ]
          }
        },
        "org.apache.commons.io.output.DeferredFileOutputStreamTest#verifyResultFile(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testTempFileAboveThreshold", "testTempFileAboveThresholdPrefixOnly" ]
          }
        },
        "org.apache.commons.io.output.ThresholdingOutputStream#<init>(int)" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testTempFileAboveThreshold", "testTempFileAboveThresholdPrefixOnly", "testTempFileBelowThreshold", "testTempFileError" ]
          }
        },
        "org.apache.commons.io.output.ThresholdingOutputStream#checkThreshold(int)" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testTempFileAboveThreshold", "testTempFileAboveThresholdPrefixOnly", "testTempFileBelowThreshold" ]
          }
        },
        "org.apache.commons.io.output.ThresholdingOutputStream#close" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testTempFileAboveThreshold", "testTempFileAboveThresholdPrefixOnly", "testTempFileBelowThreshold" ]
          }
        },
        "org.apache.commons.io.output.ThresholdingOutputStream#flush" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testTempFileAboveThreshold", "testTempFileAboveThresholdPrefixOnly", "testTempFileBelowThreshold" ]
          }
        },
        "org.apache.commons.io.output.ThresholdingOutputStream#isThresholdExceeded" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testTempFileAboveThreshold", "testTempFileAboveThresholdPrefixOnly", "testTempFileBelowThreshold" ]
          }
        },
        "org.apache.commons.io.output.ThresholdingOutputStream#write(byte[],int,int)" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testTempFileAboveThreshold", "testTempFileAboveThresholdPrefixOnly", "testTempFileBelowThreshold" ]
          }
        }
      }
    },
    "c9348861506b7fa79c3b89107adb574613b3abc6" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "fb24a474dee4ca92f28d5d589f38d11d635b543b",
      "changedClazzes" : { }
    },
    "d7b27cca78f9a945e164af19fa7f49585958d60f" : {
      "running" : false,
      "jdk" : 8,
      "changedClazzes" : { }
    },
    "7a10ec81f45313bae94971c51b3bdb3b93b6c44e" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "c9348861506b7fa79c3b89107adb574613b3abc6",
      "changedClazzes" : {
        "org.apache.commons.io.filefilter.AgeFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter" ]
          }
        },
        "org.apache.commons.io.filefilter.AndFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilterAndLimitB", "testFilterAndLimitC", "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testListFiles" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAnd", "testCanRead", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testSizeFilter" ]
          }
        },
        "org.apache.commons.io.filefilter.CanReadFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testCanRead" ]
          }
        },
        "org.apache.commons.io.filefilter.CanWriteFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testCanRead", "testCanWrite" ]
          }
        },
        "org.apache.commons.io.filefilter.DelegateFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testDelegateFileFilter" ]
          }
        },
        "org.apache.commons.io.filefilter.DirectoryFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilterAndLimitB", "testFilterAndLimitC", "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testListFiles" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testDirectory", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeSVNAware" ]
          }
        },
        "org.apache.commons.io.filefilter.EmptyFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testEmpty" ]
          }
        },
        "org.apache.commons.io.filefilter.FalseFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAnd", "testFalse", "testOr" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFiles", "testMakeFileOnly" ]
          }
        },
        "org.apache.commons.io.filefilter.HiddenFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testHidden" ]
          }
        },
        "org.apache.commons.io.filefilter.NameFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilter", "testFilterAndLimitB", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNameFilterNullArrayArgument", "testNameFilterNullListArgument" ]
          }
        },
        "org.apache.commons.io.filefilter.NotFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilterAndLimitB", "testFilterAndLimitC" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testListFiles" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testCanRead", "testCanWrite", "testEmpty", "testHidden", "testMakeCVSAware", "testMakeSVNAware", "testNot" ]
          }
        },
        "org.apache.commons.io.filefilter.OrFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilter", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testListFiles" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testDelegateFileFilter", "testOr", "testSuffix" ]
          }
        },
        "org.apache.commons.io.filefilter.PrefixFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testPrefix", "testPrefixCaseInsensitive" ]
          }
        },
        "org.apache.commons.io.filefilter.RegexFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testRegex" ]
          }
        },
        "org.apache.commons.io.filefilter.SizeFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testSizeFilter" ]
          }
        },
        "org.apache.commons.io.filefilter.SuffixFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFilesByExtension" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testSuffix", "testSuffixCaseInsensitive" ]
          }
        },
        "org.apache.commons.io.filefilter.TrueFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilterDirAndFile3", "testFilterDirAndFile4" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAnd", "testNot", "testOr", "testTrue" ]
          }
        },
        "org.apache.commons.io.filefilter.WildcardFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testWildcard" ]
          }
        },
        "org.apache.commons.io.filefilter.WildcardFilter" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testListFiles" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testDeprecatedWildcard" ]
          }
        }
      }
    },
    "6d38af68ae92c67e1c788d8a4607a85e668a3df6" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "7a10ec81f45313bae94971c51b3bdb3b93b6c44e",
      "changedClazzes" : {
        "org.apache.commons.io.filefilter.FileFilterUtils" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testListFiles" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testFalse", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNot", "testPrefix", "testSizeFilter", "testSuffix", "testTrue" ]
          }
        }
      }
    },
    "fe3554cc2c0ab534e90742d03d5663c30a173973" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "6d38af68ae92c67e1c788d8a4607a85e668a3df6",
      "changedClazzes" : {
        "org.apache.commons.io.filefilter.AgeFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter" ]
          }
        },
        "org.apache.commons.io.filefilter.DelegateFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testDelegateFileFilter" ]
          }
        },
        "org.apache.commons.io.filefilter.NameFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilter", "testFilterAndLimitB", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNameFilterNullArrayArgument", "testNameFilterNullListArgument" ]
          }
        },
        "org.apache.commons.io.filefilter.NotFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilterAndLimitB", "testFilterAndLimitC" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testListFiles" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testCanRead", "testCanWrite", "testEmpty", "testHidden", "testMakeCVSAware", "testMakeSVNAware", "testNot" ]
          }
        },
        "org.apache.commons.io.filefilter.PrefixFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testPrefix", "testPrefixCaseInsensitive" ]
          }
        },
        "org.apache.commons.io.filefilter.RegexFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testRegex" ]
          }
        },
        "org.apache.commons.io.filefilter.SizeFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testSizeFilter" ]
          }
        },
        "org.apache.commons.io.filefilter.SuffixFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFilesByExtension" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testSuffix", "testSuffixCaseInsensitive" ]
          }
        },
        "org.apache.commons.io.filefilter.WildcardFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testWildcard" ]
          }
        },
        "org.apache.commons.io.filefilter.WildcardFilter" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testListFiles" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testDeprecatedWildcard" ]
          }
        }
      }
    },
    "5ef9722809594f9e087a5be77c098057ef42969a" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "fe3554cc2c0ab534e90742d03d5663c30a173973",
      "changedClazzes" : {
        "org.apache.commons.io.FilenameUtils#equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testEquals", "testEqualsNormalized", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl" ]
          }
        },
        "org.apache.commons.io.FilenameUtilsTestCase#testEqualsNormalizedError_IO_128" : { }
      }
    },
    "059e3d04680d2f3f5cb8c1a43ec856a206a307dd" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "5ef9722809594f9e087a5be77c098057ef42969a",
      "changedClazzes" : { }
    },
    "f6e765472ee65bf856ebc53a6c5c03762d4e5cf2" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "059e3d04680d2f3f5cb8c1a43ec856a206a307dd",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtilsTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteDir", "testForceMkdir", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testReadFileToByteArray", "testReadFileToString", "testReadLines", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ]
          }
        }
      }
    },
    "4576857e33fc0aa9682ba77a6e464213ec15b829" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "f6e765472ee65bf856ebc53a6c5c03762d4e5cf2",
      "changedClazzes" : {
        "org.apache.commons.io.HexDump" : {
          "testcases" : {
            "org.apache.commons.io.HexDumpTest" : [ "testDump" ]
          }
        }
      }
    },
    "8a8ec3362a591fe4f419bbede7fd62546a3d46a8" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "4576857e33fc0aa9682ba77a6e464213ec15b829",
      "changedClazzes" : { }
    },
    "68a55d56ae853fc2fdce829a6042163bdc02deb4" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "8a8ec3362a591fe4f419bbede7fd62546a3d46a8",
      "changedClazzes" : {
        "org.apache.commons.io.input.ClosedInputStream" : {
          "testcases" : {
            "org.apache.commons.io.input.AutoCloseInputStreamTest" : [ "testClose", "testRead", "testReadBuffer", "testReadBufferOffsetLength" ],
            "org.apache.commons.io.input.CloseShieldInputStreamTest" : [ "testClose" ],
            "org.apache.commons.io.input.ClosedInputStreamTest" : [ "testRead" ]
          }
        },
        "org.apache.commons.io.output.ClosedOutputStream" : {
          "testcases" : {
            "org.apache.commons.io.output.CloseShieldOutputStreamTest" : [ "testClose" ],
            "org.apache.commons.io.output.ClosedOutputStreamTest" : [ "testRead" ]
          }
        },
        "org.apache.commons.io.output.NullOutputStream" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnNullChecksum" ],
            "org.apache.commons.io.output.NullOutputStreamTest" : [ "testNull" ]
          }
        },
        "org.apache.commons.io.output.NullWriter" : {
          "testcases" : {
            "org.apache.commons.io.output.NullWriterTest" : [ "testNull" ]
          }
        }
      }
    },
    "db3e834e135ede835ce4ab59429ab90afd059e67" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "68a55d56ae853fc2fdce829a6042163bdc02deb4",
      "changedClazzes" : {
        "org.apache.commons.io.FilenameUtils#isSystemWindows" : {
          "testcases" : {
            "org.apache.commons.io.IOCaseTestCase" : [ "test_checkCompare_case", "test_checkCompare_functionality" ]
          }
        },
        "org.apache.commons.io.IOCase" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilter", "testFilterAndLimitB", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testListFiles" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testEquals", "testEqualsNormalized", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl" ],
            "org.apache.commons.io.FilenameUtilsWildcardTestCase" : [ "testMatch", "testMatch2", "testMatchCaseSpecified", "testMatchOnSystem" ],
            "org.apache.commons.io.IOCaseTestCase" : [ "test_checkEndsWith_case", "test_checkEndsWith_functionality", "test_checkEquals_case", "test_checkEquals_functionality", "test_checkRegionMatches_case", "test_checkRegionMatches_functionality", "test_checkStartsWith_case", "test_checkStartsWith_functionality", "test_forName", "test_getName", "test_isCaseSensitive", "test_serialization", "test_toString" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testDeprecatedWildcard", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testPrefix", "testPrefixCaseInsensitive", "testRegex", "testSuffix", "testSuffixCaseInsensitive", "testWildcard" ]
          }
        },
        "org.apache.commons.io.IOCase#<init>(java.lang.String,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.IOCaseTestCase" : [ "test_checkCompare_case", "test_checkCompare_functionality" ]
          }
        },
        "org.apache.commons.io.IOCase#checkCompareTo(java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.IOCaseTestCase" : [ "test_checkCompare_case", "test_checkCompare_functionality" ]
          }
        },
        "org.apache.commons.io.IOCaseTestCase" : {
          "testcases" : {
            "org.apache.commons.io.IOCaseTestCase" : [ "test_checkCompare_case", "test_checkCompare_functionality", "test_checkEndsWith_case", "test_checkEndsWith_functionality", "test_checkEquals_case", "test_checkEquals_functionality", "test_checkRegionMatches_case", "test_checkRegionMatches_functionality", "test_checkStartsWith_case", "test_checkStartsWith_functionality", "test_forName", "test_getName", "test_isCaseSensitive", "test_serialization", "test_toString" ]
          }
        },
        "org.apache.commons.io.IOCaseTestCase#setUp" : {
          "testcases" : {
            "org.apache.commons.io.IOCaseTestCase" : [ "test_checkCompare_case", "test_checkCompare_functionality" ]
          }
        },
        "org.apache.commons.io.IOCaseTestCase#tearDown" : {
          "testcases" : {
            "org.apache.commons.io.IOCaseTestCase" : [ "test_checkCompare_case", "test_checkCompare_functionality" ]
          }
        },
        "org.apache.commons.io.IOCaseTestCase#test_checkCompare_case" : {
          "testcases" : {
            "org.apache.commons.io.IOCaseTestCase" : [ "test_checkCompare_case" ]
          }
        },
        "org.apache.commons.io.IOCaseTestCase#test_checkCompare_functionality" : {
          "testcases" : {
            "org.apache.commons.io.IOCaseTestCase" : [ "test_checkCompare_functionality" ]
          }
        }
      }
    },
    "46dd580e99113726b2e2743ce50865d2d1cbc44f" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "db3e834e135ede835ce4ab59429ab90afd059e67",
      "changedClazzes" : {
        "org.apache.commons.io.CausedIOException" : { },
        "org.apache.commons.io.CausedIOException#<init>(java.lang.String,java.lang.Throwable)" : {
          "testcases" : {
            "org.apache.commons.io.CausedIOExceptionTestCase" : [ "testIOExceptionStringThrowable" ]
          }
        },
        "org.apache.commons.io.CausedIOExceptionTestCase" : {
          "testcases" : {
            "org.apache.commons.io.CausedIOExceptionTestCase" : [ "testIOExceptionStringThrowable" ]
          }
        },
        "org.apache.commons.io.CausedIOExceptionTestCase#testIOExceptionStringThrowable" : {
          "testcases" : {
            "org.apache.commons.io.CausedIOExceptionTestCase" : [ "testIOExceptionStringThrowable" ]
          }
        },
        "org.apache.commons.io.PackageTestSuite#suite" : { }
      }
    },
    "fecdc39c81375bc34e34d0fe72dccd6dce84bfa7" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "46dd580e99113726b2e2743ce50865d2d1cbc44f",
      "changedClazzes" : { }
    },
    "bf8f5bcec1d5c6221f73e0d82879c18d2d7fc88c" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "fecdc39c81375bc34e34d0fe72dccd6dce84bfa7",
      "changedClazzes" : {
        "org.apache.commons.io.CausedIOException" : {
          "testcases" : {
            "org.apache.commons.io.CausedIOExceptionTestCase" : [ "testIOExceptionStringThrowable" ]
          }
        },
        "org.apache.commons.io.CausedIOException#<init>(java.lang.Throwable)" : {
          "testcases" : {
            "org.apache.commons.io.CausedIOExceptionTestCase" : [ "testIOExceptionThrowable" ]
          }
        },
        "org.apache.commons.io.CausedIOExceptionTestCase" : {
          "testcases" : {
            "org.apache.commons.io.CausedIOExceptionTestCase" : [ "testIOExceptionStringThrowable", "testIOExceptionThrowable" ]
          }
        },
        "org.apache.commons.io.CausedIOExceptionTestCase#testIOExceptionThrowable" : {
          "testcases" : {
            "org.apache.commons.io.CausedIOExceptionTestCase" : [ "testIOExceptionThrowable" ]
          }
        },
        "org.apache.commons.io.CausedIOExceptionTestCase#validate(java.lang.Throwable,java.lang.Throwable,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.CausedIOExceptionTestCase" : [ "testIOExceptionThrowable" ]
          }
        }
      }
    },
    "a094516c1b360f830527dd0b7811dd928495447a" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "bf8f5bcec1d5c6221f73e0d82879c18d2d7fc88c",
      "changedClazzes" : {
        "org.apache.commons.io.FileSystemUtilsTestCase#testGetFreeSpace_String" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpace_String" ]
          }
        },
        "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase#testRemove" : { },
        "org.apache.commons.io.input.SwappedDataInputStreamTest#testReadInt" : {
          "testcases" : {
            "org.apache.commons.io.input.SwappedDataInputStreamTest" : [ "testReadInt" ]
          }
        },
        "org.apache.commons.io.input.SwappedDataInputStreamTest#testSkipBytes" : {
          "testcases" : {
            "org.apache.commons.io.input.SwappedDataInputStreamTest" : [ "testSkipBytes" ]
          }
        }
      }
    },
    "98a3fa2f36d5f8a99885728be7934703c1574f25" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "a094516c1b360f830527dd0b7811dd928495447a",
      "changedClazzes" : {
        "org.apache.commons.io.CopyUtilsTest" : {
          "testcases" : {
            "org.apache.commons.io.CopyUtilsTest" : [ "testCopy_byteArrayToOutputStream", "testCopy_byteArrayToWriter", "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToWriter", "testCopy_readerToOutputStream", "testCopy_readerToWriter", "testCopy_stringToOutputStream", "testCopy_stringToWriter" ]
          }
        },
        "org.apache.commons.io.DemuxTestCase" : {
          "testcases" : {
            "org.apache.commons.io.DemuxTestCase" : [ "testInputStream", "testOutputStream" ]
          }
        },
        "org.apache.commons.io.DemuxTestCase$ReaderThread" : {
          "testcases" : {
            "org.apache.commons.io.DemuxTestCase" : [ "testInputStream" ]
          }
        },
        "org.apache.commons.io.DemuxTestCase$WriterThread" : {
          "testcases" : {
            "org.apache.commons.io.DemuxTestCase" : [ "testOutputStream" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCase" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testCancel", "testFilter", "testFilterAndLimitA", "testFilterAndLimitB", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile2", "testFilterDirAndFile3", "testFilterDirAndFile4", "testHandleStartDirectoryFalse", "testLimitToCurrent", "testMissingStartDirectory", "testMultiThreadCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCase$TestCancelWalker" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCase$TestFalseFileFinder" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testHandleStartDirectoryFalse" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilter", "testFilterAndLimitA", "testFilterAndLimitB", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile2", "testFilterDirAndFile3", "testFilterDirAndFile4", "testHandleStartDirectoryFalse", "testLimitToCurrent", "testMissingStartDirectory" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCase$TestMultiThreadCancelWalker" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testMultiThreadCancel" ]
          }
        },
        "org.apache.commons.io.EndianUtilsTest" : {
          "testcases" : {
            "org.apache.commons.io.EndianUtilsTest" : [ "testReadSwappedDouble", "testReadSwappedFloat", "testReadSwappedInteger", "testReadSwappedLong", "testReadSwappedShort", "testReadSwappedUnsignedInteger", "testReadSwappedUnsignedShort", "testSwapDouble", "testSwapFloat", "testSwapInteger", "testSwapLong", "testSwapShort", "testSymmetry", "testSymmetryOfLong", "testUnsignedOverrun", "testWriteSwappedDouble", "testWriteSwappedFloat", "testWriteSwappedInteger", "testWriteSwappedLong", "testWriteSwappedShort" ]
          }
        },
        "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testCleanEmpty", "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile", "testThrowsOnNullList" ]
          }
        },
        "org.apache.commons.io.FileUtilsFileNewerTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ]
          }
        },
        "org.apache.commons.io.HexDumpTest" : {
          "testcases" : {
            "org.apache.commons.io.HexDumpTest" : [ "testDump" ]
          }
        },
        "org.apache.commons.io.IOUtilsCopyTestCase" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToOutputStream_IO84", "testCopy_inputStreamToOutputStream_nullIn", "testCopy_inputStreamToOutputStream_nullOut", "testCopy_inputStreamToWriter", "testCopy_inputStreamToWriter_Encoding", "testCopy_inputStreamToWriter_Encoding_nullEncoding", "testCopy_inputStreamToWriter_Encoding_nullIn", "testCopy_inputStreamToWriter_Encoding_nullOut", "testCopy_inputStreamToWriter_nullIn", "testCopy_inputStreamToWriter_nullOut", "testCopy_readerToOutputStream", "testCopy_readerToOutputStream_Encoding", "testCopy_readerToOutputStream_Encoding_nullEncoding", "testCopy_readerToOutputStream_Encoding_nullIn", "testCopy_readerToOutputStream_Encoding_nullOut", "testCopy_readerToOutputStream_nullIn", "testCopy_readerToOutputStream_nullOut", "testCopy_readerToWriter", "testCopy_readerToWriter_IO84", "testCopy_readerToWriter_nullIn", "testCopy_readerToWriter_nullOut" ]
          }
        },
        "org.apache.commons.io.IOUtilsWriteTestCase" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWriteLines_OutputStream", "testWriteLines_OutputStream_Encoding", "testWriteLines_OutputStream_Encoding_nullData", "testWriteLines_OutputStream_Encoding_nullEncoding", "testWriteLines_OutputStream_Encoding_nullSeparator", "testWriteLines_OutputStream_Encoding_nullStream", "testWriteLines_OutputStream_nullData", "testWriteLines_OutputStream_nullSeparator", "testWriteLines_OutputStream_nullStream", "testWriteLines_Writer", "testWriteLines_Writer_nullData", "testWriteLines_Writer_nullSeparator", "testWriteLines_Writer_nullStream", "testWrite_byteArrayToOutputStream", "testWrite_byteArrayToOutputStream_nullData", "testWrite_byteArrayToOutputStream_nullStream", "testWrite_byteArrayToWriter", "testWrite_byteArrayToWriter_Encoding", "testWrite_byteArrayToWriter_Encoding_nullData", "testWrite_byteArrayToWriter_Encoding_nullEncoding", "testWrite_byteArrayToWriter_Encoding_nullWriter", "testWrite_byteArrayToWriter_nullData", "testWrite_byteArrayToWriter_nullWriter", "testWrite_charArrayToOutputStream", "testWrite_charArrayToOutputStream_Encoding", "testWrite_charArrayToOutputStream_Encoding_nullData", "testWrite_charArrayToOutputStream_Encoding_nullStream", "testWrite_charArrayToOutputStream_nullData", "testWrite_charArrayToOutputStream_nullEncoding", "testWrite_charArrayToOutputStream_nullStream", "testWrite_charArrayToWriter", "testWrite_charArrayToWriter_Encoding_nullData", "testWrite_charArrayToWriter_Encoding_nullStream", "testWrite_stringToOutputStream", "testWrite_stringToOutputStream_Encoding", "testWrite_stringToOutputStream_Encoding_nullData", "testWrite_stringToOutputStream_Encoding_nullStream", "testWrite_stringToOutputStream_nullData", "testWrite_stringToOutputStream_nullEncoding", "testWrite_stringToOutputStream_nullStream", "testWrite_stringToWriter", "testWrite_stringToWriter_Encoding_nullData", "testWrite_stringToWriter_Encoding_nullStream" ]
          }
        },
        "org.apache.commons.io.filefilter.AgeFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter" ]
          }
        },
        "org.apache.commons.io.filefilter.AndFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilterAndLimitB", "testFilterAndLimitC", "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testListFiles" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAnd", "testCanRead", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testSizeFilter" ]
          }
        },
        "org.apache.commons.io.filefilter.NameFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilter", "testFilterAndLimitB", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNameFilterNullArrayArgument", "testNameFilterNullListArgument" ]
          }
        },
        "org.apache.commons.io.filefilter.OrFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilter", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testListFiles" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testDelegateFileFilter", "testOr", "testSuffix" ]
          }
        },
        "org.apache.commons.io.filefilter.PrefixFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testPrefix", "testPrefixCaseInsensitive" ]
          }
        },
        "org.apache.commons.io.filefilter.RegexFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testRegex" ]
          }
        },
        "org.apache.commons.io.filefilter.SuffixFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFilesByExtension" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testSuffix", "testSuffixCaseInsensitive" ]
          }
        },
        "org.apache.commons.io.filefilter.WildcardFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testListFiles" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testWildcard" ]
          }
        },
        "org.apache.commons.io.filefilter.WildcardFilter" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testDeprecatedWildcard" ]
          }
        },
        "org.apache.commons.io.input.CountingInputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.input.CountingInputStreamTest" : [ "testCounting", "testEOF1", "testEOF2", "testEOF3", "testLargeFiles_IO84", "testResetting", "testSkipping", "testZeroLength1", "testZeroLength2", "testZeroLength3" ]
          }
        },
        "org.apache.commons.io.output.CountingOutputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.output.CountingOutputStreamTest" : [ "testCounting", "testLargeFiles_IO84" ]
          }
        },
        "org.apache.commons.io.output.DeferredFileOutputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testAboveThreshold", "testAtThreshold", "testBelowThreshold", "testTempFileAboveThreshold", "testTempFileAboveThresholdPrefixOnly", "testTempFileBelowThreshold", "testTempFileError", "testThresholdReached", "testWriteToLarge", "testWriteToSmall" ]
          }
        },
        "org.apache.commons.io.output.ProxyOutputStream" : {
          "testcases" : {
            "org.apache.commons.io.CopyUtilsTest" : [ "testCopy_byteArrayToOutputStream", "testCopy_byteArrayToWriter", "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToWriter", "testCopy_readerToOutputStream", "testCopy_readerToWriter", "testCopy_stringToOutputStream", "testCopy_stringToWriter" ],
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToWriter", "testCopy_inputStreamToWriter_Encoding", "testCopy_inputStreamToWriter_Encoding_nullEncoding", "testCopy_inputStreamToWriter_Encoding_nullIn", "testCopy_inputStreamToWriter_nullIn", "testCopy_readerToOutputStream", "testCopy_readerToOutputStream_Encoding", "testCopy_readerToOutputStream_Encoding_nullEncoding", "testCopy_readerToOutputStream_Encoding_nullIn", "testCopy_readerToOutputStream_nullIn", "testCopy_readerToWriter", "testCopy_readerToWriter_nullIn" ],
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWriteLines_OutputStream", "testWriteLines_OutputStream_Encoding", "testWriteLines_OutputStream_Encoding_nullData", "testWriteLines_OutputStream_Encoding_nullEncoding", "testWriteLines_OutputStream_Encoding_nullSeparator", "testWriteLines_OutputStream_nullData", "testWriteLines_OutputStream_nullSeparator", "testWriteLines_Writer", "testWriteLines_Writer_nullData", "testWriteLines_Writer_nullSeparator", "testWrite_byteArrayToOutputStream", "testWrite_byteArrayToOutputStream_nullData", "testWrite_byteArrayToWriter", "testWrite_byteArrayToWriter_Encoding", "testWrite_byteArrayToWriter_Encoding_nullData", "testWrite_byteArrayToWriter_Encoding_nullEncoding", "testWrite_byteArrayToWriter_nullData", "testWrite_charArrayToOutputStream", "testWrite_charArrayToOutputStream_Encoding", "testWrite_charArrayToOutputStream_Encoding_nullData", "testWrite_charArrayToOutputStream_nullData", "testWrite_charArrayToOutputStream_nullEncoding", "testWrite_charArrayToWriter", "testWrite_charArrayToWriter_Encoding_nullData", "testWrite_stringToOutputStream", "testWrite_stringToOutputStream_Encoding", "testWrite_stringToOutputStream_Encoding_nullData", "testWrite_stringToOutputStream_nullData", "testWrite_stringToOutputStream_nullEncoding", "testWrite_stringToWriter", "testWrite_stringToWriter_Encoding_nullData" ],
            "org.apache.commons.io.output.CloseShieldOutputStreamTest" : [ "testClose" ],
            "org.apache.commons.io.output.CountingOutputStreamTest" : [ "testCounting" ],
            "org.apache.commons.io.output.TeeOutputStreamTest" : [ "testTee" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriter" : { }
      }
    },
    "33ab3ce04a4a7e358d33a178631ae467cbf55f17" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "98a3fa2f36d5f8a99885728be7934703c1574f25",
      "changedClazzes" : { }
    },
    "50f9c9370c1286039fb6750e08e0fcbc20c6adc0" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "33ab3ce04a4a7e358d33a178631ae467cbf55f17",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils#cleanDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testForceDeleteAFile3" ]
          }
        },
        "org.apache.commons.io.FileUtils#deleteDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testForceDeleteAFile3" ]
          }
        },
        "org.apache.commons.io.FileUtils#forceDelete(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testForceDeleteAFile3" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testReadFileToByteArray", "testReadFileToString", "testReadLines", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#setUp" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testForceDeleteAFile3" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#tearDown" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testForceDeleteAFile3" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testForceDeleteAFile3" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testForceDeleteAFile3" ]
          }
        },
        "org.apache.commons.io.IOUtils#closeQuietly(java.io.OutputStream)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testForceDeleteAFile3" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#createFile(java.io.File,long)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testForceDeleteAFile3" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#generateTestData(java.io.OutputStream,long)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testForceDeleteAFile3" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#getTestDirectory" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testForceDeleteAFile3" ]
          }
        }
      }
    },
    "7b8f4719e708c3a853ed69b70d00e957e1b02ee2" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "50f9c9370c1286039fb6750e08e0fcbc20c6adc0",
      "changedClazzes" : {
        "org.apache.commons.io.input.AutoCloseInputStream" : {
          "testcases" : {
            "org.apache.commons.io.input.AutoCloseInputStreamTest" : [ "testClose", "testRead", "testReadBuffer", "testReadBufferOffsetLength" ]
          }
        }
      }
    },
    "28757199c60f09e6dafcbdc788d3ee3c8595bac5" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "7b8f4719e708c3a853ed69b70d00e957e1b02ee2",
      "changedClazzes" : { }
    },
    "2f8d0922c8c7d1be2c12fba6264f08acdbae47d1" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "28757199c60f09e6dafcbdc788d3ee3c8595bac5",
      "changedClazzes" : {
        "org.apache.commons.io.DirectoryWalker#checkIfCancelled(java.io.File,int,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToChild", "testCopyDirectoryToGrandChild" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker#handleDirectory(java.io.File,int,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToChild", "testCopyDirectoryToGrandChild" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker#handleDirectoryEnd(java.io.File,int,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToChild", "testCopyDirectoryToGrandChild" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker#handleEnd(java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToChild", "testCopyDirectoryToGrandChild" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker#handleIsCancelled(java.io.File,int,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToChild", "testCopyDirectoryToGrandChild" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker#handleStart(java.io.File,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToChild", "testCopyDirectoryToGrandChild" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker#walk(java.io.File,int,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToChild", "testCopyDirectoryToGrandChild" ]
          }
        },
        "org.apache.commons.io.FileUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerNull" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerNull" ],
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce" ],
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testCleanEmpty", "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile", "testThrowsOnNullList" ],
            "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testReadFileToByteArray", "testReadFileToString", "testReadLines", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ],
            "org.apache.commons.io.FileUtilsWaitForTestCase" : [ "testWaitFor" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPrefix", "testGetPrefixLength", "testIndexOfExtension", "testIndexOfLastSeparator", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testNormalize", "testNormalizeNoEndSeparator", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testByteArrayToOutputStream", "testByteArrayToString", "testByteArrayToWriter", "testConstants", "testInputStreamToByteArray", "testInputStreamToCharArray", "testInputStreamToCharArrayWithEncoding", "testInputStreamToString", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testReaderToCharArray", "testReaderToString", "testStringToByteArray", "testStringToInputStream", "testStringToOutputStream", "testStringToWriter" ],
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFiltering", "testInvalidEncoding", "testMissingFile", "testNextLineOnly", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testAnd", "testCanRead", "testCanWrite", "testDelegateFileFilter", "testDeprecatedWildcard", "testDirectory", "testEmpty", "testFalse", "testFiles", "testHidden", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNameFilterNullArrayArgument", "testNameFilterNullListArgument", "testNot", "testOr", "testPrefix", "testPrefixCaseInsensitive", "testRegex", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testTrue", "testWildcard" ],
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testFileLocked", "testFileNotLocked" ]
          }
        },
        "org.apache.commons.io.FileUtils#cleanDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToChild", "testCopyDirectoryToGrandChild" ]
          }
        },
        "org.apache.commons.io.FileUtils#copyDirectory(java.io.File,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToChild", "testCopyDirectoryToGrandChild" ]
          }
        },
        "org.apache.commons.io.FileUtils#deleteDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToChild", "testCopyDirectoryToGrandChild" ]
          }
        },
        "org.apache.commons.io.FileUtils#doCopyDirectory(java.io.File,java.io.File,boolean,java.util.List)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToChild", "testCopyDirectoryToGrandChild" ]
          }
        },
        "org.apache.commons.io.FileUtils#doCopyFile(java.io.File,java.io.File,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToChild", "testCopyDirectoryToGrandChild" ]
          }
        },
        "org.apache.commons.io.FileUtils#forceDelete(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToChild", "testCopyDirectoryToGrandChild" ]
          }
        },
        "org.apache.commons.io.FileUtils#openOutputStream(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToChild", "testCopyDirectoryToGrandChild" ]
          }
        },
        "org.apache.commons.io.FileUtils#sizeOfDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToChild", "testCopyDirectoryToGrandChild" ]
          }
        },
        "org.apache.commons.io.FileUtils#writeStringToFile(java.io.File,java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToChild", "testCopyDirectoryToGrandChild" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testReadFileToByteArray", "testReadFileToString", "testReadLines", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#createFilesForTestCopyDirectory(java.io.File,java.io.File,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToChild", "testCopyDirectoryToGrandChild" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#setUp" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToChild", "testCopyDirectoryToGrandChild" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#tearDown" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToChild", "testCopyDirectoryToGrandChild" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testCopyDirectoryToChild" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToChild" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testCopyDirectoryToGrandChild" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToGrandChild" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase$ListDirectoryWalker#handleDirectoryStart(java.io.File,int,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToChild", "testCopyDirectoryToGrandChild" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase$ListDirectoryWalker#handleFile(java.io.File,int,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToChild", "testCopyDirectoryToGrandChild" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase$ListDirectoryWalker#list(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToChild", "testCopyDirectoryToGrandChild" ]
          }
        },
        "org.apache.commons.io.IOUtils#closeQuietly(java.io.InputStream)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToChild", "testCopyDirectoryToGrandChild" ]
          }
        },
        "org.apache.commons.io.IOUtils#copy(java.io.InputStream,java.io.OutputStream)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToChild", "testCopyDirectoryToGrandChild" ]
          }
        },
        "org.apache.commons.io.IOUtils#copyLarge(java.io.InputStream,java.io.OutputStream)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToChild", "testCopyDirectoryToGrandChild" ]
          }
        },
        "org.apache.commons.io.IOUtils#write(java.lang.String,java.io.OutputStream,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToChild", "testCopyDirectoryToGrandChild" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#createFile(java.io.File,long)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToChild", "testCopyDirectoryToGrandChild" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#generateTestData(java.io.OutputStream,long)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToChild", "testCopyDirectoryToGrandChild" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#getTestDirectory" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToChild", "testCopyDirectoryToGrandChild" ]
          }
        }
      }
    },
    "4bf0a19e60a464e3f551f01cddbad8464f44b4ad" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "2f8d0922c8c7d1be2c12fba6264f08acdbae47d1",
      "changedClazzes" : {
        "org.apache.commons.io.input.CharSequenceReader" : { },
        "org.apache.commons.io.input.CharSequenceReader#<init>(java.lang.CharSequence)" : {
          "testcases" : {
            "org.apache.commons.io.input.CharSequenceReaderTest" : [ "testClose", "testMark", "testMarkSupported", "testRead", "testReadCharArray", "testReadCharArrayPortion", "testSkip" ]
          }
        },
        "org.apache.commons.io.input.CharSequenceReader#close" : {
          "testcases" : {
            "org.apache.commons.io.input.CharSequenceReaderTest" : [ "testClose", "testMark", "testSkip" ]
          }
        },
        "org.apache.commons.io.input.CharSequenceReader#mark(int)" : {
          "testcases" : {
            "org.apache.commons.io.input.CharSequenceReaderTest" : [ "testMark" ]
          }
        },
        "org.apache.commons.io.input.CharSequenceReader#markSupported" : {
          "testcases" : {
            "org.apache.commons.io.input.CharSequenceReaderTest" : [ "testMarkSupported" ]
          }
        },
        "org.apache.commons.io.input.CharSequenceReader#read" : {
          "testcases" : {
            "org.apache.commons.io.input.CharSequenceReaderTest" : [ "testReadCharArray", "testReadCharArrayPortion" ]
          }
        },
        "org.apache.commons.io.input.CharSequenceReader#reset" : {
          "testcases" : {
            "org.apache.commons.io.input.CharSequenceReaderTest" : [ "testMark", "testSkip" ]
          }
        },
        "org.apache.commons.io.input.CharSequenceReader#skip(long)" : {
          "testcases" : {
            "org.apache.commons.io.input.CharSequenceReaderTest" : [ "testSkip" ]
          }
        },
        "org.apache.commons.io.input.CharSequenceReaderTest" : {
          "testcases" : {
            "org.apache.commons.io.input.CharSequenceReaderTest" : [ "testClose", "testMark", "testMarkSupported", "testRead", "testReadCharArray", "testReadCharArrayPortion", "testSkip" ]
          }
        },
        "org.apache.commons.io.input.CharSequenceReaderTest#checkArray(char[],char[])" : {
          "testcases" : {
            "org.apache.commons.io.input.CharSequenceReaderTest" : [ "testReadCharArray", "testReadCharArrayPortion" ]
          }
        },
        "org.apache.commons.io.input.CharSequenceReaderTest#checkRead(java.io.Reader,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.CharSequenceReaderTest" : [ "testClose", "testMark", "testSkip" ]
          }
        },
        "org.apache.commons.io.input.CharSequenceReaderTest#testClose" : {
          "testcases" : {
            "org.apache.commons.io.input.CharSequenceReaderTest" : [ "testClose" ]
          }
        },
        "org.apache.commons.io.input.CharSequenceReaderTest#testMark" : {
          "testcases" : {
            "org.apache.commons.io.input.CharSequenceReaderTest" : [ "testMark" ]
          }
        },
        "org.apache.commons.io.input.CharSequenceReaderTest#testMarkSupported" : {
          "testcases" : {
            "org.apache.commons.io.input.CharSequenceReaderTest" : [ "testMarkSupported" ]
          }
        },
        "org.apache.commons.io.input.CharSequenceReaderTest#testRead" : {
          "testcases" : {
            "org.apache.commons.io.input.CharSequenceReaderTest" : [ "testRead" ]
          }
        },
        "org.apache.commons.io.input.CharSequenceReaderTest#testReadCharArray" : {
          "testcases" : {
            "org.apache.commons.io.input.CharSequenceReaderTest" : [ "testReadCharArray" ]
          }
        },
        "org.apache.commons.io.input.CharSequenceReaderTest#testReadCharArrayPortion" : {
          "testcases" : {
            "org.apache.commons.io.input.CharSequenceReaderTest" : [ "testReadCharArrayPortion" ]
          }
        },
        "org.apache.commons.io.input.CharSequenceReaderTest#testSkip" : {
          "testcases" : {
            "org.apache.commons.io.input.CharSequenceReaderTest" : [ "testSkip" ]
          }
        }
      }
    },
    "24c740b1831dab01b0f40dae2f1a02c6dbbcf7a1" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "4bf0a19e60a464e3f551f01cddbad8464f44b4ad",
      "changedClazzes" : {
        "org.apache.commons.io.input.PackageTestSuite#suite" : { }
      }
    },
    "518d735394c82d67288de50e9a557e1c4b5afee3" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "24c740b1831dab01b0f40dae2f1a02c6dbbcf7a1",
      "changedClazzes" : {
        "org.apache.commons.io.IOExceptionWithCause" : { },
        "org.apache.commons.io.IOExceptionWithCause#<init>(java.lang.String,java.lang.Throwable)" : {
          "testcases" : {
            "org.apache.commons.io.IOExceptionWithCauseTestCase" : [ "testIOExceptionThrowable" ]
          }
        },
        "org.apache.commons.io.IOExceptionWithCauseTestCase" : {
          "testcases" : {
            "org.apache.commons.io.IOExceptionWithCauseTestCase" : [ "testIOExceptionStringThrowable", "testIOExceptionThrowable" ]
          }
        },
        "org.apache.commons.io.IOExceptionWithCauseTestCase#testIOExceptionStringThrowable" : {
          "testcases" : {
            "org.apache.commons.io.IOExceptionWithCauseTestCase" : [ "testIOExceptionStringThrowable" ]
          }
        },
        "org.apache.commons.io.IOExceptionWithCauseTestCase#testIOExceptionThrowable" : {
          "testcases" : {
            "org.apache.commons.io.IOExceptionWithCauseTestCase" : [ "testIOExceptionThrowable" ]
          }
        },
        "org.apache.commons.io.IOExceptionWithCauseTestCase#validate(java.lang.Throwable,java.lang.Throwable,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.IOExceptionWithCauseTestCase" : [ "testIOExceptionStringThrowable", "testIOExceptionThrowable" ]
          }
        },
        "org.apache.commons.io.PackageTestSuite#suite" : { }
      }
    },
    "e1dc23052f4005c59cec7fe5cee31daa19d00a7d" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "518d735394c82d67288de50e9a557e1c4b5afee3",
      "changedClazzes" : {
        "org.apache.commons.io.input.CharSequenceReader" : {
          "testcases" : {
            "org.apache.commons.io.input.CharSequenceReaderTest" : [ "testClose", "testMark", "testMarkSupported", "testRead", "testReadCharArray", "testReadCharArrayPortion", "testSkip" ]
          }
        }
      }
    },
    "550e1d46d606fa46b8a1b5fc66159e01caf75aea" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "e1dc23052f4005c59cec7fe5cee31daa19d00a7d",
      "changedClazzes" : { }
    },
    "bd617111abe7a3dc036cd75a76e4b7a8dd9cc65e" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "550e1d46d606fa46b8a1b5fc66159e01caf75aea",
      "changedClazzes" : { }
    },
    "55dfa6eb4b3f1666a0a281e40657252054f0e6b7" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "bd617111abe7a3dc036cd75a76e4b7a8dd9cc65e",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils#sizeOfDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes" ]
          }
        },
        "org.apache.commons.io.IOUtils#closeQuietly(java.io.OutputStream)" : {
          "testcases" : {
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ]
          }
        },
        "org.apache.commons.io.comparator.ComparatorAbstractTestCase" : {
          "testcases" : {
            "org.apache.commons.io.comparator.ComparatorAbstractTestCase" : [ "testComparator", "testReverseComparator" ]
          }
        },
        "org.apache.commons.io.comparator.ComparatorAbstractTestCase#setUp" : {
          "testcases" : {
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ]
          }
        },
        "org.apache.commons.io.comparator.ComparatorAbstractTestCase#tearDown" : {
          "testcases" : {
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ]
          }
        },
        "org.apache.commons.io.comparator.DefaultFileComparator" : { },
        "org.apache.commons.io.comparator.DefaultFileComparator#<init>" : {
          "testcases" : {
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ]
          }
        },
        "org.apache.commons.io.comparator.DefaultFileComparatorTest" : { },
        "org.apache.commons.io.comparator.ExtensionFileComparator" : { },
        "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : { },
        "org.apache.commons.io.comparator.LastModifiedFileComparator" : { },
        "org.apache.commons.io.comparator.LastModifiedFileComparatorTest" : { },
        "org.apache.commons.io.comparator.NameFileComparator" : { },
        "org.apache.commons.io.comparator.NameFileComparatorTest" : { },
        "org.apache.commons.io.comparator.PathFileComparator" : { },
        "org.apache.commons.io.comparator.PathFileComparatorTest" : { },
        "org.apache.commons.io.comparator.ReverseComparator" : { },
        "org.apache.commons.io.comparator.ReverseComparator#<init>(java.util.Comparator)" : {
          "testcases" : {
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ]
          }
        },
        "org.apache.commons.io.comparator.ReverseComparator#compare(java.lang.Object,java.lang.Object)" : {
          "testcases" : {
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes" ]
          }
        },
        "org.apache.commons.io.comparator.SizeFileComparator" : { },
        "org.apache.commons.io.comparator.SizeFileComparator#<init>" : {
          "testcases" : {
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ]
          }
        },
        "org.apache.commons.io.comparator.SizeFileComparator#compare(java.lang.Object,java.lang.Object)" : {
          "testcases" : {
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ]
          }
        },
        "org.apache.commons.io.comparator.SizeFileComparatorTest" : {
          "testcases" : {
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ]
          }
        },
        "org.apache.commons.io.comparator.SizeFileComparatorTest#setUp" : {
          "testcases" : {
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ]
          }
        },
        "org.apache.commons.io.comparator.SizeFileComparatorTest#testCompareDirectorySizes" : {
          "testcases" : {
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes" ]
          }
        },
        "org.apache.commons.io.comparator.SizeFileComparatorTest#testNonexistantFile" : {
          "testcases" : {
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testNonexistantFile" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#createFile(java.io.File,long)" : {
          "testcases" : {
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#generateTestData(java.io.OutputStream,long)" : {
          "testcases" : {
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#getTestDirectory" : {
          "testcases" : {
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ]
          }
        }
      }
    },
    "75e31c04bdfeb49afc07fa2aeb97ad034e9ddbe5" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "55dfa6eb4b3f1666a0a281e40657252054f0e6b7",
      "changedClazzes" : { }
    },
    "eafc20dce3e58795b4a2aae11029a658e038fb48" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "75e31c04bdfeb49afc07fa2aeb97ad034e9ddbe5",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerNull" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerNull" ],
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce" ],
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testCleanEmpty", "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile", "testThrowsOnNullList" ],
            "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testReadFileToByteArray", "testReadFileToString", "testReadLines", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ],
            "org.apache.commons.io.FileUtilsWaitForTestCase" : [ "testWaitFor" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPrefix", "testGetPrefixLength", "testIndexOfExtension", "testIndexOfLastSeparator", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testNormalize", "testNormalizeNoEndSeparator", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testByteArrayToOutputStream", "testByteArrayToString", "testByteArrayToWriter", "testConstants", "testInputStreamToByteArray", "testInputStreamToCharArray", "testInputStreamToCharArrayWithEncoding", "testInputStreamToString", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testReaderToCharArray", "testReaderToString", "testStringToByteArray", "testStringToInputStream", "testStringToOutputStream", "testStringToWriter" ],
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFiltering", "testInvalidEncoding", "testMissingFile", "testNextLineOnly", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testAnd", "testCanRead", "testCanWrite", "testDelegateFileFilter", "testDeprecatedWildcard", "testDirectory", "testEmpty", "testFalse", "testFiles", "testHidden", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNameFilterNullArrayArgument", "testNameFilterNullListArgument", "testNot", "testOr", "testPrefix", "testPrefixCaseInsensitive", "testRegex", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testTrue", "testWildcard" ],
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testFileLocked", "testFileNotLocked" ]
          }
        },
        "org.apache.commons.io.FileUtils#cleanDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent" ]
          }
        },
        "org.apache.commons.io.FileUtils#deleteDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent" ]
          }
        },
        "org.apache.commons.io.FileUtils#deleteQuietly(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent" ]
          }
        },
        "org.apache.commons.io.FileUtils#forceDelete(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testReadFileToByteArray", "testReadFileToString", "testReadLines", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#setUp" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#tearDown" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testDeleteQuietlyDir" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testDeleteQuietlyDir" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testDeleteQuietlyFile" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testDeleteQuietlyFile" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testDeleteQuietlyForNull" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testDeleteQuietlyForNull" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testDeleteQuietlyNonExistent" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testDeleteQuietlyNonExistent" ]
          }
        },
        "org.apache.commons.io.IOUtils#closeQuietly(java.io.OutputStream)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#createFile(java.io.File,long)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#generateTestData(java.io.OutputStream,long)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#getTestDirectory" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent" ]
          }
        }
      }
    },
    "d6c044b0a745d877a99f0f61af19bae187d5e6fa" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "eafc20dce3e58795b4a2aae11029a658e038fb48",
      "changedClazzes" : { }
    },
    "8e9a08ada81c1d19da96497691b2fb91be40cad9" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "d6c044b0a745d877a99f0f61af19bae187d5e6fa",
      "changedClazzes" : { }
    },
    "da8e3183bd70cdb2e1b9441e2e4b640e3fc27fad" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "8e9a08ada81c1d19da96497691b2fb91be40cad9",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils#deleteQuietly(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent" ]
          }
        }
      }
    },
    "bad9fee57a900e8bfa1d412dfd82a32dc1b41d34" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "da8e3183bd70cdb2e1b9441e2e4b640e3fc27fad",
      "changedClazzes" : {
        "org.apache.commons.io.output.ByteArrayOutputStream" : {
          "testcases" : {
            "org.apache.commons.io.CopyUtilsTest" : [ "testCopy_byteArrayToOutputStream", "testCopy_byteArrayToWriter", "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToWriter", "testCopy_readerToOutputStream", "testCopy_readerToWriter", "testCopy_stringToOutputStream", "testCopy_stringToWriter" ],
            "org.apache.commons.io.DemuxTestCase" : [ "testOutputStream" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testReadFileToByteArray" ],
            "org.apache.commons.io.HexDumpTest" : [ "testDump" ],
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToOutputStream_nullIn", "testCopy_inputStreamToWriter", "testCopy_inputStreamToWriter_Encoding", "testCopy_inputStreamToWriter_Encoding_nullEncoding", "testCopy_inputStreamToWriter_Encoding_nullIn", "testCopy_inputStreamToWriter_nullIn", "testCopy_readerToOutputStream", "testCopy_readerToOutputStream_Encoding", "testCopy_readerToOutputStream_Encoding_nullEncoding", "testCopy_readerToOutputStream_Encoding_nullIn", "testCopy_readerToOutputStream_nullIn", "testCopy_readerToWriter", "testCopy_readerToWriter_nullIn" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testByteArrayToOutputStream", "testByteArrayToString", "testByteArrayToWriter", "testInputStreamToByteArray", "testStringToInputStream" ],
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWriteLines_OutputStream", "testWriteLines_OutputStream_Encoding", "testWriteLines_OutputStream_Encoding_nullData", "testWriteLines_OutputStream_Encoding_nullEncoding", "testWriteLines_OutputStream_Encoding_nullSeparator", "testWriteLines_OutputStream_nullData", "testWriteLines_OutputStream_nullSeparator", "testWriteLines_Writer", "testWriteLines_Writer_nullData", "testWriteLines_Writer_nullSeparator", "testWrite_byteArrayToOutputStream", "testWrite_byteArrayToOutputStream_nullData", "testWrite_byteArrayToWriter", "testWrite_byteArrayToWriter_Encoding", "testWrite_byteArrayToWriter_Encoding_nullData", "testWrite_byteArrayToWriter_Encoding_nullEncoding", "testWrite_byteArrayToWriter_nullData", "testWrite_charArrayToOutputStream", "testWrite_charArrayToOutputStream_Encoding", "testWrite_charArrayToOutputStream_Encoding_nullData", "testWrite_charArrayToOutputStream_nullData", "testWrite_charArrayToOutputStream_nullEncoding", "testWrite_charArrayToWriter", "testWrite_charArrayToWriter_Encoding_nullData", "testWrite_stringToOutputStream", "testWrite_stringToOutputStream_Encoding", "testWrite_stringToOutputStream_Encoding_nullData", "testWrite_stringToOutputStream_nullData", "testWrite_stringToOutputStream_nullEncoding", "testWrite_stringToWriter", "testWrite_stringToWriter_Encoding_nullData" ],
            "org.apache.commons.io.output.ByteArrayOutputStreamTestCase" : [ "testStream" ],
            "org.apache.commons.io.output.CloseShieldOutputStreamTest" : [ "testClose" ],
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testAboveThreshold", "testAtThreshold", "testBelowThreshold", "testTempFileAboveThreshold", "testTempFileAboveThresholdPrefixOnly", "testTempFileBelowThreshold", "testTempFileError", "testThresholdReached", "testWriteToLarge", "testWriteToSmall" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStreamTestCase" : {
          "testcases" : {
            "org.apache.commons.io.output.ByteArrayOutputStreamTestCase" : [ "testStream" ]
          }
        }
      }
    },
    "6ff368ee318c9ac7b500363780c0e84cbdef818d" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "bad9fee57a900e8bfa1d412dfd82a32dc1b41d34",
      "changedClazzes" : { }
    },
    "7cbb2763115558b029da2d1b409d5d3ce7f13655" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "6ff368ee318c9ac7b500363780c0e84cbdef818d",
      "changedClazzes" : {
        "org.apache.commons.io.DirectoryWalker#checkIfCancelled(java.io.File,int,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker#handleDirectory(java.io.File,int,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker#handleDirectoryEnd(java.io.File,int,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker#handleEnd(java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker#handleIsCancelled(java.io.File,int,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker#handleStart(java.io.File,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker#walk(java.io.File,int,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered" ]
          }
        },
        "org.apache.commons.io.FileUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerNull" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerNull" ],
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce" ],
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testCleanEmpty", "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile", "testThrowsOnNullList" ],
            "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testReadFileToByteArray", "testReadFileToString", "testReadLines", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ],
            "org.apache.commons.io.FileUtilsWaitForTestCase" : [ "testWaitFor" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPrefix", "testGetPrefixLength", "testIndexOfExtension", "testIndexOfLastSeparator", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testNormalize", "testNormalizeNoEndSeparator", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testByteArrayToOutputStream", "testByteArrayToString", "testByteArrayToWriter", "testConstants", "testInputStreamToByteArray", "testInputStreamToCharArray", "testInputStreamToCharArrayWithEncoding", "testInputStreamToString", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testReaderToCharArray", "testReaderToString", "testStringToByteArray", "testStringToInputStream", "testStringToOutputStream", "testStringToWriter" ],
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFiltering", "testInvalidEncoding", "testMissingFile", "testNextLineOnly", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testAnd", "testCanRead", "testCanWrite", "testDelegateFileFilter", "testDeprecatedWildcard", "testDirectory", "testEmpty", "testFalse", "testFiles", "testHidden", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNameFilterNullArrayArgument", "testNameFilterNullListArgument", "testNot", "testOr", "testPrefix", "testPrefixCaseInsensitive", "testRegex", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testTrue", "testWildcard" ],
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testFileLocked", "testFileNotLocked" ]
          }
        },
        "org.apache.commons.io.FileUtils#cleanDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered" ]
          }
        },
        "org.apache.commons.io.FileUtils#copyDirectory(java.io.File,java.io.File,java.io.FileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered" ]
          }
        },
        "org.apache.commons.io.FileUtils#deleteDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered" ]
          }
        },
        "org.apache.commons.io.FileUtils#doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered" ]
          }
        },
        "org.apache.commons.io.FileUtils#doCopyFile(java.io.File,java.io.File,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered" ]
          }
        },
        "org.apache.commons.io.FileUtils#forceDelete(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered" ]
          }
        },
        "org.apache.commons.io.FileUtils#openOutputStream(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered" ]
          }
        },
        "org.apache.commons.io.FileUtils#writeStringToFile(java.io.File,java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testReadFileToByteArray", "testReadFileToString", "testReadLines", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#createFilesForTestCopyDirectory(java.io.File,java.io.File,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#setUp" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#tearDown" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testCopyDirectoryFiltered" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase$ListDirectoryWalker" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToChild", "testCopyDirectoryToGrandChild" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase$ListDirectoryWalker#handleDirectoryStart(java.io.File,int,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase$ListDirectoryWalker#handleFile(java.io.File,int,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase$ListDirectoryWalker#list(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#isSystemWindows" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered" ]
          }
        },
        "org.apache.commons.io.IOCase#<init>(java.lang.String,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered" ]
          }
        },
        "org.apache.commons.io.IOCase#checkEquals(java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered" ]
          }
        },
        "org.apache.commons.io.IOUtils#closeQuietly(java.io.InputStream)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered" ]
          }
        },
        "org.apache.commons.io.IOUtils#copy(java.io.InputStream,java.io.OutputStream)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered" ]
          }
        },
        "org.apache.commons.io.IOUtils#copyLarge(java.io.InputStream,java.io.OutputStream)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered" ]
          }
        },
        "org.apache.commons.io.IOUtils#write(java.lang.String,java.io.OutputStream,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered" ]
          }
        },
        "org.apache.commons.io.filefilter.AbstractFileFilter#<init>" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered" ]
          }
        },
        "org.apache.commons.io.filefilter.NameFileFilter#<init>(java.lang.String[])" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered" ]
          }
        },
        "org.apache.commons.io.filefilter.NameFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#createFile(java.io.File,long)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#generateTestData(java.io.OutputStream,long)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#getTestDirectory" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered" ]
          }
        }
      }
    },
    "305d3505ff8aa053f48fbd9d5d427ae347c40a07" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "7cbb2763115558b029da2d1b409d5d3ce7f13655",
      "changedClazzes" : { }
    },
    "8815c0801c0447a7b677833e1e1796adc8594dac" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "305d3505ff8aa053f48fbd9d5d427ae347c40a07",
      "changedClazzes" : { }
    },
    "ee30084cc1f81f9440a05b8eb16fbbe12d210d20" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "8815c0801c0447a7b677833e1e1796adc8594dac",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerNull" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerNull" ],
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce" ],
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testCleanEmpty", "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile", "testThrowsOnNullList" ],
            "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testReadFileToByteArray", "testReadFileToString", "testReadLines", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ],
            "org.apache.commons.io.FileUtilsWaitForTestCase" : [ "testWaitFor" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPrefix", "testGetPrefixLength", "testIndexOfExtension", "testIndexOfLastSeparator", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testNormalize", "testNormalizeNoEndSeparator", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testByteArrayToOutputStream", "testByteArrayToString", "testByteArrayToWriter", "testConstants", "testInputStreamToByteArray", "testInputStreamToCharArray", "testInputStreamToCharArrayWithEncoding", "testInputStreamToString", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testReaderToCharArray", "testReaderToString", "testStringToByteArray", "testStringToInputStream", "testStringToOutputStream", "testStringToWriter" ],
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFiltering", "testInvalidEncoding", "testMissingFile", "testNextLineOnly", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testAnd", "testCanRead", "testCanWrite", "testDelegateFileFilter", "testDeprecatedWildcard", "testDirectory", "testEmpty", "testFalse", "testFiles", "testHidden", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNameFilterNullArrayArgument", "testNameFilterNullListArgument", "testNot", "testOr", "testPrefix", "testPrefixCaseInsensitive", "testRegex", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testTrue", "testWildcard" ],
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testFileLocked", "testFileNotLocked" ]
          }
        },
        "org.apache.commons.io.FileUtils#cleanDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors" ]
          }
        },
        "org.apache.commons.io.FileUtils#copyDirectory(java.io.File,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveDirectory_CopyDelete" ]
          }
        },
        "org.apache.commons.io.FileUtils#copyFile(java.io.File,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed" ]
          }
        },
        "org.apache.commons.io.FileUtils#deleteDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors" ]
          }
        },
        "org.apache.commons.io.FileUtils#deleteQuietly(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveFile_CopyDelete_Failed" ]
          }
        },
        "org.apache.commons.io.FileUtils#doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveDirectory_CopyDelete" ]
          }
        },
        "org.apache.commons.io.FileUtils#doCopyFile(java.io.File,java.io.File,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveDirectory_CopyDelete", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed" ]
          }
        },
        "org.apache.commons.io.FileUtils#forceDelete(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors" ]
          }
        },
        "org.apache.commons.io.FileUtils#moveDirectory(java.io.File,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveDirectoryToDirectory", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveToDirectory" ]
          }
        },
        "org.apache.commons.io.FileUtils#moveDirectoryToDirectory(java.io.File,java.io.File,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveToDirectory", "testMoveToDirectory_Errors" ]
          }
        },
        "org.apache.commons.io.FileUtils#moveFile(java.io.File,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveFileToDirectory", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory" ]
          }
        },
        "org.apache.commons.io.FileUtils#moveFileToDirectory(java.io.File,java.io.File,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveToDirectory" ]
          }
        },
        "org.apache.commons.io.FileUtils#moveToDirectory(java.io.File,java.io.File,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveToDirectory", "testMoveToDirectory_Errors" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToString", "testReadLines", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#setUp" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#tearDown" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testMoveDirectoryToDirectory" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveDirectoryToDirectory" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testMoveDirectoryToDirectory_Errors" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveDirectoryToDirectory_Errors" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testMoveDirectory_CopyDelete" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveDirectory_CopyDelete" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testMoveDirectory_Errors" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveDirectory_Errors" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testMoveDirectory_Rename" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveDirectory_Rename" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testMoveFileToDirectory" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveFileToDirectory" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testMoveFileToDirectory_Errors" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveFileToDirectory_Errors" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testMoveFile_CopyDelete" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveFile_CopyDelete" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testMoveFile_CopyDelete_Failed" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveFile_CopyDelete_Failed" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testMoveFile_Errors" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveFile_Errors" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testMoveFile_Rename" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveFile_Rename" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testMoveToDirectory" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveToDirectory" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testMoveToDirectory_Errors" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveToDirectory_Errors" ]
          }
        },
        "org.apache.commons.io.IOUtils#closeQuietly(java.io.InputStream)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors" ]
          }
        },
        "org.apache.commons.io.IOUtils#copy(java.io.InputStream,java.io.OutputStream)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveDirectory_CopyDelete", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed" ]
          }
        },
        "org.apache.commons.io.IOUtils#copyLarge(java.io.InputStream,java.io.OutputStream)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveDirectory_CopyDelete", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#createFile(java.io.File,long)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#generateTestData(java.io.OutputStream,long)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#getTestDirectory" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors" ]
          }
        }
      }
    },
    "b2342719e8abf75edf3bbdda6c84d3c55726626f" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "ee30084cc1f81f9440a05b8eb16fbbe12d210d20",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils#moveDirectoryToDirectory(java.io.File,java.io.File,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveToDirectory", "testMoveToDirectory_Errors" ]
          }
        },
        "org.apache.commons.io.FileUtils#moveFileToDirectory(java.io.File,java.io.File,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveToDirectory" ]
          }
        }
      }
    },
    "eb7b931481c13c5443cdaaf47299a10943b4a973" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "b2342719e8abf75edf3bbdda6c84d3c55726626f",
      "changedClazzes" : { }
    },
    "7f075b8e754037cb7c2fd396086ca3d6a955675f" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "eb7b931481c13c5443cdaaf47299a10943b4a973",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils#moveDirectory(java.io.File,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveDirectoryToDirectory", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveToDirectory" ]
          }
        },
        "org.apache.commons.io.FileUtils#moveDirectoryToDirectory(java.io.File,java.io.File,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveToDirectory", "testMoveToDirectory_Errors" ]
          }
        },
        "org.apache.commons.io.FileUtils#moveFile(java.io.File,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveFileToDirectory", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory" ]
          }
        },
        "org.apache.commons.io.FileUtils#moveFileToDirectory(java.io.File,java.io.File,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveToDirectory" ]
          }
        },
        "org.apache.commons.io.FileUtils#moveToDirectory(java.io.File,java.io.File,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveToDirectory", "testMoveToDirectory_Errors" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testMoveDirectoryToDirectory_Errors" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveDirectoryToDirectory_Errors" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testMoveDirectory_Errors" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveDirectory_Errors" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testMoveFileToDirectory_Errors" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveFileToDirectory_Errors" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testMoveFile_Errors" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveFile_Errors" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testMoveToDirectory_Errors" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveToDirectory_Errors" ]
          }
        }
      }
    },
    "5a04334c609645905334f012f1805ce9a95b2fb7" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "7f075b8e754037cb7c2fd396086ca3d6a955675f",
      "changedClazzes" : { }
    },
    "a95f1ca9d801c6646d32e4a65989f659d13a4a7c" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "5a04334c609645905334f012f1805ce9a95b2fb7",
      "changedClazzes" : { }
    },
    "deabf6a6b0eed1d677006ea3db6f349417dd50af" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "a95f1ca9d801c6646d32e4a65989f659d13a4a7c",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils#deleteQuietly(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "testConstructor_File_encoding_badEncoding" ]
          }
        },
        "org.apache.commons.io.IOUtils#closeQuietly(java.io.OutputStream)" : {
          "testcases" : {
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testConstructor_fileName_nullFile", "testDifferentEncoding", "testSameEncoding" ]
          }
        },
        "org.apache.commons.io.output.FileWriterWithEncoding" : { },
        "org.apache.commons.io.output.FileWriterWithEncoding#<init>(java.io.File,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testDifferentEncoding", "testSameEncoding" ]
          }
        },
        "org.apache.commons.io.output.FileWriterWithEncoding#close" : {
          "testcases" : {
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "testDifferentEncoding", "testSameEncoding" ]
          }
        },
        "org.apache.commons.io.output.FileWriterWithEncoding#flush" : {
          "testcases" : {
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "testDifferentEncoding", "testSameEncoding" ]
          }
        },
        "org.apache.commons.io.output.FileWriterWithEncoding#initWriter(java.io.File,java.lang.Object,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testDifferentEncoding", "testSameEncoding" ]
          }
        },
        "org.apache.commons.io.output.FileWriterWithEncoding#write(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "testDifferentEncoding", "testSameEncoding" ]
          }
        },
        "org.apache.commons.io.output.FileWriterWithEncodingTest" : {
          "testcases" : {
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testConstructor_fileName_nullFile", "testDifferentEncoding", "testSameEncoding" ]
          }
        },
        "org.apache.commons.io.output.FileWriterWithEncodingTest#setUp" : {
          "testcases" : {
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testConstructor_fileName_nullFile", "testDifferentEncoding", "testSameEncoding" ]
          }
        },
        "org.apache.commons.io.output.FileWriterWithEncodingTest#tearDown" : {
          "testcases" : {
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testConstructor_fileName_nullFile", "testDifferentEncoding", "testSameEncoding" ]
          }
        },
        "org.apache.commons.io.output.FileWriterWithEncodingTest#testConstructor_File_directory" : {
          "testcases" : {
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "testConstructor_File_directory" ]
          }
        },
        "org.apache.commons.io.output.FileWriterWithEncodingTest#testConstructor_File_encoding_badEncoding" : {
          "testcases" : {
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "testConstructor_File_encoding_badEncoding" ]
          }
        },
        "org.apache.commons.io.output.FileWriterWithEncodingTest#testConstructor_File_nullFile" : {
          "testcases" : {
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "testConstructor_File_nullFile" ]
          }
        },
        "org.apache.commons.io.output.FileWriterWithEncodingTest#testConstructor_fileName_nullFile" : {
          "testcases" : {
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "testConstructor_fileName_nullFile" ]
          }
        },
        "org.apache.commons.io.output.FileWriterWithEncodingTest#testDifferentEncoding" : {
          "testcases" : {
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "testDifferentEncoding" ]
          }
        },
        "org.apache.commons.io.output.FileWriterWithEncodingTest#testSameEncoding" : {
          "testcases" : {
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "testSameEncoding" ]
          }
        },
        "org.apache.commons.io.output.PackageTestSuite#suite" : { },
        "org.apache.commons.io.testtools.FileBasedTestCase#assertEqualContent(java.io.File,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "testDifferentEncoding", "testSameEncoding" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#checkFile(java.io.File,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "testDifferentEncoding", "testSameEncoding" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#getTestDirectory" : {
          "testcases" : {
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testConstructor_fileName_nullFile", "testDifferentEncoding", "testSameEncoding" ]
          }
        }
      }
    },
    "fa3da43622ec6c08c07f80c1fe003d6e4f963d8a" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "deabf6a6b0eed1d677006ea3db6f349417dd50af",
      "changedClazzes" : { }
    },
    "14978fec52d916b2e371044c714191013d3bb02c" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "fa3da43622ec6c08c07f80c1fe003d6e4f963d8a",
      "changedClazzes" : {
        "org.apache.commons.io.FilenameUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceUnix_String_EmptyResponse", "testGetFreeSpaceUnix_String_InvalidResponse1", "testGetFreeSpaceUnix_String_InvalidResponse2", "testGetFreeSpaceUnix_String_InvalidResponse3", "testGetFreeSpaceUnix_String_InvalidResponse4", "testGetFreeSpaceUnix_String_LongResponse", "testGetFreeSpaceUnix_String_LongResponseKb", "testGetFreeSpaceUnix_String_NormalResponseFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbLinux", "testGetFreeSpaceUnix_String_NormalResponseKbSolaris", "testGetFreeSpaceUnix_String_NormalResponseLinux", "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpace_String" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered", "testIterateFiles", "testListFiles" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPrefix", "testGetPrefixLength", "testIndexOfExtension", "testIndexOfLastSeparator", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testNormalize", "testNormalizeNoEndSeparator", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.FilenameUtilsWildcardTestCase" : [ "testMatch", "testMatch2", "testMatchCaseSpecified", "testMatchOnSystem", "testSplitOnTokens" ],
            "org.apache.commons.io.IOCaseTestCase" : [ "test_checkCompare_case", "test_checkCompare_functionality", "test_checkEndsWith_case", "test_checkEndsWith_functionality", "test_checkEquals_case", "test_checkEquals_functionality", "test_checkRegionMatches_case", "test_checkRegionMatches_functionality", "test_checkStartsWith_case", "test_checkStartsWith_functionality", "test_forName", "test_getName", "test_isCaseSensitive", "test_serialization", "test_toString" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testDeprecatedWildcard", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testPrefix", "testPrefixCaseInsensitive", "testRegex", "testSuffix", "testSuffixCaseInsensitive", "testWildcard" ]
          }
        }
      }
    },
    "fe6ec030da1ab53b5e5dc481572c9f072be3b965" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "14978fec52d916b2e371044c714191013d3bb02c",
      "changedClazzes" : { }
    },
    "e25ec9b5d129199be6ed10ca332b01292dd329f3" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "fe6ec030da1ab53b5e5dc481572c9f072be3b965",
      "changedClazzes" : { }
    },
    "09e17d775971674b8fb739068d790a86931249fe" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "e25ec9b5d129199be6ed10ca332b01292dd329f3",
      "changedClazzes" : { }
    },
    "f78d28604c47a002aac94b536413d7bfb5edc854" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "09e17d775971674b8fb739068d790a86931249fe",
      "changedClazzes" : { }
    },
    "3f0598e63a97d696e2ab9d94f846169a3793a6c1" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "f78d28604c47a002aac94b536413d7bfb5edc854",
      "changedClazzes" : { }
    },
    "03d3094e9d13a28261c597e64329daa37254933f" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "3f0598e63a97d696e2ab9d94f846169a3793a6c1",
      "changedClazzes" : { }
    },
    "ded863b7710703cf27f42248a8dc467419ca3af9" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "03d3094e9d13a28261c597e64329daa37254933f",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils#moveDirectory(java.io.File,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveDirectoryToDirectory", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveToDirectory" ]
          }
        },
        "org.apache.commons.io.FileUtils#moveFile(java.io.File,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveFileToDirectory", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory" ]
          }
        }
      }
    },
    "cffe620e13b6a180e0347f6c12a12876e76534c4" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "ded863b7710703cf27f42248a8dc467419ca3af9",
      "changedClazzes" : { }
    },
    "9c1d49ee0065525053565ca36b3613eba97e7a98" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "cffe620e13b6a180e0347f6c12a12876e76534c4",
      "changedClazzes" : { }
    },
    "ae372dbb31a9df152574c254eb7b48cb0aee82a5" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "9c1d49ee0065525053565ca36b3613eba97e7a98",
      "changedClazzes" : {
        "org.apache.commons.io.input.CharSequenceReader#read" : {
          "testcases" : {
            "org.apache.commons.io.input.CharSequenceReaderTest" : [ "testClose", "testMark", "testRead", "testReadCharArray", "testReadCharArrayPortion", "testSkip" ]
          }
        }
      }
    },
    "acf5c4be226fe3ef34a1df16403ac42c459caf73" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "ae372dbb31a9df152574c254eb7b48cb0aee82a5",
      "changedClazzes" : { }
    },
    "660b89f08ab6469d548800b83619e4207c78381b" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "acf5c4be226fe3ef34a1df16403ac42c459caf73",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils#moveDirectory(java.io.File,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveDirectoryToDirectory", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveToDirectory" ]
          }
        },
        "org.apache.commons.io.FileUtils#moveDirectoryToDirectory(java.io.File,java.io.File,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveToDirectory", "testMoveToDirectory_Errors" ]
          }
        },
        "org.apache.commons.io.FileUtils#moveFile(java.io.File,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveFileToDirectory", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory" ]
          }
        },
        "org.apache.commons.io.FileUtils#moveFileToDirectory(java.io.File,java.io.File,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveToDirectory" ]
          }
        },
        "org.apache.commons.io.FileUtils#moveToDirectory(java.io.File,java.io.File,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveToDirectory", "testMoveToDirectory_Errors" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testMoveDirectoryToDirectory_Errors" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveDirectoryToDirectory_Errors" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testMoveDirectory_Errors" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveDirectory_Errors" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testMoveFileToDirectory_Errors" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveFileToDirectory_Errors" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testMoveFile_Errors" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveFile_Errors" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testMoveToDirectory_Errors" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveToDirectory_Errors" ]
          }
        }
      }
    },
    "6323681015d4f98c77bc4fd618caa2b47028b7a0" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "660b89f08ab6469d548800b83619e4207c78381b",
      "changedClazzes" : { }
    },
    "60961e2018bd9d68a1d687ff885bf678a66af8fc" : {
      "running" : false,
      "jdk" : 8,
      "changedClazzes" : { }
    },
    "9386012a2214a9208e718bb34b952dbf42456ac3" : {
      "running" : false,
      "jdk" : 8,
      "changedClazzes" : { }
    },
    "4d7e3975f8f716bd0b95221975e8f4005ecb5ec8" : {
      "running" : false,
      "jdk" : 8,
      "changedClazzes" : { }
    },
    "adeb7a7fa5a06af27c765f6d42da35ab62a38f1a" : {
      "running" : false,
      "jdk" : 8,
      "changedClazzes" : { }
    },
    "c095d3cc232eedccb23e33d349546bda6adbe3aa" : {
      "running" : false,
      "jdk" : 8,
      "changedClazzes" : { }
    },
    "03a7377c282922e2164a8f381df62a78986cce16" : {
      "running" : false,
      "jdk" : 8,
      "changedClazzes" : { }
    },
    "d1027fec7083262dd8938dac426b938ad80ca446" : {
      "running" : false,
      "jdk" : 8,
      "changedClazzes" : { }
    },
    "d117fb8f11ce54d8d14ed8d69b9e4b4bf7a7547e" : {
      "running" : false,
      "jdk" : 8,
      "changedClazzes" : { }
    },
    "5bb776b4b60b9f7b082f35e6b1aa8a3c92a50ba7" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "6323681015d4f98c77bc4fd618caa2b47028b7a0",
      "changedClazzes" : {
        "org.apache.commons.io.comparator.PackageTestSuite" : { }
      }
    },
    "a5f20521cf9eeea544daebeaf4c08e7d819d6f9e" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "5bb776b4b60b9f7b082f35e6b1aa8a3c92a50ba7",
      "changedClazzes" : { }
    },
    "14cc98f36cf7a8a32ca5dca8f2fd2ba872834a76" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "a5f20521cf9eeea544daebeaf4c08e7d819d6f9e",
      "changedClazzes" : { }
    },
    "008adbd723829faa57d1f36aa397230f509e1b77" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "14cc98f36cf7a8a32ca5dca8f2fd2ba872834a76",
      "changedClazzes" : { }
    },
    "ad41c8245cffd116890255258875da894712caf3" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "008adbd723829faa57d1f36aa397230f509e1b77",
      "changedClazzes" : { }
    },
    "3091190eaab16424239f71b8e79e98b9631dca6b" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "ad41c8245cffd116890255258875da894712caf3",
      "changedClazzes" : { }
    },
    "89e59dae259577aa139c029665bdd92b1bffd226" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "3091190eaab16424239f71b8e79e98b9631dca6b",
      "changedClazzes" : { }
    },
    "e413d91e7b3bfefb26480946d5e17f7b109a2202" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "89e59dae259577aa139c029665bdd92b1bffd226",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils#cleanDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ]
          }
        },
        "org.apache.commons.io.FileUtils#deleteDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#isSystemWindows" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ]
          }
        },
        "org.apache.commons.io.IOCase#<init>(java.lang.String,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ]
          }
        },
        "org.apache.commons.io.IOCase#isCaseSensitive" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ]
          }
        },
        "org.apache.commons.io.PackageTestSuite#suite" : { },
        "org.apache.commons.io.filefilter.AbstractFileFilter#<init>" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ]
          }
        },
        "org.apache.commons.io.filefilter.AbstractFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testAnd", "testCanRead", "testCanWrite", "testDelegateFileFilter", "testDeprecatedWildcard", "testDirectory", "testEmpty", "testFalse", "testFiles", "testHidden", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNameFilterNullArrayArgument", "testNameFilterNullListArgument", "testNot", "testOr", "testPrefix", "testPrefixCaseInsensitive", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testTrue", "testWildcard" ]
          }
        },
        "org.apache.commons.io.filefilter.RegexFileFilter#<init>(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ]
          }
        },
        "org.apache.commons.io.filefilter.RegexFileFilter#accept(java.io.File,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ]
          }
        },
        "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ]
          }
        },
        "org.apache.commons.io.filefilter.RegexFileFilterTestCase#assertFiltering(org.apache.commons.io.filefilter.IOFileFilter,java.io.File,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ]
          }
        },
        "org.apache.commons.io.filefilter.RegexFileFilterTestCase#setUp" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ]
          }
        },
        "org.apache.commons.io.filefilter.RegexFileFilterTestCase#tearDown" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ]
          }
        },
        "org.apache.commons.io.filefilter.RegexFileFilterTestCase#testRegex" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ]
          }
        },
        "org.apache.commons.io.input.PackageTestSuite#suite" : { },
        "org.apache.commons.io.output.PackageTestSuite#suite" : { },
        "org.apache.commons.io.testtools.FileBasedTestCase#getTestDirectory" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ]
          }
        }
      }
    },
    "2e6ebfd2a3f87069092ec3318d5a28db625f7f26" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "e413d91e7b3bfefb26480946d5e17f7b109a2202",
      "changedClazzes" : { }
    },
    "50e67bf8fce3c4e9902a75b4bf3279d26f6e4fe5" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "2e6ebfd2a3f87069092ec3318d5a28db625f7f26",
      "changedClazzes" : { }
    },
    "60a177e6916379255d19becae385f7d354bd8097" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "50e67bf8fce3c4e9902a75b4bf3279d26f6e4fe5",
      "changedClazzes" : {
        "org.apache.commons.io.PackageTestSuite#suite" : { }
      }
    },
    "449d35bbf53ca97a800183ef990bacd5e43ebb00" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "60a177e6916379255d19becae385f7d354bd8097",
      "changedClazzes" : { }
    },
    "f672418289e4a909935bf1459a56e3f479260a13" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "449d35bbf53ca97a800183ef990bacd5e43ebb00",
      "changedClazzes" : { }
    },
    "651332ef291809e8271cec74fdd6691cfb725f9f" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "f672418289e4a909935bf1459a56e3f479260a13",
      "changedClazzes" : { }
    },
    "a7628b03ac47459a47f2c340bb474afe50ea0a31" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "651332ef291809e8271cec74fdd6691cfb725f9f",
      "changedClazzes" : {
        "org.apache.commons.io.PackageTestSuite#suite" : { },
        "org.apache.commons.io.filefilter.PackageTestSuite#suite" : { },
        "org.apache.commons.io.input.PackageTestSuite#suite" : { },
        "org.apache.commons.io.output.PackageTestSuite#suite" : { }
      }
    },
    "a74a5a0c6ff41a4ca0a08caf740ebce1dc3c6d10" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "a7628b03ac47459a47f2c340bb474afe50ea0a31",
      "changedClazzes" : {
        "org.apache.commons.io.FileCleaningTracker" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerFile", "testFileCleanerNull" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerFile", "testFileCleanerNull" ]
          }
        },
        "org.apache.commons.io.FileCleaningTracker$Reaper" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerFile" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerFile" ]
          }
        },
        "org.apache.commons.io.FileCleaningTracker$Tracker" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerFile" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerFile" ]
          }
        },
        "org.apache.commons.io.FileSystemUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceOS_String_InitError", "testGetFreeSpaceOS_String_NullPath", "testGetFreeSpaceOS_String_Other", "testGetFreeSpaceOS_String_Unix", "testGetFreeSpaceOS_String_Windows", "testGetFreeSpaceUnix_String_EmptyPath", "testGetFreeSpaceUnix_String_EmptyResponse", "testGetFreeSpaceUnix_String_InvalidResponse1", "testGetFreeSpaceUnix_String_InvalidResponse2", "testGetFreeSpaceUnix_String_InvalidResponse3", "testGetFreeSpaceUnix_String_InvalidResponse4", "testGetFreeSpaceUnix_String_LongResponse", "testGetFreeSpaceUnix_String_LongResponseKb", "testGetFreeSpaceUnix_String_NormalResponseFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbLinux", "testGetFreeSpaceUnix_String_NormalResponseKbSolaris", "testGetFreeSpaceUnix_String_NormalResponseLinux", "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpace_String" ]
          }
        },
        "org.apache.commons.io.FileUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerNull" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerNull" ],
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce" ],
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testCleanEmpty", "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile", "testThrowsOnNullList" ],
            "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToString", "testReadLines", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ],
            "org.apache.commons.io.FileUtilsWaitForTestCase" : [ "testWaitFor" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPrefix", "testGetPrefixLength", "testIndexOfExtension", "testIndexOfLastSeparator", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testNormalize", "testNormalizeNoEndSeparator", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testByteArrayToOutputStream", "testByteArrayToString", "testByteArrayToWriter", "testConstants", "testInputStreamToByteArray", "testInputStreamToCharArray", "testInputStreamToCharArrayWithEncoding", "testInputStreamToString", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testReaderToCharArray", "testReaderToString", "testStringToByteArray", "testStringToInputStream", "testStringToOutputStream", "testStringToWriter" ],
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFiltering", "testInvalidEncoding", "testMissingFile", "testNextLineOnly", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testAnd", "testCanRead", "testCanWrite", "testDelegateFileFilter", "testDeprecatedWildcard", "testDirectory", "testEmpty", "testFalse", "testFiles", "testHidden", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNameFilterNullArrayArgument", "testNameFilterNullListArgument", "testNot", "testOr", "testPrefix", "testPrefixCaseInsensitive", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testTrue", "testWildcard" ],
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ],
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "testConstructor_File_encoding_badEncoding" ],
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testFileLocked", "testFileNotLocked" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#splitOnTokens(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testListFiles" ],
            "org.apache.commons.io.FilenameUtilsWildcardTestCase" : [ "testMatch", "testMatch2", "testMatchCaseSpecified", "testMatchOnSystem", "testSplitOnTokens" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testDeprecatedWildcard", "testWildcard" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#wildcardMatch(java.lang.String,java.lang.String,org.apache.commons.io.IOCase)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testListFiles" ],
            "org.apache.commons.io.FilenameUtilsWildcardTestCase" : [ "testMatch", "testMatch2", "testMatchCaseSpecified", "testMatchOnSystem" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testDeprecatedWildcard", "testWildcard" ]
          }
        },
        "org.apache.commons.io.IOUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy" ],
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce", "testDeleteNormal", "testDeleteQuietlyNormal" ],
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceUnix_String_EmptyResponse", "testGetFreeSpaceUnix_String_InvalidResponse1", "testGetFreeSpaceUnix_String_InvalidResponse2", "testGetFreeSpaceUnix_String_InvalidResponse3", "testGetFreeSpaceUnix_String_InvalidResponse4", "testGetFreeSpaceUnix_String_LongResponse", "testGetFreeSpaceUnix_String_LongResponseKb", "testGetFreeSpaceUnix_String_NormalResponseFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbLinux", "testGetFreeSpaceUnix_String_NormalResponseKbSolaris", "testGetFreeSpaceUnix_String_NormalResponseLinux", "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpace_String" ],
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile" ],
            "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToString", "testReadLines", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPrefix", "testGetPrefixLength", "testIndexOfExtension", "testIndexOfLastSeparator", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testNormalize", "testNormalizeNoEndSeparator", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToOutputStream_nullIn", "testCopy_inputStreamToOutputStream_nullOut", "testCopy_inputStreamToWriter", "testCopy_inputStreamToWriter_Encoding", "testCopy_inputStreamToWriter_Encoding_nullEncoding", "testCopy_inputStreamToWriter_Encoding_nullIn", "testCopy_inputStreamToWriter_Encoding_nullOut", "testCopy_inputStreamToWriter_nullIn", "testCopy_inputStreamToWriter_nullOut", "testCopy_readerToOutputStream", "testCopy_readerToOutputStream_Encoding", "testCopy_readerToOutputStream_Encoding_nullEncoding", "testCopy_readerToOutputStream_Encoding_nullIn", "testCopy_readerToOutputStream_Encoding_nullOut", "testCopy_readerToOutputStream_nullIn", "testCopy_readerToOutputStream_nullOut", "testCopy_readerToWriter", "testCopy_readerToWriter_nullIn", "testCopy_readerToWriter_nullOut" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testByteArrayToOutputStream", "testByteArrayToString", "testByteArrayToWriter", "testConstants", "testInputStreamToByteArray", "testInputStreamToCharArray", "testInputStreamToCharArrayWithEncoding", "testInputStreamToString", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testReaderToCharArray", "testReaderToString", "testStringToByteArray", "testStringToInputStream", "testStringToOutputStream", "testStringToWriter" ],
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWriteLines_OutputStream", "testWriteLines_OutputStream_Encoding", "testWriteLines_OutputStream_Encoding_nullData", "testWriteLines_OutputStream_Encoding_nullEncoding", "testWriteLines_OutputStream_Encoding_nullSeparator", "testWriteLines_OutputStream_Encoding_nullStream", "testWriteLines_OutputStream_nullData", "testWriteLines_OutputStream_nullSeparator", "testWriteLines_OutputStream_nullStream", "testWriteLines_Writer", "testWriteLines_Writer_nullData", "testWriteLines_Writer_nullSeparator", "testWriteLines_Writer_nullStream", "testWrite_byteArrayToOutputStream", "testWrite_byteArrayToOutputStream_nullData", "testWrite_byteArrayToOutputStream_nullStream", "testWrite_byteArrayToWriter", "testWrite_byteArrayToWriter_Encoding", "testWrite_byteArrayToWriter_Encoding_nullData", "testWrite_byteArrayToWriter_Encoding_nullEncoding", "testWrite_byteArrayToWriter_Encoding_nullWriter", "testWrite_byteArrayToWriter_nullData", "testWrite_byteArrayToWriter_nullWriter", "testWrite_charArrayToOutputStream", "testWrite_charArrayToOutputStream_Encoding", "testWrite_charArrayToOutputStream_Encoding_nullData", "testWrite_charArrayToOutputStream_Encoding_nullStream", "testWrite_charArrayToOutputStream_nullData", "testWrite_charArrayToOutputStream_nullEncoding", "testWrite_charArrayToOutputStream_nullStream", "testWrite_charArrayToWriter", "testWrite_charArrayToWriter_Encoding_nullData", "testWrite_charArrayToWriter_Encoding_nullStream", "testWrite_stringToOutputStream", "testWrite_stringToOutputStream_Encoding", "testWrite_stringToOutputStream_Encoding_nullData", "testWrite_stringToOutputStream_Encoding_nullStream", "testWrite_stringToOutputStream_nullData", "testWrite_stringToOutputStream_nullEncoding", "testWrite_stringToOutputStream_nullStream", "testWrite_stringToWriter", "testWrite_stringToWriter_Encoding_nullData", "testWrite_stringToWriter_Encoding_nullStream" ],
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testFiltering", "testInvalidEncoding", "testMissingFile", "testNextLineOnly", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testCanRead", "testCanWrite", "testEmpty", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testSizeFilter" ],
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testWriteToLarge" ],
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testConstructor_fileName_nullFile", "testDifferentEncoding", "testSameEncoding" ],
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testConstructor_fileName_nullFile", "testFileLocked", "testFileNotLocked" ]
          }
        },
        "org.apache.commons.io.LineIterator" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFiltering", "testInvalidEncoding", "testMissingFile", "testNextLineOnly", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ]
          }
        },
        "org.apache.commons.io.comparator.DefaultFileComparator" : {
          "testcases" : {
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ]
          }
        },
        "org.apache.commons.io.comparator.ExtensionFileComparator" : { },
        "org.apache.commons.io.comparator.LastModifiedFileComparator" : { },
        "org.apache.commons.io.comparator.NameFileComparator" : { },
        "org.apache.commons.io.comparator.PathFileComparator" : { },
        "org.apache.commons.io.comparator.ReverseComparator" : {
          "testcases" : {
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ]
          }
        },
        "org.apache.commons.io.comparator.SizeFileComparator" : {
          "testcases" : {
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ]
          }
        },
        "org.apache.commons.io.filefilter.AndFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilterAndLimitB", "testFilterAndLimitC", "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testListFiles" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAnd", "testCanRead", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testSizeFilter" ]
          }
        },
        "org.apache.commons.io.filefilter.ConditionalFileFilter" : { },
        "org.apache.commons.io.filefilter.NameFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilter", "testFilterAndLimitB", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNameFilterNullArrayArgument", "testNameFilterNullListArgument" ]
          }
        },
        "org.apache.commons.io.filefilter.OrFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilter", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testListFiles" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testDelegateFileFilter", "testOr", "testSuffix" ]
          }
        },
        "org.apache.commons.io.filefilter.PrefixFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testPrefix", "testPrefixCaseInsensitive" ]
          }
        },
        "org.apache.commons.io.filefilter.SuffixFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFilesByExtension" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testSuffix", "testSuffixCaseInsensitive" ]
          }
        },
        "org.apache.commons.io.filefilter.WildcardFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testListFiles" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testWildcard" ]
          }
        },
        "org.apache.commons.io.filefilter.WildcardFilter" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testDeprecatedWildcard" ]
          }
        },
        "org.apache.commons.io.input.ClassLoaderObjectInputStream" : {
          "testcases" : {
            "org.apache.commons.io.input.ClassLoaderObjectInputStreamTest" : [ "testExpected" ]
          }
        },
        "org.apache.commons.io.input.DemuxInputStream" : {
          "testcases" : {
            "org.apache.commons.io.DemuxTestCase" : [ "testInputStream" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream" : {
          "testcases" : {
            "org.apache.commons.io.CopyUtilsTest" : [ "testCopy_byteArrayToOutputStream", "testCopy_byteArrayToWriter", "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToWriter", "testCopy_readerToOutputStream", "testCopy_readerToWriter", "testCopy_stringToOutputStream", "testCopy_stringToWriter" ],
            "org.apache.commons.io.DemuxTestCase" : [ "testOutputStream" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testReadFileToByteArray" ],
            "org.apache.commons.io.HexDumpTest" : [ "testDump" ],
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToOutputStream_nullIn", "testCopy_inputStreamToWriter", "testCopy_inputStreamToWriter_Encoding", "testCopy_inputStreamToWriter_Encoding_nullEncoding", "testCopy_inputStreamToWriter_Encoding_nullIn", "testCopy_inputStreamToWriter_nullIn", "testCopy_readerToOutputStream", "testCopy_readerToOutputStream_Encoding", "testCopy_readerToOutputStream_Encoding_nullEncoding", "testCopy_readerToOutputStream_Encoding_nullIn", "testCopy_readerToOutputStream_nullIn", "testCopy_readerToWriter", "testCopy_readerToWriter_nullIn" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testByteArrayToOutputStream", "testByteArrayToString", "testByteArrayToWriter", "testInputStreamToByteArray", "testStringToInputStream" ],
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWriteLines_OutputStream", "testWriteLines_OutputStream_Encoding", "testWriteLines_OutputStream_Encoding_nullData", "testWriteLines_OutputStream_Encoding_nullEncoding", "testWriteLines_OutputStream_Encoding_nullSeparator", "testWriteLines_OutputStream_nullData", "testWriteLines_OutputStream_nullSeparator", "testWriteLines_Writer", "testWriteLines_Writer_nullData", "testWriteLines_Writer_nullSeparator", "testWrite_byteArrayToOutputStream", "testWrite_byteArrayToOutputStream_nullData", "testWrite_byteArrayToWriter", "testWrite_byteArrayToWriter_Encoding", "testWrite_byteArrayToWriter_Encoding_nullData", "testWrite_byteArrayToWriter_Encoding_nullEncoding", "testWrite_byteArrayToWriter_nullData", "testWrite_charArrayToOutputStream", "testWrite_charArrayToOutputStream_Encoding", "testWrite_charArrayToOutputStream_Encoding_nullData", "testWrite_charArrayToOutputStream_nullData", "testWrite_charArrayToOutputStream_nullEncoding", "testWrite_charArrayToWriter", "testWrite_charArrayToWriter_Encoding_nullData", "testWrite_stringToOutputStream", "testWrite_stringToOutputStream_Encoding", "testWrite_stringToOutputStream_Encoding_nullData", "testWrite_stringToOutputStream_nullData", "testWrite_stringToOutputStream_nullEncoding", "testWrite_stringToWriter", "testWrite_stringToWriter_Encoding_nullData" ],
            "org.apache.commons.io.output.ByteArrayOutputStreamTestCase" : [ "testStream" ],
            "org.apache.commons.io.output.CloseShieldOutputStreamTest" : [ "testClose" ],
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testAboveThreshold", "testAtThreshold", "testBelowThreshold", "testTempFileAboveThreshold", "testTempFileAboveThresholdPrefixOnly", "testTempFileBelowThreshold", "testTempFileError", "testThresholdReached", "testWriteToLarge", "testWriteToSmall" ]
          }
        },
        "org.apache.commons.io.output.DemuxOutputStream" : {
          "testcases" : {
            "org.apache.commons.io.DemuxTestCase" : [ "testOutputStream" ]
          }
        }
      }
    },
    "6d6a73a689ce734d094f71723752cde23a1d9259" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "a74a5a0c6ff41a4ca0a08caf740ebce1dc3c6d10",
      "changedClazzes" : {
        "org.apache.commons.io.FileSystemUtils#parseDir(java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#splitOnTokens(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testListFiles" ],
            "org.apache.commons.io.FilenameUtilsWildcardTestCase" : [ "testMatch", "testMatch2", "testMatchCaseSpecified", "testMatchOnSystem", "testSplitOnTokens" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testDeprecatedWildcard", "testWildcard" ]
          }
        },
        "org.apache.commons.io.HexDump#dump(byte[],long,java.io.OutputStream,int)" : {
          "testcases" : {
            "org.apache.commons.io.HexDumpTest" : [ "testDump" ]
          }
        },
        "org.apache.commons.io.filefilter.AndFileFilter#toString" : { },
        "org.apache.commons.io.filefilter.NameFileFilter#toString" : { },
        "org.apache.commons.io.filefilter.OrFileFilter#toString" : { },
        "org.apache.commons.io.filefilter.PrefixFileFilter#toString" : { },
        "org.apache.commons.io.filefilter.SuffixFileFilter#toString" : { },
        "org.apache.commons.io.filefilter.WildcardFileFilter#toString" : { }
      }
    },
    "0b6d123bdba1acefb79fc22b4d7cb8aab20b08ed" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "6d6a73a689ce734d094f71723752cde23a1d9259",
      "changedClazzes" : { }
    },
    "e3631718822db05a02cb7b086d6f28a0fae15f51" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "0b6d123bdba1acefb79fc22b4d7cb8aab20b08ed",
      "changedClazzes" : {
        "org.apache.commons.io.input.ProxyReader" : { },
        "org.apache.commons.io.output.NullWriter" : {
          "testcases" : {
            "org.apache.commons.io.output.NullWriterTest" : [ "testNull" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriter" : { }
      }
    },
    "1b497f6ceea71f03d4529b29af901f286ef9b44f" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "e3631718822db05a02cb7b086d6f28a0fae15f51",
      "changedClazzes" : {
        "org.apache.commons.io.output.StringBuilderWriter" : { },
        "org.apache.commons.io.output.StringBuilderWriter#<init>" : {
          "testcases" : {
            "org.apache.commons.io.output.StringBuilderWriterTest" : [ "testAppendConstructNull", "testAppendConstructStringBuilder" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#append(char)" : {
          "testcases" : {
            "org.apache.commons.io.output.StringBuilderWriterTest" : [ "testAppendCharSequencePortion" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#close" : {
          "testcases" : {
            "org.apache.commons.io.output.StringBuilderWriterTest" : [ "testClose" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#getBuilder" : {
          "testcases" : {
            "org.apache.commons.io.output.StringBuilderWriterTest" : [ "testAppendConstructStringBuilder" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#toString" : {
          "testcases" : {
            "org.apache.commons.io.output.StringBuilderWriterTest" : [ "testAppendChar", "testAppendCharSequence", "testAppendCharSequencePortion", "testAppendConstructCapacity", "testAppendConstructNull", "testAppendConstructStringBuilder", "testClose", "testWriteChar", "testWriteCharArray", "testWriteCharArrayPortion", "testWriteString", "testWriteStringPortion" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#write(char[],int,int)" : {
          "testcases" : {
            "org.apache.commons.io.output.StringBuilderWriterTest" : [ "testWriteString" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriterTest" : {
          "testcases" : {
            "org.apache.commons.io.output.StringBuilderWriterTest" : [ "testAppendChar", "testAppendCharSequence", "testAppendCharSequencePortion", "testAppendConstructCapacity", "testAppendConstructNull", "testAppendConstructStringBuilder", "testClose", "testWriteChar", "testWriteCharArray", "testWriteCharArrayPortion", "testWriteString", "testWriteStringPortion" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriterTest#testAppendChar" : {
          "testcases" : {
            "org.apache.commons.io.output.StringBuilderWriterTest" : [ "testAppendChar" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriterTest#testAppendCharSequence" : {
          "testcases" : {
            "org.apache.commons.io.output.StringBuilderWriterTest" : [ "testAppendCharSequence" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriterTest#testAppendCharSequencePortion" : {
          "testcases" : {
            "org.apache.commons.io.output.StringBuilderWriterTest" : [ "testAppendCharSequencePortion" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriterTest#testAppendConstructCapacity" : {
          "testcases" : {
            "org.apache.commons.io.output.StringBuilderWriterTest" : [ "testAppendConstructCapacity" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriterTest#testAppendConstructNull" : {
          "testcases" : {
            "org.apache.commons.io.output.StringBuilderWriterTest" : [ "testAppendConstructNull" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriterTest#testAppendConstructStringBuilder" : {
          "testcases" : {
            "org.apache.commons.io.output.StringBuilderWriterTest" : [ "testAppendConstructStringBuilder" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriterTest#testClose" : {
          "testcases" : {
            "org.apache.commons.io.output.StringBuilderWriterTest" : [ "testClose" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriterTest#testWriteChar" : {
          "testcases" : {
            "org.apache.commons.io.output.StringBuilderWriterTest" : [ "testWriteChar" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriterTest#testWriteCharArray" : {
          "testcases" : {
            "org.apache.commons.io.output.StringBuilderWriterTest" : [ "testWriteCharArray" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriterTest#testWriteCharArrayPortion" : {
          "testcases" : {
            "org.apache.commons.io.output.StringBuilderWriterTest" : [ "testWriteCharArrayPortion" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriterTest#testWriteString" : {
          "testcases" : {
            "org.apache.commons.io.output.StringBuilderWriterTest" : [ "testWriteString" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriterTest#testWriteStringPortion" : {
          "testcases" : {
            "org.apache.commons.io.output.StringBuilderWriterTest" : [ "testWriteStringPortion" ]
          }
        }
      }
    },
    "f459805b3917cd01445f6f37d438484da8ae6bed" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "1b497f6ceea71f03d4529b29af901f286ef9b44f",
      "changedClazzes" : { }
    },
    "ae8a261d47bec45e42904fd3e761860bab1e404c" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "f459805b3917cd01445f6f37d438484da8ae6bed",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerNull" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerNull" ],
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce" ],
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testCleanEmpty", "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile", "testThrowsOnNullList" ],
            "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToString", "testReadLines", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ],
            "org.apache.commons.io.FileUtilsWaitForTestCase" : [ "testWaitFor" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPrefix", "testGetPrefixLength", "testIndexOfExtension", "testIndexOfLastSeparator", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testNormalize", "testNormalizeNoEndSeparator", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testByteArrayToOutputStream", "testByteArrayToString", "testByteArrayToWriter", "testConstants", "testInputStreamToByteArray", "testInputStreamToCharArray", "testInputStreamToCharArrayWithEncoding", "testInputStreamToString", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testReaderToCharArray", "testReaderToString", "testStringToByteArray", "testStringToInputStream", "testStringToOutputStream", "testStringToWriter" ],
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFiltering", "testInvalidEncoding", "testMissingFile", "testNextLineOnly", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testAnd", "testCanRead", "testCanWrite", "testDelegateFileFilter", "testDeprecatedWildcard", "testDirectory", "testEmpty", "testFalse", "testFiles", "testHidden", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNameFilterNullArrayArgument", "testNameFilterNullListArgument", "testNot", "testOr", "testPrefix", "testPrefixCaseInsensitive", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testTrue", "testWildcard" ],
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ],
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "testConstructor_File_encoding_badEncoding" ],
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testFileLocked", "testFileNotLocked" ]
          }
        },
        "org.apache.commons.io.IOUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy" ],
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce", "testDeleteNormal", "testDeleteQuietlyNormal" ],
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceUnix_String_EmptyResponse", "testGetFreeSpaceUnix_String_InvalidResponse1", "testGetFreeSpaceUnix_String_InvalidResponse2", "testGetFreeSpaceUnix_String_InvalidResponse3", "testGetFreeSpaceUnix_String_InvalidResponse4", "testGetFreeSpaceUnix_String_LongResponse", "testGetFreeSpaceUnix_String_LongResponseKb", "testGetFreeSpaceUnix_String_NormalResponseFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbLinux", "testGetFreeSpaceUnix_String_NormalResponseKbSolaris", "testGetFreeSpaceUnix_String_NormalResponseLinux", "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpace_String" ],
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile" ],
            "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToString", "testReadLines", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPrefix", "testGetPrefixLength", "testIndexOfExtension", "testIndexOfLastSeparator", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testNormalize", "testNormalizeNoEndSeparator", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToOutputStream_nullIn", "testCopy_inputStreamToOutputStream_nullOut", "testCopy_inputStreamToWriter", "testCopy_inputStreamToWriter_Encoding", "testCopy_inputStreamToWriter_Encoding_nullEncoding", "testCopy_inputStreamToWriter_Encoding_nullIn", "testCopy_inputStreamToWriter_Encoding_nullOut", "testCopy_inputStreamToWriter_nullIn", "testCopy_inputStreamToWriter_nullOut", "testCopy_readerToOutputStream", "testCopy_readerToOutputStream_Encoding", "testCopy_readerToOutputStream_Encoding_nullEncoding", "testCopy_readerToOutputStream_Encoding_nullIn", "testCopy_readerToOutputStream_Encoding_nullOut", "testCopy_readerToOutputStream_nullIn", "testCopy_readerToOutputStream_nullOut", "testCopy_readerToWriter", "testCopy_readerToWriter_nullIn", "testCopy_readerToWriter_nullOut" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testByteArrayToOutputStream", "testByteArrayToString", "testByteArrayToWriter", "testConstants", "testInputStreamToByteArray", "testInputStreamToCharArray", "testInputStreamToCharArrayWithEncoding", "testInputStreamToString", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testReaderToCharArray", "testReaderToString", "testStringToByteArray", "testStringToInputStream", "testStringToOutputStream", "testStringToWriter" ],
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWriteLines_OutputStream", "testWriteLines_OutputStream_Encoding", "testWriteLines_OutputStream_Encoding_nullData", "testWriteLines_OutputStream_Encoding_nullEncoding", "testWriteLines_OutputStream_Encoding_nullSeparator", "testWriteLines_OutputStream_Encoding_nullStream", "testWriteLines_OutputStream_nullData", "testWriteLines_OutputStream_nullSeparator", "testWriteLines_OutputStream_nullStream", "testWriteLines_Writer", "testWriteLines_Writer_nullData", "testWriteLines_Writer_nullSeparator", "testWriteLines_Writer_nullStream", "testWrite_byteArrayToOutputStream", "testWrite_byteArrayToOutputStream_nullData", "testWrite_byteArrayToOutputStream_nullStream", "testWrite_byteArrayToWriter", "testWrite_byteArrayToWriter_Encoding", "testWrite_byteArrayToWriter_Encoding_nullData", "testWrite_byteArrayToWriter_Encoding_nullEncoding", "testWrite_byteArrayToWriter_Encoding_nullWriter", "testWrite_byteArrayToWriter_nullData", "testWrite_byteArrayToWriter_nullWriter", "testWrite_charArrayToOutputStream", "testWrite_charArrayToOutputStream_Encoding", "testWrite_charArrayToOutputStream_Encoding_nullData", "testWrite_charArrayToOutputStream_Encoding_nullStream", "testWrite_charArrayToOutputStream_nullData", "testWrite_charArrayToOutputStream_nullEncoding", "testWrite_charArrayToOutputStream_nullStream", "testWrite_charArrayToWriter", "testWrite_charArrayToWriter_Encoding_nullData", "testWrite_charArrayToWriter_Encoding_nullStream", "testWrite_stringToOutputStream", "testWrite_stringToOutputStream_Encoding", "testWrite_stringToOutputStream_Encoding_nullData", "testWrite_stringToOutputStream_Encoding_nullStream", "testWrite_stringToOutputStream_nullData", "testWrite_stringToOutputStream_nullEncoding", "testWrite_stringToOutputStream_nullStream", "testWrite_stringToWriter", "testWrite_stringToWriter_Encoding_nullData", "testWrite_stringToWriter_Encoding_nullStream" ],
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testFiltering", "testInvalidEncoding", "testMissingFile", "testNextLineOnly", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testCanRead", "testCanWrite", "testEmpty", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testSizeFilter" ],
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testWriteToLarge" ],
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testConstructor_fileName_nullFile", "testDifferentEncoding", "testSameEncoding" ],
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testConstructor_fileName_nullFile", "testFileLocked", "testFileNotLocked" ]
          }
        }
      }
    },
    "61b41ee528d4d5cd358f8f5b0a4b2c5a743da561" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "ae8a261d47bec45e42904fd3e761860bab1e404c",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerNull" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerNull" ],
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce" ],
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testCleanEmpty", "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile", "testThrowsOnNullList" ],
            "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToString", "testReadLines", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ],
            "org.apache.commons.io.FileUtilsWaitForTestCase" : [ "testWaitFor" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPrefix", "testGetPrefixLength", "testIndexOfExtension", "testIndexOfLastSeparator", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testNormalize", "testNormalizeNoEndSeparator", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testByteArrayToOutputStream", "testByteArrayToString", "testByteArrayToWriter", "testConstants", "testInputStreamToByteArray", "testInputStreamToCharArray", "testInputStreamToCharArrayWithEncoding", "testInputStreamToString", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testReaderToCharArray", "testReaderToString", "testStringToByteArray", "testStringToInputStream", "testStringToOutputStream", "testStringToWriter" ],
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFiltering", "testInvalidEncoding", "testMissingFile", "testNextLineOnly", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testAnd", "testCanRead", "testCanWrite", "testDelegateFileFilter", "testDeprecatedWildcard", "testDirectory", "testEmpty", "testFalse", "testFiles", "testHidden", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNameFilterNullArrayArgument", "testNameFilterNullListArgument", "testNot", "testOr", "testPrefix", "testPrefixCaseInsensitive", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testTrue", "testWildcard" ],
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ],
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "testConstructor_File_encoding_badEncoding" ],
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testFileLocked", "testFileNotLocked" ]
          }
        },
        "org.apache.commons.io.FileUtils#cleanDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteCharSequence1", "testWriteCharSequence2" ]
          }
        },
        "org.apache.commons.io.FileUtils#deleteDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteCharSequence1", "testWriteCharSequence2" ]
          }
        },
        "org.apache.commons.io.FileUtils#forceDelete(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteCharSequence1", "testWriteCharSequence2" ]
          }
        },
        "org.apache.commons.io.FileUtils#openOutputStream(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteCharSequence1", "testWriteCharSequence2" ]
          }
        },
        "org.apache.commons.io.FileUtils#write(java.io.File,java.lang.CharSequence,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteCharSequence1", "testWriteCharSequence2" ]
          }
        },
        "org.apache.commons.io.FileUtils#writeStringToFile(java.io.File,java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteCharSequence1", "testWriteCharSequence2" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToString", "testReadLines", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#setUp" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteCharSequence1", "testWriteCharSequence2" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#tearDown" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteCharSequence1", "testWriteCharSequence2" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testWriteCharSequence1" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteCharSequence1" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testWriteCharSequence2" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteCharSequence2" ]
          }
        },
        "org.apache.commons.io.IOUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy" ],
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce", "testDeleteNormal", "testDeleteQuietlyNormal" ],
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceUnix_String_EmptyResponse", "testGetFreeSpaceUnix_String_InvalidResponse1", "testGetFreeSpaceUnix_String_InvalidResponse2", "testGetFreeSpaceUnix_String_InvalidResponse3", "testGetFreeSpaceUnix_String_InvalidResponse4", "testGetFreeSpaceUnix_String_LongResponse", "testGetFreeSpaceUnix_String_LongResponseKb", "testGetFreeSpaceUnix_String_NormalResponseFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbLinux", "testGetFreeSpaceUnix_String_NormalResponseKbSolaris", "testGetFreeSpaceUnix_String_NormalResponseLinux", "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpace_String" ],
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile" ],
            "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToString", "testReadLines", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPrefix", "testGetPrefixLength", "testIndexOfExtension", "testIndexOfLastSeparator", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testNormalize", "testNormalizeNoEndSeparator", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToOutputStream_nullIn", "testCopy_inputStreamToOutputStream_nullOut", "testCopy_inputStreamToWriter", "testCopy_inputStreamToWriter_Encoding", "testCopy_inputStreamToWriter_Encoding_nullEncoding", "testCopy_inputStreamToWriter_Encoding_nullIn", "testCopy_inputStreamToWriter_Encoding_nullOut", "testCopy_inputStreamToWriter_nullIn", "testCopy_inputStreamToWriter_nullOut", "testCopy_readerToOutputStream", "testCopy_readerToOutputStream_Encoding", "testCopy_readerToOutputStream_Encoding_nullEncoding", "testCopy_readerToOutputStream_Encoding_nullIn", "testCopy_readerToOutputStream_Encoding_nullOut", "testCopy_readerToOutputStream_nullIn", "testCopy_readerToOutputStream_nullOut", "testCopy_readerToWriter", "testCopy_readerToWriter_nullIn", "testCopy_readerToWriter_nullOut" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testByteArrayToOutputStream", "testByteArrayToString", "testByteArrayToWriter", "testConstants", "testInputStreamToByteArray", "testInputStreamToCharArray", "testInputStreamToCharArrayWithEncoding", "testInputStreamToString", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testReaderToCharArray", "testReaderToString", "testStringToByteArray", "testStringToInputStream", "testStringToOutputStream", "testStringToWriter" ],
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWriteLines_OutputStream", "testWriteLines_OutputStream_Encoding", "testWriteLines_OutputStream_Encoding_nullData", "testWriteLines_OutputStream_Encoding_nullEncoding", "testWriteLines_OutputStream_Encoding_nullSeparator", "testWriteLines_OutputStream_Encoding_nullStream", "testWriteLines_OutputStream_nullData", "testWriteLines_OutputStream_nullSeparator", "testWriteLines_OutputStream_nullStream", "testWriteLines_Writer", "testWriteLines_Writer_nullData", "testWriteLines_Writer_nullSeparator", "testWriteLines_Writer_nullStream", "testWrite_byteArrayToOutputStream", "testWrite_byteArrayToOutputStream_nullData", "testWrite_byteArrayToOutputStream_nullStream", "testWrite_byteArrayToWriter", "testWrite_byteArrayToWriter_Encoding", "testWrite_byteArrayToWriter_Encoding_nullData", "testWrite_byteArrayToWriter_Encoding_nullEncoding", "testWrite_byteArrayToWriter_Encoding_nullWriter", "testWrite_byteArrayToWriter_nullData", "testWrite_byteArrayToWriter_nullWriter", "testWrite_charArrayToOutputStream", "testWrite_charArrayToOutputStream_Encoding", "testWrite_charArrayToOutputStream_Encoding_nullData", "testWrite_charArrayToOutputStream_Encoding_nullStream", "testWrite_charArrayToOutputStream_nullData", "testWrite_charArrayToOutputStream_nullEncoding", "testWrite_charArrayToOutputStream_nullStream", "testWrite_charArrayToWriter", "testWrite_charArrayToWriter_Encoding_nullData", "testWrite_charArrayToWriter_Encoding_nullStream", "testWrite_stringToOutputStream", "testWrite_stringToOutputStream_Encoding", "testWrite_stringToOutputStream_Encoding_nullData", "testWrite_stringToOutputStream_Encoding_nullStream", "testWrite_stringToOutputStream_nullData", "testWrite_stringToOutputStream_nullEncoding", "testWrite_stringToOutputStream_nullStream", "testWrite_stringToWriter", "testWrite_stringToWriter_Encoding_nullData", "testWrite_stringToWriter_Encoding_nullStream" ],
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testFiltering", "testInvalidEncoding", "testMissingFile", "testNextLineOnly", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testCanRead", "testCanWrite", "testEmpty", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testSizeFilter" ],
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testWriteToLarge" ],
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testConstructor_fileName_nullFile", "testDifferentEncoding", "testSameEncoding" ],
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testConstructor_fileName_nullFile", "testFileLocked", "testFileNotLocked" ]
          }
        },
        "org.apache.commons.io.IOUtils#closeQuietly(java.io.OutputStream)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteCharSequence1", "testWriteCharSequence2" ]
          }
        },
        "org.apache.commons.io.IOUtils#write(java.lang.CharSequence,java.io.OutputStream)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWrite_charSequenceToWriter", "testWrite_charSequenceToWriter_Encoding_nullStream" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testByteArrayToOutputStream", "testByteArrayToString", "testByteArrayToWriter", "testConstants", "testInputStreamToByteArray", "testInputStreamToCharArray", "testInputStreamToCharArrayWithEncoding", "testInputStreamToString", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testReaderToCharArray", "testReaderToString", "testStringToByteArray", "testStringToInputStream", "testStringToOutputStream", "testStringToWriter" ]
          }
        },
        "org.apache.commons.io.IOUtilsWriteTestCase" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWriteLines_OutputStream", "testWriteLines_OutputStream_Encoding", "testWriteLines_OutputStream_Encoding_nullData", "testWriteLines_OutputStream_Encoding_nullEncoding", "testWriteLines_OutputStream_Encoding_nullSeparator", "testWriteLines_OutputStream_Encoding_nullStream", "testWriteLines_OutputStream_nullData", "testWriteLines_OutputStream_nullSeparator", "testWriteLines_OutputStream_nullStream", "testWriteLines_Writer", "testWriteLines_Writer_nullData", "testWriteLines_Writer_nullSeparator", "testWriteLines_Writer_nullStream", "testWrite_byteArrayToOutputStream", "testWrite_byteArrayToOutputStream_nullData", "testWrite_byteArrayToOutputStream_nullStream", "testWrite_byteArrayToWriter", "testWrite_byteArrayToWriter_Encoding", "testWrite_byteArrayToWriter_Encoding_nullData", "testWrite_byteArrayToWriter_Encoding_nullEncoding", "testWrite_byteArrayToWriter_Encoding_nullWriter", "testWrite_byteArrayToWriter_nullData", "testWrite_byteArrayToWriter_nullWriter", "testWrite_charArrayToOutputStream", "testWrite_charArrayToOutputStream_Encoding", "testWrite_charArrayToOutputStream_Encoding_nullData", "testWrite_charArrayToOutputStream_Encoding_nullStream", "testWrite_charArrayToOutputStream_nullData", "testWrite_charArrayToOutputStream_nullEncoding", "testWrite_charArrayToOutputStream_nullStream", "testWrite_charArrayToWriter", "testWrite_charArrayToWriter_Encoding_nullData", "testWrite_charArrayToWriter_Encoding_nullStream", "testWrite_charSequenceToOutputStream", "testWrite_charSequenceToOutputStream_Encoding", "testWrite_charSequenceToOutputStream_Encoding_nullData", "testWrite_charSequenceToOutputStream_Encoding_nullStream", "testWrite_charSequenceToOutputStream_nullData", "testWrite_charSequenceToOutputStream_nullEncoding", "testWrite_charSequenceToOutputStream_nullStream", "testWrite_charSequenceToWriter", "testWrite_charSequenceToWriter_Encoding_nullData", "testWrite_charSequenceToWriter_Encoding_nullStream", "testWrite_stringToOutputStream", "testWrite_stringToOutputStream_Encoding", "testWrite_stringToOutputStream_Encoding_nullData", "testWrite_stringToOutputStream_Encoding_nullStream", "testWrite_stringToOutputStream_nullData", "testWrite_stringToOutputStream_nullEncoding", "testWrite_stringToOutputStream_nullStream", "testWrite_stringToWriter", "testWrite_stringToWriter_Encoding_nullData", "testWrite_stringToWriter_Encoding_nullStream" ]
          }
        },
        "org.apache.commons.io.IOUtilsWriteTestCase#setUp" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWrite_charSequenceToOutputStream", "testWrite_charSequenceToOutputStream_Encoding", "testWrite_charSequenceToOutputStream_Encoding_nullData", "testWrite_charSequenceToOutputStream_Encoding_nullStream", "testWrite_charSequenceToOutputStream_nullData", "testWrite_charSequenceToOutputStream_nullEncoding", "testWrite_charSequenceToOutputStream_nullStream", "testWrite_charSequenceToWriter", "testWrite_charSequenceToWriter_Encoding_nullData", "testWrite_charSequenceToWriter_Encoding_nullStream" ]
          }
        },
        "org.apache.commons.io.IOUtilsWriteTestCase#tearDown" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWrite_charSequenceToOutputStream", "testWrite_charSequenceToOutputStream_Encoding", "testWrite_charSequenceToOutputStream_Encoding_nullData", "testWrite_charSequenceToOutputStream_Encoding_nullStream", "testWrite_charSequenceToOutputStream_nullData", "testWrite_charSequenceToOutputStream_nullEncoding", "testWrite_charSequenceToOutputStream_nullStream", "testWrite_charSequenceToWriter", "testWrite_charSequenceToWriter_Encoding_nullData", "testWrite_charSequenceToWriter_Encoding_nullStream" ]
          }
        },
        "org.apache.commons.io.IOUtilsWriteTestCase#testWrite_charSequenceToOutputStream" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWrite_charSequenceToOutputStream" ]
          }
        },
        "org.apache.commons.io.IOUtilsWriteTestCase#testWrite_charSequenceToOutputStream_Encoding" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWrite_charSequenceToOutputStream_Encoding" ]
          }
        },
        "org.apache.commons.io.IOUtilsWriteTestCase#testWrite_charSequenceToOutputStream_Encoding_nullData" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWrite_charSequenceToOutputStream_Encoding_nullData" ]
          }
        },
        "org.apache.commons.io.IOUtilsWriteTestCase#testWrite_charSequenceToOutputStream_Encoding_nullStream" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWrite_charSequenceToOutputStream_Encoding_nullStream" ]
          }
        },
        "org.apache.commons.io.IOUtilsWriteTestCase#testWrite_charSequenceToOutputStream_nullData" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWrite_charSequenceToOutputStream_nullData" ]
          }
        },
        "org.apache.commons.io.IOUtilsWriteTestCase#testWrite_charSequenceToOutputStream_nullEncoding" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWrite_charSequenceToOutputStream_nullEncoding" ]
          }
        },
        "org.apache.commons.io.IOUtilsWriteTestCase#testWrite_charSequenceToOutputStream_nullStream" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWrite_charSequenceToOutputStream_nullStream" ]
          }
        },
        "org.apache.commons.io.IOUtilsWriteTestCase#testWrite_charSequenceToWriter" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWrite_charSequenceToWriter" ]
          }
        },
        "org.apache.commons.io.IOUtilsWriteTestCase#testWrite_charSequenceToWriter_Encoding_nullData" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWrite_charSequenceToWriter_Encoding_nullData" ]
          }
        },
        "org.apache.commons.io.IOUtilsWriteTestCase#testWrite_charSequenceToWriter_Encoding_nullStream" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWrite_charSequenceToWriter_Encoding_nullStream" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream#<init>" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWrite_charSequenceToOutputStream", "testWrite_charSequenceToOutputStream_Encoding", "testWrite_charSequenceToOutputStream_Encoding_nullData", "testWrite_charSequenceToOutputStream_nullData", "testWrite_charSequenceToOutputStream_nullEncoding", "testWrite_charSequenceToWriter", "testWrite_charSequenceToWriter_Encoding_nullData" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream#needNewBuffer(int)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWrite_charSequenceToOutputStream", "testWrite_charSequenceToOutputStream_Encoding", "testWrite_charSequenceToOutputStream_Encoding_nullData", "testWrite_charSequenceToOutputStream_nullData", "testWrite_charSequenceToOutputStream_nullEncoding", "testWrite_charSequenceToWriter", "testWrite_charSequenceToWriter_Encoding_nullData" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream#size" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWrite_charSequenceToOutputStream", "testWrite_charSequenceToOutputStream_Encoding_nullData", "testWrite_charSequenceToOutputStream_nullData", "testWrite_charSequenceToOutputStream_nullEncoding", "testWrite_charSequenceToWriter", "testWrite_charSequenceToWriter_Encoding_nullData" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream#toByteArray" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWrite_charSequenceToOutputStream", "testWrite_charSequenceToOutputStream_Encoding", "testWrite_charSequenceToOutputStream_nullEncoding", "testWrite_charSequenceToWriter" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream#write(byte[],int,int)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWrite_charSequenceToOutputStream", "testWrite_charSequenceToOutputStream_Encoding", "testWrite_charSequenceToOutputStream_nullEncoding", "testWrite_charSequenceToWriter" ]
          }
        },
        "org.apache.commons.io.output.ProxyOutputStream#<init>(java.io.OutputStream)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWrite_charSequenceToOutputStream", "testWrite_charSequenceToOutputStream_Encoding", "testWrite_charSequenceToOutputStream_Encoding_nullData", "testWrite_charSequenceToOutputStream_nullData", "testWrite_charSequenceToOutputStream_nullEncoding", "testWrite_charSequenceToWriter", "testWrite_charSequenceToWriter_Encoding_nullData" ]
          }
        },
        "org.apache.commons.io.output.ProxyOutputStream#flush" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWrite_charSequenceToOutputStream", "testWrite_charSequenceToOutputStream_Encoding", "testWrite_charSequenceToOutputStream_Encoding_nullData", "testWrite_charSequenceToOutputStream_nullData", "testWrite_charSequenceToOutputStream_nullEncoding" ]
          }
        },
        "org.apache.commons.io.output.ProxyOutputStream#write(byte[])" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWrite_charSequenceToOutputStream", "testWrite_charSequenceToOutputStream_Encoding", "testWrite_charSequenceToOutputStream_nullEncoding" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#assertEqualContent(byte[],java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteCharSequence1", "testWriteCharSequence2" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#createFile(java.io.File,long)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteCharSequence1", "testWriteCharSequence2" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#generateTestData(java.io.OutputStream,long)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteCharSequence1", "testWriteCharSequence2" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#getTestDirectory" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteCharSequence1", "testWriteCharSequence2" ]
          }
        },
        "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream#<init>(java.io.OutputStream,boolean,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWrite_charSequenceToOutputStream", "testWrite_charSequenceToOutputStream_Encoding", "testWrite_charSequenceToOutputStream_Encoding_nullData", "testWrite_charSequenceToOutputStream_nullData", "testWrite_charSequenceToOutputStream_nullEncoding", "testWrite_charSequenceToWriter", "testWrite_charSequenceToWriter_Encoding_nullData" ]
          }
        },
        "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream#flush" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWrite_charSequenceToOutputStream", "testWrite_charSequenceToOutputStream_Encoding", "testWrite_charSequenceToOutputStream_Encoding_nullData", "testWrite_charSequenceToOutputStream_nullData", "testWrite_charSequenceToOutputStream_nullEncoding" ]
          }
        },
        "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream#off" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWrite_charSequenceToOutputStream", "testWrite_charSequenceToOutputStream_Encoding", "testWrite_charSequenceToOutputStream_Encoding_nullData", "testWrite_charSequenceToOutputStream_nullData", "testWrite_charSequenceToOutputStream_nullEncoding", "testWrite_charSequenceToWriter", "testWrite_charSequenceToWriter_Encoding_nullData" ]
          }
        }
      }
    },
    "710ec8c94f842477c78adc5aeaf8fa11059d80be" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "61b41ee528d4d5cd358f8f5b0a4b2c5a743da561",
      "changedClazzes" : {
        "org.apache.commons.io.IOUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy" ],
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce", "testDeleteNormal", "testDeleteQuietlyNormal" ],
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceUnix_String_EmptyResponse", "testGetFreeSpaceUnix_String_InvalidResponse1", "testGetFreeSpaceUnix_String_InvalidResponse2", "testGetFreeSpaceUnix_String_InvalidResponse3", "testGetFreeSpaceUnix_String_InvalidResponse4", "testGetFreeSpaceUnix_String_LongResponse", "testGetFreeSpaceUnix_String_LongResponseKb", "testGetFreeSpaceUnix_String_NormalResponseFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbLinux", "testGetFreeSpaceUnix_String_NormalResponseKbSolaris", "testGetFreeSpaceUnix_String_NormalResponseLinux", "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpace_String" ],
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile" ],
            "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToString", "testReadLines", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPrefix", "testGetPrefixLength", "testIndexOfExtension", "testIndexOfLastSeparator", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testNormalize", "testNormalizeNoEndSeparator", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToOutputStream_nullIn", "testCopy_inputStreamToOutputStream_nullOut", "testCopy_inputStreamToWriter", "testCopy_inputStreamToWriter_Encoding", "testCopy_inputStreamToWriter_Encoding_nullEncoding", "testCopy_inputStreamToWriter_Encoding_nullIn", "testCopy_inputStreamToWriter_Encoding_nullOut", "testCopy_inputStreamToWriter_nullIn", "testCopy_inputStreamToWriter_nullOut", "testCopy_readerToOutputStream", "testCopy_readerToOutputStream_Encoding", "testCopy_readerToOutputStream_Encoding_nullEncoding", "testCopy_readerToOutputStream_Encoding_nullIn", "testCopy_readerToOutputStream_Encoding_nullOut", "testCopy_readerToOutputStream_nullIn", "testCopy_readerToOutputStream_nullOut", "testCopy_readerToWriter", "testCopy_readerToWriter_nullIn", "testCopy_readerToWriter_nullOut" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testByteArrayToOutputStream", "testByteArrayToString", "testByteArrayToWriter", "testConstants", "testInputStreamToByteArray", "testInputStreamToCharArray", "testInputStreamToCharArrayWithEncoding", "testInputStreamToString", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testReaderToCharArray", "testReaderToString", "testStringToByteArray", "testStringToInputStream", "testStringToOutputStream", "testStringToWriter" ],
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWriteLines_OutputStream", "testWriteLines_OutputStream_Encoding", "testWriteLines_OutputStream_Encoding_nullData", "testWriteLines_OutputStream_Encoding_nullEncoding", "testWriteLines_OutputStream_Encoding_nullSeparator", "testWriteLines_OutputStream_Encoding_nullStream", "testWriteLines_OutputStream_nullData", "testWriteLines_OutputStream_nullSeparator", "testWriteLines_OutputStream_nullStream", "testWriteLines_Writer", "testWriteLines_Writer_nullData", "testWriteLines_Writer_nullSeparator", "testWriteLines_Writer_nullStream", "testWrite_byteArrayToOutputStream", "testWrite_byteArrayToOutputStream_nullData", "testWrite_byteArrayToOutputStream_nullStream", "testWrite_byteArrayToWriter", "testWrite_byteArrayToWriter_Encoding", "testWrite_byteArrayToWriter_Encoding_nullData", "testWrite_byteArrayToWriter_Encoding_nullEncoding", "testWrite_byteArrayToWriter_Encoding_nullWriter", "testWrite_byteArrayToWriter_nullData", "testWrite_byteArrayToWriter_nullWriter", "testWrite_charArrayToOutputStream", "testWrite_charArrayToOutputStream_Encoding", "testWrite_charArrayToOutputStream_Encoding_nullData", "testWrite_charArrayToOutputStream_Encoding_nullStream", "testWrite_charArrayToOutputStream_nullData", "testWrite_charArrayToOutputStream_nullEncoding", "testWrite_charArrayToOutputStream_nullStream", "testWrite_charArrayToWriter", "testWrite_charArrayToWriter_Encoding_nullData", "testWrite_charArrayToWriter_Encoding_nullStream", "testWrite_charSequenceToOutputStream", "testWrite_charSequenceToOutputStream_Encoding", "testWrite_charSequenceToOutputStream_Encoding_nullData", "testWrite_charSequenceToOutputStream_Encoding_nullStream", "testWrite_charSequenceToOutputStream_nullData", "testWrite_charSequenceToOutputStream_nullEncoding", "testWrite_charSequenceToOutputStream_nullStream", "testWrite_charSequenceToWriter", "testWrite_charSequenceToWriter_Encoding_nullData", "testWrite_charSequenceToWriter_Encoding_nullStream", "testWrite_stringToOutputStream", "testWrite_stringToOutputStream_Encoding", "testWrite_stringToOutputStream_Encoding_nullData", "testWrite_stringToOutputStream_Encoding_nullStream", "testWrite_stringToOutputStream_nullData", "testWrite_stringToOutputStream_nullEncoding", "testWrite_stringToOutputStream_nullStream", "testWrite_stringToWriter", "testWrite_stringToWriter_Encoding_nullData", "testWrite_stringToWriter_Encoding_nullStream" ],
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testFiltering", "testInvalidEncoding", "testMissingFile", "testNextLineOnly", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testCanRead", "testCanWrite", "testEmpty", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testSizeFilter" ],
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testWriteToLarge" ],
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testConstructor_fileName_nullFile", "testDifferentEncoding", "testSameEncoding" ],
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testConstructor_fileName_nullFile", "testFileLocked", "testFileNotLocked" ]
          }
        }
      }
    },
    "f8b24f98550578bcec92adc615f319f70f1cfc08" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "710ec8c94f842477c78adc5aeaf8fa11059d80be",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtilsListFilesTestCase#testListFiles" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles" ]
          }
        }
      }
    },
    "80a0a547241a5ca9c4b6c58bc7d6a123374c0f27" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "f8b24f98550578bcec92adc615f319f70f1cfc08",
      "changedClazzes" : {
        "org.apache.commons.io.output.PackageTestSuite#suite" : { }
      }
    },
    "f2585e0b539dd1a98ebac2c90a5d46fa46cd722f" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "80a0a547241a5ca9c4b6c58bc7d6a123374c0f27",
      "changedClazzes" : { }
    },
    "a4c20307d1a166bcd702511b5c987639d1997cd9" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "f2585e0b539dd1a98ebac2c90a5d46fa46cd722f",
      "changedClazzes" : {
        "org.apache.commons.io.FileCleaningTrackerTestCase#testFileCleanerExitWhenFinished1" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerExitWhenFinished1" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerExitWhenFinished1" ]
          }
        }
      }
    },
    "2ed08896d273ad1d352874ce195537e3c74c1d60" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "a4c20307d1a166bcd702511b5c987639d1997cd9",
      "changedClazzes" : { }
    },
    "75e05a81366582417d54a04ef5204e9d76894271" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "2ed08896d273ad1d352874ce195537e3c74c1d60",
      "changedClazzes" : {
        "org.apache.commons.io.FileSystemUtils#freeSpaceUnix(java.lang.String,boolean,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceUnix_String_EmptyPath", "testGetFreeSpaceUnix_String_EmptyResponse", "testGetFreeSpaceUnix_String_InvalidResponse1", "testGetFreeSpaceUnix_String_InvalidResponse2", "testGetFreeSpaceUnix_String_InvalidResponse3", "testGetFreeSpaceUnix_String_InvalidResponse4", "testGetFreeSpaceUnix_String_LongResponse", "testGetFreeSpaceUnix_String_LongResponseKb", "testGetFreeSpaceUnix_String_NormalResponseFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbLinux", "testGetFreeSpaceUnix_String_NormalResponseKbSolaris", "testGetFreeSpaceUnix_String_NormalResponseLinux", "testGetFreeSpace_String" ]
          }
        }
      }
    },
    "6de38ce50ffd8305871f6313ba26645e592279a8" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "75e05a81366582417d54a04ef5204e9d76894271",
      "changedClazzes" : {
        "org.apache.commons.io.IOUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy" ],
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce", "testDeleteNormal", "testDeleteQuietlyNormal" ],
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceUnix_String_EmptyResponse", "testGetFreeSpaceUnix_String_InvalidResponse1", "testGetFreeSpaceUnix_String_InvalidResponse2", "testGetFreeSpaceUnix_String_InvalidResponse3", "testGetFreeSpaceUnix_String_InvalidResponse4", "testGetFreeSpaceUnix_String_LongResponse", "testGetFreeSpaceUnix_String_LongResponseKb", "testGetFreeSpaceUnix_String_NormalResponseFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbLinux", "testGetFreeSpaceUnix_String_NormalResponseKbSolaris", "testGetFreeSpaceUnix_String_NormalResponseLinux", "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpace_String" ],
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile" ],
            "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToString", "testReadLines", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPrefix", "testGetPrefixLength", "testIndexOfExtension", "testIndexOfLastSeparator", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testNormalize", "testNormalizeNoEndSeparator", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToOutputStream_nullIn", "testCopy_inputStreamToOutputStream_nullOut", "testCopy_inputStreamToWriter", "testCopy_inputStreamToWriter_Encoding", "testCopy_inputStreamToWriter_Encoding_nullEncoding", "testCopy_inputStreamToWriter_Encoding_nullIn", "testCopy_inputStreamToWriter_Encoding_nullOut", "testCopy_inputStreamToWriter_nullIn", "testCopy_inputStreamToWriter_nullOut", "testCopy_readerToOutputStream", "testCopy_readerToOutputStream_Encoding", "testCopy_readerToOutputStream_Encoding_nullEncoding", "testCopy_readerToOutputStream_Encoding_nullIn", "testCopy_readerToOutputStream_Encoding_nullOut", "testCopy_readerToOutputStream_nullIn", "testCopy_readerToOutputStream_nullOut", "testCopy_readerToWriter", "testCopy_readerToWriter_nullIn", "testCopy_readerToWriter_nullOut" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testByteArrayToOutputStream", "testByteArrayToString", "testByteArrayToWriter", "testConstants", "testInputStreamToByteArray", "testInputStreamToCharArray", "testInputStreamToCharArrayWithEncoding", "testInputStreamToString", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testReaderToCharArray", "testReaderToString", "testStringToByteArray", "testStringToInputStream", "testStringToOutputStream", "testStringToWriter" ],
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWriteLines_OutputStream", "testWriteLines_OutputStream_Encoding", "testWriteLines_OutputStream_Encoding_nullData", "testWriteLines_OutputStream_Encoding_nullEncoding", "testWriteLines_OutputStream_Encoding_nullSeparator", "testWriteLines_OutputStream_Encoding_nullStream", "testWriteLines_OutputStream_nullData", "testWriteLines_OutputStream_nullSeparator", "testWriteLines_OutputStream_nullStream", "testWriteLines_Writer", "testWriteLines_Writer_nullData", "testWriteLines_Writer_nullSeparator", "testWriteLines_Writer_nullStream", "testWrite_byteArrayToOutputStream", "testWrite_byteArrayToOutputStream_nullData", "testWrite_byteArrayToOutputStream_nullStream", "testWrite_byteArrayToWriter", "testWrite_byteArrayToWriter_Encoding", "testWrite_byteArrayToWriter_Encoding_nullData", "testWrite_byteArrayToWriter_Encoding_nullEncoding", "testWrite_byteArrayToWriter_Encoding_nullWriter", "testWrite_byteArrayToWriter_nullData", "testWrite_byteArrayToWriter_nullWriter", "testWrite_charArrayToOutputStream", "testWrite_charArrayToOutputStream_Encoding", "testWrite_charArrayToOutputStream_Encoding_nullData", "testWrite_charArrayToOutputStream_Encoding_nullStream", "testWrite_charArrayToOutputStream_nullData", "testWrite_charArrayToOutputStream_nullEncoding", "testWrite_charArrayToOutputStream_nullStream", "testWrite_charArrayToWriter", "testWrite_charArrayToWriter_Encoding_nullData", "testWrite_charArrayToWriter_Encoding_nullStream", "testWrite_charSequenceToOutputStream", "testWrite_charSequenceToOutputStream_Encoding", "testWrite_charSequenceToOutputStream_Encoding_nullData", "testWrite_charSequenceToOutputStream_Encoding_nullStream", "testWrite_charSequenceToOutputStream_nullData", "testWrite_charSequenceToOutputStream_nullEncoding", "testWrite_charSequenceToOutputStream_nullStream", "testWrite_charSequenceToWriter", "testWrite_charSequenceToWriter_Encoding_nullData", "testWrite_charSequenceToWriter_Encoding_nullStream", "testWrite_stringToOutputStream", "testWrite_stringToOutputStream_Encoding", "testWrite_stringToOutputStream_Encoding_nullData", "testWrite_stringToOutputStream_Encoding_nullStream", "testWrite_stringToOutputStream_nullData", "testWrite_stringToOutputStream_nullEncoding", "testWrite_stringToOutputStream_nullStream", "testWrite_stringToWriter", "testWrite_stringToWriter_Encoding_nullData", "testWrite_stringToWriter_Encoding_nullStream" ],
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testFiltering", "testInvalidEncoding", "testMissingFile", "testNextLineOnly", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testCanRead", "testCanWrite", "testEmpty", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testSizeFilter" ],
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testWriteToLarge" ],
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testConstructor_fileName_nullFile", "testDifferentEncoding", "testSameEncoding" ],
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testConstructor_fileName_nullFile", "testFileLocked", "testFileNotLocked" ]
          }
        }
      }
    },
    "2e12579c0a2af4278306e4d74163a333724cb03b" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "6de38ce50ffd8305871f6313ba26645e592279a8",
      "changedClazzes" : {
        "org.apache.commons.io.DirectoryWalker" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testCancel", "testFilter", "testFilterAndLimitA", "testFilterAndLimitB", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile2", "testFilterDirAndFile3", "testFilterDirAndFile4", "testHandleStartDirectoryFalse", "testLimitToCurrent", "testMissingStartDirectory", "testMultiThreadCancel" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToGrandChild" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker$CancelException" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testCancel", "testMultiThreadCancel" ]
          }
        }
      }
    },
    "6fa1a3d693ef043c6246807d3667fe360f5b3e9b" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "2e12579c0a2af4278306e4d74163a333724cb03b",
      "changedClazzes" : { }
    },
    "5122e39e678004e0dc11e6926a7adba974b410d4" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "6fa1a3d693ef043c6246807d3667fe360f5b3e9b",
      "changedClazzes" : { }
    },
    "e6658d5fae4de0b61ac459eac32433c6f787f542" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "5122e39e678004e0dc11e6926a7adba974b410d4",
      "changedClazzes" : {
        "org.apache.commons.io.IOUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy" ],
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce", "testDeleteNormal", "testDeleteQuietlyNormal" ],
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceUnix_String_EmptyResponse", "testGetFreeSpaceUnix_String_InvalidResponse1", "testGetFreeSpaceUnix_String_InvalidResponse2", "testGetFreeSpaceUnix_String_InvalidResponse3", "testGetFreeSpaceUnix_String_InvalidResponse4", "testGetFreeSpaceUnix_String_LongResponse", "testGetFreeSpaceUnix_String_LongResponseKb", "testGetFreeSpaceUnix_String_NormalResponseFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbLinux", "testGetFreeSpaceUnix_String_NormalResponseKbSolaris", "testGetFreeSpaceUnix_String_NormalResponseLinux", "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpace_String" ],
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile" ],
            "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToString", "testReadLines", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPrefix", "testGetPrefixLength", "testIndexOfExtension", "testIndexOfLastSeparator", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testNormalize", "testNormalizeNoEndSeparator", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToOutputStream_nullIn", "testCopy_inputStreamToOutputStream_nullOut", "testCopy_inputStreamToWriter", "testCopy_inputStreamToWriter_Encoding", "testCopy_inputStreamToWriter_Encoding_nullEncoding", "testCopy_inputStreamToWriter_Encoding_nullIn", "testCopy_inputStreamToWriter_Encoding_nullOut", "testCopy_inputStreamToWriter_nullIn", "testCopy_inputStreamToWriter_nullOut", "testCopy_readerToOutputStream", "testCopy_readerToOutputStream_Encoding", "testCopy_readerToOutputStream_Encoding_nullEncoding", "testCopy_readerToOutputStream_Encoding_nullIn", "testCopy_readerToOutputStream_Encoding_nullOut", "testCopy_readerToOutputStream_nullIn", "testCopy_readerToOutputStream_nullOut", "testCopy_readerToWriter", "testCopy_readerToWriter_nullIn", "testCopy_readerToWriter_nullOut" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testByteArrayToOutputStream", "testByteArrayToString", "testByteArrayToWriter", "testConstants", "testInputStreamToByteArray", "testInputStreamToCharArray", "testInputStreamToCharArrayWithEncoding", "testInputStreamToString", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testReaderToCharArray", "testReaderToString", "testStringToByteArray", "testStringToInputStream", "testStringToOutputStream", "testStringToWriter" ],
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWriteLines_OutputStream", "testWriteLines_OutputStream_Encoding", "testWriteLines_OutputStream_Encoding_nullData", "testWriteLines_OutputStream_Encoding_nullEncoding", "testWriteLines_OutputStream_Encoding_nullSeparator", "testWriteLines_OutputStream_Encoding_nullStream", "testWriteLines_OutputStream_nullData", "testWriteLines_OutputStream_nullSeparator", "testWriteLines_OutputStream_nullStream", "testWriteLines_Writer", "testWriteLines_Writer_nullData", "testWriteLines_Writer_nullSeparator", "testWriteLines_Writer_nullStream", "testWrite_byteArrayToOutputStream", "testWrite_byteArrayToOutputStream_nullData", "testWrite_byteArrayToOutputStream_nullStream", "testWrite_byteArrayToWriter", "testWrite_byteArrayToWriter_Encoding", "testWrite_byteArrayToWriter_Encoding_nullData", "testWrite_byteArrayToWriter_Encoding_nullEncoding", "testWrite_byteArrayToWriter_Encoding_nullWriter", "testWrite_byteArrayToWriter_nullData", "testWrite_byteArrayToWriter_nullWriter", "testWrite_charArrayToOutputStream", "testWrite_charArrayToOutputStream_Encoding", "testWrite_charArrayToOutputStream_Encoding_nullData", "testWrite_charArrayToOutputStream_Encoding_nullStream", "testWrite_charArrayToOutputStream_nullData", "testWrite_charArrayToOutputStream_nullEncoding", "testWrite_charArrayToOutputStream_nullStream", "testWrite_charArrayToWriter", "testWrite_charArrayToWriter_Encoding_nullData", "testWrite_charArrayToWriter_Encoding_nullStream", "testWrite_charSequenceToOutputStream", "testWrite_charSequenceToOutputStream_Encoding", "testWrite_charSequenceToOutputStream_Encoding_nullData", "testWrite_charSequenceToOutputStream_Encoding_nullStream", "testWrite_charSequenceToOutputStream_nullData", "testWrite_charSequenceToOutputStream_nullEncoding", "testWrite_charSequenceToOutputStream_nullStream", "testWrite_charSequenceToWriter", "testWrite_charSequenceToWriter_Encoding_nullData", "testWrite_charSequenceToWriter_Encoding_nullStream", "testWrite_stringToOutputStream", "testWrite_stringToOutputStream_Encoding", "testWrite_stringToOutputStream_Encoding_nullData", "testWrite_stringToOutputStream_Encoding_nullStream", "testWrite_stringToOutputStream_nullData", "testWrite_stringToOutputStream_nullEncoding", "testWrite_stringToOutputStream_nullStream", "testWrite_stringToWriter", "testWrite_stringToWriter_Encoding_nullData", "testWrite_stringToWriter_Encoding_nullStream" ],
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testFiltering", "testInvalidEncoding", "testMissingFile", "testNextLineOnly", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testCanRead", "testCanWrite", "testEmpty", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testSizeFilter" ],
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testWriteToLarge" ],
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testConstructor_fileName_nullFile", "testDifferentEncoding", "testSameEncoding" ],
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testConstructor_fileName_nullFile", "testFileLocked", "testFileNotLocked" ]
          }
        }
      }
    },
    "ce0e40253805516e781e4acac9001428fc01ecfd" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "e6658d5fae4de0b61ac459eac32433c6f787f542",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerNull" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerNull" ],
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce" ],
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testCleanEmpty", "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile", "testThrowsOnNullList" ],
            "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToString", "testReadLines", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ],
            "org.apache.commons.io.FileUtilsWaitForTestCase" : [ "testWaitFor" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPrefix", "testGetPrefixLength", "testIndexOfExtension", "testIndexOfLastSeparator", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testNormalize", "testNormalizeNoEndSeparator", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testByteArrayToOutputStream", "testByteArrayToString", "testByteArrayToWriter", "testConstants", "testInputStreamToByteArray", "testInputStreamToCharArray", "testInputStreamToCharArrayWithEncoding", "testInputStreamToString", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testReaderToCharArray", "testReaderToString", "testStringToByteArray", "testStringToInputStream", "testStringToOutputStream", "testStringToWriter" ],
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFiltering", "testInvalidEncoding", "testMissingFile", "testNextLineOnly", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testAnd", "testCanRead", "testCanWrite", "testDelegateFileFilter", "testDeprecatedWildcard", "testDirectory", "testEmpty", "testFalse", "testFiles", "testHidden", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNameFilterNullArrayArgument", "testNameFilterNullListArgument", "testNot", "testOr", "testPrefix", "testPrefixCaseInsensitive", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testTrue", "testWildcard" ],
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ],
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "testConstructor_File_encoding_badEncoding" ],
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testFileLocked", "testFileNotLocked" ]
          }
        },
        "org.apache.commons.io.FilenameUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceUnix_String_EmptyResponse", "testGetFreeSpaceUnix_String_InvalidResponse1", "testGetFreeSpaceUnix_String_InvalidResponse2", "testGetFreeSpaceUnix_String_InvalidResponse3", "testGetFreeSpaceUnix_String_InvalidResponse4", "testGetFreeSpaceUnix_String_LongResponse", "testGetFreeSpaceUnix_String_LongResponseKb", "testGetFreeSpaceUnix_String_NormalResponseFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbLinux", "testGetFreeSpaceUnix_String_NormalResponseKbSolaris", "testGetFreeSpaceUnix_String_NormalResponseLinux", "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpace_String" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered", "testIterateFiles", "testListFiles" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPrefix", "testGetPrefixLength", "testIndexOfExtension", "testIndexOfLastSeparator", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testNormalize", "testNormalizeNoEndSeparator", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.FilenameUtilsWildcardTestCase" : [ "testMatch", "testMatch2", "testMatchCaseSpecified", "testMatchOnSystem", "testSplitOnTokens" ],
            "org.apache.commons.io.IOCaseTestCase" : [ "test_checkCompare_case", "test_checkCompare_functionality", "test_checkEndsWith_case", "test_checkEndsWith_functionality", "test_checkEquals_case", "test_checkEquals_functionality", "test_checkRegionMatches_case", "test_checkRegionMatches_functionality", "test_checkStartsWith_case", "test_checkStartsWith_functionality", "test_forName", "test_getName", "test_isCaseSensitive", "test_serialization", "test_toString" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testDeprecatedWildcard", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testPrefix", "testPrefixCaseInsensitive", "testSuffix", "testSuffixCaseInsensitive", "testWildcard" ],
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ]
          }
        },
        "org.apache.commons.io.IOUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy" ],
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce", "testDeleteNormal", "testDeleteQuietlyNormal" ],
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceUnix_String_EmptyResponse", "testGetFreeSpaceUnix_String_InvalidResponse1", "testGetFreeSpaceUnix_String_InvalidResponse2", "testGetFreeSpaceUnix_String_InvalidResponse3", "testGetFreeSpaceUnix_String_InvalidResponse4", "testGetFreeSpaceUnix_String_LongResponse", "testGetFreeSpaceUnix_String_LongResponseKb", "testGetFreeSpaceUnix_String_NormalResponseFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbLinux", "testGetFreeSpaceUnix_String_NormalResponseKbSolaris", "testGetFreeSpaceUnix_String_NormalResponseLinux", "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpace_String" ],
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile" ],
            "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToString", "testReadLines", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPrefix", "testGetPrefixLength", "testIndexOfExtension", "testIndexOfLastSeparator", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testNormalize", "testNormalizeNoEndSeparator", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToOutputStream_nullIn", "testCopy_inputStreamToOutputStream_nullOut", "testCopy_inputStreamToWriter", "testCopy_inputStreamToWriter_Encoding", "testCopy_inputStreamToWriter_Encoding_nullEncoding", "testCopy_inputStreamToWriter_Encoding_nullIn", "testCopy_inputStreamToWriter_Encoding_nullOut", "testCopy_inputStreamToWriter_nullIn", "testCopy_inputStreamToWriter_nullOut", "testCopy_readerToOutputStream", "testCopy_readerToOutputStream_Encoding", "testCopy_readerToOutputStream_Encoding_nullEncoding", "testCopy_readerToOutputStream_Encoding_nullIn", "testCopy_readerToOutputStream_Encoding_nullOut", "testCopy_readerToOutputStream_nullIn", "testCopy_readerToOutputStream_nullOut", "testCopy_readerToWriter", "testCopy_readerToWriter_nullIn", "testCopy_readerToWriter_nullOut" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testByteArrayToOutputStream", "testByteArrayToString", "testByteArrayToWriter", "testConstants", "testInputStreamToByteArray", "testInputStreamToCharArray", "testInputStreamToCharArrayWithEncoding", "testInputStreamToString", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testReaderToCharArray", "testReaderToString", "testStringToByteArray", "testStringToInputStream", "testStringToOutputStream", "testStringToWriter" ],
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWriteLines_OutputStream", "testWriteLines_OutputStream_Encoding", "testWriteLines_OutputStream_Encoding_nullData", "testWriteLines_OutputStream_Encoding_nullEncoding", "testWriteLines_OutputStream_Encoding_nullSeparator", "testWriteLines_OutputStream_Encoding_nullStream", "testWriteLines_OutputStream_nullData", "testWriteLines_OutputStream_nullSeparator", "testWriteLines_OutputStream_nullStream", "testWriteLines_Writer", "testWriteLines_Writer_nullData", "testWriteLines_Writer_nullSeparator", "testWriteLines_Writer_nullStream", "testWrite_byteArrayToOutputStream", "testWrite_byteArrayToOutputStream_nullData", "testWrite_byteArrayToOutputStream_nullStream", "testWrite_byteArrayToWriter", "testWrite_byteArrayToWriter_Encoding", "testWrite_byteArrayToWriter_Encoding_nullData", "testWrite_byteArrayToWriter_Encoding_nullEncoding", "testWrite_byteArrayToWriter_Encoding_nullWriter", "testWrite_byteArrayToWriter_nullData", "testWrite_byteArrayToWriter_nullWriter", "testWrite_charArrayToOutputStream", "testWrite_charArrayToOutputStream_Encoding", "testWrite_charArrayToOutputStream_Encoding_nullData", "testWrite_charArrayToOutputStream_Encoding_nullStream", "testWrite_charArrayToOutputStream_nullData", "testWrite_charArrayToOutputStream_nullEncoding", "testWrite_charArrayToOutputStream_nullStream", "testWrite_charArrayToWriter", "testWrite_charArrayToWriter_Encoding_nullData", "testWrite_charArrayToWriter_Encoding_nullStream", "testWrite_charSequenceToOutputStream", "testWrite_charSequenceToOutputStream_Encoding", "testWrite_charSequenceToOutputStream_Encoding_nullData", "testWrite_charSequenceToOutputStream_Encoding_nullStream", "testWrite_charSequenceToOutputStream_nullData", "testWrite_charSequenceToOutputStream_nullEncoding", "testWrite_charSequenceToOutputStream_nullStream", "testWrite_charSequenceToWriter", "testWrite_charSequenceToWriter_Encoding_nullData", "testWrite_charSequenceToWriter_Encoding_nullStream", "testWrite_stringToOutputStream", "testWrite_stringToOutputStream_Encoding", "testWrite_stringToOutputStream_Encoding_nullData", "testWrite_stringToOutputStream_Encoding_nullStream", "testWrite_stringToOutputStream_nullData", "testWrite_stringToOutputStream_nullEncoding", "testWrite_stringToOutputStream_nullStream", "testWrite_stringToWriter", "testWrite_stringToWriter_Encoding_nullData", "testWrite_stringToWriter_Encoding_nullStream" ],
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testFiltering", "testInvalidEncoding", "testMissingFile", "testNextLineOnly", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testCanRead", "testCanWrite", "testEmpty", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testSizeFilter" ],
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testWriteToLarge" ],
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testConstructor_fileName_nullFile", "testDifferentEncoding", "testSameEncoding" ],
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testConstructor_fileName_nullFile", "testFileLocked", "testFileNotLocked" ]
          }
        }
      }
    },
    "efe745c047c6f63eb85ee0b2b4d93c3544c31e97" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "ce0e40253805516e781e4acac9001428fc01ecfd",
      "changedClazzes" : {
        "org.apache.commons.io.FileSystemUtils#freeSpaceWindows(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive" ]
          }
        }
      }
    },
    "08a504135565a4ee0f0360d0c41c814d6b7f0ffd" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "efe745c047c6f63eb85ee0b2b4d93c3544c31e97",
      "changedClazzes" : {
        "org.apache.commons.io.input.ClassLoaderObjectInputStream#resolveClass(java.io.ObjectStreamClass)" : {
          "testcases" : {
            "org.apache.commons.io.input.ClassLoaderObjectInputStreamTest" : [ "testExpected" ]
          }
        }
      }
    },
    "9c0e7a88b2ee317150df95fa245a16b971fddee5" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "08a504135565a4ee0f0360d0c41c814d6b7f0ffd",
      "changedClazzes" : { }
    },
    "ab436e12e05ce26c4059eac6973eb86e9e6233d1" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "9c0e7a88b2ee317150df95fa245a16b971fddee5",
      "changedClazzes" : { }
    },
    "500778fcad1ee90d1da0637b82a968945ff6be13" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "ab436e12e05ce26c4059eac6973eb86e9e6233d1",
      "changedClazzes" : { }
    },
    "81eef5ded4684a1f4edea06e038894520fe72bc2" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "500778fcad1ee90d1da0637b82a968945ff6be13",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils#cleanDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.FileUtils#deleteDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.FileUtils#deleteQuietly(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testFileDelete", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.FileUtils#forceDelete(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.FileUtils#openOutputStream(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.FileUtils#touch(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#isSystemWindows" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.IOCase#<init>(java.lang.String,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.IOCase#checkCompareTo(java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.IOCase#checkEndsWith(java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate" ]
          }
        },
        "org.apache.commons.io.IOCase#checkEquals(java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.IOUtils#closeQuietly(java.io.OutputStream)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.comparator.NameFileComparator#<init>" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.comparator.NameFileComparator#compare(java.io.File,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.comparator.ReverseComparator#<init>(java.util.Comparator)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.AbstractFileFilter#<init>" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.AndFileFilter#<init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.AndFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate" ]
          }
        },
        "org.apache.commons.io.filefilter.AndFileFilter#addFileFilter(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.DirectoryFileFilter#<init>" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.DirectoryFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFileFilter#<init>" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#andFileFilter(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#directoryFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#fileFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#nameFileFilter(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#orFileFilter(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#suffixFileFilter(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.HiddenFileFilter#<init>" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.HiddenFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate" ]
          }
        },
        "org.apache.commons.io.filefilter.NameFileFilter#<init>(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.NameFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.NotFileFilter#<init>(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.NotFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate" ]
          }
        },
        "org.apache.commons.io.filefilter.OrFileFilter#<init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.OrFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate" ]
          }
        },
        "org.apache.commons.io.filefilter.OrFileFilter#addFileFilter(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.SuffixFileFilter#<init>(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.SuffixFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFilesystemListener" : { },
        "org.apache.commons.io.monitor.CollectionFilesystemListener#getChangedDirectories" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFilesystemListener#getChangedFiles" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFilesystemListener#getCreatedDirectories" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFilesystemListener#getCreatedFiles" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFilesystemListener#getDeletedDirectories" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFilesystemListener#getDeletedFiles" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFilesystemListener#onDirectoryChange(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testFileCreate", "testFileDelete", "testFileUpdate" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFilesystemListener#onDirectoryCreate(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFilesystemListener#onDirectoryDelete(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFilesystemListener#onFileChange(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFilesystemListener#onFileCreate(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFilesystemListener#onFileDelete(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileDelete", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFilesystemListener#onStart(org.apache.commons.io.monitor.FilesystemObserver)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFilesystemListener#onStop(org.apache.commons.io.monitor.FilesystemObserver)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemEntry" : { },
        "org.apache.commons.io.monitor.FilesystemEntry#<init>(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemEntry#getChildren" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemEntry#getFile" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemEntry#hasChanged" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemEntry#isDirectory" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemEntry#isExists" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemEntry#newChildInstance(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemEntry#refresh" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemEntry#setChildren(org.apache.commons.io.monitor.FilesystemEntry[])" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemEntry#setFile(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemListener" : { },
        "org.apache.commons.io.monitor.FilesystemListenerAdaptor" : { },
        "org.apache.commons.io.monitor.FilesystemMonitor" : { },
        "org.apache.commons.io.monitor.FilesystemObserver" : { },
        "org.apache.commons.io.monitor.FilesystemObserver#<init>(java.io.File,java.io.FileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemObserver#addListener(org.apache.commons.io.monitor.FilesystemListener)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemObserver#checkAndNotify" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemObserver#createFileEntry(org.apache.commons.io.monitor.FilesystemEntry,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemObserver#doCreate(org.apache.commons.io.monitor.FilesystemEntry)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemObserver#doDelete(org.apache.commons.io.monitor.FilesystemEntry)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileDelete", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemObserver#doMatch(org.apache.commons.io.monitor.FilesystemEntry,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemObserver#initialize" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemObserver#listFiles(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemObserverTestCase" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemObserverTestCase#checkAndNotify" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemObserverTestCase#checkCollectionSizes(java.lang.String,int,int,int,int,int,int)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemObserverTestCase#checkCollectionsEmpty(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemObserverTestCase#createObserver(java.io.File,java.io.FileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemObserverTestCase#setUp" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemObserverTestCase#tearDown" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemObserverTestCase#testDirectory" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemObserverTestCase#testFileCreate" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testFileCreate" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemObserverTestCase#testFileDelete" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testFileDelete" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemObserverTestCase#testFileUpdate" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testFileUpdate" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemObserverTestCase#testObserveSingleFile" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemObserverTestCase#touch(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#<init>(int)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#toString" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#write(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        }
      }
    },
    "bcc797b528654e42e5ee2f7d385a78f5ef0613ff" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "81eef5ded4684a1f4edea06e038894520fe72bc2",
      "changedClazzes" : { }
    },
    "6512f64a02c7d7c6b7c247a0f538e135132c9aae" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "bcc797b528654e42e5ee2f7d385a78f5ef0613ff",
      "changedClazzes" : {
        "org.apache.commons.io.FileSystemUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceOS_String_InitError", "testGetFreeSpaceOS_String_NullPath", "testGetFreeSpaceOS_String_Other", "testGetFreeSpaceOS_String_Unix", "testGetFreeSpaceOS_String_Windows", "testGetFreeSpaceUnix_String_EmptyPath", "testGetFreeSpaceUnix_String_EmptyResponse", "testGetFreeSpaceUnix_String_InvalidResponse1", "testGetFreeSpaceUnix_String_InvalidResponse2", "testGetFreeSpaceUnix_String_InvalidResponse3", "testGetFreeSpaceUnix_String_InvalidResponse4", "testGetFreeSpaceUnix_String_LongResponse", "testGetFreeSpaceUnix_String_LongResponseKb", "testGetFreeSpaceUnix_String_NormalResponseFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbLinux", "testGetFreeSpaceUnix_String_NormalResponseKbSolaris", "testGetFreeSpaceUnix_String_NormalResponseLinux", "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpace_String" ]
          }
        },
        "org.apache.commons.io.FileSystemUtilsTestCase#testGetFreeSpace_String" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpace_String" ]
          }
        }
      }
    },
    "c3b706ab8852c57446064031067dcbb92380502d" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "6512f64a02c7d7c6b7c247a0f538e135132c9aae",
      "changedClazzes" : {
        "org.apache.commons.io.FileSystemUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceOS_String_InitError", "testGetFreeSpaceOS_String_NullPath", "testGetFreeSpaceOS_String_Other", "testGetFreeSpaceOS_String_Unix", "testGetFreeSpaceOS_String_Windows", "testGetFreeSpaceUnix_String_EmptyPath", "testGetFreeSpaceUnix_String_EmptyResponse", "testGetFreeSpaceUnix_String_InvalidResponse1", "testGetFreeSpaceUnix_String_InvalidResponse2", "testGetFreeSpaceUnix_String_InvalidResponse3", "testGetFreeSpaceUnix_String_InvalidResponse4", "testGetFreeSpaceUnix_String_LongResponse", "testGetFreeSpaceUnix_String_LongResponseKb", "testGetFreeSpaceUnix_String_NormalResponseFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbLinux", "testGetFreeSpaceUnix_String_NormalResponseKbSolaris", "testGetFreeSpaceUnix_String_NormalResponseLinux", "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpace_String" ]
          }
        }
      }
    },
    "e87486f1a35090a754fdf95f3cd1178bcfd7e2ba" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "c3b706ab8852c57446064031067dcbb92380502d",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils#toURLs(org.apache.commons.io.File[])" : { },
        "org.apache.commons.io.FileUtilsTestCase#testToURLs1" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testToURLs1" ]
          }
        }
      }
    },
    "30c073ac7d6335c22823cb584de636f8bb23e972" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "e87486f1a35090a754fdf95f3cd1178bcfd7e2ba",
      "changedClazzes" : { }
    },
    "9a4e82eaf99a38a898591f2faa9cd7c21b41e022" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "30c073ac7d6335c22823cb584de636f8bb23e972",
      "changedClazzes" : {
        "org.apache.commons.io.monitor.FilesystemObserverTestCase#checkCollectionSizes(java.lang.String,int,int,int,int,int,int)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        }
      }
    },
    "58426094da67e4526bc49f84e3cb864d184ad180" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "9a4e82eaf99a38a898591f2faa9cd7c21b41e022",
      "changedClazzes" : {
        "org.apache.commons.io.monitor.FilesystemObserverTestCase#touch(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        }
      }
    },
    "860ee374e9b290e52cc48b772145d18816886134" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "58426094da67e4526bc49f84e3cb864d184ad180",
      "changedClazzes" : {
        "org.apache.commons.io.comparator.LastModifiedFileComparatorTest#setUp" : { }
      }
    },
    "cd3aafe7c8ef737c43aa11e4bfc5934653d0d4a2" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "860ee374e9b290e52cc48b772145d18816886134",
      "changedClazzes" : { }
    },
    "43112f375d319ac5f7e8207ac501099d89a366f1" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "cd3aafe7c8ef737c43aa11e4bfc5934653d0d4a2",
      "changedClazzes" : { }
    },
    "409139cbeed713f64b6e61ea53726aca4a53c2ad" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "43112f375d319ac5f7e8207ac501099d89a366f1",
      "changedClazzes" : { }
    },
    "c2ec1d05ec7707a55aa0e32f01450148848ade59" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "409139cbeed713f64b6e61ea53726aca4a53c2ad",
      "changedClazzes" : { }
    },
    "70fc2a9a8098d7b0f271364e6df75200ed6aa159" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "c2ec1d05ec7707a55aa0e32f01450148848ade59",
      "changedClazzes" : { }
    },
    "91509112bb42d52eb4cef40f2dee16a3633b446f" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "70fc2a9a8098d7b0f271364e6df75200ed6aa159",
      "changedClazzes" : {
        "org.apache.commons.io.CopyUtils" : {
          "testcases" : {
            "org.apache.commons.io.CopyUtilsTest" : [ "testCopy_byteArrayToOutputStream", "testCopy_byteArrayToWriter", "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToWriter", "testCopy_readerToOutputStream", "testCopy_readerToWriter", "testCopy_stringToOutputStream", "testCopy_stringToWriter" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testByteArrayToOutputStream", "testByteArrayToWriter", "testStringToOutputStream", "testStringToWriter" ]
          }
        },
        "org.apache.commons.io.FileCleaner" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerFile", "testFileCleanerNull" ]
          }
        },
        "org.apache.commons.io.FileDeleteStrategy" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerFile", "testFileCleanerNull" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerFile", "testFileCleanerNull" ],
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce", "testDeleteNormal", "testDeleteNull", "testDeleteQuietlyNormal", "testToString" ]
          }
        },
        "org.apache.commons.io.FileDeleteStrategy$ForceFileDeleteStrategy" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerFile", "testFileCleanerNull" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerFile", "testFileCleanerNull" ],
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce", "testDeleteNormal", "testDeleteNull", "testDeleteQuietlyNormal", "testToString" ]
          }
        },
        "org.apache.commons.io.FileSystemUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceOS_String_InitError", "testGetFreeSpaceOS_String_NullPath", "testGetFreeSpaceOS_String_Other", "testGetFreeSpaceOS_String_Unix", "testGetFreeSpaceOS_String_Windows", "testGetFreeSpaceUnix_String_EmptyPath", "testGetFreeSpaceUnix_String_EmptyResponse", "testGetFreeSpaceUnix_String_InvalidResponse1", "testGetFreeSpaceUnix_String_InvalidResponse2", "testGetFreeSpaceUnix_String_InvalidResponse3", "testGetFreeSpaceUnix_String_InvalidResponse4", "testGetFreeSpaceUnix_String_LongResponse", "testGetFreeSpaceUnix_String_LongResponseKb", "testGetFreeSpaceUnix_String_NormalResponseFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbLinux", "testGetFreeSpaceUnix_String_NormalResponseKbSolaris", "testGetFreeSpaceUnix_String_NormalResponseLinux", "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpace_String" ]
          }
        },
        "org.apache.commons.io.IOCase" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilter", "testFilterAndLimitB", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered", "testIterateFiles", "testListFiles" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testEquals", "testEqualsNormalized", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl" ],
            "org.apache.commons.io.FilenameUtilsWildcardTestCase" : [ "testMatch", "testMatch2", "testMatchCaseSpecified", "testMatchOnSystem" ],
            "org.apache.commons.io.IOCaseTestCase" : [ "test_checkCompare_case", "test_checkCompare_functionality", "test_checkEndsWith_case", "test_checkEndsWith_functionality", "test_checkEquals_case", "test_checkEquals_functionality", "test_checkRegionMatches_case", "test_checkRegionMatches_functionality", "test_checkStartsWith_case", "test_checkStartsWith_functionality", "test_forName", "test_getName", "test_isCaseSensitive", "test_serialization", "test_toString" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testDeprecatedWildcard", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testPrefix", "testPrefixCaseInsensitive", "testSuffix", "testSuffixCaseInsensitive", "testWildcard" ],
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ],
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.IOUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy" ],
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce", "testDeleteNormal", "testDeleteQuietlyNormal" ],
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceUnix_String_EmptyResponse", "testGetFreeSpaceUnix_String_InvalidResponse1", "testGetFreeSpaceUnix_String_InvalidResponse2", "testGetFreeSpaceUnix_String_InvalidResponse3", "testGetFreeSpaceUnix_String_InvalidResponse4", "testGetFreeSpaceUnix_String_LongResponse", "testGetFreeSpaceUnix_String_LongResponseKb", "testGetFreeSpaceUnix_String_NormalResponseFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbLinux", "testGetFreeSpaceUnix_String_NormalResponseKbSolaris", "testGetFreeSpaceUnix_String_NormalResponseLinux", "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpace_String" ],
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile" ],
            "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToString", "testReadLines", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPrefix", "testGetPrefixLength", "testIndexOfExtension", "testIndexOfLastSeparator", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testNormalize", "testNormalizeNoEndSeparator", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToOutputStream_nullIn", "testCopy_inputStreamToOutputStream_nullOut", "testCopy_inputStreamToWriter", "testCopy_inputStreamToWriter_Encoding", "testCopy_inputStreamToWriter_Encoding_nullEncoding", "testCopy_inputStreamToWriter_Encoding_nullIn", "testCopy_inputStreamToWriter_Encoding_nullOut", "testCopy_inputStreamToWriter_nullIn", "testCopy_inputStreamToWriter_nullOut", "testCopy_readerToOutputStream", "testCopy_readerToOutputStream_Encoding", "testCopy_readerToOutputStream_Encoding_nullEncoding", "testCopy_readerToOutputStream_Encoding_nullIn", "testCopy_readerToOutputStream_Encoding_nullOut", "testCopy_readerToOutputStream_nullIn", "testCopy_readerToOutputStream_nullOut", "testCopy_readerToWriter", "testCopy_readerToWriter_nullIn", "testCopy_readerToWriter_nullOut" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testByteArrayToOutputStream", "testByteArrayToString", "testByteArrayToWriter", "testConstants", "testInputStreamToByteArray", "testInputStreamToCharArray", "testInputStreamToCharArrayWithEncoding", "testInputStreamToString", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testReaderToCharArray", "testReaderToString", "testStringToByteArray", "testStringToInputStream", "testStringToOutputStream", "testStringToWriter" ],
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWriteLines_OutputStream", "testWriteLines_OutputStream_Encoding", "testWriteLines_OutputStream_Encoding_nullData", "testWriteLines_OutputStream_Encoding_nullEncoding", "testWriteLines_OutputStream_Encoding_nullSeparator", "testWriteLines_OutputStream_Encoding_nullStream", "testWriteLines_OutputStream_nullData", "testWriteLines_OutputStream_nullSeparator", "testWriteLines_OutputStream_nullStream", "testWriteLines_Writer", "testWriteLines_Writer_nullData", "testWriteLines_Writer_nullSeparator", "testWriteLines_Writer_nullStream", "testWrite_byteArrayToOutputStream", "testWrite_byteArrayToOutputStream_nullData", "testWrite_byteArrayToOutputStream_nullStream", "testWrite_byteArrayToWriter", "testWrite_byteArrayToWriter_Encoding", "testWrite_byteArrayToWriter_Encoding_nullData", "testWrite_byteArrayToWriter_Encoding_nullEncoding", "testWrite_byteArrayToWriter_Encoding_nullWriter", "testWrite_byteArrayToWriter_nullData", "testWrite_byteArrayToWriter_nullWriter", "testWrite_charArrayToOutputStream", "testWrite_charArrayToOutputStream_Encoding", "testWrite_charArrayToOutputStream_Encoding_nullData", "testWrite_charArrayToOutputStream_Encoding_nullStream", "testWrite_charArrayToOutputStream_nullData", "testWrite_charArrayToOutputStream_nullEncoding", "testWrite_charArrayToOutputStream_nullStream", "testWrite_charArrayToWriter", "testWrite_charArrayToWriter_Encoding_nullData", "testWrite_charArrayToWriter_Encoding_nullStream", "testWrite_charSequenceToOutputStream", "testWrite_charSequenceToOutputStream_Encoding", "testWrite_charSequenceToOutputStream_Encoding_nullData", "testWrite_charSequenceToOutputStream_Encoding_nullStream", "testWrite_charSequenceToOutputStream_nullData", "testWrite_charSequenceToOutputStream_nullEncoding", "testWrite_charSequenceToOutputStream_nullStream", "testWrite_charSequenceToWriter", "testWrite_charSequenceToWriter_Encoding_nullData", "testWrite_charSequenceToWriter_Encoding_nullStream", "testWrite_stringToOutputStream", "testWrite_stringToOutputStream_Encoding", "testWrite_stringToOutputStream_Encoding_nullData", "testWrite_stringToOutputStream_Encoding_nullStream", "testWrite_stringToOutputStream_nullData", "testWrite_stringToOutputStream_nullEncoding", "testWrite_stringToOutputStream_nullStream", "testWrite_stringToWriter", "testWrite_stringToWriter_Encoding_nullData", "testWrite_stringToWriter_Encoding_nullStream" ],
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testFiltering", "testInvalidEncoding", "testMissingFile", "testNextLineOnly", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testCanRead", "testCanWrite", "testEmpty", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testSizeFilter" ],
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ],
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testWriteToLarge" ],
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testConstructor_fileName_nullFile", "testDifferentEncoding", "testSameEncoding" ],
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testConstructor_fileName_nullFile", "testFileLocked", "testFileNotLocked" ]
          }
        },
        "org.apache.commons.io.filefilter.AbstractFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered", "testIterateFiles", "testListFiles" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testAnd", "testCanRead", "testCanWrite", "testDelegateFileFilter", "testDeprecatedWildcard", "testDirectory", "testEmpty", "testFiles", "testHidden", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNameFilterNullArrayArgument", "testNameFilterNullListArgument", "testNot", "testOr", "testPrefix", "testPrefixCaseInsensitive", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testWildcard" ],
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ],
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.AgeFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter" ]
          }
        },
        "org.apache.commons.io.filefilter.AndFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilterAndLimitB", "testFilterAndLimitC", "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testListFiles" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAnd", "testCanRead", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testSizeFilter" ],
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.CanReadFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testCanRead" ]
          }
        },
        "org.apache.commons.io.filefilter.CanWriteFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testCanRead", "testCanWrite" ]
          }
        },
        "org.apache.commons.io.filefilter.DelegateFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testDelegateFileFilter" ]
          }
        },
        "org.apache.commons.io.filefilter.DirectoryFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilterAndLimitB", "testFilterAndLimitC", "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testListFiles" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testDirectory", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeSVNAware" ],
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.EmptyFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testEmpty" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFiles", "testMakeFileOnly" ],
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.HiddenFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testHidden" ],
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.NameFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilter", "testFilterAndLimitB", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNameFilterNullArrayArgument", "testNameFilterNullListArgument" ],
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.NotFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilterAndLimitB", "testFilterAndLimitC" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testListFiles" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testCanRead", "testCanWrite", "testEmpty", "testHidden", "testMakeCVSAware", "testMakeSVNAware", "testNot" ],
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.OrFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilter", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testListFiles" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testDelegateFileFilter", "testOr", "testSuffix" ],
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.PrefixFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testPrefix", "testPrefixCaseInsensitive" ]
          }
        },
        "org.apache.commons.io.filefilter.RegexFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ]
          }
        },
        "org.apache.commons.io.filefilter.SizeFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testSizeFilter" ]
          }
        },
        "org.apache.commons.io.filefilter.SuffixFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFilesByExtension" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testSuffix", "testSuffixCaseInsensitive" ],
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.WildcardFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testListFiles" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testWildcard" ]
          }
        },
        "org.apache.commons.io.filefilter.WildcardFilter" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testDeprecatedWildcard" ]
          }
        },
        "org.apache.commons.io.input.AutoCloseInputStream" : {
          "testcases" : {
            "org.apache.commons.io.input.AutoCloseInputStreamTest" : [ "testClose", "testRead", "testReadBuffer", "testReadBufferOffsetLength" ]
          }
        },
        "org.apache.commons.io.input.CharSequenceReader" : {
          "testcases" : {
            "org.apache.commons.io.input.CharSequenceReaderTest" : [ "testClose", "testMark", "testMarkSupported", "testRead", "testReadCharArray", "testReadCharArrayPortion", "testSkip" ]
          }
        },
        "org.apache.commons.io.input.ClassLoaderObjectInputStream" : {
          "testcases" : {
            "org.apache.commons.io.input.ClassLoaderObjectInputStreamTest" : [ "testExpected" ]
          }
        },
        "org.apache.commons.io.input.CloseShieldInputStream" : {
          "testcases" : {
            "org.apache.commons.io.input.CloseShieldInputStreamTest" : [ "testClose" ]
          }
        },
        "org.apache.commons.io.input.ClosedInputStream" : {
          "testcases" : {
            "org.apache.commons.io.input.AutoCloseInputStreamTest" : [ "testClose", "testRead", "testReadBuffer", "testReadBufferOffsetLength" ],
            "org.apache.commons.io.input.CloseShieldInputStreamTest" : [ "testClose" ],
            "org.apache.commons.io.input.ClosedInputStreamTest" : [ "testRead" ]
          }
        },
        "org.apache.commons.io.input.CountingInputStream" : {
          "testcases" : {
            "org.apache.commons.io.input.CountingInputStreamTest" : [ "testCounting", "testEOF1", "testEOF2", "testEOF3", "testResetting", "testSkipping", "testZeroLength1", "testZeroLength2", "testZeroLength3" ]
          }
        },
        "org.apache.commons.io.input.DemuxInputStream" : {
          "testcases" : {
            "org.apache.commons.io.DemuxTestCase" : [ "testInputStream" ]
          }
        },
        "org.apache.commons.io.input.NullInputStream" : {
          "testcases" : {
            "org.apache.commons.io.input.NullInputStreamTest" : [ "testEOFException", "testMarkAndReset", "testMarkNotSupported", "testRead", "testReadByteArray", "testSkip" ]
          }
        },
        "org.apache.commons.io.input.NullReader" : {
          "testcases" : {
            "org.apache.commons.io.input.NullReaderTest" : [ "testEOFException", "testMarkAndReset", "testMarkNotSupported", "testRead", "testReadCharArray", "testSkip" ]
          }
        },
        "org.apache.commons.io.input.ProxyInputStream" : {
          "testcases" : {
            "org.apache.commons.io.CopyUtilsTest" : [ "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToWriter", "testCopy_readerToOutputStream", "testCopy_readerToWriter" ],
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToWriter", "testCopy_inputStreamToWriter_Encoding", "testCopy_inputStreamToWriter_Encoding_nullEncoding", "testCopy_readerToOutputStream", "testCopy_readerToOutputStream_Encoding", "testCopy_readerToOutputStream_Encoding_nullEncoding", "testCopy_readerToOutputStream_Encoding_nullOut", "testCopy_readerToOutputStream_nullOut", "testCopy_readerToWriter", "testCopy_readerToWriter_nullOut" ],
            "org.apache.commons.io.input.AutoCloseInputStreamTest" : [ "testClose", "testRead", "testReadBuffer", "testReadBufferOffsetLength" ],
            "org.apache.commons.io.input.CloseShieldInputStreamTest" : [ "testClose" ],
            "org.apache.commons.io.input.CountingInputStreamTest" : [ "testCounting", "testEOF1", "testEOF2", "testEOF3", "testResetting", "testSkipping", "testZeroLength1", "testZeroLength2", "testZeroLength3" ],
            "org.apache.commons.io.input.SwappedDataInputStreamTest" : [ "testReadBoolean", "testReadByte", "testReadChar", "testReadDouble", "testReadFloat", "testReadFully", "testReadInt", "testReadLine", "testReadLong", "testReadShort", "testReadUTF", "testReadUnsignedByte", "testReadUnsignedShort", "testSkipBytes" ],
            "org.apache.commons.io.input.TeeInputStreamTest" : [ "testMarkReset", "testReadEverything", "testReadNothing", "testReadOneByte", "testReadToArray", "testReadToArrayWithOffset", "testSkip" ]
          }
        },
        "org.apache.commons.io.input.ProxyReader" : { },
        "org.apache.commons.io.input.TeeInputStream" : {
          "testcases" : {
            "org.apache.commons.io.input.TeeInputStreamTest" : [ "testMarkReset", "testReadEverything", "testReadNothing", "testReadOneByte", "testReadToArray", "testReadToArrayWithOffset", "testSkip" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemObserver" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream" : {
          "testcases" : {
            "org.apache.commons.io.CopyUtilsTest" : [ "testCopy_byteArrayToOutputStream", "testCopy_byteArrayToWriter", "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToWriter", "testCopy_readerToOutputStream", "testCopy_readerToWriter", "testCopy_stringToOutputStream", "testCopy_stringToWriter" ],
            "org.apache.commons.io.DemuxTestCase" : [ "testOutputStream" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testReadFileToByteArray" ],
            "org.apache.commons.io.HexDumpTest" : [ "testDump" ],
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToOutputStream_nullIn", "testCopy_inputStreamToWriter", "testCopy_inputStreamToWriter_Encoding", "testCopy_inputStreamToWriter_Encoding_nullEncoding", "testCopy_inputStreamToWriter_Encoding_nullIn", "testCopy_inputStreamToWriter_nullIn", "testCopy_readerToOutputStream", "testCopy_readerToOutputStream_Encoding", "testCopy_readerToOutputStream_Encoding_nullEncoding", "testCopy_readerToOutputStream_Encoding_nullIn", "testCopy_readerToOutputStream_nullIn", "testCopy_readerToWriter", "testCopy_readerToWriter_nullIn" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testByteArrayToOutputStream", "testByteArrayToString", "testByteArrayToWriter", "testInputStreamToByteArray", "testStringToInputStream" ],
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWriteLines_OutputStream", "testWriteLines_OutputStream_Encoding", "testWriteLines_OutputStream_Encoding_nullData", "testWriteLines_OutputStream_Encoding_nullEncoding", "testWriteLines_OutputStream_Encoding_nullSeparator", "testWriteLines_OutputStream_nullData", "testWriteLines_OutputStream_nullSeparator", "testWriteLines_Writer", "testWriteLines_Writer_nullData", "testWriteLines_Writer_nullSeparator", "testWrite_byteArrayToOutputStream", "testWrite_byteArrayToOutputStream_nullData", "testWrite_byteArrayToWriter", "testWrite_byteArrayToWriter_Encoding", "testWrite_byteArrayToWriter_Encoding_nullData", "testWrite_byteArrayToWriter_Encoding_nullEncoding", "testWrite_byteArrayToWriter_nullData", "testWrite_charArrayToOutputStream", "testWrite_charArrayToOutputStream_Encoding", "testWrite_charArrayToOutputStream_Encoding_nullData", "testWrite_charArrayToOutputStream_nullData", "testWrite_charArrayToOutputStream_nullEncoding", "testWrite_charArrayToWriter", "testWrite_charArrayToWriter_Encoding_nullData", "testWrite_charSequenceToOutputStream", "testWrite_charSequenceToOutputStream_Encoding", "testWrite_charSequenceToOutputStream_Encoding_nullData", "testWrite_charSequenceToOutputStream_nullData", "testWrite_charSequenceToOutputStream_nullEncoding", "testWrite_charSequenceToWriter", "testWrite_charSequenceToWriter_Encoding_nullData", "testWrite_stringToOutputStream", "testWrite_stringToOutputStream_Encoding", "testWrite_stringToOutputStream_Encoding_nullData", "testWrite_stringToOutputStream_nullData", "testWrite_stringToOutputStream_nullEncoding", "testWrite_stringToWriter", "testWrite_stringToWriter_Encoding_nullData" ],
            "org.apache.commons.io.output.ByteArrayOutputStreamTestCase" : [ "testStream" ],
            "org.apache.commons.io.output.CloseShieldOutputStreamTest" : [ "testClose" ],
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testAboveThreshold", "testAtThreshold", "testBelowThreshold", "testTempFileAboveThreshold", "testTempFileAboveThresholdPrefixOnly", "testTempFileBelowThreshold", "testTempFileError", "testThresholdReached", "testWriteToLarge", "testWriteToSmall" ]
          }
        },
        "org.apache.commons.io.output.CloseShieldOutputStream" : {
          "testcases" : {
            "org.apache.commons.io.output.CloseShieldOutputStreamTest" : [ "testClose" ]
          }
        },
        "org.apache.commons.io.output.ClosedOutputStream" : {
          "testcases" : {
            "org.apache.commons.io.output.CloseShieldOutputStreamTest" : [ "testClose" ],
            "org.apache.commons.io.output.ClosedOutputStreamTest" : [ "testRead" ]
          }
        },
        "org.apache.commons.io.output.CountingOutputStream" : {
          "testcases" : {
            "org.apache.commons.io.output.CountingOutputStreamTest" : [ "testCounting" ]
          }
        },
        "org.apache.commons.io.output.DeferredFileOutputStream" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testAboveThreshold", "testAtThreshold", "testBelowThreshold", "testTempFileAboveThreshold", "testTempFileAboveThresholdPrefixOnly", "testTempFileBelowThreshold", "testTempFileError", "testThresholdReached", "testWriteToLarge", "testWriteToSmall" ]
          }
        },
        "org.apache.commons.io.output.DemuxOutputStream" : {
          "testcases" : {
            "org.apache.commons.io.DemuxTestCase" : [ "testOutputStream" ]
          }
        },
        "org.apache.commons.io.output.FileWriterWithEncoding" : {
          "testcases" : {
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testDifferentEncoding", "testSameEncoding" ]
          }
        },
        "org.apache.commons.io.output.LockableFileWriter" : {
          "testcases" : {
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testFileLocked", "testFileNotLocked" ]
          }
        },
        "org.apache.commons.io.output.NullOutputStream" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnNullChecksum" ],
            "org.apache.commons.io.output.NullOutputStreamTest" : [ "testNull" ]
          }
        },
        "org.apache.commons.io.output.NullWriter" : {
          "testcases" : {
            "org.apache.commons.io.output.NullWriterTest" : [ "testNull" ]
          }
        },
        "org.apache.commons.io.output.ProxyOutputStream" : {
          "testcases" : {
            "org.apache.commons.io.CopyUtilsTest" : [ "testCopy_byteArrayToOutputStream", "testCopy_byteArrayToWriter", "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToWriter", "testCopy_readerToOutputStream", "testCopy_readerToWriter", "testCopy_stringToOutputStream", "testCopy_stringToWriter" ],
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToWriter", "testCopy_inputStreamToWriter_Encoding", "testCopy_inputStreamToWriter_Encoding_nullEncoding", "testCopy_inputStreamToWriter_Encoding_nullIn", "testCopy_inputStreamToWriter_nullIn", "testCopy_readerToOutputStream", "testCopy_readerToOutputStream_Encoding", "testCopy_readerToOutputStream_Encoding_nullEncoding", "testCopy_readerToOutputStream_Encoding_nullIn", "testCopy_readerToOutputStream_nullIn", "testCopy_readerToWriter", "testCopy_readerToWriter_nullIn" ],
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWriteLines_OutputStream", "testWriteLines_OutputStream_Encoding", "testWriteLines_OutputStream_Encoding_nullData", "testWriteLines_OutputStream_Encoding_nullEncoding", "testWriteLines_OutputStream_Encoding_nullSeparator", "testWriteLines_OutputStream_nullData", "testWriteLines_OutputStream_nullSeparator", "testWriteLines_Writer", "testWriteLines_Writer_nullData", "testWriteLines_Writer_nullSeparator", "testWrite_byteArrayToOutputStream", "testWrite_byteArrayToOutputStream_nullData", "testWrite_byteArrayToWriter", "testWrite_byteArrayToWriter_Encoding", "testWrite_byteArrayToWriter_Encoding_nullData", "testWrite_byteArrayToWriter_Encoding_nullEncoding", "testWrite_byteArrayToWriter_nullData", "testWrite_charArrayToOutputStream", "testWrite_charArrayToOutputStream_Encoding", "testWrite_charArrayToOutputStream_Encoding_nullData", "testWrite_charArrayToOutputStream_nullData", "testWrite_charArrayToOutputStream_nullEncoding", "testWrite_charArrayToWriter", "testWrite_charArrayToWriter_Encoding_nullData", "testWrite_charSequenceToOutputStream", "testWrite_charSequenceToOutputStream_Encoding", "testWrite_charSequenceToOutputStream_Encoding_nullData", "testWrite_charSequenceToOutputStream_nullData", "testWrite_charSequenceToOutputStream_nullEncoding", "testWrite_charSequenceToWriter", "testWrite_charSequenceToWriter_Encoding_nullData", "testWrite_stringToOutputStream", "testWrite_stringToOutputStream_Encoding", "testWrite_stringToOutputStream_Encoding_nullData", "testWrite_stringToOutputStream_nullData", "testWrite_stringToOutputStream_nullEncoding", "testWrite_stringToWriter", "testWrite_stringToWriter_Encoding_nullData" ],
            "org.apache.commons.io.output.CloseShieldOutputStreamTest" : [ "testClose" ],
            "org.apache.commons.io.output.CountingOutputStreamTest" : [ "testCounting" ],
            "org.apache.commons.io.output.TeeOutputStreamTest" : [ "testTee" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriter" : { },
        "org.apache.commons.io.output.StringBuilderWriter" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy" ],
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce", "testDeleteNormal", "testDeleteQuietlyNormal" ],
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceUnix_String_EmptyResponse", "testGetFreeSpaceUnix_String_InvalidResponse1", "testGetFreeSpaceUnix_String_InvalidResponse2", "testGetFreeSpaceUnix_String_InvalidResponse3", "testGetFreeSpaceUnix_String_InvalidResponse4", "testGetFreeSpaceUnix_String_LongResponse", "testGetFreeSpaceUnix_String_LongResponseKb", "testGetFreeSpaceUnix_String_NormalResponseFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbLinux", "testGetFreeSpaceUnix_String_NormalResponseKbSolaris", "testGetFreeSpaceUnix_String_NormalResponseLinux", "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpace_String" ],
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile" ],
            "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToString", "testReadLines", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPrefix", "testGetPrefixLength", "testIndexOfExtension", "testIndexOfLastSeparator", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testNormalize", "testNormalizeNoEndSeparator", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToOutputStream_nullIn", "testCopy_inputStreamToOutputStream_nullOut", "testCopy_inputStreamToWriter", "testCopy_inputStreamToWriter_Encoding", "testCopy_inputStreamToWriter_Encoding_nullEncoding", "testCopy_inputStreamToWriter_Encoding_nullIn", "testCopy_inputStreamToWriter_Encoding_nullOut", "testCopy_inputStreamToWriter_nullIn", "testCopy_inputStreamToWriter_nullOut", "testCopy_readerToOutputStream", "testCopy_readerToOutputStream_Encoding", "testCopy_readerToOutputStream_Encoding_nullEncoding", "testCopy_readerToOutputStream_Encoding_nullIn", "testCopy_readerToOutputStream_Encoding_nullOut", "testCopy_readerToOutputStream_nullIn", "testCopy_readerToOutputStream_nullOut", "testCopy_readerToWriter", "testCopy_readerToWriter_nullIn", "testCopy_readerToWriter_nullOut" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testByteArrayToOutputStream", "testByteArrayToString", "testByteArrayToWriter", "testConstants", "testInputStreamToByteArray", "testInputStreamToCharArray", "testInputStreamToCharArrayWithEncoding", "testInputStreamToString", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testReaderToCharArray", "testReaderToString", "testStringToByteArray", "testStringToInputStream", "testStringToOutputStream", "testStringToWriter" ],
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWriteLines_OutputStream", "testWriteLines_OutputStream_Encoding", "testWriteLines_OutputStream_Encoding_nullData", "testWriteLines_OutputStream_Encoding_nullEncoding", "testWriteLines_OutputStream_Encoding_nullSeparator", "testWriteLines_OutputStream_Encoding_nullStream", "testWriteLines_OutputStream_nullData", "testWriteLines_OutputStream_nullSeparator", "testWriteLines_OutputStream_nullStream", "testWriteLines_Writer", "testWriteLines_Writer_nullData", "testWriteLines_Writer_nullSeparator", "testWriteLines_Writer_nullStream", "testWrite_byteArrayToOutputStream", "testWrite_byteArrayToOutputStream_nullData", "testWrite_byteArrayToOutputStream_nullStream", "testWrite_byteArrayToWriter", "testWrite_byteArrayToWriter_Encoding", "testWrite_byteArrayToWriter_Encoding_nullData", "testWrite_byteArrayToWriter_Encoding_nullEncoding", "testWrite_byteArrayToWriter_Encoding_nullWriter", "testWrite_byteArrayToWriter_nullData", "testWrite_byteArrayToWriter_nullWriter", "testWrite_charArrayToOutputStream", "testWrite_charArrayToOutputStream_Encoding", "testWrite_charArrayToOutputStream_Encoding_nullData", "testWrite_charArrayToOutputStream_Encoding_nullStream", "testWrite_charArrayToOutputStream_nullData", "testWrite_charArrayToOutputStream_nullEncoding", "testWrite_charArrayToOutputStream_nullStream", "testWrite_charArrayToWriter", "testWrite_charArrayToWriter_Encoding_nullData", "testWrite_charArrayToWriter_Encoding_nullStream", "testWrite_charSequenceToOutputStream", "testWrite_charSequenceToOutputStream_Encoding", "testWrite_charSequenceToOutputStream_Encoding_nullData", "testWrite_charSequenceToOutputStream_Encoding_nullStream", "testWrite_charSequenceToOutputStream_nullData", "testWrite_charSequenceToOutputStream_nullEncoding", "testWrite_charSequenceToOutputStream_nullStream", "testWrite_charSequenceToWriter", "testWrite_charSequenceToWriter_Encoding_nullData", "testWrite_charSequenceToWriter_Encoding_nullStream", "testWrite_stringToOutputStream", "testWrite_stringToOutputStream_Encoding", "testWrite_stringToOutputStream_Encoding_nullData", "testWrite_stringToOutputStream_Encoding_nullStream", "testWrite_stringToOutputStream_nullData", "testWrite_stringToOutputStream_nullEncoding", "testWrite_stringToOutputStream_nullStream", "testWrite_stringToWriter", "testWrite_stringToWriter_Encoding_nullData", "testWrite_stringToWriter_Encoding_nullStream" ],
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testFiltering", "testInvalidEncoding", "testMissingFile", "testNextLineOnly", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testCanRead", "testCanWrite", "testEmpty", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testSizeFilter" ],
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ],
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testWriteToLarge" ],
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testConstructor_fileName_nullFile", "testDifferentEncoding", "testSameEncoding" ],
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testConstructor_fileName_nullFile", "testFileLocked", "testFileNotLocked" ],
            "org.apache.commons.io.output.StringBuilderWriterTest" : [ "testAppendChar", "testAppendCharSequence", "testAppendCharSequencePortion", "testAppendConstructCapacity", "testAppendConstructNull", "testAppendConstructStringBuilder", "testClose", "testWriteChar", "testWriteCharArray", "testWriteCharArrayPortion", "testWriteString", "testWriteStringPortion" ]
          }
        },
        "org.apache.commons.io.output.TeeOutputStream" : {
          "testcases" : {
            "org.apache.commons.io.output.TeeOutputStreamTest" : [ "testTee" ]
          }
        },
        "org.apache.commons.io.output.ThresholdingOutputStream" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testAboveThreshold", "testAtThreshold", "testBelowThreshold", "testTempFileAboveThreshold", "testTempFileAboveThresholdPrefixOnly", "testTempFileBelowThreshold", "testTempFileError", "testThresholdReached", "testWriteToLarge", "testWriteToSmall" ]
          }
        }
      }
    },
    "ce90015bdc3614f88fbe55a697731a2f5b052ca3" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "91509112bb42d52eb4cef40f2dee16a3633b446f",
      "changedClazzes" : {
        "org.apache.commons.io.FileSystemUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceOS_String_InitError", "testGetFreeSpaceOS_String_NullPath", "testGetFreeSpaceOS_String_Other", "testGetFreeSpaceOS_String_Unix", "testGetFreeSpaceOS_String_Windows", "testGetFreeSpaceUnix_String_EmptyPath", "testGetFreeSpaceUnix_String_EmptyResponse", "testGetFreeSpaceUnix_String_InvalidResponse1", "testGetFreeSpaceUnix_String_InvalidResponse2", "testGetFreeSpaceUnix_String_InvalidResponse3", "testGetFreeSpaceUnix_String_InvalidResponse4", "testGetFreeSpaceUnix_String_LongResponse", "testGetFreeSpaceUnix_String_LongResponseKb", "testGetFreeSpaceUnix_String_NormalResponseFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbLinux", "testGetFreeSpaceUnix_String_NormalResponseKbSolaris", "testGetFreeSpaceUnix_String_NormalResponseLinux", "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpace_String" ]
          }
        },
        "org.apache.commons.io.FileSystemUtilsTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceOS_String_InitError", "testGetFreeSpaceOS_String_NullPath", "testGetFreeSpaceOS_String_Other", "testGetFreeSpaceOS_String_Unix", "testGetFreeSpaceOS_String_Windows", "testGetFreeSpaceUnix_String_EmptyPath", "testGetFreeSpaceUnix_String_EmptyResponse", "testGetFreeSpaceUnix_String_InvalidResponse1", "testGetFreeSpaceUnix_String_InvalidResponse2", "testGetFreeSpaceUnix_String_InvalidResponse3", "testGetFreeSpaceUnix_String_InvalidResponse4", "testGetFreeSpaceUnix_String_LongResponse", "testGetFreeSpaceUnix_String_LongResponseKb", "testGetFreeSpaceUnix_String_NormalResponseFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbLinux", "testGetFreeSpaceUnix_String_NormalResponseKbSolaris", "testGetFreeSpaceUnix_String_NormalResponseLinux", "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpace_String" ]
          }
        },
        "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceUnix_String_EmptyPath", "testGetFreeSpaceUnix_String_EmptyResponse", "testGetFreeSpaceUnix_String_InvalidResponse1", "testGetFreeSpaceUnix_String_InvalidResponse2", "testGetFreeSpaceUnix_String_InvalidResponse3", "testGetFreeSpaceUnix_String_InvalidResponse4", "testGetFreeSpaceUnix_String_LongResponse", "testGetFreeSpaceUnix_String_LongResponseKb", "testGetFreeSpaceUnix_String_NormalResponseFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbLinux", "testGetFreeSpaceUnix_String_NormalResponseKbSolaris", "testGetFreeSpaceUnix_String_NormalResponseLinux", "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive" ]
          }
        }
      }
    },
    "d71a8b3bcd1e28ed4cff1ab497aaabae1c102408" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "ce90015bdc3614f88fbe55a697731a2f5b052ca3",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerNull" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerNull" ],
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce" ],
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testCleanEmpty", "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile", "testThrowsOnNullList" ],
            "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToString", "testReadLines", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ],
            "org.apache.commons.io.FileUtilsWaitForTestCase" : [ "testWaitFor" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPrefix", "testGetPrefixLength", "testIndexOfExtension", "testIndexOfLastSeparator", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testNormalize", "testNormalizeNoEndSeparator", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testByteArrayToOutputStream", "testByteArrayToString", "testByteArrayToWriter", "testConstants", "testInputStreamToByteArray", "testInputStreamToCharArray", "testInputStreamToCharArrayWithEncoding", "testInputStreamToString", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testReaderToCharArray", "testReaderToString", "testStringToByteArray", "testStringToInputStream", "testStringToOutputStream", "testStringToWriter" ],
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFiltering", "testInvalidEncoding", "testMissingFile", "testNextLineOnly", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testAnd", "testCanRead", "testCanWrite", "testDelegateFileFilter", "testDeprecatedWildcard", "testDirectory", "testEmpty", "testFalse", "testFiles", "testHidden", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNameFilterNullArrayArgument", "testNameFilterNullListArgument", "testNot", "testOr", "testPrefix", "testPrefixCaseInsensitive", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testTrue", "testWildcard" ],
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ],
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ],
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "testConstructor_File_encoding_badEncoding" ],
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testFileLocked", "testFileNotLocked" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testCopyFile1ToDir" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyFile1ToDir" ]
          }
        }
      }
    },
    "5c13fa7579650c2cbcab61c6b18e509951f640aa" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "d71a8b3bcd1e28ed4cff1ab497aaabae1c102408",
      "changedClazzes" : {
        "org.apache.commons.io.FilenameUtils#isSystemWindows" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsWildcardTestCase" : [ "testLocaleIndependence" ],
            "org.apache.commons.io.IOCaseTestCase" : [ "test_checkIndexOf_case", "test_checkIndexOf_functionality" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#splitOnTokens(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsWildcardTestCase" : [ "testLocaleIndependence" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#wildcardMatch(java.lang.String,java.lang.String,org.apache.commons.io.IOCase)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsWildcardTestCase" : [ "testLocaleIndependence" ]
          }
        },
        "org.apache.commons.io.FilenameUtilsWildcardTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsWildcardTestCase" : [ "testLocaleIndependence", "testMatch", "testMatch2", "testMatchCaseSpecified", "testMatchOnSystem", "testSplitOnTokens" ]
          }
        },
        "org.apache.commons.io.FilenameUtilsWildcardTestCase#testLocaleIndependence" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsWildcardTestCase" : [ "testLocaleIndependence" ]
          }
        },
        "org.apache.commons.io.IOCase" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilter", "testFilterAndLimitB", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered", "testIterateFiles", "testListFiles" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testEquals", "testEqualsNormalized", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl" ],
            "org.apache.commons.io.FilenameUtilsWildcardTestCase" : [ "testMatch", "testMatch2", "testMatchCaseSpecified", "testMatchOnSystem" ],
            "org.apache.commons.io.IOCaseTestCase" : [ "test_checkCompare_case", "test_checkCompare_functionality", "test_checkEndsWith_case", "test_checkEndsWith_functionality", "test_checkEquals_case", "test_checkEquals_functionality", "test_checkRegionMatches_case", "test_checkRegionMatches_functionality", "test_checkStartsWith_case", "test_checkStartsWith_functionality", "test_forName", "test_getName", "test_isCaseSensitive", "test_serialization", "test_toString" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testDeprecatedWildcard", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testPrefix", "testPrefixCaseInsensitive", "testSuffix", "testSuffixCaseInsensitive", "testWildcard" ],
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ],
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.IOCase#<init>(java.lang.String,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsWildcardTestCase" : [ "testLocaleIndependence" ],
            "org.apache.commons.io.IOCaseTestCase" : [ "test_checkIndexOf_case", "test_checkIndexOf_functionality" ]
          }
        },
        "org.apache.commons.io.IOCase#checkIndexOf(java.lang.String,int,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.IOCaseTestCase" : [ "test_checkIndexOf_case", "test_checkIndexOf_functionality" ]
          }
        },
        "org.apache.commons.io.IOCase#checkRegionMatches(java.lang.String,int,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsWildcardTestCase" : [ "testLocaleIndependence" ],
            "org.apache.commons.io.IOCaseTestCase" : [ "test_checkIndexOf_case", "test_checkIndexOf_functionality" ]
          }
        },
        "org.apache.commons.io.IOCaseTestCase" : {
          "testcases" : {
            "org.apache.commons.io.IOCaseTestCase" : [ "test_checkCompare_case", "test_checkCompare_functionality", "test_checkEndsWith_case", "test_checkEndsWith_functionality", "test_checkEquals_case", "test_checkEquals_functionality", "test_checkIndexOf_case", "test_checkIndexOf_functionality", "test_checkRegionMatches_case", "test_checkRegionMatches_functionality", "test_checkStartsWith_case", "test_checkStartsWith_functionality", "test_forName", "test_getName", "test_isCaseSensitive", "test_serialization", "test_toString" ]
          }
        },
        "org.apache.commons.io.IOCaseTestCase#setUp" : {
          "testcases" : {
            "org.apache.commons.io.IOCaseTestCase" : [ "test_checkIndexOf_case", "test_checkIndexOf_functionality" ]
          }
        },
        "org.apache.commons.io.IOCaseTestCase#tearDown" : {
          "testcases" : {
            "org.apache.commons.io.IOCaseTestCase" : [ "test_checkIndexOf_case", "test_checkIndexOf_functionality" ]
          }
        },
        "org.apache.commons.io.IOCaseTestCase#test_checkIndexOf_case" : {
          "testcases" : {
            "org.apache.commons.io.IOCaseTestCase" : [ "test_checkIndexOf_case" ]
          }
        },
        "org.apache.commons.io.IOCaseTestCase#test_checkIndexOf_functionality" : {
          "testcases" : {
            "org.apache.commons.io.IOCaseTestCase" : [ "test_checkIndexOf_functionality" ]
          }
        }
      }
    },
    "7949b2eaec4b498baedf6068612d426e55ad0197" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "5c13fa7579650c2cbcab61c6b18e509951f640aa",
      "changedClazzes" : { }
    },
    "7bfef476d8a9e08223ec4bff31054ff23655da4c" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "7949b2eaec4b498baedf6068612d426e55ad0197",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerNull" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerNull" ],
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce" ],
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testCleanEmpty", "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile", "testThrowsOnNullList" ],
            "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToString", "testReadLines", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ],
            "org.apache.commons.io.FileUtilsWaitForTestCase" : [ "testWaitFor" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPrefix", "testGetPrefixLength", "testIndexOfExtension", "testIndexOfLastSeparator", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testNormalize", "testNormalizeNoEndSeparator", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testByteArrayToOutputStream", "testByteArrayToString", "testByteArrayToWriter", "testConstants", "testInputStreamToByteArray", "testInputStreamToCharArray", "testInputStreamToCharArrayWithEncoding", "testInputStreamToString", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testReaderToCharArray", "testReaderToString", "testStringToByteArray", "testStringToInputStream", "testStringToOutputStream", "testStringToWriter" ],
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFiltering", "testInvalidEncoding", "testMissingFile", "testNextLineOnly", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testAnd", "testCanRead", "testCanWrite", "testDelegateFileFilter", "testDeprecatedWildcard", "testDirectory", "testEmpty", "testFalse", "testFiles", "testHidden", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNameFilterNullArrayArgument", "testNameFilterNullListArgument", "testNot", "testOr", "testPrefix", "testPrefixCaseInsensitive", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testTrue", "testWildcard" ],
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ],
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ],
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "testConstructor_File_encoding_badEncoding" ],
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testFileLocked", "testFileNotLocked" ]
          }
        },
        "org.apache.commons.io.FileUtils#cleanDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" : [ "testCleanDirWithASymlinkDir", "testCleanDirWithParentSymlinks", "testCleanDirWithSymlinkFile", "testCorrectlyIdentifySymlinkWithParentSymLink", "testIdentifiesSymlinkDir", "testIdentifiesSymlinkFile", "testStillClearsIfGivenDirectoryIsASymlink" ]
          }
        },
        "org.apache.commons.io.FileUtils#deleteDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" : [ "testCleanDirWithASymlinkDir", "testCleanDirWithParentSymlinks", "testCleanDirWithSymlinkFile", "testCorrectlyIdentifySymlinkWithParentSymLink", "testIdentifiesSymlinkDir", "testIdentifiesSymlinkFile", "testStillClearsIfGivenDirectoryIsASymlink" ]
          }
        },
        "org.apache.commons.io.FileUtils#forceDelete(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" : [ "testCleanDirWithASymlinkDir", "testCleanDirWithParentSymlinks", "testCleanDirWithSymlinkFile", "testCorrectlyIdentifySymlinkWithParentSymLink", "testIdentifiesSymlinkDir", "testIdentifiesSymlinkFile", "testStillClearsIfGivenDirectoryIsASymlink" ]
          }
        },
        "org.apache.commons.io.FileUtils#isSymlink(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" : [ "testCleanDirWithASymlinkDir", "testCleanDirWithParentSymlinks", "testCleanDirWithSymlinkFile", "testCorrectlyIdentifySymlinkWithParentSymLink", "testIdentifiesSymlinkDir", "testIdentifiesSymlinkFile", "testStillClearsIfGivenDirectoryIsASymlink" ]
          }
        },
        "org.apache.commons.io.FileUtils#openOutputStream(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" : [ "testCleanDirWithASymlinkDir", "testCleanDirWithParentSymlinks", "testCleanDirWithSymlinkFile", "testIdentifiesSymlinkFile", "testStillClearsIfGivenDirectoryIsASymlink" ]
          }
        },
        "org.apache.commons.io.FileUtils#touch(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" : [ "testCleanDirWithASymlinkDir", "testCleanDirWithParentSymlinks", "testCleanDirWithSymlinkFile", "testIdentifiesSymlinkFile", "testStillClearsIfGivenDirectoryIsASymlink" ]
          }
        },
        "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" : [ "testCleanDirWithASymlinkDir", "testCleanDirWithParentSymlinks", "testCleanDirWithSymlinkFile", "testCorrectlyIdentifySymlinkWithParentSymLink", "testIdentifiesSymlinkDir", "testIdentifiesSymlinkFile", "testStillClearsIfGivenDirectoryIsASymlink" ]
          }
        },
        "org.apache.commons.io.FileUtilsCleanSymlinksTestCase#setUp" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" : [ "testCleanDirWithASymlinkDir", "testCleanDirWithParentSymlinks", "testCleanDirWithSymlinkFile", "testCorrectlyIdentifySymlinkWithParentSymLink", "testIdentifiesSymlinkDir", "testIdentifiesSymlinkFile", "testStillClearsIfGivenDirectoryIsASymlink" ]
          }
        },
        "org.apache.commons.io.FileUtilsCleanSymlinksTestCase#setupSymlink(java.io.File,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" : [ "testCleanDirWithASymlinkDir", "testCleanDirWithParentSymlinks", "testCleanDirWithSymlinkFile", "testCorrectlyIdentifySymlinkWithParentSymLink", "testIdentifiesSymlinkDir", "testIdentifiesSymlinkFile", "testStillClearsIfGivenDirectoryIsASymlink" ]
          }
        },
        "org.apache.commons.io.FileUtilsCleanSymlinksTestCase#tearDown" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" : [ "testCleanDirWithASymlinkDir", "testCleanDirWithParentSymlinks", "testCleanDirWithSymlinkFile", "testCorrectlyIdentifySymlinkWithParentSymLink", "testIdentifiesSymlinkDir", "testIdentifiesSymlinkFile", "testStillClearsIfGivenDirectoryIsASymlink" ]
          }
        },
        "org.apache.commons.io.FileUtilsCleanSymlinksTestCase#testCleanDirWithASymlinkDir" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" : [ "testCleanDirWithASymlinkDir" ]
          }
        },
        "org.apache.commons.io.FileUtilsCleanSymlinksTestCase#testCleanDirWithParentSymlinks" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" : [ "testCleanDirWithParentSymlinks" ]
          }
        },
        "org.apache.commons.io.FileUtilsCleanSymlinksTestCase#testCleanDirWithSymlinkFile" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" : [ "testCleanDirWithSymlinkFile" ]
          }
        },
        "org.apache.commons.io.FileUtilsCleanSymlinksTestCase#testCorrectlyIdentifySymlinkWithParentSymLink" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" : [ "testCorrectlyIdentifySymlinkWithParentSymLink" ]
          }
        },
        "org.apache.commons.io.FileUtilsCleanSymlinksTestCase#testIdentifiesSymlinkDir" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" : [ "testIdentifiesSymlinkDir" ]
          }
        },
        "org.apache.commons.io.FileUtilsCleanSymlinksTestCase#testIdentifiesSymlinkFile" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" : [ "testIdentifiesSymlinkFile" ]
          }
        },
        "org.apache.commons.io.FileUtilsCleanSymlinksTestCase#testStillClearsIfGivenDirectoryIsASymlink" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" : [ "testStillClearsIfGivenDirectoryIsASymlink" ]
          }
        },
        "org.apache.commons.io.IOUtils#closeQuietly(java.io.OutputStream)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" : [ "testCleanDirWithASymlinkDir", "testCleanDirWithParentSymlinks", "testCleanDirWithSymlinkFile", "testIdentifiesSymlinkFile", "testStillClearsIfGivenDirectoryIsASymlink" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#<init>(int)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" : [ "testCleanDirWithASymlinkDir", "testCleanDirWithParentSymlinks", "testCleanDirWithSymlinkFile", "testIdentifiesSymlinkFile", "testStillClearsIfGivenDirectoryIsASymlink" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#toString" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" : [ "testCleanDirWithASymlinkDir", "testCleanDirWithParentSymlinks", "testCleanDirWithSymlinkFile", "testIdentifiesSymlinkFile", "testStillClearsIfGivenDirectoryIsASymlink" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#write(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" : [ "testCleanDirWithASymlinkDir", "testCleanDirWithParentSymlinks", "testCleanDirWithSymlinkFile", "testIdentifiesSymlinkFile", "testStillClearsIfGivenDirectoryIsASymlink" ]
          }
        }
      }
    },
    "f28c4933e6c92fed61431c7a4024b26c4f06a5e9" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "7bfef476d8a9e08223ec4bff31054ff23655da4c",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils#deleteDirectoryOnExit(java.io.File)" : { }
      }
    },
    "934d08cb4a4566eeffdb8c429f6294dba63b56b8" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "f28c4933e6c92fed61431c7a4024b26c4f06a5e9",
      "changedClazzes" : { }
    },
    "85efecf8ae376f604a3474e04f1b24822924adcd" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "934d08cb4a4566eeffdb8c429f6294dba63b56b8",
      "changedClazzes" : { }
    },
    "0b86b74abdfdc8165eec057be2c579be40aea038" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "85efecf8ae376f604a3474e04f1b24822924adcd",
      "changedClazzes" : { }
    },
    "d55dd62cc0b07e1124369d74dd0095cc2b491dfe" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "0b86b74abdfdc8165eec057be2c579be40aea038",
      "changedClazzes" : {
        "org.apache.commons.io.FilenameUtils#doGetPath(java.lang.String,int)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testGetPath", "testGetPathNoEndSeparator" ]
          }
        },
        "org.apache.commons.io.FilenameUtilsTestCase#testGetPath" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testGetPath" ]
          }
        },
        "org.apache.commons.io.FilenameUtilsTestCase#testGetPathNoEndSeparator" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testGetPathNoEndSeparator" ]
          }
        }
      }
    },
    "f992185eafa1610f505c97eb6188650feeede226" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "d55dd62cc0b07e1124369d74dd0095cc2b491dfe",
      "changedClazzes" : {
        "org.apache.commons.io.comparator.AbstractFileComparator" : { },
        "org.apache.commons.io.comparator.ComparatorAbstractTestCase" : {
          "testcases" : {
            "org.apache.commons.io.comparator.ComparatorAbstractTestCase" : [ "testComparator", "testReverseComparator", "testSortArray", "testSortList" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ]
          }
        },
        "org.apache.commons.io.comparator.DefaultFileComparator" : {
          "testcases" : {
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ]
          }
        },
        "org.apache.commons.io.comparator.DefaultFileComparatorTest#setUp" : { },
        "org.apache.commons.io.comparator.ExtensionFileComparator" : { },
        "org.apache.commons.io.comparator.ExtensionFileComparatorTest#setUp" : { },
        "org.apache.commons.io.comparator.LastModifiedFileComparator" : { },
        "org.apache.commons.io.comparator.LastModifiedFileComparatorTest#setUp" : { },
        "org.apache.commons.io.comparator.NameFileComparator" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.comparator.NameFileComparatorTest#setUp" : { },
        "org.apache.commons.io.comparator.PathFileComparator" : { },
        "org.apache.commons.io.comparator.PathFileComparatorTest#setUp" : { },
        "org.apache.commons.io.comparator.ReverseComparator" : {
          "testcases" : {
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ],
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.comparator.SizeFileComparator" : {
          "testcases" : {
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ]
          }
        },
        "org.apache.commons.io.comparator.SizeFileComparatorTest#setUp" : {
          "testcases" : {
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ]
          }
        }
      }
    },
    "45da38fd8a5086df7099fbb8c774e8433eec6485" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "f992185eafa1610f505c97eb6188650feeede226",
      "changedClazzes" : {
        "org.apache.commons.io.DirectoryWalker" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testCancel", "testFilter", "testFilterAndLimitA", "testFilterAndLimitB", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile2", "testFilterDirAndFile3", "testFilterDirAndFile4", "testHandleStartDirectoryFalse", "testLimitToCurrent", "testMissingStartDirectory", "testMultiThreadCancel" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToGrandChild" ]
          }
        }
      }
    },
    "e2d0dce6ebd0e02f491cbba324e0cfe0ec649bd3" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "45da38fd8a5086df7099fbb8c774e8433eec6485",
      "changedClazzes" : {
        "org.apache.commons.io.comparator.DefaultFileComparatorTest#setUp" : { }
      }
    },
    "b03cc28187980b60c0630bf8f47b679671670bce" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "e2d0dce6ebd0e02f491cbba324e0cfe0ec649bd3",
      "changedClazzes" : {
        "org.apache.commons.io.comparator.AbstractFileComparator" : {
          "testcases" : {
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ],
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.comparator.ExtensionFileComparator" : { },
        "org.apache.commons.io.comparator.NameFileComparator" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.comparator.PathFileComparator" : { },
        "org.apache.commons.io.comparator.ReverseComparator" : {
          "testcases" : {
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ],
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.comparator.SizeFileComparator" : {
          "testcases" : {
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ]
          }
        }
      }
    },
    "b79a58eed59cb1c7156a308fb03ffc4e19bf9c03" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "b03cc28187980b60c0630bf8f47b679671670bce",
      "changedClazzes" : {
        "org.apache.commons.io.comparator.ComparatorAbstractTestCase" : {
          "testcases" : {
            "org.apache.commons.io.comparator.ComparatorAbstractTestCase" : [ "testComparator", "testReverseComparator", "testSortArray", "testSortArrayNull", "testSortList", "testSortListNull", "testToString" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ]
          }
        }
      }
    },
    "0a3e9611fcaf3c2e174d33ba12d15140d3fb8bef" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "b79a58eed59cb1c7156a308fb03ffc4e19bf9c03",
      "changedClazzes" : { }
    },
    "faa58c0ca1a1d04befc5e9f2be62c7eea8fea8d9" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "0a3e9611fcaf3c2e174d33ba12d15140d3fb8bef",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils#cleanDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorArrayNull", "testConstructorIterable", "testConstructorIterableNull" ],
            "org.apache.commons.io.comparator.DirectoryFileComparatorTest" : [ "testSortArray", "testSortList" ]
          }
        },
        "org.apache.commons.io.FileUtils#deleteDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorArrayNull", "testConstructorIterable", "testConstructorIterableNull" ],
            "org.apache.commons.io.comparator.DirectoryFileComparatorTest" : [ "testSortArray", "testSortList" ]
          }
        },
        "org.apache.commons.io.FileUtils#forceDelete(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorArrayNull", "testConstructorIterable", "testConstructorIterableNull" ]
          }
        },
        "org.apache.commons.io.FileUtils#isSymlink(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorArrayNull", "testConstructorIterable", "testConstructorIterableNull" ],
            "org.apache.commons.io.comparator.DirectoryFileComparatorTest" : [ "testSortArray", "testSortList" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#getExtension(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorIterable" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#indexOfExtension(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorIterable" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#indexOfLastSeparator(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorIterable" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#isSystemWindows" : {
          "testcases" : {
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorArrayNull", "testConstructorIterable", "testConstructorIterableNull" ]
          }
        },
        "org.apache.commons.io.IOCase#<init>(java.lang.String,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorArrayNull", "testConstructorIterable", "testConstructorIterableNull" ]
          }
        },
        "org.apache.commons.io.IOCase#checkCompareTo(java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorIterable" ]
          }
        },
        "org.apache.commons.io.IOUtils#closeQuietly(java.io.OutputStream)" : {
          "testcases" : {
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorArrayNull", "testConstructorIterable", "testConstructorIterableNull" ]
          }
        },
        "org.apache.commons.io.comparator.AbstractFileComparator#<init>" : {
          "testcases" : {
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorArrayNull", "testConstructorIterable", "testConstructorIterableNull" ],
            "org.apache.commons.io.comparator.DirectoryFileComparatorTest" : [ "testSortArray", "testSortList" ]
          }
        },
        "org.apache.commons.io.comparator.AbstractFileComparator#toString" : {
          "testcases" : {
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorArrayNull", "testConstructorIterableNull" ]
          }
        },
        "org.apache.commons.io.comparator.ComparatorAbstractTestCase#setUp" : {
          "testcases" : {
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorArrayNull", "testConstructorIterable", "testConstructorIterableNull" ],
            "org.apache.commons.io.comparator.DirectoryFileComparatorTest" : [ "testSortArray", "testSortList" ]
          }
        },
        "org.apache.commons.io.comparator.ComparatorAbstractTestCase#tearDown" : {
          "testcases" : {
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorArrayNull", "testConstructorIterable", "testConstructorIterableNull" ],
            "org.apache.commons.io.comparator.DirectoryFileComparatorTest" : [ "testSortArray", "testSortList" ]
          }
        },
        "org.apache.commons.io.comparator.CompositeFileComparator" : { },
        "org.apache.commons.io.comparator.CompositeFileComparator#<init>(java.lang.Iterable)" : {
          "testcases" : {
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorArrayNull", "testConstructorIterable", "testConstructorIterableNull" ]
          }
        },
        "org.apache.commons.io.comparator.CompositeFileComparator#compare(java.io.File,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorArrayNull", "testConstructorIterable", "testConstructorIterableNull" ]
          }
        },
        "org.apache.commons.io.comparator.CompositeFileComparator#toString" : {
          "testcases" : {
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorArrayNull", "testConstructorIterableNull" ]
          }
        },
        "org.apache.commons.io.comparator.CompositeFileComparatorTest" : {
          "testcases" : {
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorArrayNull", "testConstructorIterable", "testConstructorIterableNull" ]
          }
        },
        "org.apache.commons.io.comparator.CompositeFileComparatorTest#setUp" : {
          "testcases" : {
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorArrayNull", "testConstructorIterable", "testConstructorIterableNull" ]
          }
        },
        "org.apache.commons.io.comparator.CompositeFileComparatorTest#testConstructorArrayNull" : {
          "testcases" : {
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorArrayNull" ]
          }
        },
        "org.apache.commons.io.comparator.CompositeFileComparatorTest#testConstructorIterable" : {
          "testcases" : {
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorIterable" ]
          }
        },
        "org.apache.commons.io.comparator.CompositeFileComparatorTest#testConstructorIterableNull" : {
          "testcases" : {
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorIterableNull" ]
          }
        },
        "org.apache.commons.io.comparator.DefaultFileComparator#<init>" : {
          "testcases" : {
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorArrayNull", "testConstructorIterable", "testConstructorIterableNull" ],
            "org.apache.commons.io.comparator.DirectoryFileComparatorTest" : [ "testSortArray", "testSortList" ]
          }
        },
        "org.apache.commons.io.comparator.DirectoryFileComparator" : { },
        "org.apache.commons.io.comparator.DirectoryFileComparator#<init>" : {
          "testcases" : {
            "org.apache.commons.io.comparator.DirectoryFileComparatorTest" : [ "testSortArray", "testSortList" ]
          }
        },
        "org.apache.commons.io.comparator.DirectoryFileComparatorTest" : {
          "testcases" : {
            "org.apache.commons.io.comparator.DirectoryFileComparatorTest" : [ "testSortArray", "testSortList" ]
          }
        },
        "org.apache.commons.io.comparator.DirectoryFileComparatorTest#setUp" : {
          "testcases" : {
            "org.apache.commons.io.comparator.DirectoryFileComparatorTest" : [ "testSortArray", "testSortList" ]
          }
        },
        "org.apache.commons.io.comparator.DirectoryFileComparatorTest#testSortArray" : {
          "testcases" : {
            "org.apache.commons.io.comparator.DirectoryFileComparatorTest" : [ "testSortArray" ]
          }
        },
        "org.apache.commons.io.comparator.DirectoryFileComparatorTest#testSortList" : {
          "testcases" : {
            "org.apache.commons.io.comparator.DirectoryFileComparatorTest" : [ "testSortList" ]
          }
        },
        "org.apache.commons.io.comparator.ExtensionFileComparator#<init>" : {
          "testcases" : {
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorArrayNull", "testConstructorIterable", "testConstructorIterableNull" ]
          }
        },
        "org.apache.commons.io.comparator.ExtensionFileComparator#compare(java.io.File,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorIterable" ]
          }
        },
        "org.apache.commons.io.comparator.ReverseComparator#<init>(java.util.Comparator)" : {
          "testcases" : {
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorArrayNull", "testConstructorIterable", "testConstructorIterableNull" ],
            "org.apache.commons.io.comparator.DirectoryFileComparatorTest" : [ "testSortArray", "testSortList" ]
          }
        },
        "org.apache.commons.io.comparator.SizeFileComparator#<init>" : {
          "testcases" : {
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorArrayNull", "testConstructorIterable", "testConstructorIterableNull" ]
          }
        },
        "org.apache.commons.io.comparator.SizeFileComparator#compare(java.io.File,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorIterable" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#<init>(int)" : {
          "testcases" : {
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorArrayNull", "testConstructorIterable", "testConstructorIterableNull" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#toString" : {
          "testcases" : {
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorArrayNull", "testConstructorIterable", "testConstructorIterableNull" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#write(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorArrayNull", "testConstructorIterable", "testConstructorIterableNull" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#createFile(java.io.File,long)" : {
          "testcases" : {
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorArrayNull", "testConstructorIterable", "testConstructorIterableNull" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#generateTestData(java.io.OutputStream,long)" : {
          "testcases" : {
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorArrayNull", "testConstructorIterable", "testConstructorIterableNull" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#getTestDirectory" : {
          "testcases" : {
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorArrayNull", "testConstructorIterable", "testConstructorIterableNull" ],
            "org.apache.commons.io.comparator.DirectoryFileComparatorTest" : [ "testSortArray", "testSortList" ]
          }
        }
      }
    },
    "3e8e057385f3fe803bff6efcb074602a3443f3cc" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "faa58c0ca1a1d04befc5e9f2be62c7eea8fea8d9",
      "changedClazzes" : {
        "org.apache.commons.io.input.BOMExclusionInputStream" : { },
        "org.apache.commons.io.input.BOMExclusionInputStream#<init>(java.io.InputStream)" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMExclusionInputStreamTest" : [ "testAvailableWithBOM", "testAvailableWithoutBOM", "testClose", "testLargeBufferWithBOM", "testLargeBufferWithoutBOM", "testLeadingNonBOMBufferedRead", "testLeadingNonBOMSingleRead", "testMarkResetAfterReadWithBOM", "testMarkResetAfterReadWithoutBOM", "testMarkResetBeforeReadWithBOM", "testMarkResetBeforeReadWithoutBOM", "testReadWithBOM", "testReadWithoutBOM", "testSkipWithBOM", "testSkipWithoutBOM", "testSmallBufferWithBOM", "testSmallBufferWithoutBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMExclusionInputStream#mark(int)" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMExclusionInputStreamTest" : [ "testMarkResetAfterReadWithBOM", "testMarkResetAfterReadWithoutBOM", "testMarkResetBeforeReadWithBOM", "testMarkResetBeforeReadWithoutBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMExclusionInputStream#read" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMExclusionInputStreamTest" : [ "testLargeBufferWithBOM", "testLargeBufferWithoutBOM", "testLeadingNonBOMBufferedRead", "testSmallBufferWithBOM", "testSmallBufferWithoutBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMExclusionInputStream#readFirstBytes" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMExclusionInputStreamTest" : [ "testLargeBufferWithBOM", "testLargeBufferWithoutBOM", "testLeadingNonBOMBufferedRead", "testLeadingNonBOMSingleRead", "testMarkResetAfterReadWithBOM", "testMarkResetAfterReadWithoutBOM", "testMarkResetBeforeReadWithBOM", "testMarkResetBeforeReadWithoutBOM", "testReadWithBOM", "testReadWithoutBOM", "testSkipWithBOM", "testSkipWithoutBOM", "testSmallBufferWithBOM", "testSmallBufferWithoutBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMExclusionInputStream#reset" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMExclusionInputStreamTest" : [ "testMarkResetAfterReadWithBOM", "testMarkResetAfterReadWithoutBOM", "testMarkResetBeforeReadWithBOM", "testMarkResetBeforeReadWithoutBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMExclusionInputStream#skip(long)" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMExclusionInputStreamTest" : [ "testSkipWithBOM", "testSkipWithoutBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMExclusionInputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMExclusionInputStreamTest" : [ "testAvailableWithBOM", "testAvailableWithoutBOM", "testClose", "testLargeBufferWithBOM", "testLargeBufferWithoutBOM", "testLeadingNonBOMBufferedRead", "testLeadingNonBOMSingleRead", "testMarkResetAfterReadWithBOM", "testMarkResetAfterReadWithoutBOM", "testMarkResetBeforeReadWithBOM", "testMarkResetBeforeReadWithoutBOM", "testReadWithBOM", "testReadWithoutBOM", "testSkipWithBOM", "testSkipWithoutBOM", "testSmallBufferWithBOM", "testSmallBufferWithoutBOM", "testSupportCode" ]
          }
        },
        "org.apache.commons.io.input.BOMExclusionInputStreamTest#assertData(byte[],byte[],int,int)" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMExclusionInputStreamTest" : [ "testLargeBufferWithBOM", "testLargeBufferWithoutBOM", "testLeadingNonBOMBufferedRead", "testSmallBufferWithBOM", "testSmallBufferWithoutBOM", "testSupportCode" ]
          }
        },
        "org.apache.commons.io.input.BOMExclusionInputStreamTest#createDataStream(byte[],boolean)" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMExclusionInputStreamTest" : [ "testAvailableWithBOM", "testAvailableWithoutBOM", "testLargeBufferWithBOM", "testLargeBufferWithoutBOM", "testLeadingNonBOMBufferedRead", "testLeadingNonBOMSingleRead", "testMarkResetAfterReadWithBOM", "testMarkResetAfterReadWithoutBOM", "testMarkResetBeforeReadWithBOM", "testMarkResetBeforeReadWithoutBOM", "testReadWithBOM", "testReadWithoutBOM", "testSkipWithBOM", "testSkipWithoutBOM", "testSmallBufferWithBOM", "testSmallBufferWithoutBOM", "testSupportCode" ]
          }
        },
        "org.apache.commons.io.input.BOMExclusionInputStreamTest#testAvailableWithBOM" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMExclusionInputStreamTest" : [ "testAvailableWithBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMExclusionInputStreamTest#testAvailableWithoutBOM" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMExclusionInputStreamTest" : [ "testAvailableWithoutBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMExclusionInputStreamTest#testClose" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMExclusionInputStreamTest" : [ "testClose" ]
          }
        },
        "org.apache.commons.io.input.BOMExclusionInputStreamTest#testLargeBufferWithBOM" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMExclusionInputStreamTest" : [ "testLargeBufferWithBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMExclusionInputStreamTest#testLargeBufferWithoutBOM" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMExclusionInputStreamTest" : [ "testLargeBufferWithoutBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMExclusionInputStreamTest#testLeadingNonBOMBufferedRead" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMExclusionInputStreamTest" : [ "testLeadingNonBOMBufferedRead" ]
          }
        },
        "org.apache.commons.io.input.BOMExclusionInputStreamTest#testLeadingNonBOMSingleRead" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMExclusionInputStreamTest" : [ "testLeadingNonBOMSingleRead" ]
          }
        },
        "org.apache.commons.io.input.BOMExclusionInputStreamTest#testMarkResetAfterReadWithBOM" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMExclusionInputStreamTest" : [ "testMarkResetAfterReadWithBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMExclusionInputStreamTest#testMarkResetAfterReadWithoutBOM" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMExclusionInputStreamTest" : [ "testMarkResetAfterReadWithoutBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMExclusionInputStreamTest#testMarkResetBeforeReadWithBOM" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMExclusionInputStreamTest" : [ "testMarkResetBeforeReadWithBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMExclusionInputStreamTest#testMarkResetBeforeReadWithoutBOM" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMExclusionInputStreamTest" : [ "testMarkResetBeforeReadWithoutBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMExclusionInputStreamTest#testReadWithBOM" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMExclusionInputStreamTest" : [ "testReadWithBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMExclusionInputStreamTest#testReadWithoutBOM" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMExclusionInputStreamTest" : [ "testReadWithoutBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMExclusionInputStreamTest#testSkipWithBOM" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMExclusionInputStreamTest" : [ "testSkipWithBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMExclusionInputStreamTest#testSkipWithoutBOM" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMExclusionInputStreamTest" : [ "testSkipWithoutBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMExclusionInputStreamTest#testSmallBufferWithBOM" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMExclusionInputStreamTest" : [ "testSmallBufferWithBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMExclusionInputStreamTest#testSmallBufferWithoutBOM" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMExclusionInputStreamTest" : [ "testSmallBufferWithoutBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMExclusionInputStreamTest#testSupportCode" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMExclusionInputStreamTest" : [ "testSupportCode" ]
          }
        },
        "org.apache.commons.io.input.BOMExclusionInputStreamTest$ExpectCloseInputStream#<init>" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMExclusionInputStreamTest" : [ "testClose" ]
          }
        },
        "org.apache.commons.io.input.BOMExclusionInputStreamTest$ExpectCloseInputStream#assertCloseCalled" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMExclusionInputStreamTest" : [ "testClose" ]
          }
        },
        "org.apache.commons.io.input.BOMExclusionInputStreamTest$ExpectCloseInputStream#close" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMExclusionInputStreamTest" : [ "testClose" ]
          }
        },
        "org.apache.commons.io.input.ProxyInputStream#<init>(java.io.InputStream)" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMExclusionInputStreamTest" : [ "testAvailableWithBOM", "testAvailableWithoutBOM", "testClose", "testLargeBufferWithBOM", "testLargeBufferWithoutBOM", "testLeadingNonBOMBufferedRead", "testLeadingNonBOMSingleRead", "testMarkResetAfterReadWithBOM", "testMarkResetAfterReadWithoutBOM", "testMarkResetBeforeReadWithBOM", "testMarkResetBeforeReadWithoutBOM", "testReadWithBOM", "testReadWithoutBOM", "testSkipWithBOM", "testSkipWithoutBOM", "testSmallBufferWithBOM", "testSmallBufferWithoutBOM" ]
          }
        },
        "org.apache.commons.io.input.ProxyInputStream#available" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMExclusionInputStreamTest" : [ "testAvailableWithBOM", "testAvailableWithoutBOM" ]
          }
        },
        "org.apache.commons.io.input.ProxyInputStream#close" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMExclusionInputStreamTest" : [ "testClose" ]
          }
        },
        "org.apache.commons.io.input.ProxyInputStream#markSupported" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMExclusionInputStreamTest" : [ "testMarkResetAfterReadWithBOM", "testMarkResetAfterReadWithoutBOM", "testMarkResetBeforeReadWithBOM", "testMarkResetBeforeReadWithoutBOM" ]
          }
        }
      }
    },
    "328a7efc17e8c77853fea42a84808dd1d26c8d5a" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "3e8e057385f3fe803bff6efcb074602a3443f3cc",
      "changedClazzes" : {
        "org.apache.commons.io.FileCleaningTrackerTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerFile", "testFileCleanerNull" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerFile", "testFileCleanerNull" ]
          }
        }
      }
    },
    "4a3fd09f1b0296514684fa2931c61bd8130f3cfd" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "328a7efc17e8c77853fea42a84808dd1d26c8d5a",
      "changedClazzes" : {
        "org.apache.commons.io.FilenameUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceUnix_String_EmptyResponse", "testGetFreeSpaceUnix_String_InvalidResponse1", "testGetFreeSpaceUnix_String_InvalidResponse2", "testGetFreeSpaceUnix_String_InvalidResponse3", "testGetFreeSpaceUnix_String_InvalidResponse4", "testGetFreeSpaceUnix_String_LongResponse", "testGetFreeSpaceUnix_String_LongResponseKb", "testGetFreeSpaceUnix_String_NormalResponseFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbLinux", "testGetFreeSpaceUnix_String_NormalResponseKbSolaris", "testGetFreeSpaceUnix_String_NormalResponseLinux", "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpace_String" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered", "testIterateFiles", "testListFiles" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPrefix", "testGetPrefixLength", "testIndexOfExtension", "testIndexOfLastSeparator", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testNormalize", "testNormalizeNoEndSeparator", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.FilenameUtilsWildcardTestCase" : [ "testLocaleIndependence", "testMatch", "testMatch2", "testMatchCaseSpecified", "testMatchOnSystem", "testSplitOnTokens" ],
            "org.apache.commons.io.IOCaseTestCase" : [ "test_checkCompare_case", "test_checkCompare_functionality", "test_checkEndsWith_case", "test_checkEndsWith_functionality", "test_checkEquals_case", "test_checkEquals_functionality", "test_checkIndexOf_case", "test_checkIndexOf_functionality", "test_checkRegionMatches_case", "test_checkRegionMatches_functionality", "test_checkStartsWith_case", "test_checkStartsWith_functionality", "test_forName", "test_getName", "test_isCaseSensitive", "test_serialization", "test_toString" ],
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorArrayNull", "testConstructorIterable", "testConstructorIterableNull" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testDeprecatedWildcard", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testPrefix", "testPrefixCaseInsensitive", "testSuffix", "testSuffixCaseInsensitive", "testWildcard" ],
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ],
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.FilenameUtilsTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPrefix", "testGetPrefixLength", "testIndexOfExtension", "testIndexOfLastSeparator", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testNormalize", "testNormalizeNoEndSeparator", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ]
          }
        }
      }
    },
    "ee8a7df94a2b9f928c4a50e55291e427e363f76d" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "4a3fd09f1b0296514684fa2931c61bd8130f3cfd",
      "changedClazzes" : { }
    },
    "63213c888b3a47036105bfa9caddf63f73cd695d" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "ee8a7df94a2b9f928c4a50e55291e427e363f76d",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerNull" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerNull" ],
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce" ],
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testCleanEmpty", "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile", "testThrowsOnNullList" ],
            "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" : [ "testCleanDirWithASymlinkDir", "testCleanDirWithParentSymlinks", "testCleanDirWithSymlinkFile", "testCorrectlyIdentifySymlinkWithParentSymLink", "testIdentifiesSymlinkDir", "testIdentifiesSymlinkFile", "testStillClearsIfGivenDirectoryIsASymlink" ],
            "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToString", "testReadLines", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ],
            "org.apache.commons.io.FileUtilsWaitForTestCase" : [ "testWaitFor" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPrefix", "testGetPrefixLength", "testIndexOfExtension", "testIndexOfLastSeparator", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testNormalize", "testNormalizeNoEndSeparator", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testByteArrayToOutputStream", "testByteArrayToString", "testByteArrayToWriter", "testConstants", "testInputStreamToByteArray", "testInputStreamToCharArray", "testInputStreamToCharArrayWithEncoding", "testInputStreamToString", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testReaderToCharArray", "testReaderToString", "testStringToByteArray", "testStringToInputStream", "testStringToOutputStream", "testStringToWriter" ],
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFiltering", "testInvalidEncoding", "testMissingFile", "testNextLineOnly", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorArrayNull", "testConstructorIterable", "testConstructorIterableNull" ],
            "org.apache.commons.io.comparator.DirectoryFileComparatorTest" : [ "testSortArray", "testSortList" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testAnd", "testCanRead", "testCanWrite", "testDelegateFileFilter", "testDeprecatedWildcard", "testDirectory", "testEmpty", "testFalse", "testFiles", "testHidden", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNameFilterNullArrayArgument", "testNameFilterNullListArgument", "testNot", "testOr", "testPrefix", "testPrefixCaseInsensitive", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testTrue", "testWildcard" ],
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ],
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ],
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "testConstructor_File_encoding_badEncoding" ],
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testFileLocked", "testFileNotLocked" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToString", "testReadLines", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ]
          }
        }
      }
    },
    "30fca899772d354211257381e89dac596eb5818f" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "63213c888b3a47036105bfa9caddf63f73cd695d",
      "changedClazzes" : {
        "org.apache.commons.io.IOUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy" ],
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce", "testDeleteNormal", "testDeleteQuietlyNormal" ],
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceUnix_String_EmptyResponse", "testGetFreeSpaceUnix_String_InvalidResponse1", "testGetFreeSpaceUnix_String_InvalidResponse2", "testGetFreeSpaceUnix_String_InvalidResponse3", "testGetFreeSpaceUnix_String_InvalidResponse4", "testGetFreeSpaceUnix_String_LongResponse", "testGetFreeSpaceUnix_String_LongResponseKb", "testGetFreeSpaceUnix_String_NormalResponseFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbLinux", "testGetFreeSpaceUnix_String_NormalResponseKbSolaris", "testGetFreeSpaceUnix_String_NormalResponseLinux", "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpace_String" ],
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile" ],
            "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" : [ "testCleanDirWithASymlinkDir", "testCleanDirWithParentSymlinks", "testCleanDirWithSymlinkFile", "testIdentifiesSymlinkFile", "testStillClearsIfGivenDirectoryIsASymlink" ],
            "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToString", "testReadLines", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPrefix", "testGetPrefixLength", "testIndexOfExtension", "testIndexOfLastSeparator", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testNormalize", "testNormalizeNoEndSeparator", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToOutputStream_nullIn", "testCopy_inputStreamToOutputStream_nullOut", "testCopy_inputStreamToWriter", "testCopy_inputStreamToWriter_Encoding", "testCopy_inputStreamToWriter_Encoding_nullEncoding", "testCopy_inputStreamToWriter_Encoding_nullIn", "testCopy_inputStreamToWriter_Encoding_nullOut", "testCopy_inputStreamToWriter_nullIn", "testCopy_inputStreamToWriter_nullOut", "testCopy_readerToOutputStream", "testCopy_readerToOutputStream_Encoding", "testCopy_readerToOutputStream_Encoding_nullEncoding", "testCopy_readerToOutputStream_Encoding_nullIn", "testCopy_readerToOutputStream_Encoding_nullOut", "testCopy_readerToOutputStream_nullIn", "testCopy_readerToOutputStream_nullOut", "testCopy_readerToWriter", "testCopy_readerToWriter_nullIn", "testCopy_readerToWriter_nullOut" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testByteArrayToOutputStream", "testByteArrayToString", "testByteArrayToWriter", "testConstants", "testInputStreamToByteArray", "testInputStreamToCharArray", "testInputStreamToCharArrayWithEncoding", "testInputStreamToString", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testReaderToCharArray", "testReaderToString", "testStringToByteArray", "testStringToInputStream", "testStringToOutputStream", "testStringToWriter" ],
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWriteLines_OutputStream", "testWriteLines_OutputStream_Encoding", "testWriteLines_OutputStream_Encoding_nullData", "testWriteLines_OutputStream_Encoding_nullEncoding", "testWriteLines_OutputStream_Encoding_nullSeparator", "testWriteLines_OutputStream_Encoding_nullStream", "testWriteLines_OutputStream_nullData", "testWriteLines_OutputStream_nullSeparator", "testWriteLines_OutputStream_nullStream", "testWriteLines_Writer", "testWriteLines_Writer_nullData", "testWriteLines_Writer_nullSeparator", "testWriteLines_Writer_nullStream", "testWrite_byteArrayToOutputStream", "testWrite_byteArrayToOutputStream_nullData", "testWrite_byteArrayToOutputStream_nullStream", "testWrite_byteArrayToWriter", "testWrite_byteArrayToWriter_Encoding", "testWrite_byteArrayToWriter_Encoding_nullData", "testWrite_byteArrayToWriter_Encoding_nullEncoding", "testWrite_byteArrayToWriter_Encoding_nullWriter", "testWrite_byteArrayToWriter_nullData", "testWrite_byteArrayToWriter_nullWriter", "testWrite_charArrayToOutputStream", "testWrite_charArrayToOutputStream_Encoding", "testWrite_charArrayToOutputStream_Encoding_nullData", "testWrite_charArrayToOutputStream_Encoding_nullStream", "testWrite_charArrayToOutputStream_nullData", "testWrite_charArrayToOutputStream_nullEncoding", "testWrite_charArrayToOutputStream_nullStream", "testWrite_charArrayToWriter", "testWrite_charArrayToWriter_Encoding_nullData", "testWrite_charArrayToWriter_Encoding_nullStream", "testWrite_charSequenceToOutputStream", "testWrite_charSequenceToOutputStream_Encoding", "testWrite_charSequenceToOutputStream_Encoding_nullData", "testWrite_charSequenceToOutputStream_Encoding_nullStream", "testWrite_charSequenceToOutputStream_nullData", "testWrite_charSequenceToOutputStream_nullEncoding", "testWrite_charSequenceToOutputStream_nullStream", "testWrite_charSequenceToWriter", "testWrite_charSequenceToWriter_Encoding_nullData", "testWrite_charSequenceToWriter_Encoding_nullStream", "testWrite_stringToOutputStream", "testWrite_stringToOutputStream_Encoding", "testWrite_stringToOutputStream_Encoding_nullData", "testWrite_stringToOutputStream_Encoding_nullStream", "testWrite_stringToOutputStream_nullData", "testWrite_stringToOutputStream_nullEncoding", "testWrite_stringToOutputStream_nullStream", "testWrite_stringToWriter", "testWrite_stringToWriter_Encoding_nullData", "testWrite_stringToWriter_Encoding_nullStream" ],
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testFiltering", "testInvalidEncoding", "testMissingFile", "testNextLineOnly", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorArrayNull", "testConstructorIterable", "testConstructorIterableNull" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testCanRead", "testCanWrite", "testEmpty", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testSizeFilter" ],
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ],
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testWriteToLarge" ],
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testConstructor_fileName_nullFile", "testDifferentEncoding", "testSameEncoding" ],
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testConstructor_fileName_nullFile", "testFileLocked", "testFileNotLocked" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testByteArrayToOutputStream", "testByteArrayToString", "testByteArrayToWriter", "testConstants", "testInputStreamToByteArray", "testInputStreamToCharArray", "testInputStreamToCharArrayWithEncoding", "testInputStreamToString", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testReaderToCharArray", "testReaderToString", "testStringToByteArray", "testStringToInputStream", "testStringToOutputStream", "testStringToWriter" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream" : {
          "testcases" : {
            "org.apache.commons.io.CopyUtilsTest" : [ "testCopy_byteArrayToOutputStream", "testCopy_byteArrayToWriter", "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToWriter", "testCopy_readerToOutputStream", "testCopy_readerToWriter", "testCopy_stringToOutputStream", "testCopy_stringToWriter" ],
            "org.apache.commons.io.DemuxTestCase" : [ "testOutputStream" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testReadFileToByteArray" ],
            "org.apache.commons.io.HexDumpTest" : [ "testDump" ],
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToOutputStream_nullIn", "testCopy_inputStreamToWriter", "testCopy_inputStreamToWriter_Encoding", "testCopy_inputStreamToWriter_Encoding_nullEncoding", "testCopy_inputStreamToWriter_Encoding_nullIn", "testCopy_inputStreamToWriter_nullIn", "testCopy_readerToOutputStream", "testCopy_readerToOutputStream_Encoding", "testCopy_readerToOutputStream_Encoding_nullEncoding", "testCopy_readerToOutputStream_Encoding_nullIn", "testCopy_readerToOutputStream_nullIn", "testCopy_readerToWriter", "testCopy_readerToWriter_nullIn" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testByteArrayToOutputStream", "testByteArrayToString", "testByteArrayToWriter", "testInputStreamToByteArray", "testStringToInputStream" ],
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWriteLines_OutputStream", "testWriteLines_OutputStream_Encoding", "testWriteLines_OutputStream_Encoding_nullData", "testWriteLines_OutputStream_Encoding_nullEncoding", "testWriteLines_OutputStream_Encoding_nullSeparator", "testWriteLines_OutputStream_nullData", "testWriteLines_OutputStream_nullSeparator", "testWriteLines_Writer", "testWriteLines_Writer_nullData", "testWriteLines_Writer_nullSeparator", "testWrite_byteArrayToOutputStream", "testWrite_byteArrayToOutputStream_nullData", "testWrite_byteArrayToWriter", "testWrite_byteArrayToWriter_Encoding", "testWrite_byteArrayToWriter_Encoding_nullData", "testWrite_byteArrayToWriter_Encoding_nullEncoding", "testWrite_byteArrayToWriter_nullData", "testWrite_charArrayToOutputStream", "testWrite_charArrayToOutputStream_Encoding", "testWrite_charArrayToOutputStream_Encoding_nullData", "testWrite_charArrayToOutputStream_nullData", "testWrite_charArrayToOutputStream_nullEncoding", "testWrite_charArrayToWriter", "testWrite_charArrayToWriter_Encoding_nullData", "testWrite_charSequenceToOutputStream", "testWrite_charSequenceToOutputStream_Encoding", "testWrite_charSequenceToOutputStream_Encoding_nullData", "testWrite_charSequenceToOutputStream_nullData", "testWrite_charSequenceToOutputStream_nullEncoding", "testWrite_charSequenceToWriter", "testWrite_charSequenceToWriter_Encoding_nullData", "testWrite_stringToOutputStream", "testWrite_stringToOutputStream_Encoding", "testWrite_stringToOutputStream_Encoding_nullData", "testWrite_stringToOutputStream_nullData", "testWrite_stringToOutputStream_nullEncoding", "testWrite_stringToWriter", "testWrite_stringToWriter_Encoding_nullData" ],
            "org.apache.commons.io.output.ByteArrayOutputStreamTestCase" : [ "testStream" ],
            "org.apache.commons.io.output.CloseShieldOutputStreamTest" : [ "testClose" ],
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testAboveThreshold", "testAtThreshold", "testBelowThreshold", "testTempFileAboveThreshold", "testTempFileAboveThresholdPrefixOnly", "testTempFileBelowThreshold", "testTempFileError", "testThresholdReached", "testWriteToLarge", "testWriteToSmall" ]
          }
        }
      }
    },
    "4c83c48a2a6b5fae5eaf2279ce1a20bc0c3edee7" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "30fca899772d354211257381e89dac596eb5818f",
      "changedClazzes" : {
        "org.apache.commons.io.input.ReaderInputStream" : { },
        "org.apache.commons.io.input.ReaderInputStream#<init>(java.io.Reader)" : {
          "testcases" : {
            "org.apache.commons.io.input.ReaderInputStreamTest" : [ "testLargeUTF8WithBufferedRead", "testLargeUTF8WithSingleByteRead", "testReadZero", "testUTF16WithSingleByteRead", "testUTF8WithBufferedRead", "testUTF8WithSingleByteRead" ]
          }
        },
        "org.apache.commons.io.input.ReaderInputStream#read" : {
          "testcases" : {
            "org.apache.commons.io.input.ReaderInputStreamTest" : [ "testLargeUTF8WithBufferedRead", "testLargeUTF8WithSingleByteRead", "testReadZero", "testUTF16WithSingleByteRead", "testUTF8WithBufferedRead", "testUTF8WithSingleByteRead" ]
          }
        },
        "org.apache.commons.io.input.ReaderInputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.input.ReaderInputStreamTest" : [ "testLargeUTF8WithBufferedRead", "testLargeUTF8WithSingleByteRead", "testReadZero", "testUTF16WithSingleByteRead", "testUTF8WithBufferedRead", "testUTF8WithSingleByteRead" ]
          }
        },
        "org.apache.commons.io.input.ReaderInputStreamTest#testLargeUTF8WithBufferedRead" : {
          "testcases" : {
            "org.apache.commons.io.input.ReaderInputStreamTest" : [ "testLargeUTF8WithBufferedRead" ]
          }
        },
        "org.apache.commons.io.input.ReaderInputStreamTest#testLargeUTF8WithSingleByteRead" : {
          "testcases" : {
            "org.apache.commons.io.input.ReaderInputStreamTest" : [ "testLargeUTF8WithSingleByteRead" ]
          }
        },
        "org.apache.commons.io.input.ReaderInputStreamTest#testReadZero" : {
          "testcases" : {
            "org.apache.commons.io.input.ReaderInputStreamTest" : [ "testReadZero" ]
          }
        },
        "org.apache.commons.io.input.ReaderInputStreamTest#testUTF16WithSingleByteRead" : {
          "testcases" : {
            "org.apache.commons.io.input.ReaderInputStreamTest" : [ "testUTF16WithSingleByteRead" ]
          }
        },
        "org.apache.commons.io.input.ReaderInputStreamTest#testUTF8WithBufferedRead" : {
          "testcases" : {
            "org.apache.commons.io.input.ReaderInputStreamTest" : [ "testUTF8WithBufferedRead" ]
          }
        },
        "org.apache.commons.io.input.ReaderInputStreamTest#testUTF8WithSingleByteRead" : {
          "testcases" : {
            "org.apache.commons.io.input.ReaderInputStreamTest" : [ "testUTF8WithSingleByteRead" ]
          }
        },
        "org.apache.commons.io.input.ReaderInputStreamTest#testWithBufferedRead(java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.ReaderInputStreamTest" : [ "testLargeUTF8WithBufferedRead", "testUTF8WithBufferedRead" ]
          }
        },
        "org.apache.commons.io.input.ReaderInputStreamTest#testWithSingleByteRead(java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.ReaderInputStreamTest" : [ "testLargeUTF8WithSingleByteRead", "testUTF16WithSingleByteRead", "testUTF8WithSingleByteRead" ]
          }
        },
        "org.apache.commons.io.output.WriterOutputStream" : { },
        "org.apache.commons.io.output.WriterOutputStream#<init>(java.io.Writer,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.output.WriterOutputStreamTest" : [ "testFlush", "testLargeUTF8WithBufferedWrite", "testLargeUTF8WithSingleByteWrite", "testUTF16WithSingleByteWrite", "testUTF8WithBufferedWrite", "testUTF8WithSingleByteWrite", "testWriteImmediately" ]
          }
        },
        "org.apache.commons.io.output.WriterOutputStream#close" : {
          "testcases" : {
            "org.apache.commons.io.output.WriterOutputStreamTest" : [ "testLargeUTF8WithBufferedWrite", "testLargeUTF8WithSingleByteWrite", "testUTF16WithSingleByteWrite", "testUTF8WithBufferedWrite", "testUTF8WithSingleByteWrite" ]
          }
        },
        "org.apache.commons.io.output.WriterOutputStream#flush" : {
          "testcases" : {
            "org.apache.commons.io.output.WriterOutputStreamTest" : [ "testFlush" ]
          }
        },
        "org.apache.commons.io.output.WriterOutputStream#flushOutput" : {
          "testcases" : {
            "org.apache.commons.io.output.WriterOutputStreamTest" : [ "testFlush", "testLargeUTF8WithBufferedWrite", "testLargeUTF8WithSingleByteWrite", "testUTF16WithSingleByteWrite", "testUTF8WithBufferedWrite", "testUTF8WithSingleByteWrite", "testWriteImmediately" ]
          }
        },
        "org.apache.commons.io.output.WriterOutputStream#processInput(boolean)" : {
          "testcases" : {
            "org.apache.commons.io.output.WriterOutputStreamTest" : [ "testFlush", "testLargeUTF8WithBufferedWrite", "testLargeUTF8WithSingleByteWrite", "testUTF16WithSingleByteWrite", "testUTF8WithBufferedWrite", "testUTF8WithSingleByteWrite", "testWriteImmediately" ]
          }
        },
        "org.apache.commons.io.output.WriterOutputStream#write(byte[])" : {
          "testcases" : {
            "org.apache.commons.io.output.WriterOutputStreamTest" : [ "testLargeUTF8WithSingleByteWrite", "testUTF16WithSingleByteWrite", "testUTF8WithSingleByteWrite" ]
          }
        },
        "org.apache.commons.io.output.WriterOutputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.output.WriterOutputStreamTest" : [ "testFlush", "testLargeUTF8WithBufferedWrite", "testLargeUTF8WithSingleByteWrite", "testUTF16WithSingleByteWrite", "testUTF8WithBufferedWrite", "testUTF8WithSingleByteWrite", "testWriteImmediately" ]
          }
        },
        "org.apache.commons.io.output.WriterOutputStreamTest#testFlush" : {
          "testcases" : {
            "org.apache.commons.io.output.WriterOutputStreamTest" : [ "testFlush" ]
          }
        },
        "org.apache.commons.io.output.WriterOutputStreamTest#testLargeUTF8WithBufferedWrite" : {
          "testcases" : {
            "org.apache.commons.io.output.WriterOutputStreamTest" : [ "testLargeUTF8WithBufferedWrite" ]
          }
        },
        "org.apache.commons.io.output.WriterOutputStreamTest#testLargeUTF8WithSingleByteWrite" : {
          "testcases" : {
            "org.apache.commons.io.output.WriterOutputStreamTest" : [ "testLargeUTF8WithSingleByteWrite" ]
          }
        },
        "org.apache.commons.io.output.WriterOutputStreamTest#testUTF16WithSingleByteWrite" : {
          "testcases" : {
            "org.apache.commons.io.output.WriterOutputStreamTest" : [ "testUTF16WithSingleByteWrite" ]
          }
        },
        "org.apache.commons.io.output.WriterOutputStreamTest#testUTF8WithBufferedWrite" : {
          "testcases" : {
            "org.apache.commons.io.output.WriterOutputStreamTest" : [ "testUTF8WithBufferedWrite" ]
          }
        },
        "org.apache.commons.io.output.WriterOutputStreamTest#testUTF8WithSingleByteWrite" : {
          "testcases" : {
            "org.apache.commons.io.output.WriterOutputStreamTest" : [ "testUTF8WithSingleByteWrite" ]
          }
        },
        "org.apache.commons.io.output.WriterOutputStreamTest#testWithBufferedWrite(java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.output.WriterOutputStreamTest" : [ "testLargeUTF8WithBufferedWrite", "testUTF8WithBufferedWrite" ]
          }
        },
        "org.apache.commons.io.output.WriterOutputStreamTest#testWithSingleByteWrite(java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.output.WriterOutputStreamTest" : [ "testLargeUTF8WithSingleByteWrite", "testUTF16WithSingleByteWrite", "testUTF8WithSingleByteWrite" ]
          }
        },
        "org.apache.commons.io.output.WriterOutputStreamTest#testWriteImmediately" : {
          "testcases" : {
            "org.apache.commons.io.output.WriterOutputStreamTest" : [ "testWriteImmediately" ]
          }
        }
      }
    },
    "96d5ebb4c523d89af6c8fa6f6a3fee86c823487c" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "4c83c48a2a6b5fae5eaf2279ce1a20bc0c3edee7",
      "changedClazzes" : { }
    },
    "2e06e9c1145fb30c3cffbfa38b84c4ac4c68db4f" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "96d5ebb4c523d89af6c8fa6f6a3fee86c823487c",
      "changedClazzes" : {
        "org.apache.commons.io.FileCleaningTracker" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerFile", "testFileCleanerNull" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerFile", "testFileCleanerNull" ]
          }
        },
        "org.apache.commons.io.FileCleaningTracker$Reaper" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerFile" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerFile" ]
          }
        },
        "org.apache.commons.io.FileCleaningTracker$Tracker" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerFile" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerFile" ]
          }
        },
        "org.apache.commons.io.FileDeleteStrategy" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerFile", "testFileCleanerNull" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerFile", "testFileCleanerNull" ],
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce", "testDeleteNormal", "testDeleteNull", "testDeleteQuietlyNormal", "testToString" ]
          }
        },
        "org.apache.commons.io.FileDeleteStrategy$ForceFileDeleteStrategy" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerFile", "testFileCleanerNull" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerFile", "testFileCleanerNull" ],
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce", "testDeleteNormal", "testDeleteNull", "testDeleteQuietlyNormal", "testToString" ]
          }
        },
        "org.apache.commons.io.comparator.AbstractFileComparator" : {
          "testcases" : {
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorArrayNull", "testConstructorIterable", "testConstructorIterableNull" ],
            "org.apache.commons.io.comparator.DirectoryFileComparatorTest" : [ "testSortArray", "testSortList" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ],
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.comparator.CompositeFileComparator" : {
          "testcases" : {
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorArrayNull", "testConstructorIterable", "testConstructorIterableNull" ]
          }
        },
        "org.apache.commons.io.comparator.ExtensionFileComparator" : {
          "testcases" : {
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorArrayNull", "testConstructorIterable", "testConstructorIterableNull" ]
          }
        },
        "org.apache.commons.io.comparator.NameFileComparator" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.comparator.PathFileComparator" : { },
        "org.apache.commons.io.comparator.ReverseComparator" : {
          "testcases" : {
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorArrayNull", "testConstructorIterable", "testConstructorIterableNull" ],
            "org.apache.commons.io.comparator.DirectoryFileComparatorTest" : [ "testSortArray", "testSortList" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ],
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.comparator.SizeFileComparator" : {
          "testcases" : {
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorArrayNull", "testConstructorIterable", "testConstructorIterableNull" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ]
          }
        },
        "org.apache.commons.io.filefilter.AndFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilterAndLimitB", "testFilterAndLimitC", "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testListFiles" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAnd", "testCanRead", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testSizeFilter" ],
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.WildcardFilter" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testDeprecatedWildcard" ]
          }
        }
      }
    },
    "7cf17155587fea0f9c855de67fe7a60d7e6c30eb" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "2e06e9c1145fb30c3cffbfa38b84c4ac4c68db4f",
      "changedClazzes" : {
        "org.apache.commons.io.FileCleaner" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerFile", "testFileCleanerNull" ]
          }
        }
      }
    },
    "e702b9fa057131e21bff06a6a01809379b02a9a6" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "7cf17155587fea0f9c855de67fe7a60d7e6c30eb",
      "changedClazzes" : { }
    },
    "d4c5044c7b7697d944a444470a296dcd15911595" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "e702b9fa057131e21bff06a6a01809379b02a9a6",
      "changedClazzes" : {
        "org.apache.commons.io.DirectoryWalker" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testCancel", "testFilter", "testFilterAndLimitA", "testFilterAndLimitB", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile2", "testFilterDirAndFile3", "testFilterDirAndFile4", "testHandleStartDirectoryFalse", "testLimitToCurrent", "testMissingStartDirectory", "testMultiThreadCancel" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToGrandChild" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker$CancelException" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testCancel", "testMultiThreadCancel" ]
          }
        },
        "org.apache.commons.io.FileUtils#cleanDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerNull" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerNull" ],
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce" ],
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testCleanEmpty", "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile", "testThrowsOnNullList" ],
            "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" : [ "testCleanDirWithASymlinkDir", "testCleanDirWithParentSymlinks", "testCleanDirWithSymlinkFile", "testCorrectlyIdentifySymlinkWithParentSymLink", "testIdentifiesSymlinkDir", "testIdentifiesSymlinkFile", "testStillClearsIfGivenDirectoryIsASymlink" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToString", "testReadLines", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ],
            "org.apache.commons.io.FileUtilsWaitForTestCase" : [ "testWaitFor" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPrefix", "testGetPrefixLength", "testIndexOfExtension", "testIndexOfLastSeparator", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testNormalize", "testNormalizeNoEndSeparator", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testByteArrayToOutputStream", "testByteArrayToString", "testByteArrayToWriter", "testConstants", "testInputStreamToByteArray", "testInputStreamToCharArray", "testInputStreamToCharArrayWithEncoding", "testInputStreamToString", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testReaderToCharArray", "testReaderToString", "testStringToByteArray", "testStringToInputStream", "testStringToOutputStream", "testStringToWriter" ],
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFiltering", "testInvalidEncoding", "testMissingFile", "testNextLineOnly", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorArrayNull", "testConstructorIterable", "testConstructorIterableNull" ],
            "org.apache.commons.io.comparator.DirectoryFileComparatorTest" : [ "testSortArray", "testSortList" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testAnd", "testCanRead", "testCanWrite", "testDelegateFileFilter", "testDeprecatedWildcard", "testDirectory", "testEmpty", "testFalse", "testFiles", "testHidden", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNameFilterNullArrayArgument", "testNameFilterNullListArgument", "testNot", "testOr", "testPrefix", "testPrefixCaseInsensitive", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testTrue", "testWildcard" ],
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ],
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.FileUtils#cleanDirectoryOnExit(java.io.File)" : { },
        "org.apache.commons.io.FileUtils#copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testMoveDirectory_CopyDelete" ]
          }
        },
        "org.apache.commons.io.FileUtils#deleteQuietly(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testMoveFile_CopyDelete_Failed" ],
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testFileDelete", "testObserveSingleFile" ],
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "testConstructor_File_encoding_badEncoding" ]
          }
        },
        "org.apache.commons.io.FileUtils#doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testMoveDirectory_CopyDelete" ]
          }
        },
        "org.apache.commons.io.FileUtils#innerListFiles(java.util.Collection,java.io.File,org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testListFiles" ]
          }
        },
        "org.apache.commons.io.FileUtils#sizeOfDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testSizeOfDirectory" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes" ]
          }
        },
        "org.apache.commons.io.FilenameUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceUnix_String_EmptyResponse", "testGetFreeSpaceUnix_String_InvalidResponse1", "testGetFreeSpaceUnix_String_InvalidResponse2", "testGetFreeSpaceUnix_String_InvalidResponse3", "testGetFreeSpaceUnix_String_InvalidResponse4", "testGetFreeSpaceUnix_String_LongResponse", "testGetFreeSpaceUnix_String_LongResponseKb", "testGetFreeSpaceUnix_String_NormalResponseFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbLinux", "testGetFreeSpaceUnix_String_NormalResponseKbSolaris", "testGetFreeSpaceUnix_String_NormalResponseLinux", "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpace_String" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered", "testIterateFiles", "testListFiles" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPrefix", "testGetPrefixLength", "testIndexOfExtension", "testIndexOfLastSeparator", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testNormalize", "testNormalizeNoEndSeparator", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.FilenameUtilsWildcardTestCase" : [ "testLocaleIndependence", "testMatch", "testMatch2", "testMatchCaseSpecified", "testMatchOnSystem", "testSplitOnTokens" ],
            "org.apache.commons.io.IOCaseTestCase" : [ "test_checkCompare_case", "test_checkCompare_functionality", "test_checkEndsWith_case", "test_checkEndsWith_functionality", "test_checkEquals_case", "test_checkEquals_functionality", "test_checkIndexOf_case", "test_checkIndexOf_functionality", "test_checkRegionMatches_case", "test_checkRegionMatches_functionality", "test_checkStartsWith_case", "test_checkStartsWith_functionality", "test_forName", "test_getName", "test_isCaseSensitive", "test_serialization", "test_toString" ],
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorArrayNull", "testConstructorIterable", "testConstructorIterableNull" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testDeprecatedWildcard", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testPrefix", "testPrefixCaseInsensitive", "testSuffix", "testSuffixCaseInsensitive", "testWildcard" ],
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ],
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.IOUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy" ],
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce", "testDeleteNormal", "testDeleteQuietlyNormal" ],
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceUnix_String_EmptyResponse", "testGetFreeSpaceUnix_String_InvalidResponse1", "testGetFreeSpaceUnix_String_InvalidResponse2", "testGetFreeSpaceUnix_String_InvalidResponse3", "testGetFreeSpaceUnix_String_InvalidResponse4", "testGetFreeSpaceUnix_String_LongResponse", "testGetFreeSpaceUnix_String_LongResponseKb", "testGetFreeSpaceUnix_String_NormalResponseFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbLinux", "testGetFreeSpaceUnix_String_NormalResponseKbSolaris", "testGetFreeSpaceUnix_String_NormalResponseLinux", "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpace_String" ],
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile" ],
            "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" : [ "testCleanDirWithASymlinkDir", "testCleanDirWithParentSymlinks", "testCleanDirWithSymlinkFile", "testIdentifiesSymlinkFile", "testStillClearsIfGivenDirectoryIsASymlink" ],
            "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToString", "testReadLines", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPrefix", "testGetPrefixLength", "testIndexOfExtension", "testIndexOfLastSeparator", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testNormalize", "testNormalizeNoEndSeparator", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToOutputStream_nullIn", "testCopy_inputStreamToOutputStream_nullOut", "testCopy_inputStreamToWriter", "testCopy_inputStreamToWriter_Encoding", "testCopy_inputStreamToWriter_Encoding_nullEncoding", "testCopy_inputStreamToWriter_Encoding_nullIn", "testCopy_inputStreamToWriter_Encoding_nullOut", "testCopy_inputStreamToWriter_nullIn", "testCopy_inputStreamToWriter_nullOut", "testCopy_readerToOutputStream", "testCopy_readerToOutputStream_Encoding", "testCopy_readerToOutputStream_Encoding_nullEncoding", "testCopy_readerToOutputStream_Encoding_nullIn", "testCopy_readerToOutputStream_Encoding_nullOut", "testCopy_readerToOutputStream_nullIn", "testCopy_readerToOutputStream_nullOut", "testCopy_readerToWriter", "testCopy_readerToWriter_nullIn", "testCopy_readerToWriter_nullOut" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testByteArrayToOutputStream", "testByteArrayToString", "testByteArrayToWriter", "testConstants", "testInputStreamToByteArray", "testInputStreamToCharArray", "testInputStreamToCharArrayWithEncoding", "testInputStreamToString", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testReaderToCharArray", "testReaderToString", "testStringToByteArray", "testStringToInputStream", "testStringToOutputStream", "testStringToWriter" ],
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWriteLines_OutputStream", "testWriteLines_OutputStream_Encoding", "testWriteLines_OutputStream_Encoding_nullData", "testWriteLines_OutputStream_Encoding_nullEncoding", "testWriteLines_OutputStream_Encoding_nullSeparator", "testWriteLines_OutputStream_Encoding_nullStream", "testWriteLines_OutputStream_nullData", "testWriteLines_OutputStream_nullSeparator", "testWriteLines_OutputStream_nullStream", "testWriteLines_Writer", "testWriteLines_Writer_nullData", "testWriteLines_Writer_nullSeparator", "testWriteLines_Writer_nullStream", "testWrite_byteArrayToOutputStream", "testWrite_byteArrayToOutputStream_nullData", "testWrite_byteArrayToOutputStream_nullStream", "testWrite_byteArrayToWriter", "testWrite_byteArrayToWriter_Encoding", "testWrite_byteArrayToWriter_Encoding_nullData", "testWrite_byteArrayToWriter_Encoding_nullEncoding", "testWrite_byteArrayToWriter_Encoding_nullWriter", "testWrite_byteArrayToWriter_nullData", "testWrite_byteArrayToWriter_nullWriter", "testWrite_charArrayToOutputStream", "testWrite_charArrayToOutputStream_Encoding", "testWrite_charArrayToOutputStream_Encoding_nullData", "testWrite_charArrayToOutputStream_Encoding_nullStream", "testWrite_charArrayToOutputStream_nullData", "testWrite_charArrayToOutputStream_nullEncoding", "testWrite_charArrayToOutputStream_nullStream", "testWrite_charArrayToWriter", "testWrite_charArrayToWriter_Encoding_nullData", "testWrite_charArrayToWriter_Encoding_nullStream", "testWrite_charSequenceToOutputStream", "testWrite_charSequenceToOutputStream_Encoding", "testWrite_charSequenceToOutputStream_Encoding_nullData", "testWrite_charSequenceToOutputStream_Encoding_nullStream", "testWrite_charSequenceToOutputStream_nullData", "testWrite_charSequenceToOutputStream_nullEncoding", "testWrite_charSequenceToOutputStream_nullStream", "testWrite_charSequenceToWriter", "testWrite_charSequenceToWriter_Encoding_nullData", "testWrite_charSequenceToWriter_Encoding_nullStream", "testWrite_stringToOutputStream", "testWrite_stringToOutputStream_Encoding", "testWrite_stringToOutputStream_Encoding_nullData", "testWrite_stringToOutputStream_Encoding_nullStream", "testWrite_stringToOutputStream_nullData", "testWrite_stringToOutputStream_nullEncoding", "testWrite_stringToOutputStream_nullStream", "testWrite_stringToWriter", "testWrite_stringToWriter_Encoding_nullData", "testWrite_stringToWriter_Encoding_nullStream" ],
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testFiltering", "testInvalidEncoding", "testMissingFile", "testNextLineOnly", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorArrayNull", "testConstructorIterable", "testConstructorIterableNull" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testCanRead", "testCanWrite", "testEmpty", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testSizeFilter" ],
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ],
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testWriteToLarge" ],
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testConstructor_fileName_nullFile", "testDifferentEncoding", "testSameEncoding" ],
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testConstructor_fileName_nullFile", "testFileLocked", "testFileNotLocked" ]
          }
        },
        "org.apache.commons.io.comparator.CompositeFileComparator" : {
          "testcases" : {
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorArrayNull", "testConstructorIterable", "testConstructorIterableNull" ]
          }
        },
        "org.apache.commons.io.filefilter.AndFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilterAndLimitB", "testFilterAndLimitC", "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testListFiles" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAnd", "testCanRead", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testSizeFilter" ],
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.NameFileFilter#accept(java.io.File,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware" ]
          }
        },
        "org.apache.commons.io.filefilter.OrFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilter", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testListFiles" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testDelegateFileFilter", "testOr", "testSuffix" ],
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.PrefixFileFilter#accept(java.io.File,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testPrefix" ]
          }
        },
        "org.apache.commons.io.filefilter.SuffixFileFilter#accept(java.io.File,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testSuffix" ]
          }
        },
        "org.apache.commons.io.filefilter.WildcardFileFilter#accept(java.io.File,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testWildcard" ]
          }
        },
        "org.apache.commons.io.filefilter.WildcardFilter#accept(java.io.File,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testDeprecatedWildcard" ]
          }
        },
        "org.apache.commons.io.input.ClassLoaderObjectInputStream" : {
          "testcases" : {
            "org.apache.commons.io.input.ClassLoaderObjectInputStreamTest" : [ "testExpected" ]
          }
        },
        "org.apache.commons.io.input.DemuxInputStream" : {
          "testcases" : {
            "org.apache.commons.io.DemuxTestCase" : [ "testInputStream" ]
          }
        },
        "org.apache.commons.io.input.NullInputStream" : {
          "testcases" : {
            "org.apache.commons.io.input.NullInputStreamTest" : [ "testEOFException", "testMarkAndReset", "testMarkNotSupported", "testRead", "testReadByteArray", "testSkip" ]
          }
        },
        "org.apache.commons.io.input.NullReader" : {
          "testcases" : {
            "org.apache.commons.io.input.NullReaderTest" : [ "testEOFException", "testMarkAndReset", "testMarkNotSupported", "testRead", "testReadCharArray", "testSkip" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemEntry" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemMonitor#<init>(long,org.apache.commons.io.monitor.FilesystemObserver[])" : { },
        "org.apache.commons.io.monitor.FilesystemMonitor#run" : { },
        "org.apache.commons.io.monitor.FilesystemMonitor#stop" : { },
        "org.apache.commons.io.monitor.FilesystemObserver#checkAndNotify(org.apache.commons.io.monitor.FilesystemEntry,org.apache.commons.io.monitor.FilesystemEntry[],org.apache.commons.io.monitor.File[])" : { },
        "org.apache.commons.io.monitor.FilesystemObserver#doCreate(org.apache.commons.io.monitor.FilesystemEntry)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream" : {
          "testcases" : {
            "org.apache.commons.io.CopyUtilsTest" : [ "testCopy_byteArrayToOutputStream", "testCopy_byteArrayToWriter", "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToWriter", "testCopy_readerToOutputStream", "testCopy_readerToWriter", "testCopy_stringToOutputStream", "testCopy_stringToWriter" ],
            "org.apache.commons.io.DemuxTestCase" : [ "testOutputStream" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testReadFileToByteArray" ],
            "org.apache.commons.io.HexDumpTest" : [ "testDump" ],
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToOutputStream_nullIn", "testCopy_inputStreamToWriter", "testCopy_inputStreamToWriter_Encoding", "testCopy_inputStreamToWriter_Encoding_nullEncoding", "testCopy_inputStreamToWriter_Encoding_nullIn", "testCopy_inputStreamToWriter_nullIn", "testCopy_readerToOutputStream", "testCopy_readerToOutputStream_Encoding", "testCopy_readerToOutputStream_Encoding_nullEncoding", "testCopy_readerToOutputStream_Encoding_nullIn", "testCopy_readerToOutputStream_nullIn", "testCopy_readerToWriter", "testCopy_readerToWriter_nullIn" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testByteArrayToOutputStream", "testByteArrayToString", "testByteArrayToWriter", "testInputStreamToByteArray", "testStringToInputStream" ],
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWriteLines_OutputStream", "testWriteLines_OutputStream_Encoding", "testWriteLines_OutputStream_Encoding_nullData", "testWriteLines_OutputStream_Encoding_nullEncoding", "testWriteLines_OutputStream_Encoding_nullSeparator", "testWriteLines_OutputStream_nullData", "testWriteLines_OutputStream_nullSeparator", "testWriteLines_Writer", "testWriteLines_Writer_nullData", "testWriteLines_Writer_nullSeparator", "testWrite_byteArrayToOutputStream", "testWrite_byteArrayToOutputStream_nullData", "testWrite_byteArrayToWriter", "testWrite_byteArrayToWriter_Encoding", "testWrite_byteArrayToWriter_Encoding_nullData", "testWrite_byteArrayToWriter_Encoding_nullEncoding", "testWrite_byteArrayToWriter_nullData", "testWrite_charArrayToOutputStream", "testWrite_charArrayToOutputStream_Encoding", "testWrite_charArrayToOutputStream_Encoding_nullData", "testWrite_charArrayToOutputStream_nullData", "testWrite_charArrayToOutputStream_nullEncoding", "testWrite_charArrayToWriter", "testWrite_charArrayToWriter_Encoding_nullData", "testWrite_charSequenceToOutputStream", "testWrite_charSequenceToOutputStream_Encoding", "testWrite_charSequenceToOutputStream_Encoding_nullData", "testWrite_charSequenceToOutputStream_nullData", "testWrite_charSequenceToOutputStream_nullEncoding", "testWrite_charSequenceToWriter", "testWrite_charSequenceToWriter_Encoding_nullData", "testWrite_stringToOutputStream", "testWrite_stringToOutputStream_Encoding", "testWrite_stringToOutputStream_Encoding_nullData", "testWrite_stringToOutputStream_nullData", "testWrite_stringToOutputStream_nullEncoding", "testWrite_stringToWriter", "testWrite_stringToWriter_Encoding_nullData" ],
            "org.apache.commons.io.output.ByteArrayOutputStreamTestCase" : [ "testStream" ],
            "org.apache.commons.io.output.CloseShieldOutputStreamTest" : [ "testClose" ],
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testAboveThreshold", "testAtThreshold", "testBelowThreshold", "testTempFileAboveThreshold", "testTempFileAboveThresholdPrefixOnly", "testTempFileBelowThreshold", "testTempFileError", "testThresholdReached", "testWriteToLarge", "testWriteToSmall" ]
          }
        },
        "org.apache.commons.io.output.CountingOutputStream" : {
          "testcases" : {
            "org.apache.commons.io.output.CountingOutputStreamTest" : [ "testCounting" ]
          }
        },
        "org.apache.commons.io.output.DeferredFileOutputStream" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testAboveThreshold", "testAtThreshold", "testBelowThreshold", "testTempFileAboveThreshold", "testTempFileAboveThresholdPrefixOnly", "testTempFileBelowThreshold", "testTempFileError", "testThresholdReached", "testWriteToLarge", "testWriteToSmall" ]
          }
        },
        "org.apache.commons.io.output.DemuxOutputStream" : {
          "testcases" : {
            "org.apache.commons.io.DemuxTestCase" : [ "testOutputStream" ]
          }
        },
        "org.apache.commons.io.output.ThresholdingOutputStream" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testAboveThreshold", "testAtThreshold", "testBelowThreshold", "testTempFileAboveThreshold", "testTempFileAboveThresholdPrefixOnly", "testTempFileBelowThreshold", "testTempFileError", "testThresholdReached", "testWriteToLarge", "testWriteToSmall" ]
          }
        }
      }
    },
    "28c59d7e10c28c3911970b61327af1be95f0399d" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "d4c5044c7b7697d944a444470a296dcd15911595",
      "changedClazzes" : {
        "org.apache.commons.io.comparator.AbstractFileComparator#toString" : {
          "testcases" : {
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorArrayNull", "testConstructorIterableNull" ]
          }
        },
        "org.apache.commons.io.filefilter.AbstractFileFilter#toString" : { }
      }
    },
    "bccee3ba757d0accbe27bc9e09420781214ba631" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "28c59d7e10c28c3911970b61327af1be95f0399d",
      "changedClazzes" : {
        "org.apache.commons.io.input.BrokenInputStream" : { },
        "org.apache.commons.io.input.BrokenInputStream#<init>(java.io.IOException)" : {
          "testcases" : {
            "org.apache.commons.io.input.BrokenInputStreamTest" : [ "testAvailable", "testClose", "testRead", "testReset", "testSkip" ]
          }
        },
        "org.apache.commons.io.input.BrokenInputStream#available" : {
          "testcases" : {
            "org.apache.commons.io.input.BrokenInputStreamTest" : [ "testAvailable" ]
          }
        },
        "org.apache.commons.io.input.BrokenInputStream#close" : {
          "testcases" : {
            "org.apache.commons.io.input.BrokenInputStreamTest" : [ "testClose" ]
          }
        },
        "org.apache.commons.io.input.BrokenInputStream#read" : {
          "testcases" : {
            "org.apache.commons.io.input.BrokenInputStreamTest" : [ "testRead" ]
          }
        },
        "org.apache.commons.io.input.BrokenInputStream#reset" : {
          "testcases" : {
            "org.apache.commons.io.input.BrokenInputStreamTest" : [ "testReset" ]
          }
        },
        "org.apache.commons.io.input.BrokenInputStream#skip(long)" : {
          "testcases" : {
            "org.apache.commons.io.input.BrokenInputStreamTest" : [ "testSkip" ]
          }
        },
        "org.apache.commons.io.input.BrokenInputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.input.BrokenInputStreamTest" : [ "testAvailable", "testClose", "testRead", "testReset", "testSkip" ]
          }
        },
        "org.apache.commons.io.input.BrokenInputStreamTest#setUp" : {
          "testcases" : {
            "org.apache.commons.io.input.BrokenInputStreamTest" : [ "testAvailable", "testClose", "testRead", "testReset", "testSkip" ]
          }
        },
        "org.apache.commons.io.input.BrokenInputStreamTest#testAvailable" : {
          "testcases" : {
            "org.apache.commons.io.input.BrokenInputStreamTest" : [ "testAvailable" ]
          }
        },
        "org.apache.commons.io.input.BrokenInputStreamTest#testClose" : {
          "testcases" : {
            "org.apache.commons.io.input.BrokenInputStreamTest" : [ "testClose" ]
          }
        },
        "org.apache.commons.io.input.BrokenInputStreamTest#testRead" : {
          "testcases" : {
            "org.apache.commons.io.input.BrokenInputStreamTest" : [ "testRead" ]
          }
        },
        "org.apache.commons.io.input.BrokenInputStreamTest#testReset" : {
          "testcases" : {
            "org.apache.commons.io.input.BrokenInputStreamTest" : [ "testReset" ]
          }
        },
        "org.apache.commons.io.input.BrokenInputStreamTest#testSkip" : {
          "testcases" : {
            "org.apache.commons.io.input.BrokenInputStreamTest" : [ "testSkip" ]
          }
        },
        "org.apache.commons.io.input.PackageTestSuite#suite" : { },
        "org.apache.commons.io.output.BrokenOutputStream" : { },
        "org.apache.commons.io.output.BrokenOutputStream#<init>(java.io.IOException)" : {
          "testcases" : {
            "org.apache.commons.io.output.BrokenOutputStreamTest" : [ "testClose", "testFlush", "testWrite" ]
          }
        },
        "org.apache.commons.io.output.BrokenOutputStream#close" : {
          "testcases" : {
            "org.apache.commons.io.output.BrokenOutputStreamTest" : [ "testClose" ]
          }
        },
        "org.apache.commons.io.output.BrokenOutputStream#flush" : {
          "testcases" : {
            "org.apache.commons.io.output.BrokenOutputStreamTest" : [ "testFlush" ]
          }
        },
        "org.apache.commons.io.output.BrokenOutputStream#write(int)" : {
          "testcases" : {
            "org.apache.commons.io.output.BrokenOutputStreamTest" : [ "testWrite" ]
          }
        },
        "org.apache.commons.io.output.BrokenOutputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.output.BrokenOutputStreamTest" : [ "testClose", "testFlush", "testWrite" ]
          }
        },
        "org.apache.commons.io.output.BrokenOutputStreamTest#setUp" : {
          "testcases" : {
            "org.apache.commons.io.output.BrokenOutputStreamTest" : [ "testClose", "testFlush", "testWrite" ]
          }
        },
        "org.apache.commons.io.output.BrokenOutputStreamTest#testClose" : {
          "testcases" : {
            "org.apache.commons.io.output.BrokenOutputStreamTest" : [ "testClose" ]
          }
        },
        "org.apache.commons.io.output.BrokenOutputStreamTest#testFlush" : {
          "testcases" : {
            "org.apache.commons.io.output.BrokenOutputStreamTest" : [ "testFlush" ]
          }
        },
        "org.apache.commons.io.output.BrokenOutputStreamTest#testWrite" : {
          "testcases" : {
            "org.apache.commons.io.output.BrokenOutputStreamTest" : [ "testWrite" ]
          }
        },
        "org.apache.commons.io.output.PackageTestSuite#suite" : { }
      }
    },
    "7c80287d174486fcbb387ba50cba90e43f72586d" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "bccee3ba757d0accbe27bc9e09420781214ba631",
      "changedClazzes" : {
        "org.apache.commons.io.input.BrokenInputStream" : {
          "testcases" : {
            "org.apache.commons.io.input.BrokenInputStreamTest" : [ "testAvailable", "testClose", "testRead", "testReset", "testSkip" ]
          }
        }
      }
    },
    "71fd53258da00eaf9dfb6c7bb92a9ec170bc976b" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "7c80287d174486fcbb387ba50cba90e43f72586d",
      "changedClazzes" : {
        "org.apache.commons.io.IOExceptionWithCause#<init>(java.lang.String,java.lang.Throwable)" : {
          "testcases" : {
            "org.apache.commons.io.TaggedIOExceptionTest" : [ "testTaggedIOException" ],
            "org.apache.commons.io.input.TaggedInputStreamTest" : [ "testBrokenStream", "testOtherException" ],
            "org.apache.commons.io.output.TaggedOutputStreamTest" : [ "testBrokenStream", "testOtherException" ]
          }
        },
        "org.apache.commons.io.PackageTestSuite#suite" : { },
        "org.apache.commons.io.TaggedIOException" : { },
        "org.apache.commons.io.TaggedIOException#<init>(java.io.IOException,java.lang.Object)" : {
          "testcases" : {
            "org.apache.commons.io.TaggedIOExceptionTest" : [ "testTaggedIOException" ],
            "org.apache.commons.io.input.TaggedInputStreamTest" : [ "testBrokenStream", "testOtherException" ],
            "org.apache.commons.io.output.TaggedOutputStreamTest" : [ "testBrokenStream", "testOtherException" ]
          }
        },
        "org.apache.commons.io.TaggedIOException#getCause" : {
          "testcases" : {
            "org.apache.commons.io.TaggedIOExceptionTest" : [ "testTaggedIOException" ],
            "org.apache.commons.io.input.TaggedInputStreamTest" : [ "testBrokenStream" ],
            "org.apache.commons.io.output.TaggedOutputStreamTest" : [ "testBrokenStream" ]
          }
        },
        "org.apache.commons.io.TaggedIOException#getTag" : {
          "testcases" : {
            "org.apache.commons.io.TaggedIOExceptionTest" : [ "testTaggedIOException" ],
            "org.apache.commons.io.input.TaggedInputStreamTest" : [ "testBrokenStream", "testOtherException" ],
            "org.apache.commons.io.output.TaggedOutputStreamTest" : [ "testBrokenStream", "testOtherException" ]
          }
        },
        "org.apache.commons.io.TaggedIOExceptionTest" : {
          "testcases" : {
            "org.apache.commons.io.TaggedIOExceptionTest" : [ "testTaggedIOException" ]
          }
        },
        "org.apache.commons.io.TaggedIOExceptionTest#testTaggedIOException" : {
          "testcases" : {
            "org.apache.commons.io.TaggedIOExceptionTest" : [ "testTaggedIOException" ]
          }
        },
        "org.apache.commons.io.input.BrokenInputStream#<init>(java.io.IOException)" : {
          "testcases" : {
            "org.apache.commons.io.input.TaggedInputStreamTest" : [ "testBrokenStream" ]
          }
        },
        "org.apache.commons.io.input.BrokenInputStream#available" : {
          "testcases" : {
            "org.apache.commons.io.input.TaggedInputStreamTest" : [ "testBrokenStream" ]
          }
        },
        "org.apache.commons.io.input.BrokenInputStream#close" : {
          "testcases" : {
            "org.apache.commons.io.input.TaggedInputStreamTest" : [ "testBrokenStream" ]
          }
        },
        "org.apache.commons.io.input.BrokenInputStream#read" : {
          "testcases" : {
            "org.apache.commons.io.input.TaggedInputStreamTest" : [ "testBrokenStream" ]
          }
        },
        "org.apache.commons.io.input.ClosedInputStream#<init>" : {
          "testcases" : {
            "org.apache.commons.io.input.TaggedInputStreamTest" : [ "testEmptyStream", "testOtherException" ]
          }
        },
        "org.apache.commons.io.input.ClosedInputStream#read" : {
          "testcases" : {
            "org.apache.commons.io.input.TaggedInputStreamTest" : [ "testEmptyStream" ]
          }
        },
        "org.apache.commons.io.input.PackageTestSuite#suite" : { },
        "org.apache.commons.io.input.ProxyInputStream#<init>(java.io.InputStream)" : {
          "testcases" : {
            "org.apache.commons.io.input.TaggedInputStreamTest" : [ "testBrokenStream", "testEmptyStream", "testNormalStream", "testOtherException" ]
          }
        },
        "org.apache.commons.io.input.ProxyInputStream#available" : {
          "testcases" : {
            "org.apache.commons.io.input.TaggedInputStreamTest" : [ "testBrokenStream", "testEmptyStream", "testNormalStream" ]
          }
        },
        "org.apache.commons.io.input.ProxyInputStream#close" : {
          "testcases" : {
            "org.apache.commons.io.input.TaggedInputStreamTest" : [ "testBrokenStream", "testEmptyStream", "testNormalStream" ]
          }
        },
        "org.apache.commons.io.input.ProxyInputStream#read" : {
          "testcases" : {
            "org.apache.commons.io.input.TaggedInputStreamTest" : [ "testEmptyStream", "testNormalStream" ]
          }
        },
        "org.apache.commons.io.input.TaggedInputStream" : { },
        "org.apache.commons.io.input.TaggedInputStream#<init>(java.io.InputStream)" : {
          "testcases" : {
            "org.apache.commons.io.input.TaggedInputStreamTest" : [ "testBrokenStream", "testEmptyStream", "testNormalStream", "testOtherException" ]
          }
        },
        "org.apache.commons.io.input.TaggedInputStream#available" : {
          "testcases" : {
            "org.apache.commons.io.input.TaggedInputStreamTest" : [ "testBrokenStream", "testEmptyStream", "testNormalStream" ]
          }
        },
        "org.apache.commons.io.input.TaggedInputStream#close" : {
          "testcases" : {
            "org.apache.commons.io.input.TaggedInputStreamTest" : [ "testBrokenStream", "testEmptyStream", "testNormalStream" ]
          }
        },
        "org.apache.commons.io.input.TaggedInputStream#isCauseOf(java.io.IOException)" : {
          "testcases" : {
            "org.apache.commons.io.input.TaggedInputStreamTest" : [ "testBrokenStream", "testOtherException" ]
          }
        },
        "org.apache.commons.io.input.TaggedInputStream#read" : {
          "testcases" : {
            "org.apache.commons.io.input.TaggedInputStreamTest" : [ "testEmptyStream", "testNormalStream" ]
          }
        },
        "org.apache.commons.io.input.TaggedInputStream#throwIfCauseOf(java.lang.Exception)" : {
          "testcases" : {
            "org.apache.commons.io.input.TaggedInputStreamTest" : [ "testBrokenStream", "testOtherException" ]
          }
        },
        "org.apache.commons.io.input.TaggedInputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.input.TaggedInputStreamTest" : [ "testBrokenStream", "testEmptyStream", "testNormalStream", "testOtherException" ]
          }
        },
        "org.apache.commons.io.input.TaggedInputStreamTest#testBrokenStream" : {
          "testcases" : {
            "org.apache.commons.io.input.TaggedInputStreamTest" : [ "testBrokenStream" ]
          }
        },
        "org.apache.commons.io.input.TaggedInputStreamTest#testEmptyStream" : {
          "testcases" : {
            "org.apache.commons.io.input.TaggedInputStreamTest" : [ "testEmptyStream" ]
          }
        },
        "org.apache.commons.io.input.TaggedInputStreamTest#testNormalStream" : {
          "testcases" : {
            "org.apache.commons.io.input.TaggedInputStreamTest" : [ "testNormalStream" ]
          }
        },
        "org.apache.commons.io.input.TaggedInputStreamTest#testOtherException" : {
          "testcases" : {
            "org.apache.commons.io.input.TaggedInputStreamTest" : [ "testOtherException" ]
          }
        },
        "org.apache.commons.io.output.BrokenOutputStream#<init>(java.io.IOException)" : {
          "testcases" : {
            "org.apache.commons.io.output.TaggedOutputStreamTest" : [ "testBrokenStream" ]
          }
        },
        "org.apache.commons.io.output.BrokenOutputStream#close" : {
          "testcases" : {
            "org.apache.commons.io.output.TaggedOutputStreamTest" : [ "testBrokenStream" ]
          }
        },
        "org.apache.commons.io.output.BrokenOutputStream#flush" : {
          "testcases" : {
            "org.apache.commons.io.output.TaggedOutputStreamTest" : [ "testBrokenStream" ]
          }
        },
        "org.apache.commons.io.output.BrokenOutputStream#write(int)" : {
          "testcases" : {
            "org.apache.commons.io.output.TaggedOutputStreamTest" : [ "testBrokenStream" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream#<init>" : {
          "testcases" : {
            "org.apache.commons.io.output.TaggedOutputStreamTest" : [ "testNormalStream" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream#close" : {
          "testcases" : {
            "org.apache.commons.io.output.TaggedOutputStreamTest" : [ "testNormalStream" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream#needNewBuffer(int)" : {
          "testcases" : {
            "org.apache.commons.io.output.TaggedOutputStreamTest" : [ "testNormalStream" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream#size" : {
          "testcases" : {
            "org.apache.commons.io.output.TaggedOutputStreamTest" : [ "testNormalStream" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream#toByteArray" : {
          "testcases" : {
            "org.apache.commons.io.output.TaggedOutputStreamTest" : [ "testNormalStream" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream#write(byte[],int,int)" : {
          "testcases" : {
            "org.apache.commons.io.output.TaggedOutputStreamTest" : [ "testNormalStream" ]
          }
        },
        "org.apache.commons.io.output.ClosedOutputStream#<init>" : {
          "testcases" : {
            "org.apache.commons.io.output.TaggedOutputStreamTest" : [ "testOtherException" ]
          }
        },
        "org.apache.commons.io.output.PackageTestSuite#suite" : { },
        "org.apache.commons.io.output.ProxyOutputStream#<init>(java.io.OutputStream)" : {
          "testcases" : {
            "org.apache.commons.io.output.TaggedOutputStreamTest" : [ "testBrokenStream", "testNormalStream", "testOtherException" ]
          }
        },
        "org.apache.commons.io.output.ProxyOutputStream#close" : {
          "testcases" : {
            "org.apache.commons.io.output.TaggedOutputStreamTest" : [ "testBrokenStream", "testNormalStream" ]
          }
        },
        "org.apache.commons.io.output.ProxyOutputStream#flush" : {
          "testcases" : {
            "org.apache.commons.io.output.TaggedOutputStreamTest" : [ "testBrokenStream", "testNormalStream" ]
          }
        },
        "org.apache.commons.io.output.ProxyOutputStream#write(byte[])" : {
          "testcases" : {
            "org.apache.commons.io.output.TaggedOutputStreamTest" : [ "testBrokenStream", "testNormalStream" ]
          }
        },
        "org.apache.commons.io.output.TaggedOutputStream" : { },
        "org.apache.commons.io.output.TaggedOutputStream#<init>(java.io.OutputStream)" : {
          "testcases" : {
            "org.apache.commons.io.output.TaggedOutputStreamTest" : [ "testBrokenStream", "testNormalStream", "testOtherException" ]
          }
        },
        "org.apache.commons.io.output.TaggedOutputStream#close" : {
          "testcases" : {
            "org.apache.commons.io.output.TaggedOutputStreamTest" : [ "testBrokenStream", "testNormalStream" ]
          }
        },
        "org.apache.commons.io.output.TaggedOutputStream#flush" : {
          "testcases" : {
            "org.apache.commons.io.output.TaggedOutputStreamTest" : [ "testBrokenStream", "testNormalStream" ]
          }
        },
        "org.apache.commons.io.output.TaggedOutputStream#isCauseOf(java.io.IOException)" : {
          "testcases" : {
            "org.apache.commons.io.output.TaggedOutputStreamTest" : [ "testBrokenStream", "testOtherException" ]
          }
        },
        "org.apache.commons.io.output.TaggedOutputStream#throwIfCauseOf(java.lang.Exception)" : {
          "testcases" : {
            "org.apache.commons.io.output.TaggedOutputStreamTest" : [ "testBrokenStream", "testOtherException" ]
          }
        },
        "org.apache.commons.io.output.TaggedOutputStream#write(byte[])" : {
          "testcases" : {
            "org.apache.commons.io.output.TaggedOutputStreamTest" : [ "testBrokenStream", "testNormalStream" ]
          }
        },
        "org.apache.commons.io.output.TaggedOutputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.output.TaggedOutputStreamTest" : [ "testBrokenStream", "testNormalStream", "testOtherException" ]
          }
        },
        "org.apache.commons.io.output.TaggedOutputStreamTest#testBrokenStream" : {
          "testcases" : {
            "org.apache.commons.io.output.TaggedOutputStreamTest" : [ "testBrokenStream" ]
          }
        },
        "org.apache.commons.io.output.TaggedOutputStreamTest#testNormalStream" : {
          "testcases" : {
            "org.apache.commons.io.output.TaggedOutputStreamTest" : [ "testNormalStream" ]
          }
        },
        "org.apache.commons.io.output.TaggedOutputStreamTest#testOtherException" : {
          "testcases" : {
            "org.apache.commons.io.output.TaggedOutputStreamTest" : [ "testOtherException" ]
          }
        }
      }
    },
    "3d9f182376029bfd0138a88b25e108c18935d0e9" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "71fd53258da00eaf9dfb6c7bb92a9ec170bc976b",
      "changedClazzes" : { }
    },
    "6319a20fdc43ab33c19d162d527b95ced13c0e76" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "3d9f182376029bfd0138a88b25e108c18935d0e9",
      "changedClazzes" : {
        "org.apache.commons.io.input.ProxyInputStream" : {
          "testcases" : {
            "org.apache.commons.io.CopyUtilsTest" : [ "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToWriter", "testCopy_readerToOutputStream", "testCopy_readerToWriter" ],
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToWriter", "testCopy_inputStreamToWriter_Encoding", "testCopy_inputStreamToWriter_Encoding_nullEncoding", "testCopy_readerToOutputStream", "testCopy_readerToOutputStream_Encoding", "testCopy_readerToOutputStream_Encoding_nullEncoding", "testCopy_readerToOutputStream_Encoding_nullOut", "testCopy_readerToOutputStream_nullOut", "testCopy_readerToWriter", "testCopy_readerToWriter_nullOut" ],
            "org.apache.commons.io.input.AutoCloseInputStreamTest" : [ "testClose", "testRead", "testReadBuffer", "testReadBufferOffsetLength" ],
            "org.apache.commons.io.input.BOMExclusionInputStreamTest" : [ "testAvailableWithBOM", "testAvailableWithoutBOM", "testClose", "testLargeBufferWithBOM", "testLargeBufferWithoutBOM", "testLeadingNonBOMBufferedRead", "testLeadingNonBOMSingleRead", "testMarkResetAfterReadWithBOM", "testMarkResetAfterReadWithoutBOM", "testMarkResetBeforeReadWithBOM", "testMarkResetBeforeReadWithoutBOM", "testReadWithBOM", "testReadWithoutBOM", "testSkipWithBOM", "testSkipWithoutBOM", "testSmallBufferWithBOM", "testSmallBufferWithoutBOM" ],
            "org.apache.commons.io.input.CloseShieldInputStreamTest" : [ "testClose" ],
            "org.apache.commons.io.input.CountingInputStreamTest" : [ "testCounting", "testEOF1", "testEOF2", "testEOF3", "testResetting", "testSkipping", "testZeroLength1", "testZeroLength2", "testZeroLength3" ],
            "org.apache.commons.io.input.SwappedDataInputStreamTest" : [ "testReadBoolean", "testReadByte", "testReadChar", "testReadDouble", "testReadFloat", "testReadFully", "testReadInt", "testReadLine", "testReadLong", "testReadShort", "testReadUTF", "testReadUnsignedByte", "testReadUnsignedShort", "testSkipBytes" ],
            "org.apache.commons.io.input.TaggedInputStreamTest" : [ "testBrokenStream", "testEmptyStream", "testNormalStream", "testOtherException" ],
            "org.apache.commons.io.input.TeeInputStreamTest" : [ "testMarkReset", "testReadEverything", "testReadNothing", "testReadOneByte", "testReadToArray", "testReadToArrayWithOffset", "testSkip" ]
          }
        },
        "org.apache.commons.io.input.ProxyReader" : { },
        "org.apache.commons.io.output.ProxyOutputStream" : {
          "testcases" : {
            "org.apache.commons.io.CopyUtilsTest" : [ "testCopy_byteArrayToOutputStream", "testCopy_byteArrayToWriter", "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToWriter", "testCopy_readerToOutputStream", "testCopy_readerToWriter", "testCopy_stringToOutputStream", "testCopy_stringToWriter" ],
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToWriter", "testCopy_inputStreamToWriter_Encoding", "testCopy_inputStreamToWriter_Encoding_nullEncoding", "testCopy_inputStreamToWriter_Encoding_nullIn", "testCopy_inputStreamToWriter_nullIn", "testCopy_readerToOutputStream", "testCopy_readerToOutputStream_Encoding", "testCopy_readerToOutputStream_Encoding_nullEncoding", "testCopy_readerToOutputStream_Encoding_nullIn", "testCopy_readerToOutputStream_nullIn", "testCopy_readerToWriter", "testCopy_readerToWriter_nullIn" ],
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWriteLines_OutputStream", "testWriteLines_OutputStream_Encoding", "testWriteLines_OutputStream_Encoding_nullData", "testWriteLines_OutputStream_Encoding_nullEncoding", "testWriteLines_OutputStream_Encoding_nullSeparator", "testWriteLines_OutputStream_nullData", "testWriteLines_OutputStream_nullSeparator", "testWriteLines_Writer", "testWriteLines_Writer_nullData", "testWriteLines_Writer_nullSeparator", "testWrite_byteArrayToOutputStream", "testWrite_byteArrayToOutputStream_nullData", "testWrite_byteArrayToWriter", "testWrite_byteArrayToWriter_Encoding", "testWrite_byteArrayToWriter_Encoding_nullData", "testWrite_byteArrayToWriter_Encoding_nullEncoding", "testWrite_byteArrayToWriter_nullData", "testWrite_charArrayToOutputStream", "testWrite_charArrayToOutputStream_Encoding", "testWrite_charArrayToOutputStream_Encoding_nullData", "testWrite_charArrayToOutputStream_nullData", "testWrite_charArrayToOutputStream_nullEncoding", "testWrite_charArrayToWriter", "testWrite_charArrayToWriter_Encoding_nullData", "testWrite_charSequenceToOutputStream", "testWrite_charSequenceToOutputStream_Encoding", "testWrite_charSequenceToOutputStream_Encoding_nullData", "testWrite_charSequenceToOutputStream_nullData", "testWrite_charSequenceToOutputStream_nullEncoding", "testWrite_charSequenceToWriter", "testWrite_charSequenceToWriter_Encoding_nullData", "testWrite_stringToOutputStream", "testWrite_stringToOutputStream_Encoding", "testWrite_stringToOutputStream_Encoding_nullData", "testWrite_stringToOutputStream_nullData", "testWrite_stringToOutputStream_nullEncoding", "testWrite_stringToWriter", "testWrite_stringToWriter_Encoding_nullData" ],
            "org.apache.commons.io.output.CloseShieldOutputStreamTest" : [ "testClose" ],
            "org.apache.commons.io.output.CountingOutputStreamTest" : [ "testCounting" ],
            "org.apache.commons.io.output.TaggedOutputStreamTest" : [ "testBrokenStream", "testNormalStream", "testOtherException" ],
            "org.apache.commons.io.output.TeeOutputStreamTest" : [ "testTee" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriter" : { }
      }
    },
    "73beb941c537803ae470f0ff459d76a3612abeed" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "6319a20fdc43ab33c19d162d527b95ced13c0e76",
      "changedClazzes" : {
        "org.apache.commons.io.input.TaggedInputStream" : {
          "testcases" : {
            "org.apache.commons.io.input.TaggedInputStreamTest" : [ "testBrokenStream", "testEmptyStream", "testNormalStream", "testOtherException" ]
          }
        },
        "org.apache.commons.io.output.TaggedOutputStream" : {
          "testcases" : {
            "org.apache.commons.io.output.TaggedOutputStreamTest" : [ "testBrokenStream", "testNormalStream", "testOtherException" ]
          }
        }
      }
    },
    "80e9b2c3af8e9150ae54f7e28c753b251b361c36" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "73beb941c537803ae470f0ff459d76a3612abeed",
      "changedClazzes" : {
        "org.apache.commons.io.TaggedIOException" : {
          "testcases" : {
            "org.apache.commons.io.TaggedIOExceptionTest" : [ "testTaggedIOException" ],
            "org.apache.commons.io.input.TaggedInputStreamTest" : [ "testBrokenStream", "testOtherException" ],
            "org.apache.commons.io.output.TaggedOutputStreamTest" : [ "testBrokenStream", "testOtherException" ]
          }
        }
      }
    },
    "151b81612e06770e6c1fc4b7dd27fc8c047d1a08" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "80e9b2c3af8e9150ae54f7e28c753b251b361c36",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerNull" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerNull" ],
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce" ],
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testCleanEmpty", "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile", "testThrowsOnNullList" ],
            "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" : [ "testCleanDirWithASymlinkDir", "testCleanDirWithParentSymlinks", "testCleanDirWithSymlinkFile", "testCorrectlyIdentifySymlinkWithParentSymLink", "testIdentifiesSymlinkDir", "testIdentifiesSymlinkFile", "testStillClearsIfGivenDirectoryIsASymlink" ],
            "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToString", "testReadLines", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ],
            "org.apache.commons.io.FileUtilsWaitForTestCase" : [ "testWaitFor" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPrefix", "testGetPrefixLength", "testIndexOfExtension", "testIndexOfLastSeparator", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testNormalize", "testNormalizeNoEndSeparator", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testByteArrayToOutputStream", "testByteArrayToString", "testByteArrayToWriter", "testConstants", "testInputStreamToByteArray", "testInputStreamToCharArray", "testInputStreamToCharArrayWithEncoding", "testInputStreamToString", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testReaderToCharArray", "testReaderToString", "testStringToByteArray", "testStringToInputStream", "testStringToOutputStream", "testStringToWriter" ],
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFiltering", "testInvalidEncoding", "testMissingFile", "testNextLineOnly", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorArrayNull", "testConstructorIterable", "testConstructorIterableNull" ],
            "org.apache.commons.io.comparator.DirectoryFileComparatorTest" : [ "testSortArray", "testSortList" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testAnd", "testCanRead", "testCanWrite", "testDelegateFileFilter", "testDeprecatedWildcard", "testDirectory", "testEmpty", "testFalse", "testFiles", "testHidden", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNameFilterNullArrayArgument", "testNameFilterNullListArgument", "testNot", "testOr", "testPrefix", "testPrefixCaseInsensitive", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testTrue", "testWildcard" ],
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ],
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ],
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "testConstructor_File_encoding_badEncoding" ],
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testFileLocked", "testFileNotLocked" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testCopyFile1ToDir" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyFile1ToDir" ]
          }
        }
      }
    },
    "fe4ff5cb6f913bc48cca642f3236bbf0aa578c97" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "151b81612e06770e6c1fc4b7dd27fc8c047d1a08",
      "changedClazzes" : { }
    },
    "16f2923131b65748c5b6cf5a560f712383b003de" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "fe4ff5cb6f913bc48cca642f3236bbf0aa578c97",
      "changedClazzes" : {
        "org.apache.commons.io.input.ProxyInputStream#mark(int)" : {
          "testcases" : {
            "org.apache.commons.io.input.TeeInputStreamTest" : [ "testMarkReset" ]
          }
        },
        "org.apache.commons.io.input.ProxyInputStream#read(byte[],int,int)" : {
          "testcases" : {
            "org.apache.commons.io.CopyUtilsTest" : [ "testCopy_inputStreamToWriter", "testCopy_readerToOutputStream", "testCopy_readerToWriter" ],
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_inputStreamToWriter", "testCopy_inputStreamToWriter_Encoding", "testCopy_inputStreamToWriter_Encoding_nullEncoding", "testCopy_readerToOutputStream", "testCopy_readerToOutputStream_Encoding", "testCopy_readerToOutputStream_Encoding_nullEncoding", "testCopy_readerToWriter", "testCopy_readerToWriter_nullOut" ],
            "org.apache.commons.io.input.CountingInputStreamTest" : [ "testCounting", "testEOF3", "testResetting", "testZeroLength3" ],
            "org.apache.commons.io.input.SwappedDataInputStreamTest" : [ "testReadFully" ],
            "org.apache.commons.io.input.TaggedInputStreamTest" : [ "testEmptyStream", "testNormalStream" ],
            "org.apache.commons.io.input.TeeInputStreamTest" : [ "testReadToArrayWithOffset" ]
          }
        }
      }
    },
    "ef027594a6078998e062c4682565e43344548080" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "16f2923131b65748c5b6cf5a560f712383b003de",
      "changedClazzes" : { }
    },
    "d3d266a0c6e9ea74a02388784a12bbd6b6819588" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "ef027594a6078998e062c4682565e43344548080",
      "changedClazzes" : { }
    },
    "2853baafcb5ffc93d087efc230ce79e0bbab0536" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "d3d266a0c6e9ea74a02388784a12bbd6b6819588",
      "changedClazzes" : {
        "org.apache.commons.io.TaggedIOException" : {
          "testcases" : {
            "org.apache.commons.io.TaggedIOExceptionTest" : [ "testTaggedIOException" ],
            "org.apache.commons.io.input.TaggedInputStreamTest" : [ "testBrokenStream", "testOtherException" ],
            "org.apache.commons.io.output.TaggedOutputStreamTest" : [ "testBrokenStream", "testOtherException" ]
          }
        },
        "org.apache.commons.io.TaggedIOExceptionTest" : {
          "testcases" : {
            "org.apache.commons.io.TaggedIOExceptionTest" : [ "testTaggedIOException" ]
          }
        },
        "org.apache.commons.io.input.TaggedInputStream" : {
          "testcases" : {
            "org.apache.commons.io.input.TaggedInputStreamTest" : [ "testBrokenStream", "testEmptyStream", "testNormalStream", "testOtherException" ]
          }
        },
        "org.apache.commons.io.input.TaggedInputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.input.TaggedInputStreamTest" : [ "testBrokenStream", "testEmptyStream", "testNormalStream", "testOtherException" ]
          }
        },
        "org.apache.commons.io.output.TaggedOutputStream" : {
          "testcases" : {
            "org.apache.commons.io.output.TaggedOutputStreamTest" : [ "testBrokenStream", "testNormalStream", "testOtherException" ]
          }
        },
        "org.apache.commons.io.output.TaggedOutputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.output.TaggedOutputStreamTest" : [ "testBrokenStream", "testNormalStream", "testOtherException" ]
          }
        }
      }
    },
    "3ce24e5883f282e5b6dcdea3eaa5b8992ab1f86e" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "2853baafcb5ffc93d087efc230ce79e0bbab0536",
      "changedClazzes" : {
        "org.apache.commons.io.input.AutoCloseInputStream" : {
          "testcases" : {
            "org.apache.commons.io.input.AutoCloseInputStreamTest" : [ "testClose", "testRead", "testReadBuffer", "testReadBufferOffsetLength" ]
          }
        },
        "org.apache.commons.io.input.CountingInputStream" : {
          "testcases" : {
            "org.apache.commons.io.input.CountingInputStreamTest" : [ "testCounting", "testEOF1", "testEOF2", "testEOF3", "testResetting", "testSkipping", "testZeroLength1", "testZeroLength2", "testZeroLength3" ]
          }
        },
        "org.apache.commons.io.input.ProxyInputStream" : {
          "testcases" : {
            "org.apache.commons.io.CopyUtilsTest" : [ "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToWriter", "testCopy_readerToOutputStream", "testCopy_readerToWriter" ],
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToWriter", "testCopy_inputStreamToWriter_Encoding", "testCopy_inputStreamToWriter_Encoding_nullEncoding", "testCopy_readerToOutputStream", "testCopy_readerToOutputStream_Encoding", "testCopy_readerToOutputStream_Encoding_nullEncoding", "testCopy_readerToOutputStream_Encoding_nullOut", "testCopy_readerToOutputStream_nullOut", "testCopy_readerToWriter", "testCopy_readerToWriter_nullOut" ],
            "org.apache.commons.io.input.AutoCloseInputStreamTest" : [ "testClose", "testRead", "testReadBuffer", "testReadBufferOffsetLength" ],
            "org.apache.commons.io.input.BOMExclusionInputStreamTest" : [ "testAvailableWithBOM", "testAvailableWithoutBOM", "testClose", "testLargeBufferWithBOM", "testLargeBufferWithoutBOM", "testLeadingNonBOMBufferedRead", "testLeadingNonBOMSingleRead", "testMarkResetAfterReadWithBOM", "testMarkResetAfterReadWithoutBOM", "testMarkResetBeforeReadWithBOM", "testMarkResetBeforeReadWithoutBOM", "testReadWithBOM", "testReadWithoutBOM", "testSkipWithBOM", "testSkipWithoutBOM", "testSmallBufferWithBOM", "testSmallBufferWithoutBOM" ],
            "org.apache.commons.io.input.CloseShieldInputStreamTest" : [ "testClose" ],
            "org.apache.commons.io.input.CountingInputStreamTest" : [ "testCounting", "testEOF1", "testEOF2", "testEOF3", "testResetting", "testSkipping", "testZeroLength1", "testZeroLength2", "testZeroLength3" ],
            "org.apache.commons.io.input.SwappedDataInputStreamTest" : [ "testReadBoolean", "testReadByte", "testReadChar", "testReadDouble", "testReadFloat", "testReadFully", "testReadInt", "testReadLine", "testReadLong", "testReadShort", "testReadUTF", "testReadUnsignedByte", "testReadUnsignedShort", "testSkipBytes" ],
            "org.apache.commons.io.input.TaggedInputStreamTest" : [ "testBrokenStream", "testEmptyStream", "testNormalStream", "testOtherException" ],
            "org.apache.commons.io.input.TeeInputStreamTest" : [ "testMarkReset", "testReadEverything", "testReadNothing", "testReadOneByte", "testReadToArray", "testReadToArrayWithOffset", "testSkip" ]
          }
        },
        "org.apache.commons.io.output.CountingOutputStream" : {
          "testcases" : {
            "org.apache.commons.io.output.CountingOutputStreamTest" : [ "testCounting" ]
          }
        },
        "org.apache.commons.io.output.ProxyOutputStream" : {
          "testcases" : {
            "org.apache.commons.io.CopyUtilsTest" : [ "testCopy_byteArrayToOutputStream", "testCopy_byteArrayToWriter", "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToWriter", "testCopy_readerToOutputStream", "testCopy_readerToWriter", "testCopy_stringToOutputStream", "testCopy_stringToWriter" ],
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToWriter", "testCopy_inputStreamToWriter_Encoding", "testCopy_inputStreamToWriter_Encoding_nullEncoding", "testCopy_inputStreamToWriter_Encoding_nullIn", "testCopy_inputStreamToWriter_nullIn", "testCopy_readerToOutputStream", "testCopy_readerToOutputStream_Encoding", "testCopy_readerToOutputStream_Encoding_nullEncoding", "testCopy_readerToOutputStream_Encoding_nullIn", "testCopy_readerToOutputStream_nullIn", "testCopy_readerToWriter", "testCopy_readerToWriter_nullIn" ],
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWriteLines_OutputStream", "testWriteLines_OutputStream_Encoding", "testWriteLines_OutputStream_Encoding_nullData", "testWriteLines_OutputStream_Encoding_nullEncoding", "testWriteLines_OutputStream_Encoding_nullSeparator", "testWriteLines_OutputStream_nullData", "testWriteLines_OutputStream_nullSeparator", "testWriteLines_Writer", "testWriteLines_Writer_nullData", "testWriteLines_Writer_nullSeparator", "testWrite_byteArrayToOutputStream", "testWrite_byteArrayToOutputStream_nullData", "testWrite_byteArrayToWriter", "testWrite_byteArrayToWriter_Encoding", "testWrite_byteArrayToWriter_Encoding_nullData", "testWrite_byteArrayToWriter_Encoding_nullEncoding", "testWrite_byteArrayToWriter_nullData", "testWrite_charArrayToOutputStream", "testWrite_charArrayToOutputStream_Encoding", "testWrite_charArrayToOutputStream_Encoding_nullData", "testWrite_charArrayToOutputStream_nullData", "testWrite_charArrayToOutputStream_nullEncoding", "testWrite_charArrayToWriter", "testWrite_charArrayToWriter_Encoding_nullData", "testWrite_charSequenceToOutputStream", "testWrite_charSequenceToOutputStream_Encoding", "testWrite_charSequenceToOutputStream_Encoding_nullData", "testWrite_charSequenceToOutputStream_nullData", "testWrite_charSequenceToOutputStream_nullEncoding", "testWrite_charSequenceToWriter", "testWrite_charSequenceToWriter_Encoding_nullData", "testWrite_stringToOutputStream", "testWrite_stringToOutputStream_Encoding", "testWrite_stringToOutputStream_Encoding_nullData", "testWrite_stringToOutputStream_nullData", "testWrite_stringToOutputStream_nullEncoding", "testWrite_stringToWriter", "testWrite_stringToWriter_Encoding_nullData" ],
            "org.apache.commons.io.output.CloseShieldOutputStreamTest" : [ "testClose" ],
            "org.apache.commons.io.output.CountingOutputStreamTest" : [ "testCounting" ],
            "org.apache.commons.io.output.TaggedOutputStreamTest" : [ "testBrokenStream", "testNormalStream", "testOtherException" ],
            "org.apache.commons.io.output.TeeOutputStreamTest" : [ "testTee" ]
          }
        }
      }
    },
    "d0ccc55dacccf84bf81845366a947a707381939e" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "3ce24e5883f282e5b6dcdea3eaa5b8992ab1f86e",
      "changedClazzes" : { }
    },
    "4a8ac544323146d698d2168ccfa3be4fd8fe708c" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "d0ccc55dacccf84bf81845366a947a707381939e",
      "changedClazzes" : { }
    },
    "cecd086698aaed0d453bd4be9ac9e579797a9764" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "4a8ac544323146d698d2168ccfa3be4fd8fe708c",
      "changedClazzes" : {
        "org.apache.commons.io.CopyUtilsTest" : {
          "testcases" : {
            "org.apache.commons.io.CopyUtilsTest" : [ "testCopy_byteArrayToOutputStream", "testCopy_byteArrayToWriter", "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToWriter", "testCopy_readerToOutputStream", "testCopy_readerToWriter", "testCopy_stringToOutputStream", "testCopy_stringToWriter" ]
          }
        },
        "org.apache.commons.io.DemuxTestCase" : {
          "testcases" : {
            "org.apache.commons.io.DemuxTestCase" : [ "testInputStream", "testOutputStream" ]
          }
        },
        "org.apache.commons.io.DemuxTestCase$ReaderThread" : {
          "testcases" : {
            "org.apache.commons.io.DemuxTestCase" : [ "testInputStream" ]
          }
        },
        "org.apache.commons.io.DemuxTestCase$WriterThread" : {
          "testcases" : {
            "org.apache.commons.io.DemuxTestCase" : [ "testOutputStream" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCase" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testCancel", "testFilter", "testFilterAndLimitA", "testFilterAndLimitB", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile2", "testFilterDirAndFile3", "testFilterDirAndFile4", "testHandleStartDirectoryFalse", "testLimitToCurrent", "testMissingStartDirectory", "testMultiThreadCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCase$TestCancelWalker" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCase$TestFalseFileFinder" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testHandleStartDirectoryFalse" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilter", "testFilterAndLimitA", "testFilterAndLimitB", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile2", "testFilterDirAndFile3", "testFilterDirAndFile4", "testHandleStartDirectoryFalse", "testLimitToCurrent", "testMissingStartDirectory" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCase$TestMultiThreadCancelWalker" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testMultiThreadCancel" ]
          }
        },
        "org.apache.commons.io.FileCleanerTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerFile", "testFileCleanerNull" ]
          }
        },
        "org.apache.commons.io.FileCleaningTrackerTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerFile", "testFileCleanerNull" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerFile", "testFileCleanerNull" ]
          }
        },
        "org.apache.commons.io.FileDeleteStrategyTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce", "testDeleteNormal", "testDeleteNull", "testDeleteQuietlyNormal", "testToString" ]
          }
        },
        "org.apache.commons.io.FileSystemUtilsTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceOS_String_InitError", "testGetFreeSpaceOS_String_NullPath", "testGetFreeSpaceOS_String_Other", "testGetFreeSpaceOS_String_Unix", "testGetFreeSpaceOS_String_Windows", "testGetFreeSpaceUnix_String_EmptyPath", "testGetFreeSpaceUnix_String_EmptyResponse", "testGetFreeSpaceUnix_String_InvalidResponse1", "testGetFreeSpaceUnix_String_InvalidResponse2", "testGetFreeSpaceUnix_String_InvalidResponse3", "testGetFreeSpaceUnix_String_InvalidResponse4", "testGetFreeSpaceUnix_String_LongResponse", "testGetFreeSpaceUnix_String_LongResponseKb", "testGetFreeSpaceUnix_String_NormalResponseFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbLinux", "testGetFreeSpaceUnix_String_NormalResponseKbSolaris", "testGetFreeSpaceUnix_String_NormalResponseLinux", "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpace_String" ]
          }
        },
        "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceUnix_String_EmptyPath", "testGetFreeSpaceUnix_String_EmptyResponse", "testGetFreeSpaceUnix_String_InvalidResponse1", "testGetFreeSpaceUnix_String_InvalidResponse2", "testGetFreeSpaceUnix_String_InvalidResponse3", "testGetFreeSpaceUnix_String_InvalidResponse4", "testGetFreeSpaceUnix_String_LongResponse", "testGetFreeSpaceUnix_String_LongResponseKb", "testGetFreeSpaceUnix_String_NormalResponseFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbLinux", "testGetFreeSpaceUnix_String_NormalResponseKbSolaris", "testGetFreeSpaceUnix_String_NormalResponseLinux", "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive" ]
          }
        },
        "org.apache.commons.io.FileUtils#cleanDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testEqualsNormalizedError_IO_128", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testCharSequenceToInputStream", "testInputStreamToBufferedInputStream" ]
          }
        },
        "org.apache.commons.io.FileUtils#deleteDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testEqualsNormalizedError_IO_128", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testCharSequenceToInputStream", "testInputStreamToBufferedInputStream" ]
          }
        },
        "org.apache.commons.io.FileUtils#forceDelete(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testEqualsNormalizedError_IO_128", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testCharSequenceToInputStream", "testInputStreamToBufferedInputStream" ]
          }
        },
        "org.apache.commons.io.FileUtils#isSymlink(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testEqualsNormalizedError_IO_128", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testCharSequenceToInputStream", "testInputStreamToBufferedInputStream" ]
          }
        },
        "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testCleanEmpty", "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile", "testThrowsOnNullList" ]
          }
        },
        "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" : [ "testCleanDirWithASymlinkDir", "testCleanDirWithParentSymlinks", "testCleanDirWithSymlinkFile", "testCorrectlyIdentifySymlinkWithParentSymLink", "testIdentifiesSymlinkDir", "testIdentifiesSymlinkFile", "testStillClearsIfGivenDirectoryIsASymlink" ]
          }
        },
        "org.apache.commons.io.FileUtilsFileNewerTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ]
          }
        },
        "org.apache.commons.io.FileUtilsListFilesTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToString", "testReadLines", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase$ListDirectoryWalker" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToGrandChild" ]
          }
        },
        "org.apache.commons.io.FileUtilsWaitForTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsWaitForTestCase" : [ "testWaitFor" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#doNormalize(java.lang.String,char,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testEqualsNormalizedError_IO_128", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testEqualsNormalizedError_IO_128" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#equalsNormalizedOnSystem(java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testEqualsNormalizedError_IO_128" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#getPrefixLength(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testEqualsNormalizedError_IO_128", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#isSeparator(char)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testEqualsNormalizedError_IO_128", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#isSystemWindows" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testEqualsNormalizedError_IO_128", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#normalize(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testNormalizeUnixWin" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#normalizeNoEndSeparator(java.lang.String,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testNormalizeNoEndSeparatorUnixWin" ]
          }
        },
        "org.apache.commons.io.FilenameUtilsTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedError_IO_128", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPrefix", "testGetPrefixLength", "testIndexOfExtension", "testIndexOfLastSeparator", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testNormalize", "testNormalizeNoEndSeparator", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ]
          }
        },
        "org.apache.commons.io.FilenameUtilsTestCase#setUp" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testEqualsNormalizedError_IO_128", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin" ]
          }
        },
        "org.apache.commons.io.FilenameUtilsTestCase#tearDown" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testEqualsNormalizedError_IO_128", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin" ]
          }
        },
        "org.apache.commons.io.FilenameUtilsTestCase#testEqualsNormalizedError_IO_128" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testEqualsNormalizedError_IO_128" ]
          }
        },
        "org.apache.commons.io.FilenameUtilsTestCase#testNormalizeNoEndSeparatorUnixWin" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testNormalizeNoEndSeparatorUnixWin" ]
          }
        },
        "org.apache.commons.io.FilenameUtilsTestCase#testNormalizeUnixWin" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testNormalizeUnixWin" ]
          }
        },
        "org.apache.commons.io.IOCase#<init>(java.lang.String,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testEqualsNormalizedError_IO_128" ]
          }
        },
        "org.apache.commons.io.IOCaseTestCase" : {
          "testcases" : {
            "org.apache.commons.io.IOCaseTestCase" : [ "test_checkCompare_case", "test_checkCompare_functionality", "test_checkEndsWith_case", "test_checkEndsWith_functionality", "test_checkEquals_case", "test_checkEquals_functionality", "test_checkIndexOf_case", "test_checkIndexOf_functionality", "test_checkRegionMatches_case", "test_checkRegionMatches_functionality", "test_checkStartsWith_case", "test_checkStartsWith_functionality", "test_forName", "test_getName", "test_isCaseSensitive", "test_serialization", "test_toString" ]
          }
        },
        "org.apache.commons.io.IOUtils#closeQuietly(java.io.OutputStream)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testEqualsNormalizedError_IO_128", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testCharSequenceToInputStream", "testInputStreamToBufferedInputStream" ]
          }
        },
        "org.apache.commons.io.IOUtils#copy(java.io.InputStream,java.io.OutputStream)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testCharSequenceToInputStream", "testInputStreamToBufferedInputStream" ]
          }
        },
        "org.apache.commons.io.IOUtils#copyLarge(java.io.InputStream,java.io.OutputStream)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testCharSequenceToInputStream", "testInputStreamToBufferedInputStream" ]
          }
        },
        "org.apache.commons.io.IOUtils#toBufferedInputStream(java.io.InputStream)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testInputStreamToBufferedInputStream" ]
          }
        },
        "org.apache.commons.io.IOUtils#toByteArray(java.io.InputStream)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testCharSequenceToInputStream", "testInputStreamToBufferedInputStream" ]
          }
        },
        "org.apache.commons.io.IOUtils#toInputStream(java.lang.CharSequence)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testCharSequenceToInputStream" ]
          }
        },
        "org.apache.commons.io.IOUtilsCopyTestCase" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToOutputStream_IO84", "testCopy_inputStreamToOutputStream_nullIn", "testCopy_inputStreamToOutputStream_nullOut", "testCopy_inputStreamToWriter", "testCopy_inputStreamToWriter_Encoding", "testCopy_inputStreamToWriter_Encoding_nullEncoding", "testCopy_inputStreamToWriter_Encoding_nullIn", "testCopy_inputStreamToWriter_Encoding_nullOut", "testCopy_inputStreamToWriter_nullIn", "testCopy_inputStreamToWriter_nullOut", "testCopy_readerToOutputStream", "testCopy_readerToOutputStream_Encoding", "testCopy_readerToOutputStream_Encoding_nullEncoding", "testCopy_readerToOutputStream_Encoding_nullIn", "testCopy_readerToOutputStream_Encoding_nullOut", "testCopy_readerToOutputStream_nullIn", "testCopy_readerToOutputStream_nullOut", "testCopy_readerToWriter", "testCopy_readerToWriter_IO84", "testCopy_readerToWriter_nullIn", "testCopy_readerToWriter_nullOut" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testByteArrayToOutputStream", "testByteArrayToString", "testByteArrayToWriter", "testCharSequenceToInputStream", "testConstants", "testInputStreamToBufferedInputStream", "testInputStreamToByteArray", "testInputStreamToCharArray", "testInputStreamToCharArrayWithEncoding", "testInputStreamToString", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testReaderToCharArray", "testReaderToString", "testStringToByteArray", "testStringToInputStream", "testStringToOutputStream", "testStringToWriter" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#assertEqualContent(byte[],byte[])" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testCharSequenceToInputStream" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#setUp" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testCharSequenceToInputStream", "testInputStreamToBufferedInputStream" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#tearDown" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testCharSequenceToInputStream", "testInputStreamToBufferedInputStream" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testCharSequenceToInputStream" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testCharSequenceToInputStream" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testInputStreamToBufferedInputStream" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testInputStreamToBufferedInputStream" ]
          }
        },
        "org.apache.commons.io.IOUtilsWriteTestCase" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWriteLines_OutputStream", "testWriteLines_OutputStream_Encoding", "testWriteLines_OutputStream_Encoding_nullData", "testWriteLines_OutputStream_Encoding_nullEncoding", "testWriteLines_OutputStream_Encoding_nullSeparator", "testWriteLines_OutputStream_Encoding_nullStream", "testWriteLines_OutputStream_nullData", "testWriteLines_OutputStream_nullSeparator", "testWriteLines_OutputStream_nullStream", "testWriteLines_Writer", "testWriteLines_Writer_nullData", "testWriteLines_Writer_nullSeparator", "testWriteLines_Writer_nullStream", "testWrite_byteArrayToOutputStream", "testWrite_byteArrayToOutputStream_nullData", "testWrite_byteArrayToOutputStream_nullStream", "testWrite_byteArrayToWriter", "testWrite_byteArrayToWriter_Encoding", "testWrite_byteArrayToWriter_Encoding_nullData", "testWrite_byteArrayToWriter_Encoding_nullEncoding", "testWrite_byteArrayToWriter_Encoding_nullWriter", "testWrite_byteArrayToWriter_nullData", "testWrite_byteArrayToWriter_nullWriter", "testWrite_charArrayToOutputStream", "testWrite_charArrayToOutputStream_Encoding", "testWrite_charArrayToOutputStream_Encoding_nullData", "testWrite_charArrayToOutputStream_Encoding_nullStream", "testWrite_charArrayToOutputStream_nullData", "testWrite_charArrayToOutputStream_nullEncoding", "testWrite_charArrayToOutputStream_nullStream", "testWrite_charArrayToWriter", "testWrite_charArrayToWriter_Encoding_nullData", "testWrite_charArrayToWriter_Encoding_nullStream", "testWrite_charSequenceToOutputStream", "testWrite_charSequenceToOutputStream_Encoding", "testWrite_charSequenceToOutputStream_Encoding_nullData", "testWrite_charSequenceToOutputStream_Encoding_nullStream", "testWrite_charSequenceToOutputStream_nullData", "testWrite_charSequenceToOutputStream_nullEncoding", "testWrite_charSequenceToOutputStream_nullStream", "testWrite_charSequenceToWriter", "testWrite_charSequenceToWriter_Encoding_nullData", "testWrite_charSequenceToWriter_Encoding_nullStream", "testWrite_stringToOutputStream", "testWrite_stringToOutputStream_Encoding", "testWrite_stringToOutputStream_Encoding_nullData", "testWrite_stringToOutputStream_Encoding_nullStream", "testWrite_stringToOutputStream_nullData", "testWrite_stringToOutputStream_nullEncoding", "testWrite_stringToOutputStream_nullStream", "testWrite_stringToWriter", "testWrite_stringToWriter_Encoding_nullData", "testWrite_stringToWriter_Encoding_nullStream" ]
          }
        },
        "org.apache.commons.io.LineIteratorTestCase" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFiltering", "testInvalidEncoding", "testMissingFile", "testNextLineOnly", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ]
          }
        },
        "org.apache.commons.io.comparator.ComparatorAbstractTestCase" : {
          "testcases" : {
            "org.apache.commons.io.comparator.ComparatorAbstractTestCase" : [ "testComparator", "testReverseComparator", "testSortArray", "testSortArrayNull", "testSortList", "testSortListNull", "testToString" ],
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorArrayNull", "testConstructorIterable", "testConstructorIterableNull" ],
            "org.apache.commons.io.comparator.DirectoryFileComparatorTest" : [ "testSortArray", "testSortList" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ]
          }
        },
        "org.apache.commons.io.comparator.CompositeFileComparatorTest" : {
          "testcases" : {
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorArrayNull", "testConstructorIterable", "testConstructorIterableNull" ]
          }
        },
        "org.apache.commons.io.comparator.DefaultFileComparatorTest" : { },
        "org.apache.commons.io.comparator.DirectoryFileComparatorTest" : {
          "testcases" : {
            "org.apache.commons.io.comparator.DirectoryFileComparatorTest" : [ "testSortArray", "testSortList" ]
          }
        },
        "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : { },
        "org.apache.commons.io.comparator.LastModifiedFileComparatorTest" : { },
        "org.apache.commons.io.comparator.NameFileComparatorTest" : { },
        "org.apache.commons.io.comparator.PathFileComparatorTest" : { },
        "org.apache.commons.io.comparator.SizeFileComparatorTest" : {
          "testcases" : {
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ]
          }
        },
        "org.apache.commons.io.filefilter.AndFileFilterTestCase" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.AndFileFilterTestCase" : [ "getTestFilters", "setUpTestFilters" ]
          }
        },
        "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase" : [ "getTestFilters", "testAdd", "testFilterBuiltUsingAdd", "testFilterBuiltUsingConstructor", "testNoFilters", "testRemove" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testAnd", "testCanRead", "testCanWrite", "testDelegateFileFilter", "testDeprecatedWildcard", "testDirectory", "testEmpty", "testFalse", "testFiles", "testHidden", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNameFilterNullArrayArgument", "testNameFilterNullListArgument", "testNot", "testOr", "testPrefix", "testPrefixCaseInsensitive", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testTrue", "testWildcard" ]
          }
        },
        "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase" : { },
        "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter" : { },
        "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter" : { },
        "org.apache.commons.io.filefilter.OrFileFilterTestCase" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.OrFileFilterTestCase" : [ "getTestFilters", "setUpTestFilters" ]
          }
        },
        "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ]
          }
        },
        "org.apache.commons.io.input.AutoCloseInputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.input.AutoCloseInputStreamTest" : [ "testClose", "testRead", "testReadBuffer", "testReadBufferOffsetLength" ]
          }
        },
        "org.apache.commons.io.input.BrokenInputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.input.BrokenInputStreamTest" : [ "testAvailable", "testClose", "testRead", "testReset", "testSkip" ]
          }
        },
        "org.apache.commons.io.input.CloseShieldInputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.input.CloseShieldInputStreamTest" : [ "testClose" ]
          }
        },
        "org.apache.commons.io.input.NullInputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.input.NullInputStreamTest" : [ "testEOFException", "testMarkAndReset", "testMarkNotSupported", "testRead", "testReadByteArray", "testSkip" ]
          }
        },
        "org.apache.commons.io.input.NullInputStreamTest$TestNullInputStream" : {
          "testcases" : {
            "org.apache.commons.io.input.NullInputStreamTest" : [ "testEOFException", "testMarkAndReset", "testMarkNotSupported", "testRead", "testReadByteArray", "testSkip" ]
          }
        },
        "org.apache.commons.io.input.NullReaderTest" : {
          "testcases" : {
            "org.apache.commons.io.input.NullReaderTest" : [ "testEOFException", "testMarkAndReset", "testMarkNotSupported", "testRead", "testReadCharArray", "testSkip" ]
          }
        },
        "org.apache.commons.io.input.NullReaderTest$TestNullReader" : {
          "testcases" : {
            "org.apache.commons.io.input.NullReaderTest" : [ "testEOFException", "testMarkAndReset", "testMarkNotSupported", "testRead", "testReadCharArray", "testSkip" ]
          }
        },
        "org.apache.commons.io.input.SwappedDataInputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.input.SwappedDataInputStreamTest" : [ "testReadBoolean", "testReadByte", "testReadChar", "testReadDouble", "testReadFloat", "testReadFully", "testReadInt", "testReadLine", "testReadLong", "testReadShort", "testReadUTF", "testReadUnsignedByte", "testReadUnsignedShort", "testSkipBytes" ]
          }
        },
        "org.apache.commons.io.input.TeeInputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.input.TeeInputStreamTest" : [ "testMarkReset", "testReadEverything", "testReadNothing", "testReadOneByte", "testReadToArray", "testReadToArrayWithOffset", "testSkip" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemObserverTestCase" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.output.BrokenOutputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.output.BrokenOutputStreamTest" : [ "testClose", "testFlush", "testWrite" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream#<init>" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testCharSequenceToInputStream", "testInputStreamToBufferedInputStream" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream#needNewBuffer(int)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testCharSequenceToInputStream", "testInputStreamToBufferedInputStream" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream#toBufferedInputStream" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testInputStreamToBufferedInputStream" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream#toByteArray" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testCharSequenceToInputStream", "testInputStreamToBufferedInputStream" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream#write(byte[],int,int)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testInputStreamToBufferedInputStream" ]
          }
        },
        "org.apache.commons.io.output.CloseShieldOutputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.output.CloseShieldOutputStreamTest" : [ "testClose" ]
          }
        },
        "org.apache.commons.io.output.FileWriterWithEncodingTest" : {
          "testcases" : {
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testConstructor_fileName_nullFile", "testDifferentEncoding", "testSameEncoding" ]
          }
        },
        "org.apache.commons.io.output.LockableFileWriterTest" : {
          "testcases" : {
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testConstructor_fileName_nullFile", "testFileLocked", "testFileNotLocked" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#<init>(int)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testEqualsNormalizedError_IO_128", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testCharSequenceToInputStream", "testInputStreamToBufferedInputStream" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#toString" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testEqualsNormalizedError_IO_128", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testCharSequenceToInputStream", "testInputStreamToBufferedInputStream" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#write(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testEqualsNormalizedError_IO_128", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testCharSequenceToInputStream", "testInputStreamToBufferedInputStream" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#assertEqualContent(byte[],java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testInputStreamToBufferedInputStream" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#createFile(java.io.File,long)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testEqualsNormalizedError_IO_128", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testCharSequenceToInputStream", "testInputStreamToBufferedInputStream" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#generateTestData(java.io.OutputStream,long)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testEqualsNormalizedError_IO_128", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testCharSequenceToInputStream", "testInputStreamToBufferedInputStream" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#getTestDirectory" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testEqualsNormalizedError_IO_128", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testCharSequenceToInputStream", "testInputStreamToBufferedInputStream" ]
          }
        },
        "org.apache.commons.io.testtools.YellOnCloseInputStream" : {
          "testcases" : {
            "org.apache.commons.io.CopyUtilsTest" : [ "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToWriter", "testCopy_readerToOutputStream", "testCopy_readerToWriter" ],
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToWriter", "testCopy_inputStreamToWriter_Encoding", "testCopy_inputStreamToWriter_Encoding_nullEncoding", "testCopy_readerToOutputStream", "testCopy_readerToOutputStream_Encoding", "testCopy_readerToOutputStream_Encoding_nullEncoding", "testCopy_readerToOutputStream_Encoding_nullOut", "testCopy_readerToOutputStream_nullOut", "testCopy_readerToWriter", "testCopy_readerToWriter_nullOut" ]
          }
        },
        "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream" : {
          "testcases" : {
            "org.apache.commons.io.CopyUtilsTest" : [ "testCopy_byteArrayToOutputStream", "testCopy_byteArrayToWriter", "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToWriter", "testCopy_readerToOutputStream", "testCopy_readerToWriter", "testCopy_stringToOutputStream", "testCopy_stringToWriter" ],
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToWriter", "testCopy_inputStreamToWriter_Encoding", "testCopy_inputStreamToWriter_Encoding_nullEncoding", "testCopy_inputStreamToWriter_Encoding_nullIn", "testCopy_inputStreamToWriter_nullIn", "testCopy_readerToOutputStream", "testCopy_readerToOutputStream_Encoding", "testCopy_readerToOutputStream_Encoding_nullEncoding", "testCopy_readerToOutputStream_Encoding_nullIn", "testCopy_readerToOutputStream_nullIn", "testCopy_readerToWriter", "testCopy_readerToWriter_nullIn" ],
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWriteLines_OutputStream", "testWriteLines_OutputStream_Encoding", "testWriteLines_OutputStream_Encoding_nullData", "testWriteLines_OutputStream_Encoding_nullEncoding", "testWriteLines_OutputStream_Encoding_nullSeparator", "testWriteLines_OutputStream_nullData", "testWriteLines_OutputStream_nullSeparator", "testWriteLines_Writer", "testWriteLines_Writer_nullData", "testWriteLines_Writer_nullSeparator", "testWrite_byteArrayToOutputStream", "testWrite_byteArrayToOutputStream_nullData", "testWrite_byteArrayToWriter", "testWrite_byteArrayToWriter_Encoding", "testWrite_byteArrayToWriter_Encoding_nullData", "testWrite_byteArrayToWriter_Encoding_nullEncoding", "testWrite_byteArrayToWriter_nullData", "testWrite_charArrayToOutputStream", "testWrite_charArrayToOutputStream_Encoding", "testWrite_charArrayToOutputStream_Encoding_nullData", "testWrite_charArrayToOutputStream_nullData", "testWrite_charArrayToOutputStream_nullEncoding", "testWrite_charArrayToWriter", "testWrite_charArrayToWriter_Encoding_nullData", "testWrite_charSequenceToOutputStream", "testWrite_charSequenceToOutputStream_Encoding", "testWrite_charSequenceToOutputStream_Encoding_nullData", "testWrite_charSequenceToOutputStream_nullData", "testWrite_charSequenceToOutputStream_nullEncoding", "testWrite_charSequenceToWriter", "testWrite_charSequenceToWriter_Encoding_nullData", "testWrite_stringToOutputStream", "testWrite_stringToOutputStream_Encoding", "testWrite_stringToOutputStream_Encoding_nullData", "testWrite_stringToOutputStream_nullData", "testWrite_stringToOutputStream_nullEncoding", "testWrite_stringToWriter", "testWrite_stringToWriter_Encoding_nullData" ]
          }
        }
      }
    },
    "dbc19f8446fc57c206b759fa249b63a381e4b153" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "cecd086698aaed0d453bd4be9ac9e579797a9764",
      "changedClazzes" : {
        "org.apache.commons.io.output.CountingOutputStream" : {
          "testcases" : {
            "org.apache.commons.io.output.CountingOutputStreamTest" : [ "testCounting" ]
          }
        }
      }
    },
    "a7757d0af0eecff4d5356abd467062fced80ce34" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "dbc19f8446fc57c206b759fa249b63a381e4b153",
      "changedClazzes" : { }
    },
    "ad1ab4b07c59d5d3108b073e15a0f594b2bb07b1" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "a7757d0af0eecff4d5356abd467062fced80ce34",
      "changedClazzes" : {
        "org.apache.commons.io.IOUtils#<init>" : { }
      }
    },
    "9883d20834994141dc976bb3642e18cea2c8eb41" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "ad1ab4b07c59d5d3108b073e15a0f594b2bb07b1",
      "changedClazzes" : {
        "org.apache.commons.io.FilenameUtilsTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedError_IO_128", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPrefix", "testGetPrefixLength", "testIndexOfExtension", "testIndexOfLastSeparator", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testNormalize", "testNormalizeNoEndSeparator", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ]
          }
        }
      }
    },
    "aea39f7fb302e90a76baaedad6fed08a66de6ff5" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "9883d20834994141dc976bb3642e18cea2c8eb41",
      "changedClazzes" : {
        "org.apache.commons.io.input.CharSequenceReaderTest" : {
          "testcases" : {
            "org.apache.commons.io.input.CharSequenceReaderTest" : [ "testClose", "testMark", "testMarkSupported", "testRead", "testReadCharArray", "testReadCharArrayPortion", "testSkip" ]
          }
        }
      }
    },
    "9c47f241d0eb912c276da809b02f0febb4736f84" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "aea39f7fb302e90a76baaedad6fed08a66de6ff5",
      "changedClazzes" : {
        "org.apache.commons.io.DemuxTestCase" : {
          "testcases" : {
            "org.apache.commons.io.DemuxTestCase" : [ "testInputStream", "testOutputStream" ]
          }
        },
        "org.apache.commons.io.DemuxTestCase$ReaderThread" : {
          "testcases" : {
            "org.apache.commons.io.DemuxTestCase" : [ "testInputStream" ]
          }
        },
        "org.apache.commons.io.DemuxTestCase$WriterThread" : {
          "testcases" : {
            "org.apache.commons.io.DemuxTestCase" : [ "testOutputStream" ]
          }
        },
        "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testCleanEmpty", "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile", "testThrowsOnNullList" ]
          }
        },
        "org.apache.commons.io.FileUtilsCleanSymlinksTestCase#setupSymlink(java.io.File,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" : [ "testCleanDirWithASymlinkDir", "testCleanDirWithParentSymlinks", "testCleanDirWithSymlinkFile", "testCorrectlyIdentifySymlinkWithParentSymLink", "testIdentifiesSymlinkDir", "testIdentifiesSymlinkFile", "testStillClearsIfGivenDirectoryIsASymlink" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase#testAnd" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAnd" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase#testDeprecatedWildcard" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testDeprecatedWildcard" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase#testNameFilter" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testNameFilter" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase#testNameFilterNullListArgument" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testNameFilterNullListArgument" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase#testOr" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testOr" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase#testPrefix" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testPrefix" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase#testPrefixCaseInsensitive" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testPrefixCaseInsensitive" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase#testSuffix" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testSuffix" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase#testSuffixCaseInsensitive" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testSuffixCaseInsensitive" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase#testWildcard" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testWildcard" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFilesystemListener" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStreamTestCase" : {
          "testcases" : {
            "org.apache.commons.io.output.ByteArrayOutputStreamTestCase" : [ "testStream" ]
          }
        },
        "org.apache.commons.io.output.FileWriterWithEncodingTest" : {
          "testcases" : {
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testConstructor_fileName_nullFile", "testDifferentEncoding", "testSameEncoding" ]
          }
        },
        "org.apache.commons.io.output.LockableFileWriterTest" : {
          "testcases" : {
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testConstructor_fileName_nullFile", "testFileLocked", "testFileNotLocked" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriterTest" : {
          "testcases" : {
            "org.apache.commons.io.output.StringBuilderWriterTest" : [ "testAppendChar", "testAppendCharSequence", "testAppendCharSequencePortion", "testAppendConstructCapacity", "testAppendConstructNull", "testAppendConstructStringBuilder", "testClose", "testWriteChar", "testWriteCharArray", "testWriteCharArrayPortion", "testWriteString", "testWriteStringPortion" ]
          }
        }
      }
    },
    "82cdf79231b6be062055bfaf62cbefdaae16e8dc" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "9c47f241d0eb912c276da809b02f0febb4736f84",
      "changedClazzes" : { }
    },
    "b5787a6d57af928d86a348907173f6907c76f104" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "82cdf79231b6be062055bfaf62cbefdaae16e8dc",
      "changedClazzes" : { }
    },
    "c0238c230c3e751261680fc2f9aa31debdffdf28" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "b5787a6d57af928d86a348907173f6907c76f104",
      "changedClazzes" : { }
    },
    "550f2d3ea4a0b55f57d1e531cc357f58d6b4b953" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "c0238c230c3e751261680fc2f9aa31debdffdf28",
      "changedClazzes" : { }
    },
    "e57d824517f9f1dd020d1001e2c6fe77facdfa11" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "550f2d3ea4a0b55f57d1e531cc357f58d6b4b953",
      "changedClazzes" : {
        "org.apache.commons.io.filefilter.FileFilterTestCase#testDirectory" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testDirectory" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase#testFiles" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFiles" ]
          }
        }
      }
    },
    "8f639e41f572d48194ef309252c88c5ac6619865" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "e57d824517f9f1dd020d1001e2c6fe77facdfa11",
      "changedClazzes" : {
        "org.apache.commons.io.CopyUtilsTest#testCopy_inputStreamToOutputStream" : {
          "testcases" : {
            "org.apache.commons.io.CopyUtilsTest" : [ "testCopy_inputStreamToOutputStream" ]
          }
        },
        "org.apache.commons.io.IOUtilsCopyTestCase#testCopy_inputStreamToOutputStream" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_inputStreamToOutputStream" ]
          }
        },
        "org.apache.commons.io.input.SwappedDataInputStreamTest#testReadLine" : {
          "testcases" : {
            "org.apache.commons.io.input.SwappedDataInputStreamTest" : [ "testReadLine" ]
          }
        },
        "org.apache.commons.io.input.SwappedDataInputStreamTest#testReadUTF" : {
          "testcases" : {
            "org.apache.commons.io.input.SwappedDataInputStreamTest" : [ "testReadUTF" ]
          }
        },
        "org.apache.commons.io.output.DeferredFileOutputStreamTest#testTempFileError" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testTempFileError" ]
          }
        }
      }
    },
    "c49252cecf4a02ca5a879bd23a2e8278e9999ae9" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "8f639e41f572d48194ef309252c88c5ac6619865",
      "changedClazzes" : {
        "org.apache.commons.io.EndianUtilsTest" : {
          "testcases" : {
            "org.apache.commons.io.EndianUtilsTest" : [ "testReadSwappedDouble", "testReadSwappedFloat", "testReadSwappedInteger", "testReadSwappedLong", "testReadSwappedShort", "testReadSwappedUnsignedInteger", "testReadSwappedUnsignedShort", "testSwapDouble", "testSwapFloat", "testSwapInteger", "testSwapLong", "testSwapShort", "testSymmetry", "testSymmetryOfLong", "testUnsignedOverrun", "testWriteSwappedDouble", "testWriteSwappedFloat", "testWriteSwappedInteger", "testWriteSwappedLong", "testWriteSwappedShort" ]
          }
        },
        "org.apache.commons.io.FileCleanerTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerFile", "testFileCleanerNull" ]
          }
        },
        "org.apache.commons.io.FileCleaningTrackerTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerFile", "testFileCleanerNull" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerFile", "testFileCleanerNull" ]
          }
        },
        "org.apache.commons.io.FileSystemUtilsTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceOS_String_InitError", "testGetFreeSpaceOS_String_NullPath", "testGetFreeSpaceOS_String_Other", "testGetFreeSpaceOS_String_Unix", "testGetFreeSpaceOS_String_Windows", "testGetFreeSpaceUnix_String_EmptyPath", "testGetFreeSpaceUnix_String_EmptyResponse", "testGetFreeSpaceUnix_String_InvalidResponse1", "testGetFreeSpaceUnix_String_InvalidResponse2", "testGetFreeSpaceUnix_String_InvalidResponse3", "testGetFreeSpaceUnix_String_InvalidResponse4", "testGetFreeSpaceUnix_String_LongResponse", "testGetFreeSpaceUnix_String_LongResponseKb", "testGetFreeSpaceUnix_String_NormalResponseFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbLinux", "testGetFreeSpaceUnix_String_NormalResponseKbSolaris", "testGetFreeSpaceUnix_String_NormalResponseLinux", "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpace_String" ]
          }
        },
        "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceUnix_String_EmptyPath", "testGetFreeSpaceUnix_String_EmptyResponse", "testGetFreeSpaceUnix_String_InvalidResponse1", "testGetFreeSpaceUnix_String_InvalidResponse2", "testGetFreeSpaceUnix_String_InvalidResponse3", "testGetFreeSpaceUnix_String_InvalidResponse4", "testGetFreeSpaceUnix_String_LongResponse", "testGetFreeSpaceUnix_String_LongResponseKb", "testGetFreeSpaceUnix_String_NormalResponseFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbLinux", "testGetFreeSpaceUnix_String_NormalResponseKbSolaris", "testGetFreeSpaceUnix_String_NormalResponseLinux", "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive" ]
          }
        },
        "org.apache.commons.io.FileUtilsWaitForTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsWaitForTestCase" : [ "testWaitFor" ]
          }
        },
        "org.apache.commons.io.IOCaseTestCase" : {
          "testcases" : {
            "org.apache.commons.io.IOCaseTestCase" : [ "test_checkCompare_case", "test_checkCompare_functionality", "test_checkEndsWith_case", "test_checkEndsWith_functionality", "test_checkEquals_case", "test_checkEquals_functionality", "test_checkIndexOf_case", "test_checkIndexOf_functionality", "test_checkRegionMatches_case", "test_checkRegionMatches_functionality", "test_checkStartsWith_case", "test_checkStartsWith_functionality", "test_forName", "test_getName", "test_isCaseSensitive", "test_serialization", "test_toString" ]
          }
        }
      }
    },
    "8841ea9bd4c4519c95e2ec0c7699c587baae2da4" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "c49252cecf4a02ca5a879bd23a2e8278e9999ae9",
      "changedClazzes" : {
        "org.apache.commons.io.DirectoryWalkerTestCase" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testCancel", "testFilter", "testFilterAndLimitA", "testFilterAndLimitB", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile2", "testFilterDirAndFile3", "testFilterDirAndFile4", "testHandleStartDirectoryFalse", "testLimitToCurrent", "testMissingStartDirectory", "testMultiThreadCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCase$TestCancelWalker" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCase$TestFalseFileFinder" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testHandleStartDirectoryFalse" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilter", "testFilterAndLimitA", "testFilterAndLimitB", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile2", "testFilterDirAndFile3", "testFilterDirAndFile4", "testHandleStartDirectoryFalse", "testLimitToCurrent", "testMissingStartDirectory" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCase$TestMultiThreadCancelWalker" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testMultiThreadCancel" ]
          }
        },
        "org.apache.commons.io.FileUtilsListFilesTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToString", "testReadLines", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase$ListDirectoryWalker" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToGrandChild" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testByteArrayToOutputStream", "testByteArrayToString", "testByteArrayToWriter", "testCharSequenceToInputStream", "testConstants", "testInputStreamToBufferedInputStream", "testInputStreamToByteArray", "testInputStreamToCharArray", "testInputStreamToCharArrayWithEncoding", "testInputStreamToString", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testReaderToCharArray", "testReaderToString", "testStringToByteArray", "testStringToInputStream", "testStringToOutputStream", "testStringToWriter" ]
          }
        },
        "org.apache.commons.io.IOUtilsWriteTestCase#testWriteLines_OutputStream" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWriteLines_OutputStream" ]
          }
        },
        "org.apache.commons.io.IOUtilsWriteTestCase#testWriteLines_OutputStream_Encoding" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWriteLines_OutputStream_Encoding" ]
          }
        },
        "org.apache.commons.io.IOUtilsWriteTestCase#testWriteLines_OutputStream_Encoding_nullData" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWriteLines_OutputStream_Encoding_nullData" ]
          }
        },
        "org.apache.commons.io.IOUtilsWriteTestCase#testWriteLines_OutputStream_Encoding_nullEncoding" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWriteLines_OutputStream_Encoding_nullEncoding" ]
          }
        },
        "org.apache.commons.io.IOUtilsWriteTestCase#testWriteLines_OutputStream_Encoding_nullSeparator" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWriteLines_OutputStream_Encoding_nullSeparator" ]
          }
        },
        "org.apache.commons.io.IOUtilsWriteTestCase#testWriteLines_OutputStream_Encoding_nullStream" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWriteLines_OutputStream_Encoding_nullStream" ]
          }
        },
        "org.apache.commons.io.IOUtilsWriteTestCase#testWriteLines_OutputStream_nullData" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWriteLines_OutputStream_nullData" ]
          }
        },
        "org.apache.commons.io.IOUtilsWriteTestCase#testWriteLines_OutputStream_nullSeparator" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWriteLines_OutputStream_nullSeparator" ]
          }
        },
        "org.apache.commons.io.IOUtilsWriteTestCase#testWriteLines_OutputStream_nullStream" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWriteLines_OutputStream_nullStream" ]
          }
        },
        "org.apache.commons.io.IOUtilsWriteTestCase#testWriteLines_Writer" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWriteLines_Writer" ]
          }
        },
        "org.apache.commons.io.IOUtilsWriteTestCase#testWriteLines_Writer_nullData" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWriteLines_Writer_nullData" ]
          }
        },
        "org.apache.commons.io.IOUtilsWriteTestCase#testWriteLines_Writer_nullSeparator" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWriteLines_Writer_nullSeparator" ]
          }
        },
        "org.apache.commons.io.IOUtilsWriteTestCase#testWriteLines_Writer_nullStream" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWriteLines_Writer_nullStream" ]
          }
        },
        "org.apache.commons.io.LineIteratorTestCase" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFiltering", "testInvalidEncoding", "testMissingFile", "testNextLineOnly", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ]
          }
        },
        "org.apache.commons.io.comparator.ComparatorAbstractTestCase" : {
          "testcases" : {
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorArrayNull", "testConstructorIterable", "testConstructorIterableNull" ],
            "org.apache.commons.io.comparator.DirectoryFileComparatorTest" : [ "testSortArray", "testSortList" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ]
          }
        },
        "org.apache.commons.io.comparator.CompositeFileComparatorTest#testConstructorArrayNull" : {
          "testcases" : {
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorArrayNull" ]
          }
        },
        "org.apache.commons.io.comparator.CompositeFileComparatorTest#testConstructorIterableNull" : {
          "testcases" : {
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorIterableNull" ]
          }
        },
        "org.apache.commons.io.filefilter.AndFileFilterTestCase" : { },
        "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase" : { },
        "org.apache.commons.io.filefilter.OrFileFilterTestCase" : { }
      }
    },
    "cf02f0f9b4c0ce1687bbf76dd567c18ab6f23bce" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "8841ea9bd4c4519c95e2ec0c7699c587baae2da4",
      "changedClazzes" : {
        "org.apache.commons.io.comparator.CompositeFileComparator" : {
          "testcases" : {
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorArrayNull", "testConstructorIterable", "testConstructorIterableNull" ]
          }
        }
      }
    },
    "11abbca78285fa0d3fd91ea64d6fd80686fd4eae" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "cf02f0f9b4c0ce1687bbf76dd567c18ab6f23bce",
      "changedClazzes" : {
        "org.apache.commons.io.DirectoryWalkerTestCase" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testCancel", "testFilter", "testFilterAndLimitA", "testFilterAndLimitB", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile2", "testFilterDirAndFile3", "testFilterDirAndFile4", "testHandleStartDirectoryFalse", "testLimitToCurrent", "testMissingStartDirectory", "testMultiThreadCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCase$TestCancelWalker" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCase$TestFalseFileFinder" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testHandleStartDirectoryFalse" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilter", "testFilterAndLimitA", "testFilterAndLimitB", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile2", "testFilterDirAndFile3", "testFilterDirAndFile4", "testHandleStartDirectoryFalse", "testLimitToCurrent", "testMissingStartDirectory" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCase$TestMultiThreadCancelWalker" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testMultiThreadCancel" ]
          }
        }
      }
    },
    "34bb05d6c3b791517064a6fb1294ad88d11f3117" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "11abbca78285fa0d3fd91ea64d6fd80686fd4eae",
      "changedClazzes" : {
        "org.apache.commons.io.DirectoryWalker#<init>" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testFilterDirAndFile1", "testFilterDirAndFile2", "testFilterDirAndFile3", "testFilterDirAndFile4" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker#checkIfCancelled(java.io.File,int,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testCancel", "testFilter", "testFilterAndLimitA", "testFilterAndLimitB", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile2", "testFilterDirAndFile3", "testFilterDirAndFile4", "testHandleStartDirectoryFalse", "testLimitToCurrent", "testMissingStartDirectory", "testMultiThreadCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker#filterDirectoryContents(java.io.File,int,java.io.File[])" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testCancel", "testFilter", "testFilterAndLimitB", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile2", "testFilterDirAndFile3", "testFilterDirAndFile4", "testMissingStartDirectory", "testMultiThreadCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker#handleCancelled(java.io.File,java.util.Collection,org.apache.commons.io.DirectoryWalker$CancelException)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testCancel", "testMultiThreadCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker#handleDirectory(java.io.File,int,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testCancel", "testFilter", "testFilterAndLimitA", "testFilterAndLimitB", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile2", "testFilterDirAndFile3", "testFilterDirAndFile4", "testLimitToCurrent", "testMissingStartDirectory", "testMultiThreadCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker#handleDirectoryStart(java.io.File,int,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testCancel", "testFilter", "testFilterAndLimitA", "testFilterAndLimitB", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile2", "testFilterDirAndFile3", "testFilterDirAndFile4", "testLimitToCurrent", "testMissingStartDirectory", "testMultiThreadCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker#handleEnd(java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testFilter", "testFilterAndLimitA", "testFilterAndLimitB", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile2", "testFilterDirAndFile3", "testFilterDirAndFile4", "testHandleStartDirectoryFalse", "testLimitToCurrent", "testMissingStartDirectory" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker#handleIsCancelled(java.io.File,int,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testCancel", "testFilter", "testFilterAndLimitA", "testFilterAndLimitB", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile2", "testFilterDirAndFile3", "testFilterDirAndFile4", "testHandleStartDirectoryFalse", "testLimitToCurrent", "testMissingStartDirectory" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker#handleRestricted(java.io.File,int,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testMissingStartDirectory" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker#handleStart(java.io.File,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testCancel", "testFilter", "testFilterAndLimitA", "testFilterAndLimitB", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile2", "testFilterDirAndFile3", "testFilterDirAndFile4", "testHandleStartDirectoryFalse", "testLimitToCurrent", "testMissingStartDirectory", "testMultiThreadCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker#walk(java.io.File,int,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testCancel", "testFilter", "testFilterAndLimitA", "testFilterAndLimitB", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile2", "testFilterDirAndFile3", "testFilterDirAndFile4", "testHandleStartDirectoryFalse", "testLimitToCurrent", "testMissingStartDirectory", "testMultiThreadCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker$CancelException#<init>(java.io.File,int)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testCancel", "testMultiThreadCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker$CancelException#getDepth" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testCancel", "testMultiThreadCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker$CancelException#getFile" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testCancel", "testMultiThreadCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testCancel", "testFilter", "testFilterAndLimitA", "testFilterAndLimitB", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile2", "testFilterDirAndFile3", "testFilterDirAndFile4", "testHandleStartDirectoryFalse", "testLimitToCurrent", "testMissingStartDirectory", "testMultiThreadCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCaseJava4#checkContainsFiles(java.lang.String,java.io.File[],java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testFilter", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile2", "testFilterDirAndFile3", "testFilterDirAndFile4" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCaseJava4#directoriesOnly(java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testFilterDirAndFile3" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCaseJava4#filesOnly(java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testFilterDirAndFile4" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCaseJava4#setUp" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testCancel", "testFilter", "testFilterAndLimitA", "testFilterAndLimitB", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile2", "testFilterDirAndFile3", "testFilterDirAndFile4", "testHandleStartDirectoryFalse", "testLimitToCurrent", "testMissingStartDirectory", "testMultiThreadCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCaseJava4#tearDown" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testCancel", "testFilter", "testFilterAndLimitA", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile2", "testFilterDirAndFile3", "testFilterDirAndFile4", "testHandleStartDirectoryFalse", "testLimitToCurrent", "testMissingStartDirectory", "testMultiThreadCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCaseJava4#testCancel" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCaseJava4#testFilter" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testFilter" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCaseJava4#testFilterAndLimitA" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testFilterAndLimitA" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCaseJava4#testFilterAndLimitB" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testFilterAndLimitB" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCaseJava4#testFilterAndLimitC" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testFilterAndLimitC" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCaseJava4#testFilterAndLimitD" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testFilterAndLimitD" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCaseJava4#testFilterDirAndFile1" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testFilterDirAndFile1" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCaseJava4#testFilterDirAndFile2" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testFilterDirAndFile2" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCaseJava4#testFilterDirAndFile3" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testFilterDirAndFile3" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCaseJava4#testFilterDirAndFile4" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testFilterDirAndFile4" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCaseJava4#testHandleStartDirectoryFalse" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testHandleStartDirectoryFalse" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCaseJava4#testLimitToCurrent" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testLimitToCurrent" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCaseJava4#testMissingStartDirectory" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testMissingStartDirectory" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCaseJava4#testMultiThreadCancel" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testMultiThreadCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestCancelWalker#<init>(java.lang.String,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestCancelWalker#find(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestCancelWalker#handleCancelled(java.io.File,java.util.Collection,org.apache.commons.io.CancelException)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestCancelWalker#handleDirectoryEnd(java.io.File,int,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestCancelWalker#handleFile(java.io.File,int,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFalseFileFinder#<init>(java.io.FileFilter,int)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testHandleStartDirectoryFalse" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFalseFileFinder#handleDirectory(java.io.File,int,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testHandleStartDirectoryFalse" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFileFinder#<init>(java.io.FileFilter,int)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testFilterDirAndFile1", "testFilterDirAndFile2", "testFilterDirAndFile3", "testFilterDirAndFile4" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFileFinder#find(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testFilter", "testFilterAndLimitA", "testFilterAndLimitB", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile2", "testFilterDirAndFile3", "testFilterDirAndFile4", "testHandleStartDirectoryFalse", "testLimitToCurrent", "testMissingStartDirectory" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFileFinder#handleDirectoryEnd(java.io.File,int,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testFilter", "testFilterAndLimitA", "testFilterAndLimitB", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile2", "testFilterDirAndFile3", "testFilterDirAndFile4", "testLimitToCurrent", "testMissingStartDirectory" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFileFinder#handleFile(java.io.File,int,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testFilter", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile2", "testFilterDirAndFile3", "testFilterDirAndFile4" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestMultiThreadCancelWalker#<init>(java.lang.String,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testMultiThreadCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestMultiThreadCancelWalker#find(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testMultiThreadCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestMultiThreadCancelWalker#handleCancelled(java.io.File,java.util.Collection,org.apache.commons.io.CancelException)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testMultiThreadCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestMultiThreadCancelWalker#handleDirectoryEnd(java.io.File,int,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testMultiThreadCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestMultiThreadCancelWalker#handleFile(java.io.File,int,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testMultiThreadCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestMultiThreadCancelWalker#handleIsCancelled(java.io.File,int,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testMultiThreadCancel" ]
          }
        },
        "org.apache.commons.io.IOCase#checkEquals(java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testFilter", "testFilterAndLimitB", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ]
          }
        },
        "org.apache.commons.io.filefilter.AbstractFileFilter#<init>" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ]
          }
        },
        "org.apache.commons.io.filefilter.AndFileFilter#<init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ]
          }
        },
        "org.apache.commons.io.filefilter.AndFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testFilterAndLimitB", "testFilterAndLimitC", "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ]
          }
        },
        "org.apache.commons.io.filefilter.AndFileFilter#addFileFilter(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ]
          }
        },
        "org.apache.commons.io.filefilter.DirectoryFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testFilterAndLimitB", "testFilterAndLimitC", "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFileFilter#<init>" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#makeDirectoryOnly(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#makeFileOnly(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#orFileFilter(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ]
          }
        },
        "org.apache.commons.io.filefilter.NameFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testFilter", "testFilterAndLimitB", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ]
          }
        },
        "org.apache.commons.io.filefilter.NotFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testFilterAndLimitB", "testFilterAndLimitC" ]
          }
        },
        "org.apache.commons.io.filefilter.OrFileFilter#<init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ]
          }
        },
        "org.apache.commons.io.filefilter.OrFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testFilter", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ]
          }
        },
        "org.apache.commons.io.filefilter.OrFileFilter#addFileFilter(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ]
          }
        },
        "org.apache.commons.io.filefilter.TrueFileFilter#<init>" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testFilterDirAndFile3", "testFilterDirAndFile4" ]
          }
        },
        "org.apache.commons.io.filefilter.TrueFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testFilterDirAndFile3", "testFilterDirAndFile4" ]
          }
        }
      }
    },
    "3718aace0e233794e765e39b2542251f45ea9452" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "34bb05d6c3b791517064a6fb1294ad88d11f3117",
      "changedClazzes" : {
        "org.apache.commons.io.FileCleaningTracker" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerFile", "testFileCleanerNull" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerFile", "testFileCleanerNull" ]
          }
        },
        "org.apache.commons.io.FileCleaningTracker$Reaper" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerFile" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerFile" ]
          }
        },
        "org.apache.commons.io.FileCleaningTracker$Tracker" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerFile" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerFile" ]
          }
        }
      }
    },
    "b9b0631a0d1c8df7cb0a6c6753975fa33571ad42" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "3718aace0e233794e765e39b2542251f45ea9452",
      "changedClazzes" : {
        "org.apache.commons.io.FileCleaningTrackerTestCase#tearDown" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerNull" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerNull" ]
          }
        }
      }
    },
    "0a37082aaf9ab878c0503108bc96e947426e60d3" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "b9b0631a0d1c8df7cb0a6c6753975fa33571ad42",
      "changedClazzes" : {
        "org.apache.commons.io.DirectoryWalker" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testCancel", "testFilter", "testFilterAndLimitA", "testFilterAndLimitB", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile2", "testFilterDirAndFile3", "testFilterDirAndFile4", "testHandleStartDirectoryFalse", "testLimitToCurrent", "testMissingStartDirectory", "testMultiThreadCancel" ],
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testCancel", "testFilter", "testFilterAndLimitA", "testFilterAndLimitB", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile2", "testFilterDirAndFile3", "testFilterDirAndFile4", "testHandleStartDirectoryFalse", "testLimitToCurrent", "testMissingStartDirectory", "testMultiThreadCancel" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToGrandChild" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker$CancelException" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testCancel", "testMultiThreadCancel" ],
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testCancel", "testMultiThreadCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCase" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testCancel", "testFilter", "testFilterAndLimitA", "testFilterAndLimitB", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile2", "testFilterDirAndFile3", "testFilterDirAndFile4", "testHandleStartDirectoryFalse", "testLimitToCurrent", "testMissingStartDirectory", "testMultiThreadCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCase$TestCancelWalker" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCase$TestFalseFileFinder" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testHandleStartDirectoryFalse" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilter", "testFilterAndLimitA", "testFilterAndLimitB", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile2", "testFilterDirAndFile3", "testFilterDirAndFile4", "testHandleStartDirectoryFalse", "testLimitToCurrent", "testMissingStartDirectory" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCase$TestMultiThreadCancelWalker" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testMultiThreadCancel" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToString", "testReadLines", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase$ListDirectoryWalker" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToGrandChild" ]
          }
        }
      }
    },
    "3f124e79a2763ce44d1ac8f9eb78a4c358d3ad30" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "0a37082aaf9ab878c0503108bc96e947426e60d3",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtilsTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToString", "testReadLines", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase$ListDirectoryWalker" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToGrandChild" ]
          }
        }
      }
    },
    "4e6639ecee2211312e8a730bac19c2bdc5615590" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "3f124e79a2763ce44d1ac8f9eb78a4c358d3ad30",
      "changedClazzes" : {
        "org.apache.commons.io.IOUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy" ],
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce", "testDeleteNormal", "testDeleteQuietlyNormal" ],
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceUnix_String_EmptyResponse", "testGetFreeSpaceUnix_String_InvalidResponse1", "testGetFreeSpaceUnix_String_InvalidResponse2", "testGetFreeSpaceUnix_String_InvalidResponse3", "testGetFreeSpaceUnix_String_InvalidResponse4", "testGetFreeSpaceUnix_String_LongResponse", "testGetFreeSpaceUnix_String_LongResponseKb", "testGetFreeSpaceUnix_String_NormalResponseFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbLinux", "testGetFreeSpaceUnix_String_NormalResponseKbSolaris", "testGetFreeSpaceUnix_String_NormalResponseLinux", "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpace_String" ],
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile" ],
            "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" : [ "testCleanDirWithASymlinkDir", "testCleanDirWithParentSymlinks", "testCleanDirWithSymlinkFile", "testIdentifiesSymlinkFile", "testStillClearsIfGivenDirectoryIsASymlink" ],
            "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToString", "testReadLines", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedError_IO_128", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPrefix", "testGetPrefixLength", "testIndexOfExtension", "testIndexOfLastSeparator", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testNormalize", "testNormalizeNoEndSeparator", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToOutputStream_nullIn", "testCopy_inputStreamToOutputStream_nullOut", "testCopy_inputStreamToWriter", "testCopy_inputStreamToWriter_Encoding", "testCopy_inputStreamToWriter_Encoding_nullEncoding", "testCopy_inputStreamToWriter_Encoding_nullIn", "testCopy_inputStreamToWriter_Encoding_nullOut", "testCopy_inputStreamToWriter_nullIn", "testCopy_inputStreamToWriter_nullOut", "testCopy_readerToOutputStream", "testCopy_readerToOutputStream_Encoding", "testCopy_readerToOutputStream_Encoding_nullEncoding", "testCopy_readerToOutputStream_Encoding_nullIn", "testCopy_readerToOutputStream_Encoding_nullOut", "testCopy_readerToOutputStream_nullIn", "testCopy_readerToOutputStream_nullOut", "testCopy_readerToWriter", "testCopy_readerToWriter_nullIn", "testCopy_readerToWriter_nullOut" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testByteArrayToOutputStream", "testByteArrayToString", "testByteArrayToWriter", "testCharSequenceToInputStream", "testConstants", "testInputStreamToBufferedInputStream", "testInputStreamToByteArray", "testInputStreamToCharArray", "testInputStreamToCharArrayWithEncoding", "testInputStreamToString", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testReaderToCharArray", "testReaderToString", "testStringToByteArray", "testStringToInputStream", "testStringToOutputStream", "testStringToWriter" ],
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWriteLines_OutputStream", "testWriteLines_OutputStream_Encoding", "testWriteLines_OutputStream_Encoding_nullData", "testWriteLines_OutputStream_Encoding_nullEncoding", "testWriteLines_OutputStream_Encoding_nullSeparator", "testWriteLines_OutputStream_Encoding_nullStream", "testWriteLines_OutputStream_nullData", "testWriteLines_OutputStream_nullSeparator", "testWriteLines_OutputStream_nullStream", "testWriteLines_Writer", "testWriteLines_Writer_nullData", "testWriteLines_Writer_nullSeparator", "testWriteLines_Writer_nullStream", "testWrite_byteArrayToOutputStream", "testWrite_byteArrayToOutputStream_nullData", "testWrite_byteArrayToOutputStream_nullStream", "testWrite_byteArrayToWriter", "testWrite_byteArrayToWriter_Encoding", "testWrite_byteArrayToWriter_Encoding_nullData", "testWrite_byteArrayToWriter_Encoding_nullEncoding", "testWrite_byteArrayToWriter_Encoding_nullWriter", "testWrite_byteArrayToWriter_nullData", "testWrite_byteArrayToWriter_nullWriter", "testWrite_charArrayToOutputStream", "testWrite_charArrayToOutputStream_Encoding", "testWrite_charArrayToOutputStream_Encoding_nullData", "testWrite_charArrayToOutputStream_Encoding_nullStream", "testWrite_charArrayToOutputStream_nullData", "testWrite_charArrayToOutputStream_nullEncoding", "testWrite_charArrayToOutputStream_nullStream", "testWrite_charArrayToWriter", "testWrite_charArrayToWriter_Encoding_nullData", "testWrite_charArrayToWriter_Encoding_nullStream", "testWrite_charSequenceToOutputStream", "testWrite_charSequenceToOutputStream_Encoding", "testWrite_charSequenceToOutputStream_Encoding_nullData", "testWrite_charSequenceToOutputStream_Encoding_nullStream", "testWrite_charSequenceToOutputStream_nullData", "testWrite_charSequenceToOutputStream_nullEncoding", "testWrite_charSequenceToOutputStream_nullStream", "testWrite_charSequenceToWriter", "testWrite_charSequenceToWriter_Encoding_nullData", "testWrite_charSequenceToWriter_Encoding_nullStream", "testWrite_stringToOutputStream", "testWrite_stringToOutputStream_Encoding", "testWrite_stringToOutputStream_Encoding_nullData", "testWrite_stringToOutputStream_Encoding_nullStream", "testWrite_stringToOutputStream_nullData", "testWrite_stringToOutputStream_nullEncoding", "testWrite_stringToOutputStream_nullStream", "testWrite_stringToWriter", "testWrite_stringToWriter_Encoding_nullData", "testWrite_stringToWriter_Encoding_nullStream" ],
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testFiltering", "testInvalidEncoding", "testMissingFile", "testNextLineOnly", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorArrayNull", "testConstructorIterable", "testConstructorIterableNull" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testCanRead", "testCanWrite", "testEmpty", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testSizeFilter" ],
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ],
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testWriteToLarge" ],
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testConstructor_fileName_nullFile", "testDifferentEncoding", "testSameEncoding" ],
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testConstructor_fileName_nullFile", "testFileLocked", "testFileNotLocked" ]
          }
        }
      }
    },
    "e69461a88efa0cfeaf73c5cc90e7fe347b330b52" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "4e6639ecee2211312e8a730bac19c2bdc5615590",
      "changedClazzes" : {
        "org.apache.commons.io.DirectoryWalkerTestCase" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testCancel", "testFilter", "testFilterAndLimitA", "testFilterAndLimitB", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile2", "testFilterDirAndFile3", "testFilterDirAndFile4", "testHandleStartDirectoryFalse", "testLimitToCurrent", "testMissingStartDirectory", "testMultiThreadCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCase$TestCancelWalker" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCase$TestFalseFileFinder" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testHandleStartDirectoryFalse" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilter", "testFilterAndLimitA", "testFilterAndLimitB", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile2", "testFilterDirAndFile3", "testFilterDirAndFile4", "testHandleStartDirectoryFalse", "testLimitToCurrent", "testMissingStartDirectory" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCase$TestMultiThreadCancelWalker" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testMultiThreadCancel" ]
          }
        }
      }
    },
    "4172468f9e0069a1d2f6803a4d35f31a971c27a0" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "e69461a88efa0cfeaf73c5cc90e7fe347b330b52",
      "changedClazzes" : {
        "org.apache.commons.io.PackageTestSuite#suite" : { }
      }
    },
    "168faab974a90e242031d39f9e3114dfd55dcddd" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "4172468f9e0069a1d2f6803a4d35f31a971c27a0",
      "changedClazzes" : {
        "org.apache.commons.io.CopyUtilsTest" : {
          "testcases" : {
            "org.apache.commons.io.CopyUtilsTest" : [ "testCopy_byteArrayToOutputStream", "testCopy_byteArrayToWriter", "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToWriter", "testCopy_readerToOutputStream", "testCopy_readerToWriter", "testCopy_stringToOutputStream", "testCopy_stringToWriter" ]
          }
        }
      }
    },
    "d7b629b0288bfeaf7d9fbe93d608ebe8ffe6ee0b" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "168faab974a90e242031d39f9e3114dfd55dcddd",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils#isFileNewer(java.io.File,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoFileReference" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIsFileNewerOlder" ]
          }
        },
        "org.apache.commons.io.FileUtils#isFileOlder(java.io.File,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIsFileNewerOlder" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testIsFileNewerOlder" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIsFileNewerOlder" ]
          }
        }
      }
    },
    "07fdc64ac95f16794f72cd9dadbe02d87010b990" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "d7b629b0288bfeaf7d9fbe93d608ebe8ffe6ee0b",
      "changedClazzes" : { }
    },
    "48b3af111bfcb62143303adcfdeaf2a7a7de265c" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "07fdc64ac95f16794f72cd9dadbe02d87010b990",
      "changedClazzes" : { }
    },
    "23f9285e7ac350805d017576136d194198e5f6f6" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "48b3af111bfcb62143303adcfdeaf2a7a7de265c",
      "changedClazzes" : { }
    },
    "e90d66db3337e667c6ff8b5a90869c1e8988aad5" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "23f9285e7ac350805d017576136d194198e5f6f6",
      "changedClazzes" : { }
    },
    "439ca6ca358f44a6be741b7bb938e05fe426b8ac" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "e90d66db3337e667c6ff8b5a90869c1e8988aad5",
      "changedClazzes" : {
        "org.apache.commons.io.DemuxTestCase" : {
          "testcases" : {
            "org.apache.commons.io.DemuxTestCase" : [ "testInputStream", "testOutputStream" ]
          }
        },
        "org.apache.commons.io.DemuxTestCase$ReaderThread" : {
          "testcases" : {
            "org.apache.commons.io.DemuxTestCase" : [ "testInputStream" ]
          }
        },
        "org.apache.commons.io.DemuxTestCase$WriterThread" : {
          "testcases" : {
            "org.apache.commons.io.DemuxTestCase" : [ "testOutputStream" ]
          }
        }
      }
    },
    "95b0ab8276dbd6cb130cc149e85448a13d43c5e0" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "439ca6ca358f44a6be741b7bb938e05fe426b8ac",
      "changedClazzes" : {
        "org.apache.commons.io.testtools.FileBasedTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerFile", "testFileCleanerNull" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerFile", "testFileCleanerNull" ],
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce", "testDeleteNormal", "testDeleteQuietlyNormal" ],
            "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToString", "testReadLines", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ],
            "org.apache.commons.io.FileUtilsWaitForTestCase" : [ "testWaitFor" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedError_IO_128", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPrefix", "testGetPrefixLength", "testIndexOfExtension", "testIndexOfLastSeparator", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testNormalize", "testNormalizeNoEndSeparator", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testByteArrayToOutputStream", "testByteArrayToString", "testByteArrayToWriter", "testCharSequenceToInputStream", "testConstants", "testInputStreamToBufferedInputStream", "testInputStreamToByteArray", "testInputStreamToCharArray", "testInputStreamToCharArrayWithEncoding", "testInputStreamToString", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testReaderToCharArray", "testReaderToString", "testStringToByteArray", "testStringToInputStream", "testStringToOutputStream", "testStringToWriter" ],
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFiltering", "testInvalidEncoding", "testMissingFile", "testNextLineOnly", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorArrayNull", "testConstructorIterable", "testConstructorIterableNull" ],
            "org.apache.commons.io.comparator.DirectoryFileComparatorTest" : [ "testSortArray", "testSortList" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testAnd", "testCanRead", "testCanWrite", "testDelegateFileFilter", "testDeprecatedWildcard", "testDirectory", "testEmpty", "testFalse", "testFiles", "testHidden", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNameFilterNullArrayArgument", "testNameFilterNullListArgument", "testNot", "testOr", "testPrefix", "testPrefixCaseInsensitive", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testTrue", "testWildcard" ],
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ],
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testConstructor_fileName_nullFile", "testDifferentEncoding", "testSameEncoding" ],
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testConstructor_fileName_nullFile", "testFileLocked", "testFileNotLocked" ],
            "org.apache.commons.io.testtools.FileBasedTestCase" : [ "generateTestData", "getTestDirectory" ]
          }
        }
      }
    },
    "e697954454b3b3c5f44ca0dbdafd55612b705dbc" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "95b0ab8276dbd6cb130cc149e85448a13d43c5e0",
      "changedClazzes" : { }
    },
    "5526f2ed85647269b94d91353d72469822925b4e" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "e697954454b3b3c5f44ca0dbdafd55612b705dbc",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils#forceMkdir(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testForceMkdir" ],
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testFileLocked", "testFileNotLocked" ]
          }
        }
      }
    },
    "65ba81b2035fa7d22d67b652a435b57f53eb4b6a" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "5526f2ed85647269b94d91353d72469822925b4e",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils#forceMkdir(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testForceMkdir" ],
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testFileLocked", "testFileNotLocked" ]
          }
        }
      }
    },
    "4a72ffcacd1959970b2dd8abe5f88ff9ef88f78b" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "65ba81b2035fa7d22d67b652a435b57f53eb4b6a",
      "changedClazzes" : {
        "org.apache.commons.io.AllIOTestSuite" : { },
        "org.apache.commons.io.CopyUtilsTest" : {
          "testcases" : {
            "org.apache.commons.io.CopyUtilsTest" : [ "testCopy_byteArrayToOutputStream", "testCopy_byteArrayToWriter", "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToWriter", "testCopy_readerToOutputStream", "testCopy_readerToWriter", "testCopy_stringToOutputStream", "testCopy_stringToWriter" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker#<init>(java.io.FileFilter,int)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilterString" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker#checkIfCancelled(java.io.File,int,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilterString" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker#filterDirectoryContents(java.io.File,int,java.io.File[])" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilterString" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker#handleDirectory(java.io.File,int,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilterString" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker#handleDirectoryEnd(java.io.File,int,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilterString" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker#handleDirectoryStart(java.io.File,int,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilterString" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker#handleEnd(java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilterString" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker#handleIsCancelled(java.io.File,int,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilterString" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker#handleStart(java.io.File,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilterString" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker#walk(java.io.File,int,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilterString" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCase" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testCancel", "testFilter", "testFilterAndLimitA", "testFilterAndLimitB", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile2", "testFilterDirAndFile3", "testFilterDirAndFile4", "testFilterString", "testHandleStartDirectoryFalse", "testLimitToCurrent", "testMissingStartDirectory", "testMultiThreadCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCase#checkContainsString(org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinderString,java.io.File[],java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilterString" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCase#setUp" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilterString" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCase#tearDown" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilterString" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCase#testFilterString" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilterString" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCase$TestCancelWalker" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCase$TestFalseFileFinder" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testHandleStartDirectoryFalse" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilter", "testFilterAndLimitA", "testFilterAndLimitB", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile2", "testFilterDirAndFile3", "testFilterDirAndFile4", "testHandleStartDirectoryFalse", "testLimitToCurrent", "testMissingStartDirectory" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinderString" : { },
        "org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinderString#<init>(java.io.FileFilter,int)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilterString" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinderString#find(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilterString" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinderString#handleFile(java.io.File,int,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilterString" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCase$TestMultiThreadCancelWalker" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testMultiThreadCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testCancel", "testFilter", "testFilterAndLimitA", "testFilterAndLimitB", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile2", "testFilterDirAndFile3", "testFilterDirAndFile4", "testHandleStartDirectoryFalse", "testLimitToCurrent", "testMissingStartDirectory", "testMultiThreadCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestCancelWalker" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFalseFileFinder" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testHandleStartDirectoryFalse" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFileFinder" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testFilter", "testFilterAndLimitA", "testFilterAndLimitB", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile2", "testFilterDirAndFile3", "testFilterDirAndFile4", "testHandleStartDirectoryFalse", "testLimitToCurrent", "testMissingStartDirectory" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestMultiThreadCancelWalker" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testMultiThreadCancel" ]
          }
        },
        "org.apache.commons.io.FileCleanerTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerFile", "testFileCleanerNull" ]
          }
        },
        "org.apache.commons.io.FileCleaningTrackerTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerFile", "testFileCleanerNull" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerFile", "testFileCleanerNull" ]
          }
        },
        "org.apache.commons.io.FileDeleteStrategyTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce", "testDeleteNormal", "testDeleteNull", "testDeleteQuietlyNormal", "testToString" ]
          }
        },
        "org.apache.commons.io.FileSystemUtilsTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceOS_String_InitError", "testGetFreeSpaceOS_String_NullPath", "testGetFreeSpaceOS_String_Other", "testGetFreeSpaceOS_String_Unix", "testGetFreeSpaceOS_String_Windows", "testGetFreeSpaceUnix_String_EmptyPath", "testGetFreeSpaceUnix_String_EmptyResponse", "testGetFreeSpaceUnix_String_InvalidResponse1", "testGetFreeSpaceUnix_String_InvalidResponse2", "testGetFreeSpaceUnix_String_InvalidResponse3", "testGetFreeSpaceUnix_String_InvalidResponse4", "testGetFreeSpaceUnix_String_LongResponse", "testGetFreeSpaceUnix_String_LongResponseKb", "testGetFreeSpaceUnix_String_NormalResponseFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbLinux", "testGetFreeSpaceUnix_String_NormalResponseKbSolaris", "testGetFreeSpaceUnix_String_NormalResponseLinux", "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpace_String" ]
          }
        },
        "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceUnix_String_EmptyPath", "testGetFreeSpaceUnix_String_EmptyResponse", "testGetFreeSpaceUnix_String_InvalidResponse1", "testGetFreeSpaceUnix_String_InvalidResponse2", "testGetFreeSpaceUnix_String_InvalidResponse3", "testGetFreeSpaceUnix_String_InvalidResponse4", "testGetFreeSpaceUnix_String_LongResponse", "testGetFreeSpaceUnix_String_LongResponseKb", "testGetFreeSpaceUnix_String_NormalResponseFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbLinux", "testGetFreeSpaceUnix_String_NormalResponseKbSolaris", "testGetFreeSpaceUnix_String_NormalResponseLinux", "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive" ]
          }
        },
        "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testCleanEmpty", "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile", "testThrowsOnNullList" ]
          }
        },
        "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" : [ "testCleanDirWithASymlinkDir", "testCleanDirWithParentSymlinks", "testCleanDirWithSymlinkFile", "testCorrectlyIdentifySymlinkWithParentSymLink", "testIdentifiesSymlinkDir", "testIdentifiesSymlinkFile", "testStillClearsIfGivenDirectoryIsASymlink" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToString", "testReadLines", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase$ListDirectoryWalker" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToGrandChild" ]
          }
        },
        "org.apache.commons.io.FileUtilsWaitForTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsWaitForTestCase" : [ "testWaitFor" ]
          }
        },
        "org.apache.commons.io.FilenameUtilsTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedError_IO_128", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPrefix", "testGetPrefixLength", "testIndexOfExtension", "testIndexOfLastSeparator", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testNormalize", "testNormalizeNoEndSeparator", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ]
          }
        },
        "org.apache.commons.io.HexDumpTest" : {
          "testcases" : {
            "org.apache.commons.io.HexDumpTest" : [ "testDump" ]
          }
        },
        "org.apache.commons.io.IOCase#checkEquals(java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilterString" ]
          }
        },
        "org.apache.commons.io.IOCaseTestCase" : {
          "testcases" : {
            "org.apache.commons.io.IOCaseTestCase" : [ "test_checkCompare_case", "test_checkCompare_functionality", "test_checkEndsWith_case", "test_checkEndsWith_functionality", "test_checkEquals_case", "test_checkEquals_functionality", "test_checkIndexOf_case", "test_checkIndexOf_functionality", "test_checkRegionMatches_case", "test_checkRegionMatches_functionality", "test_checkStartsWith_case", "test_checkStartsWith_functionality", "test_forName", "test_getName", "test_isCaseSensitive", "test_serialization", "test_toString" ]
          }
        },
        "org.apache.commons.io.IOUtilsCopyTestCase" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToOutputStream_IO84", "testCopy_inputStreamToOutputStream_nullIn", "testCopy_inputStreamToOutputStream_nullOut", "testCopy_inputStreamToWriter", "testCopy_inputStreamToWriter_Encoding", "testCopy_inputStreamToWriter_Encoding_nullEncoding", "testCopy_inputStreamToWriter_Encoding_nullIn", "testCopy_inputStreamToWriter_Encoding_nullOut", "testCopy_inputStreamToWriter_nullIn", "testCopy_inputStreamToWriter_nullOut", "testCopy_readerToOutputStream", "testCopy_readerToOutputStream_Encoding", "testCopy_readerToOutputStream_Encoding_nullEncoding", "testCopy_readerToOutputStream_Encoding_nullIn", "testCopy_readerToOutputStream_Encoding_nullOut", "testCopy_readerToOutputStream_nullIn", "testCopy_readerToOutputStream_nullOut", "testCopy_readerToWriter", "testCopy_readerToWriter_IO84", "testCopy_readerToWriter_nullIn", "testCopy_readerToWriter_nullOut" ]
          }
        },
        "org.apache.commons.io.IOUtilsWriteTestCase" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWriteLines_OutputStream", "testWriteLines_OutputStream_Encoding", "testWriteLines_OutputStream_Encoding_nullData", "testWriteLines_OutputStream_Encoding_nullEncoding", "testWriteLines_OutputStream_Encoding_nullSeparator", "testWriteLines_OutputStream_Encoding_nullStream", "testWriteLines_OutputStream_nullData", "testWriteLines_OutputStream_nullSeparator", "testWriteLines_OutputStream_nullStream", "testWriteLines_Writer", "testWriteLines_Writer_nullData", "testWriteLines_Writer_nullSeparator", "testWriteLines_Writer_nullStream", "testWrite_byteArrayToOutputStream", "testWrite_byteArrayToOutputStream_nullData", "testWrite_byteArrayToOutputStream_nullStream", "testWrite_byteArrayToWriter", "testWrite_byteArrayToWriter_Encoding", "testWrite_byteArrayToWriter_Encoding_nullData", "testWrite_byteArrayToWriter_Encoding_nullEncoding", "testWrite_byteArrayToWriter_Encoding_nullWriter", "testWrite_byteArrayToWriter_nullData", "testWrite_byteArrayToWriter_nullWriter", "testWrite_charArrayToOutputStream", "testWrite_charArrayToOutputStream_Encoding", "testWrite_charArrayToOutputStream_Encoding_nullData", "testWrite_charArrayToOutputStream_Encoding_nullStream", "testWrite_charArrayToOutputStream_nullData", "testWrite_charArrayToOutputStream_nullEncoding", "testWrite_charArrayToOutputStream_nullStream", "testWrite_charArrayToWriter", "testWrite_charArrayToWriter_Encoding_nullData", "testWrite_charArrayToWriter_Encoding_nullStream", "testWrite_charSequenceToOutputStream", "testWrite_charSequenceToOutputStream_Encoding", "testWrite_charSequenceToOutputStream_Encoding_nullData", "testWrite_charSequenceToOutputStream_Encoding_nullStream", "testWrite_charSequenceToOutputStream_nullData", "testWrite_charSequenceToOutputStream_nullEncoding", "testWrite_charSequenceToOutputStream_nullStream", "testWrite_charSequenceToWriter", "testWrite_charSequenceToWriter_Encoding_nullData", "testWrite_charSequenceToWriter_Encoding_nullStream", "testWrite_stringToOutputStream", "testWrite_stringToOutputStream_Encoding", "testWrite_stringToOutputStream_Encoding_nullData", "testWrite_stringToOutputStream_Encoding_nullStream", "testWrite_stringToOutputStream_nullData", "testWrite_stringToOutputStream_nullEncoding", "testWrite_stringToOutputStream_nullStream", "testWrite_stringToWriter", "testWrite_stringToWriter_Encoding_nullData", "testWrite_stringToWriter_Encoding_nullStream" ]
          }
        },
        "org.apache.commons.io.LineIteratorTestCase" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFiltering", "testInvalidEncoding", "testMissingFile", "testNextLineOnly", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ]
          }
        },
        "org.apache.commons.io.PackageTestSuite" : { },
        "org.apache.commons.io.comparator.CompositeFileComparatorTest" : {
          "testcases" : {
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorArrayNull", "testConstructorIterable", "testConstructorIterableNull" ]
          }
        },
        "org.apache.commons.io.comparator.DefaultFileComparatorTest" : { },
        "org.apache.commons.io.comparator.DirectoryFileComparatorTest" : {
          "testcases" : {
            "org.apache.commons.io.comparator.DirectoryFileComparatorTest" : [ "testSortArray", "testSortList" ]
          }
        },
        "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : { },
        "org.apache.commons.io.comparator.LastModifiedFileComparatorTest" : { },
        "org.apache.commons.io.comparator.NameFileComparatorTest" : { },
        "org.apache.commons.io.comparator.PackageTestSuite" : { },
        "org.apache.commons.io.comparator.PathFileComparatorTest" : { },
        "org.apache.commons.io.comparator.SizeFileComparatorTest" : {
          "testcases" : {
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ]
          }
        },
        "org.apache.commons.io.filefilter.AndFileFilterTestCase" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.AndFileFilterTestCase" : [ "getTestFilters", "setUpTestFilters" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testAnd", "testCanRead", "testCanWrite", "testDelegateFileFilter", "testDeprecatedWildcard", "testDirectory", "testEmpty", "testFalse", "testFiles", "testHidden", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNameFilterNullArrayArgument", "testNameFilterNullListArgument", "testNot", "testOr", "testPrefix", "testPrefixCaseInsensitive", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testTrue", "testWildcard" ]
          }
        },
        "org.apache.commons.io.filefilter.NameFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilterString" ]
          }
        },
        "org.apache.commons.io.filefilter.OrFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilterString" ]
          }
        },
        "org.apache.commons.io.filefilter.OrFileFilterTestCase" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.OrFileFilterTestCase" : [ "getTestFilters", "setUpTestFilters" ]
          }
        },
        "org.apache.commons.io.filefilter.PackageTestSuite" : { },
        "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ]
          }
        },
        "org.apache.commons.io.input.PackageTestSuite" : { },
        "org.apache.commons.io.output.PackageTestSuite" : { }
      }
    },
    "e5940fdbbac3910c0c78e04cca96134be868dcbb" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "4a72ffcacd1959970b2dd8abe5f88ff9ef88f78b",
      "changedClazzes" : {
        "org.apache.commons.io.LineIterator" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFiltering", "testInvalidEncoding", "testMissingFile", "testNextLineOnly", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ]
          }
        }
      }
    },
    "8ae4137b10ccab1408b9df36c10c06568c10acd7" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "e5940fdbbac3910c0c78e04cca96134be868dcbb",
      "changedClazzes" : {
        "org.apache.commons.io.FileCleaningTracker$Reaper#run" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2" ]
          }
        }
      }
    },
    "d8cc4c9981d797f55c05e309050d788fa356da01" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "8ae4137b10ccab1408b9df36c10c06568c10acd7",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils#cleanDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset" ]
          }
        },
        "org.apache.commons.io.FileUtils#deleteDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset" ]
          }
        },
        "org.apache.commons.io.FileUtils#forceDelete(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset" ]
          }
        },
        "org.apache.commons.io.FileUtils#isSymlink(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset" ]
          }
        },
        "org.apache.commons.io.FileUtils#openOutputStream(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset" ]
          }
        },
        "org.apache.commons.io.FileUtils#write(java.io.File,java.lang.CharSequence)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterString" ]
          }
        },
        "org.apache.commons.io.FileUtils#writeStringToFile(java.io.File,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterString" ]
          }
        },
        "org.apache.commons.io.IOUtils#closeQuietly(java.io.Closeable)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset" ]
          }
        },
        "org.apache.commons.io.IOUtils#write(byte[],java.io.OutputStream)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterString" ]
          }
        },
        "org.apache.commons.io.filefilter.AbstractFileFilter#<init>" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset" ]
          }
        },
        "org.apache.commons.io.filefilter.AbstractFileFilter#accept(java.io.File,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testAnd", "testCanRead", "testCanWrite", "testDelegateFileFilter", "testDeprecatedWildcard", "testDirectory", "testEmpty", "testFalse", "testFiles", "testHidden", "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNameFilterNullArrayArgument", "testNameFilterNullListArgument", "testNot", "testOr", "testPrefix", "testPrefixCaseInsensitive", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testTrue", "testWildcard" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase#assertFiltering(org.apache.commons.io.filefilter.IOFileFilter,java.io.File,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase#setUp" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase#tearDown" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase#testMagicNumberFileFilterBytes" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testMagicNumberFileFilterBytes" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase#testMagicNumberFileFilterBytesOffset" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testMagicNumberFileFilterBytesOffset" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase#testMagicNumberFileFilterString" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testMagicNumberFileFilterString" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase#testMagicNumberFileFilterStringOffset" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testMagicNumberFileFilterStringOffset" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ],
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testListFiles" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testFalse", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNot", "testPrefix", "testSizeFilter", "testSuffix", "testTrue" ],
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#magicNumberFileFilter(byte[])" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testMagicNumberFileFilterStringOffset" ]
          }
        },
        "org.apache.commons.io.filefilter.MagicNumberFileFilter" : { },
        "org.apache.commons.io.filefilter.MagicNumberFileFilter#<init>(byte[])" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset" ]
          }
        },
        "org.apache.commons.io.filefilter.MagicNumberFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#<init>(int)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#close" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#toString" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#write(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#createFile(java.io.File,long)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterStringOffset" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#generateTestData(java.io.OutputStream,long)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#getTestDirectory" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset" ]
          }
        }
      }
    },
    "b0c65975278d1d6f5297f3fa2470dbc8a563e16b" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "d8cc4c9981d797f55c05e309050d788fa356da01",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerNull" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerNull" ],
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce" ],
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testCleanEmpty", "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile", "testThrowsOnNullList" ],
            "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" : [ "testCleanDirWithASymlinkDir", "testCleanDirWithParentSymlinks", "testCleanDirWithSymlinkFile", "testCorrectlyIdentifySymlinkWithParentSymLink", "testIdentifiesSymlinkDir", "testIdentifiesSymlinkFile", "testStillClearsIfGivenDirectoryIsASymlink" ],
            "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToString", "testReadLines", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ],
            "org.apache.commons.io.FileUtilsWaitForTestCase" : [ "testWaitFor" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedError_IO_128", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPrefix", "testGetPrefixLength", "testIndexOfExtension", "testIndexOfLastSeparator", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testNormalize", "testNormalizeNoEndSeparator", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testByteArrayToOutputStream", "testByteArrayToString", "testByteArrayToWriter", "testCharSequenceToInputStream", "testConstants", "testInputStreamToBufferedInputStream", "testInputStreamToByteArray", "testInputStreamToCharArray", "testInputStreamToCharArrayWithEncoding", "testInputStreamToString", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testReaderToCharArray", "testReaderToString", "testStringToByteArray", "testStringToInputStream", "testStringToOutputStream", "testStringToWriter" ],
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFiltering", "testInvalidEncoding", "testMissingFile", "testNextLineOnly", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorArrayNull", "testConstructorIterable", "testConstructorIterableNull" ],
            "org.apache.commons.io.comparator.DirectoryFileComparatorTest" : [ "testSortArray", "testSortList" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testAnd", "testCanRead", "testCanWrite", "testDelegateFileFilter", "testDeprecatedWildcard", "testDirectory", "testEmpty", "testFalse", "testFiles", "testHidden", "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNameFilterNullArrayArgument", "testNameFilterNullListArgument", "testNot", "testOr", "testPrefix", "testPrefixCaseInsensitive", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testTrue", "testWildcard" ],
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ],
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ],
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "testConstructor_File_encoding_badEncoding" ],
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testFileLocked", "testFileNotLocked" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testCopyFile1ToDir" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyFile1ToDir" ]
          }
        }
      }
    },
    "d577693e0a85d59d7d0ac9458bf84eb1678efde1" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "b0c65975278d1d6f5297f3fa2470dbc8a563e16b",
      "changedClazzes" : {
        "org.apache.commons.io.FileSystemUtils#freeSpaceUnix(java.lang.String,boolean,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceUnix_String_EmptyPath", "testGetFreeSpaceUnix_String_EmptyResponse", "testGetFreeSpaceUnix_String_InvalidResponse1", "testGetFreeSpaceUnix_String_InvalidResponse2", "testGetFreeSpaceUnix_String_InvalidResponse3", "testGetFreeSpaceUnix_String_InvalidResponse4", "testGetFreeSpaceUnix_String_LongResponse", "testGetFreeSpaceUnix_String_LongResponseKb", "testGetFreeSpaceUnix_String_NormalResponseFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbLinux", "testGetFreeSpaceUnix_String_NormalResponseKbSolaris", "testGetFreeSpaceUnix_String_NormalResponseLinux", "testGetFreeSpace_String" ]
          }
        }
      }
    },
    "1282c294a11e637b3830d84ee87a4b3bcf823bc6" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "d577693e0a85d59d7d0ac9458bf84eb1678efde1",
      "changedClazzes" : {
        "org.apache.commons.io.FileSystemUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceOS_String_InitError", "testGetFreeSpaceOS_String_NullPath", "testGetFreeSpaceOS_String_Other", "testGetFreeSpaceOS_String_Unix", "testGetFreeSpaceOS_String_Windows", "testGetFreeSpaceUnix_String_EmptyPath", "testGetFreeSpaceUnix_String_EmptyResponse", "testGetFreeSpaceUnix_String_InvalidResponse1", "testGetFreeSpaceUnix_String_InvalidResponse2", "testGetFreeSpaceUnix_String_InvalidResponse3", "testGetFreeSpaceUnix_String_InvalidResponse4", "testGetFreeSpaceUnix_String_LongResponse", "testGetFreeSpaceUnix_String_LongResponseKb", "testGetFreeSpaceUnix_String_NormalResponseFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbLinux", "testGetFreeSpaceUnix_String_NormalResponseKbSolaris", "testGetFreeSpaceUnix_String_NormalResponseLinux", "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpace_String" ]
          }
        }
      }
    },
    "8bc5bbc46af134d18a412d7e04a97d1fd43d213c" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "1282c294a11e637b3830d84ee87a4b3bcf823bc6",
      "changedClazzes" : {
        "org.apache.commons.io.IOUtilsTestCase#tearDown" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testByteArrayToOutputStream", "testByteArrayToString", "testByteArrayToWriter", "testCharSequenceToInputStream", "testConstants", "testInputStreamToBufferedInputStream", "testInputStreamToByteArray", "testInputStreamToCharArray", "testInputStreamToCharArrayWithEncoding", "testInputStreamToString", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testReaderToCharArray", "testReaderToString", "testStringToByteArray", "testStringToInputStream", "testStringToOutputStream", "testStringToWriter" ]
          }
        }
      }
    },
    "95ce5f3d00c1e5bc3c4568423ca095088d08b35e" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "8bc5bbc46af134d18a412d7e04a97d1fd43d213c",
      "changedClazzes" : { }
    },
    "ef821e8e717865b778d33d5554f34eb1490aad34" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "95ce5f3d00c1e5bc3c4568423ca095088d08b35e",
      "changedClazzes" : { }
    },
    "b9a5019dcf27a9171aba354bb97b0475f716cc12" : {
      "running" : false,
      "jdk" : 8,
      "changedClazzes" : { }
    },
    "3574daf89b649db7491dca41c83532e87740da63" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "ef821e8e717865b778d33d5554f34eb1490aad34",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerNull" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerNull" ],
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce" ],
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testCleanEmpty", "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile", "testThrowsOnNullList" ],
            "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" : [ "testCleanDirWithASymlinkDir", "testCleanDirWithParentSymlinks", "testCleanDirWithSymlinkFile", "testCorrectlyIdentifySymlinkWithParentSymLink", "testIdentifiesSymlinkDir", "testIdentifiesSymlinkFile", "testStillClearsIfGivenDirectoryIsASymlink" ],
            "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToString", "testReadLines", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ],
            "org.apache.commons.io.FileUtilsWaitForTestCase" : [ "testWaitFor" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedError_IO_128", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPrefix", "testGetPrefixLength", "testIndexOfExtension", "testIndexOfLastSeparator", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testNormalize", "testNormalizeNoEndSeparator", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testByteArrayToOutputStream", "testByteArrayToString", "testByteArrayToWriter", "testCharSequenceToInputStream", "testConstants", "testInputStreamToBufferedInputStream", "testInputStreamToByteArray", "testInputStreamToCharArray", "testInputStreamToCharArrayWithEncoding", "testInputStreamToString", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testReaderToCharArray", "testReaderToString", "testStringToByteArray", "testStringToInputStream", "testStringToOutputStream", "testStringToWriter" ],
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFiltering", "testInvalidEncoding", "testMissingFile", "testNextLineOnly", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorArrayNull", "testConstructorIterable", "testConstructorIterableNull" ],
            "org.apache.commons.io.comparator.DirectoryFileComparatorTest" : [ "testSortArray", "testSortList" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testAnd", "testCanRead", "testCanWrite", "testDelegateFileFilter", "testDeprecatedWildcard", "testDirectory", "testEmpty", "testFalse", "testFiles", "testHidden", "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNameFilterNullArrayArgument", "testNameFilterNullListArgument", "testNot", "testOr", "testPrefix", "testPrefixCaseInsensitive", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testTrue", "testWildcard" ],
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ],
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ],
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "testConstructor_File_encoding_badEncoding" ],
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testFileLocked", "testFileNotLocked" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testCopyFile1ToDir" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyFile1ToDir" ]
          }
        }
      }
    },
    "e5d35072b2d309565175acca267476b83d39282f" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "3574daf89b649db7491dca41c83532e87740da63",
      "changedClazzes" : { }
    },
    "09e43b27212c6a6314c449d84a80f44aefd0873c" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "e5d35072b2d309565175acca267476b83d39282f",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils#cleanDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testSkipReader", "testSkipStream" ]
          }
        },
        "org.apache.commons.io.FileUtils#deleteDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testSkipReader", "testSkipStream" ]
          }
        },
        "org.apache.commons.io.FileUtils#forceDelete(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testSkipReader", "testSkipStream" ]
          }
        },
        "org.apache.commons.io.FileUtils#isSymlink(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testSkipReader", "testSkipStream" ]
          }
        },
        "org.apache.commons.io.IOUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy" ],
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce", "testDeleteNormal", "testDeleteQuietlyNormal" ],
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceUnix_String_EmptyResponse", "testGetFreeSpaceUnix_String_InvalidResponse1", "testGetFreeSpaceUnix_String_InvalidResponse2", "testGetFreeSpaceUnix_String_InvalidResponse3", "testGetFreeSpaceUnix_String_InvalidResponse4", "testGetFreeSpaceUnix_String_LongResponse", "testGetFreeSpaceUnix_String_LongResponseKb", "testGetFreeSpaceUnix_String_NormalResponseFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbLinux", "testGetFreeSpaceUnix_String_NormalResponseKbSolaris", "testGetFreeSpaceUnix_String_NormalResponseLinux", "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpace_String" ],
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile" ],
            "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" : [ "testCleanDirWithASymlinkDir", "testCleanDirWithParentSymlinks", "testCleanDirWithSymlinkFile", "testIdentifiesSymlinkFile", "testStillClearsIfGivenDirectoryIsASymlink" ],
            "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToString", "testReadLines", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedError_IO_128", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPrefix", "testGetPrefixLength", "testIndexOfExtension", "testIndexOfLastSeparator", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testNormalize", "testNormalizeNoEndSeparator", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToOutputStream_nullIn", "testCopy_inputStreamToOutputStream_nullOut", "testCopy_inputStreamToWriter", "testCopy_inputStreamToWriter_Encoding", "testCopy_inputStreamToWriter_Encoding_nullEncoding", "testCopy_inputStreamToWriter_Encoding_nullIn", "testCopy_inputStreamToWriter_Encoding_nullOut", "testCopy_inputStreamToWriter_nullIn", "testCopy_inputStreamToWriter_nullOut", "testCopy_readerToOutputStream", "testCopy_readerToOutputStream_Encoding", "testCopy_readerToOutputStream_Encoding_nullEncoding", "testCopy_readerToOutputStream_Encoding_nullIn", "testCopy_readerToOutputStream_Encoding_nullOut", "testCopy_readerToOutputStream_nullIn", "testCopy_readerToOutputStream_nullOut", "testCopy_readerToWriter", "testCopy_readerToWriter_nullIn", "testCopy_readerToWriter_nullOut" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testByteArrayToOutputStream", "testByteArrayToString", "testByteArrayToWriter", "testCharSequenceToInputStream", "testConstants", "testInputStreamToBufferedInputStream", "testInputStreamToByteArray", "testInputStreamToCharArray", "testInputStreamToCharArrayWithEncoding", "testInputStreamToString", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testReaderToCharArray", "testReaderToString", "testStringToByteArray", "testStringToInputStream", "testStringToOutputStream", "testStringToWriter" ],
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWriteLines_OutputStream", "testWriteLines_OutputStream_Encoding", "testWriteLines_OutputStream_Encoding_nullData", "testWriteLines_OutputStream_Encoding_nullEncoding", "testWriteLines_OutputStream_Encoding_nullSeparator", "testWriteLines_OutputStream_Encoding_nullStream", "testWriteLines_OutputStream_nullData", "testWriteLines_OutputStream_nullSeparator", "testWriteLines_OutputStream_nullStream", "testWriteLines_Writer", "testWriteLines_Writer_nullData", "testWriteLines_Writer_nullSeparator", "testWriteLines_Writer_nullStream", "testWrite_byteArrayToOutputStream", "testWrite_byteArrayToOutputStream_nullData", "testWrite_byteArrayToOutputStream_nullStream", "testWrite_byteArrayToWriter", "testWrite_byteArrayToWriter_Encoding", "testWrite_byteArrayToWriter_Encoding_nullData", "testWrite_byteArrayToWriter_Encoding_nullEncoding", "testWrite_byteArrayToWriter_Encoding_nullWriter", "testWrite_byteArrayToWriter_nullData", "testWrite_byteArrayToWriter_nullWriter", "testWrite_charArrayToOutputStream", "testWrite_charArrayToOutputStream_Encoding", "testWrite_charArrayToOutputStream_Encoding_nullData", "testWrite_charArrayToOutputStream_Encoding_nullStream", "testWrite_charArrayToOutputStream_nullData", "testWrite_charArrayToOutputStream_nullEncoding", "testWrite_charArrayToOutputStream_nullStream", "testWrite_charArrayToWriter", "testWrite_charArrayToWriter_Encoding_nullData", "testWrite_charArrayToWriter_Encoding_nullStream", "testWrite_charSequenceToOutputStream", "testWrite_charSequenceToOutputStream_Encoding", "testWrite_charSequenceToOutputStream_Encoding_nullData", "testWrite_charSequenceToOutputStream_Encoding_nullStream", "testWrite_charSequenceToOutputStream_nullData", "testWrite_charSequenceToOutputStream_nullEncoding", "testWrite_charSequenceToOutputStream_nullStream", "testWrite_charSequenceToWriter", "testWrite_charSequenceToWriter_Encoding_nullData", "testWrite_charSequenceToWriter_Encoding_nullStream", "testWrite_stringToOutputStream", "testWrite_stringToOutputStream_Encoding", "testWrite_stringToOutputStream_Encoding_nullData", "testWrite_stringToOutputStream_Encoding_nullStream", "testWrite_stringToOutputStream_nullData", "testWrite_stringToOutputStream_nullEncoding", "testWrite_stringToOutputStream_nullStream", "testWrite_stringToWriter", "testWrite_stringToWriter_Encoding_nullData", "testWrite_stringToWriter_Encoding_nullStream" ],
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testFiltering", "testInvalidEncoding", "testMissingFile", "testNextLineOnly", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorArrayNull", "testConstructorIterable", "testConstructorIterableNull" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testCanRead", "testCanWrite", "testEmpty", "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testSizeFilter" ],
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ],
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testWriteToLarge" ],
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testConstructor_fileName_nullFile", "testDifferentEncoding", "testSameEncoding" ],
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testConstructor_fileName_nullFile", "testFileLocked", "testFileNotLocked" ]
          }
        },
        "org.apache.commons.io.IOUtils#closeQuietly(java.io.Closeable)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testSkipReader" ]
          }
        },
        "org.apache.commons.io.IOUtils#skipFully(java.io.InputStream,long)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testSkipReader" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testByteArrayToOutputStream", "testByteArrayToString", "testByteArrayToWriter", "testCharSequenceToInputStream", "testConstants", "testInputStreamToBufferedInputStream", "testInputStreamToByteArray", "testInputStreamToCharArray", "testInputStreamToCharArrayWithEncoding", "testInputStreamToString", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testReaderToCharArray", "testReaderToString", "testSkipReader", "testSkipStream", "testStringToByteArray", "testStringToInputStream", "testStringToOutputStream", "testStringToWriter" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#setUp" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testSkipReader", "testSkipStream" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#tearDown" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testSkipReader", "testSkipStream" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testSkipReader" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testSkipReader" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testSkipStream" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testSkipStream" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#<init>(int)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testSkipReader", "testSkipStream" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#close" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testSkipReader", "testSkipStream" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#toString" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testSkipReader", "testSkipStream" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#write(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testSkipReader", "testSkipStream" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#createFile(java.io.File,long)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testSkipReader", "testSkipStream" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#generateTestData(java.io.OutputStream,long)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testSkipReader", "testSkipStream" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#getTestDirectory" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testSkipReader", "testSkipStream" ]
          }
        }
      }
    },
    "b7ff34d44c574d035b4ebdb5dcfccc373f08a05d" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "09e43b27212c6a6314c449d84a80f44aefd0873c",
      "changedClazzes" : {
        "org.apache.commons.io.IOUtilsTestCase" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testByteArrayToOutputStream", "testByteArrayToString", "testByteArrayToWriter", "testCharSequenceToInputStream", "testConstants", "testInputStreamToBufferedInputStream", "testInputStreamToByteArray", "testInputStreamToCharArray", "testInputStreamToCharArrayWithEncoding", "testInputStreamToString", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testReaderToCharArray", "testReaderToString", "testSkipReader", "testSkipStream", "testStringToByteArray", "testStringToInputStream", "testStringToOutputStream", "testStringToWriter" ]
          }
        }
      }
    },
    "551fd8b465bb343c9095e0146e65e6b3af6e2ee8" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "b7ff34d44c574d035b4ebdb5dcfccc373f08a05d",
      "changedClazzes" : {
        "org.apache.commons.io.FileCleanerTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerFile", "testFileCleanerNull" ]
          }
        },
        "org.apache.commons.io.FileSystemUtilsTestCase#testGetFreeSpace_String" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpace_String" ]
          }
        }
      }
    },
    "79e7c9b192d2fed1d0d528bf2bb143af936e4a34" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "551fd8b465bb343c9095e0146e65e6b3af6e2ee8",
      "changedClazzes" : { }
    },
    "99a6100c9ba8128a99122612f0c711444e71b085" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "79e7c9b192d2fed1d0d528bf2bb143af936e4a34",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils#cleanDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testSkipFileInput", "testSkipFileReader" ]
          }
        },
        "org.apache.commons.io.FileUtils#deleteDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testSkipFileInput", "testSkipFileReader" ]
          }
        },
        "org.apache.commons.io.FileUtils#forceDelete(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testSkipFileInput", "testSkipFileReader" ]
          }
        },
        "org.apache.commons.io.FileUtils#isSymlink(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testSkipFileInput", "testSkipFileReader" ]
          }
        },
        "org.apache.commons.io.IOUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy" ],
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce", "testDeleteNormal", "testDeleteQuietlyNormal" ],
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceUnix_String_EmptyResponse", "testGetFreeSpaceUnix_String_InvalidResponse1", "testGetFreeSpaceUnix_String_InvalidResponse2", "testGetFreeSpaceUnix_String_InvalidResponse3", "testGetFreeSpaceUnix_String_InvalidResponse4", "testGetFreeSpaceUnix_String_LongResponse", "testGetFreeSpaceUnix_String_LongResponseKb", "testGetFreeSpaceUnix_String_NormalResponseFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbLinux", "testGetFreeSpaceUnix_String_NormalResponseKbSolaris", "testGetFreeSpaceUnix_String_NormalResponseLinux", "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpace_String" ],
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile" ],
            "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" : [ "testCleanDirWithASymlinkDir", "testCleanDirWithParentSymlinks", "testCleanDirWithSymlinkFile", "testIdentifiesSymlinkFile", "testStillClearsIfGivenDirectoryIsASymlink" ],
            "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToString", "testReadLines", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedError_IO_128", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPrefix", "testGetPrefixLength", "testIndexOfExtension", "testIndexOfLastSeparator", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testNormalize", "testNormalizeNoEndSeparator", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToOutputStream_nullIn", "testCopy_inputStreamToOutputStream_nullOut", "testCopy_inputStreamToWriter", "testCopy_inputStreamToWriter_Encoding", "testCopy_inputStreamToWriter_Encoding_nullEncoding", "testCopy_inputStreamToWriter_Encoding_nullIn", "testCopy_inputStreamToWriter_Encoding_nullOut", "testCopy_inputStreamToWriter_nullIn", "testCopy_inputStreamToWriter_nullOut", "testCopy_readerToOutputStream", "testCopy_readerToOutputStream_Encoding", "testCopy_readerToOutputStream_Encoding_nullEncoding", "testCopy_readerToOutputStream_Encoding_nullIn", "testCopy_readerToOutputStream_Encoding_nullOut", "testCopy_readerToOutputStream_nullIn", "testCopy_readerToOutputStream_nullOut", "testCopy_readerToWriter", "testCopy_readerToWriter_nullIn", "testCopy_readerToWriter_nullOut" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testByteArrayToOutputStream", "testByteArrayToString", "testByteArrayToWriter", "testCharSequenceToInputStream", "testConstants", "testInputStreamToBufferedInputStream", "testInputStreamToByteArray", "testInputStreamToCharArray", "testInputStreamToCharArrayWithEncoding", "testInputStreamToString", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testReaderToCharArray", "testReaderToString", "testSkipReader", "testSkipStream", "testStringToByteArray", "testStringToInputStream", "testStringToOutputStream", "testStringToWriter" ],
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWriteLines_OutputStream", "testWriteLines_OutputStream_Encoding", "testWriteLines_OutputStream_Encoding_nullData", "testWriteLines_OutputStream_Encoding_nullEncoding", "testWriteLines_OutputStream_Encoding_nullSeparator", "testWriteLines_OutputStream_Encoding_nullStream", "testWriteLines_OutputStream_nullData", "testWriteLines_OutputStream_nullSeparator", "testWriteLines_OutputStream_nullStream", "testWriteLines_Writer", "testWriteLines_Writer_nullData", "testWriteLines_Writer_nullSeparator", "testWriteLines_Writer_nullStream", "testWrite_byteArrayToOutputStream", "testWrite_byteArrayToOutputStream_nullData", "testWrite_byteArrayToOutputStream_nullStream", "testWrite_byteArrayToWriter", "testWrite_byteArrayToWriter_Encoding", "testWrite_byteArrayToWriter_Encoding_nullData", "testWrite_byteArrayToWriter_Encoding_nullEncoding", "testWrite_byteArrayToWriter_Encoding_nullWriter", "testWrite_byteArrayToWriter_nullData", "testWrite_byteArrayToWriter_nullWriter", "testWrite_charArrayToOutputStream", "testWrite_charArrayToOutputStream_Encoding", "testWrite_charArrayToOutputStream_Encoding_nullData", "testWrite_charArrayToOutputStream_Encoding_nullStream", "testWrite_charArrayToOutputStream_nullData", "testWrite_charArrayToOutputStream_nullEncoding", "testWrite_charArrayToOutputStream_nullStream", "testWrite_charArrayToWriter", "testWrite_charArrayToWriter_Encoding_nullData", "testWrite_charArrayToWriter_Encoding_nullStream", "testWrite_charSequenceToOutputStream", "testWrite_charSequenceToOutputStream_Encoding", "testWrite_charSequenceToOutputStream_Encoding_nullData", "testWrite_charSequenceToOutputStream_Encoding_nullStream", "testWrite_charSequenceToOutputStream_nullData", "testWrite_charSequenceToOutputStream_nullEncoding", "testWrite_charSequenceToOutputStream_nullStream", "testWrite_charSequenceToWriter", "testWrite_charSequenceToWriter_Encoding_nullData", "testWrite_charSequenceToWriter_Encoding_nullStream", "testWrite_stringToOutputStream", "testWrite_stringToOutputStream_Encoding", "testWrite_stringToOutputStream_Encoding_nullData", "testWrite_stringToOutputStream_Encoding_nullStream", "testWrite_stringToOutputStream_nullData", "testWrite_stringToOutputStream_nullEncoding", "testWrite_stringToOutputStream_nullStream", "testWrite_stringToWriter", "testWrite_stringToWriter_Encoding_nullData", "testWrite_stringToWriter_Encoding_nullStream" ],
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testFiltering", "testInvalidEncoding", "testMissingFile", "testNextLineOnly", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorArrayNull", "testConstructorIterable", "testConstructorIterableNull" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testCanRead", "testCanWrite", "testEmpty", "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testSizeFilter" ],
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ],
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testWriteToLarge" ],
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testConstructor_fileName_nullFile", "testDifferentEncoding", "testSameEncoding" ],
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testConstructor_fileName_nullFile", "testFileLocked", "testFileNotLocked" ]
          }
        },
        "org.apache.commons.io.IOUtils#closeQuietly(java.io.Closeable)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testSkipFileInput", "testSkipFileReader" ]
          }
        },
        "org.apache.commons.io.IOUtils#skip(java.io.InputStream,long)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testSkipFileReader" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testByteArrayToOutputStream", "testByteArrayToString", "testByteArrayToWriter", "testCharSequenceToInputStream", "testConstants", "testInputStreamToBufferedInputStream", "testInputStreamToByteArray", "testInputStreamToCharArray", "testInputStreamToCharArrayWithEncoding", "testInputStreamToString", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testReaderToCharArray", "testReaderToString", "testSkipFileInput", "testSkipFileReader", "testSkipReader", "testSkipStream", "testStringToByteArray", "testStringToInputStream", "testStringToOutputStream", "testStringToWriter" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#setUp" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testSkipFileInput", "testSkipFileReader" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#tearDown" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testSkipFileInput", "testSkipFileReader" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testSkipFileInput" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testSkipFileInput" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testSkipFileReader" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testSkipFileReader" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#<init>(int)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testSkipFileInput", "testSkipFileReader" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#close" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testSkipFileInput", "testSkipFileReader" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#toString" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testSkipFileInput", "testSkipFileReader" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#write(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testSkipFileInput", "testSkipFileReader" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#createFile(java.io.File,long)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testSkipFileInput", "testSkipFileReader" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#generateTestData(java.io.OutputStream,long)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testSkipFileInput", "testSkipFileReader" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#getTestDirectory" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testSkipFileInput", "testSkipFileReader" ]
          }
        }
      }
    },
    "0ae502ec4d228bd8206abfe7a859e3fcbaf60a47" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "99a6100c9ba8128a99122612f0c711444e71b085",
      "changedClazzes" : {
        "org.apache.commons.io.IOUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy" ],
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce", "testDeleteNormal", "testDeleteQuietlyNormal" ],
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceUnix_String_EmptyResponse", "testGetFreeSpaceUnix_String_InvalidResponse1", "testGetFreeSpaceUnix_String_InvalidResponse2", "testGetFreeSpaceUnix_String_InvalidResponse3", "testGetFreeSpaceUnix_String_InvalidResponse4", "testGetFreeSpaceUnix_String_LongResponse", "testGetFreeSpaceUnix_String_LongResponseKb", "testGetFreeSpaceUnix_String_NormalResponseFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbLinux", "testGetFreeSpaceUnix_String_NormalResponseKbSolaris", "testGetFreeSpaceUnix_String_NormalResponseLinux", "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpace_String" ],
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile" ],
            "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" : [ "testCleanDirWithASymlinkDir", "testCleanDirWithParentSymlinks", "testCleanDirWithSymlinkFile", "testIdentifiesSymlinkFile", "testStillClearsIfGivenDirectoryIsASymlink" ],
            "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToString", "testReadLines", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedError_IO_128", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPrefix", "testGetPrefixLength", "testIndexOfExtension", "testIndexOfLastSeparator", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testNormalize", "testNormalizeNoEndSeparator", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToOutputStream_nullIn", "testCopy_inputStreamToOutputStream_nullOut", "testCopy_inputStreamToWriter", "testCopy_inputStreamToWriter_Encoding", "testCopy_inputStreamToWriter_Encoding_nullEncoding", "testCopy_inputStreamToWriter_Encoding_nullIn", "testCopy_inputStreamToWriter_Encoding_nullOut", "testCopy_inputStreamToWriter_nullIn", "testCopy_inputStreamToWriter_nullOut", "testCopy_readerToOutputStream", "testCopy_readerToOutputStream_Encoding", "testCopy_readerToOutputStream_Encoding_nullEncoding", "testCopy_readerToOutputStream_Encoding_nullIn", "testCopy_readerToOutputStream_Encoding_nullOut", "testCopy_readerToOutputStream_nullIn", "testCopy_readerToOutputStream_nullOut", "testCopy_readerToWriter", "testCopy_readerToWriter_nullIn", "testCopy_readerToWriter_nullOut" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testByteArrayToOutputStream", "testByteArrayToString", "testByteArrayToWriter", "testCharSequenceToInputStream", "testConstants", "testInputStreamToBufferedInputStream", "testInputStreamToByteArray", "testInputStreamToCharArray", "testInputStreamToCharArrayWithEncoding", "testInputStreamToString", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testReaderToCharArray", "testReaderToString", "testSkipFileInput", "testSkipFileReader", "testSkipReader", "testSkipStream", "testStringToByteArray", "testStringToInputStream", "testStringToOutputStream", "testStringToWriter" ],
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWriteLines_OutputStream", "testWriteLines_OutputStream_Encoding", "testWriteLines_OutputStream_Encoding_nullData", "testWriteLines_OutputStream_Encoding_nullEncoding", "testWriteLines_OutputStream_Encoding_nullSeparator", "testWriteLines_OutputStream_Encoding_nullStream", "testWriteLines_OutputStream_nullData", "testWriteLines_OutputStream_nullSeparator", "testWriteLines_OutputStream_nullStream", "testWriteLines_Writer", "testWriteLines_Writer_nullData", "testWriteLines_Writer_nullSeparator", "testWriteLines_Writer_nullStream", "testWrite_byteArrayToOutputStream", "testWrite_byteArrayToOutputStream_nullData", "testWrite_byteArrayToOutputStream_nullStream", "testWrite_byteArrayToWriter", "testWrite_byteArrayToWriter_Encoding", "testWrite_byteArrayToWriter_Encoding_nullData", "testWrite_byteArrayToWriter_Encoding_nullEncoding", "testWrite_byteArrayToWriter_Encoding_nullWriter", "testWrite_byteArrayToWriter_nullData", "testWrite_byteArrayToWriter_nullWriter", "testWrite_charArrayToOutputStream", "testWrite_charArrayToOutputStream_Encoding", "testWrite_charArrayToOutputStream_Encoding_nullData", "testWrite_charArrayToOutputStream_Encoding_nullStream", "testWrite_charArrayToOutputStream_nullData", "testWrite_charArrayToOutputStream_nullEncoding", "testWrite_charArrayToOutputStream_nullStream", "testWrite_charArrayToWriter", "testWrite_charArrayToWriter_Encoding_nullData", "testWrite_charArrayToWriter_Encoding_nullStream", "testWrite_charSequenceToOutputStream", "testWrite_charSequenceToOutputStream_Encoding", "testWrite_charSequenceToOutputStream_Encoding_nullData", "testWrite_charSequenceToOutputStream_Encoding_nullStream", "testWrite_charSequenceToOutputStream_nullData", "testWrite_charSequenceToOutputStream_nullEncoding", "testWrite_charSequenceToOutputStream_nullStream", "testWrite_charSequenceToWriter", "testWrite_charSequenceToWriter_Encoding_nullData", "testWrite_charSequenceToWriter_Encoding_nullStream", "testWrite_stringToOutputStream", "testWrite_stringToOutputStream_Encoding", "testWrite_stringToOutputStream_Encoding_nullData", "testWrite_stringToOutputStream_Encoding_nullStream", "testWrite_stringToOutputStream_nullData", "testWrite_stringToOutputStream_nullEncoding", "testWrite_stringToOutputStream_nullStream", "testWrite_stringToWriter", "testWrite_stringToWriter_Encoding_nullData", "testWrite_stringToWriter_Encoding_nullStream" ],
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testFiltering", "testInvalidEncoding", "testMissingFile", "testNextLineOnly", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorArrayNull", "testConstructorIterable", "testConstructorIterableNull" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testCanRead", "testCanWrite", "testEmpty", "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testSizeFilter" ],
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ],
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testWriteToLarge" ],
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testConstructor_fileName_nullFile", "testDifferentEncoding", "testSameEncoding" ],
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testConstructor_fileName_nullFile", "testFileLocked", "testFileNotLocked" ]
          }
        }
      }
    },
    "d52d1440f5bce727ce4d5b23813c6bbad1aeb1cd" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "0ae502ec4d228bd8206abfe7a859e3fcbaf60a47",
      "changedClazzes" : {
        "org.apache.commons.io.LineIterator" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFiltering", "testInvalidEncoding", "testMissingFile", "testNextLineOnly", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ]
          }
        }
      }
    },
    "de742346e4b19ea053ff3e36f53caa6b59c838b4" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "d52d1440f5bce727ce4d5b23813c6bbad1aeb1cd",
      "changedClazzes" : {
        "org.apache.commons.io.monitor.FilesystemObserverTestCase#testDirectory" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemObserverTestCase#testFileCreate" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testFileCreate" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemObserverTestCase#testFileDelete" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testFileDelete" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemObserverTestCase#testFileUpdate" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testFileUpdate" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemObserverTestCase#testObserveSingleFile" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemObserverTestCase#touch(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        }
      }
    },
    "87fe7773dea6453e27208faffec9a0f316a1e450" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "de742346e4b19ea053ff3e36f53caa6b59c838b4",
      "changedClazzes" : { }
    },
    "29869e55b984fe57d37ed8a346cd829bc3940b89" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "87fe7773dea6453e27208faffec9a0f316a1e450",
      "changedClazzes" : { }
    },
    "1b7666632579f1d74721aaf0d4f065e558729487" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "29869e55b984fe57d37ed8a346cd829bc3940b89",
      "changedClazzes" : { }
    },
    "15bd368a10ea3e561b03a432aa8082384d15d155" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "1b7666632579f1d74721aaf0d4f065e558729487",
      "changedClazzes" : { }
    },
    "c38a00674aa1d5cd191e659f42e54696fc928e4a" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "15bd368a10ea3e561b03a432aa8082384d15d155",
      "changedClazzes" : { }
    },
    "d8d63554f59c74fe44ded336129a6bf23080dd12" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "c38a00674aa1d5cd191e659f42e54696fc928e4a",
      "changedClazzes" : {
        "org.apache.commons.io.input.ProxyReader" : { },
        "org.apache.commons.io.output.ProxyWriter" : { }
      }
    },
    "12092391607fac9e0aac136a043914e9d05b2f59" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "d8d63554f59c74fe44ded336129a6bf23080dd12",
      "changedClazzes" : {
        "org.apache.commons.io.comparator.ComparatorAbstractTestCase#testComparator" : { },
        "org.apache.commons.io.comparator.ComparatorAbstractTestCase#testReverseComparator" : { }
      }
    },
    "0612df2c5c59c932c9924362016f54a2216023af" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "12092391607fac9e0aac136a043914e9d05b2f59",
      "changedClazzes" : {
        "org.apache.commons.io.comparator.DirectoryFileComparatorTest#setUp" : {
          "testcases" : {
            "org.apache.commons.io.comparator.DirectoryFileComparatorTest" : [ "testSortArray", "testSortList" ]
          }
        }
      }
    },
    "3b90ec20e5c3ea99312d53018a11d6f5438c1516" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "0612df2c5c59c932c9924362016f54a2216023af",
      "changedClazzes" : {
        "org.apache.commons.io.input.NullReader#<init>(long)" : {
          "testcases" : {
            "org.apache.commons.io.input.ProxyReaderTest" : [ "testNullCharArray", "testNullCharBuffer" ]
          }
        },
        "org.apache.commons.io.input.NullReader#doEndOfFile" : {
          "testcases" : {
            "org.apache.commons.io.input.ProxyReaderTest" : [ "testNullCharArray" ]
          }
        },
        "org.apache.commons.io.input.NullReader#read(char[],int,int)" : {
          "testcases" : {
            "org.apache.commons.io.input.ProxyReaderTest" : [ "testNullCharArray" ]
          }
        },
        "org.apache.commons.io.input.ProxyReader#<init>(java.io.Reader)" : {
          "testcases" : {
            "org.apache.commons.io.input.ProxyReaderTest" : [ "testNullCharArray", "testNullCharBuffer" ]
          }
        },
        "org.apache.commons.io.input.ProxyReader#afterRead(int)" : {
          "testcases" : {
            "org.apache.commons.io.input.ProxyReaderTest" : [ "testNullCharArray" ]
          }
        },
        "org.apache.commons.io.input.ProxyReader#beforeRead(int)" : {
          "testcases" : {
            "org.apache.commons.io.input.ProxyReaderTest" : [ "testNullCharArray" ]
          }
        },
        "org.apache.commons.io.input.ProxyReader#read(char[])" : {
          "testcases" : {
            "org.apache.commons.io.input.ProxyReaderTest" : [ "testNullCharBuffer" ]
          }
        },
        "org.apache.commons.io.input.ProxyReaderTest" : {
          "testcases" : {
            "org.apache.commons.io.input.ProxyReaderTest" : [ "testNullCharArray", "testNullCharBuffer" ]
          }
        },
        "org.apache.commons.io.input.ProxyReaderTest#testNullCharArray" : {
          "testcases" : {
            "org.apache.commons.io.input.ProxyReaderTest" : [ "testNullCharArray" ]
          }
        },
        "org.apache.commons.io.input.ProxyReaderTest#testNullCharBuffer" : {
          "testcases" : {
            "org.apache.commons.io.input.ProxyReaderTest" : [ "testNullCharBuffer" ]
          }
        },
        "org.apache.commons.io.input.ProxyReaderTest$CustomNullReader#<init>(int)" : {
          "testcases" : {
            "org.apache.commons.io.input.ProxyReaderTest" : [ "testNullCharArray", "testNullCharBuffer" ]
          }
        },
        "org.apache.commons.io.input.ProxyReaderTest$ProxyReaderImpl#<init>(java.io.Reader)" : {
          "testcases" : {
            "org.apache.commons.io.input.ProxyReaderTest" : [ "testNullCharArray", "testNullCharBuffer" ]
          }
        },
        "org.apache.commons.io.output.NullWriter#<init>" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "testNullCharArray", "testNullString" ]
          }
        },
        "org.apache.commons.io.output.NullWriter#write(char[],int,int)" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "testNullString" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriter#<init>(java.io.Writer)" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "testNullCharArray", "testNullString" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriter#afterWrite(int)" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "testNullCharArray", "testNullString" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriter#beforeWrite(int)" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "testNullCharArray", "testNullString" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriter#write(char[])" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "testNullString" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriterTest" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "testNullCharArray", "testNullString" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriterTest#testNullCharArray" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "testNullCharArray" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriterTest#testNullString" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "testNullString" ]
          }
        }
      }
    },
    "3c034f895a6f77439ade84d6af8c4a7ebfa73486" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "3b90ec20e5c3ea99312d53018a11d6f5438c1516",
      "changedClazzes" : {
        "org.apache.commons.io.input.ProxyReader#read(char[])" : {
          "testcases" : {
            "org.apache.commons.io.input.ProxyReaderTest" : [ "testNullCharArray" ]
          }
        },
        "org.apache.commons.io.input.ProxyReaderTest#testNullCharArray" : {
          "testcases" : {
            "org.apache.commons.io.input.ProxyReaderTest" : [ "testNullCharArray" ]
          }
        },
        "org.apache.commons.io.input.ProxyReaderTest#testNullCharBuffer" : {
          "testcases" : {
            "org.apache.commons.io.input.ProxyReaderTest" : [ "testNullCharBuffer" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriter#append(java.lang.CharSequence)" : { },
        "org.apache.commons.io.output.ProxyWriter#write(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "testNullString" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriterTest#testNullCharArray" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "testNullCharArray" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriterTest#testNullString" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "testNullString" ]
          }
        }
      }
    },
    "4e5a0e15d4351abcc39c1592d8f252713e44d50a" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "3c034f895a6f77439ade84d6af8c4a7ebfa73486",
      "changedClazzes" : {
        "org.apache.commons.io.input.ProxyInputStream#read(byte[])" : {
          "testcases" : {
            "org.apache.commons.io.CopyUtilsTest" : [ "testCopy_inputStreamToOutputStream" ],
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_inputStreamToOutputStream" ],
            "org.apache.commons.io.input.AutoCloseInputStreamTest" : [ "testReadBuffer" ],
            "org.apache.commons.io.input.CountingInputStreamTest" : [ "testCounting", "testEOF2", "testSkipping", "testZeroLength2" ],
            "org.apache.commons.io.input.TaggedInputStreamTest" : [ "testEmptyStream", "testNormalStream" ],
            "org.apache.commons.io.input.TeeInputStreamTest" : [ "testReadToArray" ]
          }
        },
        "org.apache.commons.io.output.ProxyOutputStream#write(byte[])" : {
          "testcases" : {
            "org.apache.commons.io.CopyUtilsTest" : [ "testCopy_byteArrayToOutputStream" ],
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWriteLines_OutputStream", "testWriteLines_OutputStream_Encoding", "testWriteLines_OutputStream_Encoding_nullEncoding", "testWriteLines_OutputStream_Encoding_nullSeparator", "testWriteLines_OutputStream_nullSeparator", "testWrite_byteArrayToOutputStream", "testWrite_charArrayToOutputStream", "testWrite_charArrayToOutputStream_Encoding", "testWrite_charArrayToOutputStream_nullEncoding", "testWrite_charSequenceToOutputStream", "testWrite_charSequenceToOutputStream_Encoding", "testWrite_charSequenceToOutputStream_nullEncoding", "testWrite_stringToOutputStream", "testWrite_stringToOutputStream_Encoding", "testWrite_stringToOutputStream_nullEncoding" ],
            "org.apache.commons.io.output.CountingOutputStreamTest" : [ "testCounting" ],
            "org.apache.commons.io.output.TaggedOutputStreamTest" : [ "testNormalStream" ],
            "org.apache.commons.io.output.TeeOutputStreamTest" : [ "testTee" ]
          }
        }
      }
    },
    "74b139dd49c10df0cd44684d23de72279ff7d924" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "4e5a0e15d4351abcc39c1592d8f252713e44d50a",
      "changedClazzes" : {
        "org.apache.commons.io.output.NullWriter#<init>" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "testNullCharSequencec" ]
          }
        },
        "org.apache.commons.io.output.NullWriter#append(java.lang.CharSequence)" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "testNullCharSequencec" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriter#<init>(java.io.Writer)" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "testAppendCharSequence", "testNullCharSequencec", "testWriteCharArray", "testWriteCharArrayPartial", "testWriteString", "testWriteStringPartial" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriter#afterWrite(int)" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "testAppendCharSequence", "testNullCharSequencec", "testWriteCharArray", "testWriteCharArrayPartial", "testWriteString", "testWriteStringPartial" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriter#append(java.lang.CharSequence)" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "testAppendCharSequence", "testNullCharSequencec" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriter#beforeWrite(int)" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "testAppendCharSequence", "testNullCharSequencec", "testWriteCharArray", "testWriteCharArrayPartial", "testWriteString", "testWriteStringPartial" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriter#write(char[])" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "testWriteStringPartial" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriterTest" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "testAppendCharSequence", "testNullCharArray", "testNullCharSequencec", "testNullString", "testWriteCharArray", "testWriteCharArrayPartial", "testWriteString", "testWriteStringPartial" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriterTest#testAppendCharSequence" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "testAppendCharSequence" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriterTest#testNullCharSequencec" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "testNullCharSequencec" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriterTest#testWriteCharArray" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "testWriteCharArray" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriterTest#testWriteCharArrayPartial" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "testWriteCharArrayPartial" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriterTest#testWriteString" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "testWriteString" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriterTest#testWriteStringPartial" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "testWriteStringPartial" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#<init>" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "testAppendCharSequence", "testWriteCharArray", "testWriteCharArrayPartial", "testWriteString", "testWriteStringPartial" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#append(java.lang.CharSequence)" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "testAppendCharSequence" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#toString" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "testAppendCharSequence", "testWriteCharArray", "testWriteCharArrayPartial", "testWriteString", "testWriteStringPartial" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#write(char[],int,int)" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "testWriteString" ]
          }
        }
      }
    },
    "e60ebfedc4eb34553da129dc3185f81f7ff4d2cd" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "74b139dd49c10df0cd44684d23de72279ff7d924",
      "changedClazzes" : {
        "org.apache.commons.io.CopyUtilsTest#testCopy_inputStreamToOutputStream" : {
          "testcases" : {
            "org.apache.commons.io.CopyUtilsTest" : [ "testCopy_inputStreamToOutputStream" ]
          }
        },
        "org.apache.commons.io.CopyUtilsTest#testCopy_inputStreamToWriter" : {
          "testcases" : {
            "org.apache.commons.io.CopyUtilsTest" : [ "testCopy_inputStreamToWriter" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#IGNOREtestCopyFileLarge" : { },
        "org.apache.commons.io.FileUtilsTestCase#testCopyFile1" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyFile1" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testCopyFile1ToDir" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyFile1ToDir" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testCopyFile2" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyFile2" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testCopyFile2ToDir" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyFile2ToDir" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testCopyFile2WithoutFileDatePreservation" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyFile2WithoutFileDatePreservation" ]
          }
        },
        "org.apache.commons.io.IOUtilsCopyTestCase#testCopy_inputStreamToOutputStream" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_inputStreamToOutputStream" ]
          }
        },
        "org.apache.commons.io.IOUtilsCopyTestCase#testCopy_inputStreamToWriter" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_inputStreamToWriter" ]
          }
        },
        "org.apache.commons.io.IOUtilsCopyTestCase#testCopy_inputStreamToWriter_Encoding" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_inputStreamToWriter_Encoding" ]
          }
        },
        "org.apache.commons.io.IOUtilsCopyTestCase#testCopy_inputStreamToWriter_Encoding_nullEncoding" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_inputStreamToWriter_Encoding_nullEncoding" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testInputStreamToBufferedInputStream" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testInputStreamToBufferedInputStream" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testInputStreamToByteArray" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testInputStreamToByteArray" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testInputStreamToCharArray" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testInputStreamToCharArray" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testInputStreamToCharArrayWithEncoding" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testInputStreamToCharArrayWithEncoding" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testInputStreamToString" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testInputStreamToString" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testReaderToCharArray" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testReaderToCharArray" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testReaderToString" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testReaderToString" ]
          }
        },
        "org.apache.commons.io.comparator.ComparatorAbstractTestCase#testSortArray" : { },
        "org.apache.commons.io.comparator.ComparatorAbstractTestCase#testSortList" : { },
        "org.apache.commons.io.comparator.CompositeFileComparatorTest#testConstructorIterable" : {
          "testcases" : {
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorIterable" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase#assertFiltering(org.apache.commons.io.filefilter.IOFileFilter,java.io.File,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testAnd", "testCanRead", "testCanWrite", "testDelegateFileFilter", "testDeprecatedWildcard", "testDirectory", "testEmpty", "testFalse", "testFiles", "testHidden", "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNot", "testOr", "testPrefix", "testPrefixCaseInsensitive", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testTrue", "testWildcard" ]
          }
        },
        "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase#assertFileFiltering(int,org.apache.commons.io.filefilter.IOFileFilter,java.io.File,boolean)" : { },
        "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase#assertFilenameFiltering(int,org.apache.commons.io.filefilter.IOFileFilter,java.io.File,boolean)" : { },
        "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase#assertFiltering(int,org.apache.commons.io.filefilter.IOFileFilter,java.io.File,boolean)" : { },
        "org.apache.commons.io.filefilter.RegexFileFilterTestCase#assertFiltering(org.apache.commons.io.filefilter.IOFileFilter,java.io.File,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ]
          }
        },
        "org.apache.commons.io.output.DeferredFileOutputStreamTest#testAtThreshold" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testAtThreshold" ]
          }
        },
        "org.apache.commons.io.output.DeferredFileOutputStreamTest#testBelowThreshold" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testBelowThreshold" ]
          }
        },
        "org.apache.commons.io.output.DeferredFileOutputStreamTest#verifyResultFile(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testAboveThreshold", "testTempFileAboveThreshold", "testTempFileAboveThresholdPrefixOnly", "testThresholdReached", "testWriteToLarge" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriterTest#testAppendConstructStringBuilder" : {
          "testcases" : {
            "org.apache.commons.io.output.StringBuilderWriterTest" : [ "testAppendConstructStringBuilder" ]
          }
        }
      }
    },
    "5a01ecd9dd08efa1113ca1c483c3127120ec59ab" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "e60ebfedc4eb34553da129dc3185f81f7ff4d2cd",
      "changedClazzes" : {
        "org.apache.commons.io.comparator.ComparatorAbstractTestCase#testSortArray" : { },
        "org.apache.commons.io.comparator.ComparatorAbstractTestCase#testSortList" : { },
        "org.apache.commons.io.output.StringBuilderWriterTest#testAppendConstructStringBuilder" : {
          "testcases" : {
            "org.apache.commons.io.output.StringBuilderWriterTest" : [ "testAppendConstructStringBuilder" ]
          }
        }
      }
    },
    "40ab13be201a9a05f72cc4561aaef7299b524a03" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "5a01ecd9dd08efa1113ca1c483c3127120ec59ab",
      "changedClazzes" : { }
    },
    "0205634bb1417e6af223469a0cd4fc0c59cf1865" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "40ab13be201a9a05f72cc4561aaef7299b524a03",
      "changedClazzes" : { }
    },
    "bf30068bae7f930170030e705a5bdb4f4abce384" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "0205634bb1417e6af223469a0cd4fc0c59cf1865",
      "changedClazzes" : {
        "org.apache.commons.io.FileCleaningTracker" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerFile", "testFileCleanerNull" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerFile", "testFileCleanerNull" ]
          }
        },
        "org.apache.commons.io.FileCleaningTracker$Reaper" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerFile" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerFile" ]
          }
        },
        "org.apache.commons.io.FileCleaningTracker$Tracker" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerFile" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerFile" ]
          }
        }
      }
    },
    "9f4951abf0154d24cea4ab14e6df3afeced8b1e1" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "bf30068bae7f930170030e705a5bdb4f4abce384",
      "changedClazzes" : {
        "org.apache.commons.io.CopyUtilsTest#testCopy_byteArrayToWriter" : {
          "testcases" : {
            "org.apache.commons.io.CopyUtilsTest" : [ "testCopy_byteArrayToWriter" ]
          }
        },
        "org.apache.commons.io.CopyUtilsTest#testCopy_inputStreamToWriter" : {
          "testcases" : {
            "org.apache.commons.io.CopyUtilsTest" : [ "testCopy_inputStreamToWriter" ]
          }
        },
        "org.apache.commons.io.CopyUtilsTest#testCopy_readerToWriter" : {
          "testcases" : {
            "org.apache.commons.io.CopyUtilsTest" : [ "testCopy_readerToWriter" ]
          }
        },
        "org.apache.commons.io.CopyUtilsTest#testCopy_stringToWriter" : {
          "testcases" : {
            "org.apache.commons.io.CopyUtilsTest" : [ "testCopy_stringToWriter" ]
          }
        }
      }
    },
    "af9bf289fbd7f6294ca399c54f4277e8631e903a" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "9f4951abf0154d24cea4ab14e6df3afeced8b1e1",
      "changedClazzes" : {
        "org.apache.commons.io.FileExistsException" : { },
        "org.apache.commons.io.FileUtils#moveDirectory(java.io.File,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveDirectoryToDirectory", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveToDirectory" ]
          }
        },
        "org.apache.commons.io.FileUtils#moveFile(java.io.File,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveFileToDirectory", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testMoveDirectory_Errors" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveDirectory_Errors" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testMoveFile_Errors" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveFile_Errors" ]
          }
        }
      }
    },
    "ae6f41b4c16bc0e036415d7a808f737cd442009c" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "af9bf289fbd7f6294ca399c54f4277e8631e903a",
      "changedClazzes" : {
        "org.apache.commons.io.filefilter.FileFilterUtils" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ],
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testListFiles" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testFalse", "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNot", "testPrefix", "testSizeFilter", "testSuffix", "testTrue" ],
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        }
      }
    },
    "4dcf99ae012fe5d15656967832dc0fb0bec35b10" : {
      "running" : false,
      "jdk" : 8,
      "changedClazzes" : { }
    },
    "f4eb259c964c628ecd5facb38347f23628e09a80" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "ae6f41b4c16bc0e036415d7a808f737cd442009c",
      "changedClazzes" : {
        "org.apache.commons.io.filefilter.FileFilterTestCase#testNameFilter" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testNameFilter" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase#testNameFilterNullArgument" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testNameFilterNullArgument" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase#testPrefixCaseInsensitive" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testPrefixCaseInsensitive" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase#testSuffixCaseInsensitive" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testSuffixCaseInsensitive" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ],
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testListFiles" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testFalse", "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNot", "testPrefix", "testSizeFilter", "testSuffix", "testTrue" ],
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        }
      }
    },
    "cdd0750b19a44dfe5fe0a2e74fbea2768e2292b3" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "f4eb259c964c628ecd5facb38347f23628e09a80",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerNull" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerNull" ],
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce" ],
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testCleanEmpty", "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile", "testThrowsOnNullList" ],
            "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" : [ "testCleanDirWithASymlinkDir", "testCleanDirWithParentSymlinks", "testCleanDirWithSymlinkFile", "testCorrectlyIdentifySymlinkWithParentSymLink", "testIdentifiesSymlinkDir", "testIdentifiesSymlinkFile", "testStillClearsIfGivenDirectoryIsASymlink" ],
            "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToString", "testReadLines", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ],
            "org.apache.commons.io.FileUtilsWaitForTestCase" : [ "testWaitFor" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedError_IO_128", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPrefix", "testGetPrefixLength", "testIndexOfExtension", "testIndexOfLastSeparator", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testNormalize", "testNormalizeNoEndSeparator", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testByteArrayToOutputStream", "testByteArrayToString", "testByteArrayToWriter", "testCharSequenceToInputStream", "testConstants", "testInputStreamToBufferedInputStream", "testInputStreamToByteArray", "testInputStreamToCharArray", "testInputStreamToCharArrayWithEncoding", "testInputStreamToString", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testReaderToCharArray", "testReaderToString", "testSkipFileInput", "testSkipFileReader", "testSkipReader", "testSkipStream", "testStringToByteArray", "testStringToInputStream", "testStringToOutputStream", "testStringToWriter" ],
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFiltering", "testInvalidEncoding", "testMissingFile", "testNextLineOnly", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorArrayNull", "testConstructorIterable", "testConstructorIterableNull" ],
            "org.apache.commons.io.comparator.DirectoryFileComparatorTest" : [ "testSortArray", "testSortList" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testAnd", "testCanRead", "testCanWrite", "testDelegateFileFilter", "testDeprecatedWildcard", "testDirectory", "testEmpty", "testFalse", "testFiles", "testHidden", "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNameFilterNullArrayArgument", "testNameFilterNullListArgument", "testNot", "testOr", "testPrefix", "testPrefixCaseInsensitive", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testTrue", "testWildcard" ],
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ],
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ],
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "testConstructor_File_encoding_badEncoding" ],
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testFileLocked", "testFileNotLocked" ]
          }
        },
        "org.apache.commons.io.FileUtils#cleanDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testGetTempDirectory", "testGetTempDirectoryPath", "testGetUserDirectory", "testGetUserDirectoryPath" ]
          }
        },
        "org.apache.commons.io.FileUtils#deleteDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testGetTempDirectory", "testGetTempDirectoryPath", "testGetUserDirectory", "testGetUserDirectoryPath" ]
          }
        },
        "org.apache.commons.io.FileUtils#forceDelete(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testGetTempDirectory", "testGetTempDirectoryPath", "testGetUserDirectory", "testGetUserDirectoryPath" ]
          }
        },
        "org.apache.commons.io.FileUtils#getTempDirectory" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testGetTempDirectory" ]
          }
        },
        "org.apache.commons.io.FileUtils#getTempDirectoryPath" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testGetTempDirectory", "testGetTempDirectoryPath" ]
          }
        },
        "org.apache.commons.io.FileUtils#getUserDirectory" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testGetUserDirectory" ]
          }
        },
        "org.apache.commons.io.FileUtils#getUserDirectoryPath" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testGetUserDirectory", "testGetUserDirectoryPath" ]
          }
        },
        "org.apache.commons.io.FileUtils#isSymlink(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testGetTempDirectory", "testGetTempDirectoryPath", "testGetUserDirectory", "testGetUserDirectoryPath" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testGetTempDirectory", "testGetTempDirectoryPath", "testGetUserDirectory", "testGetUserDirectoryPath", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToString", "testReadLines", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#setUp" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testGetTempDirectory", "testGetTempDirectoryPath", "testGetUserDirectory", "testGetUserDirectoryPath" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#tearDown" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testGetTempDirectory", "testGetTempDirectoryPath", "testGetUserDirectory", "testGetUserDirectoryPath" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testGetTempDirectory" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testGetTempDirectory" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testGetTempDirectoryPath" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testGetTempDirectoryPath" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testGetUserDirectory" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testGetUserDirectory" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testGetUserDirectoryPath" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testGetUserDirectoryPath" ]
          }
        },
        "org.apache.commons.io.IOUtils#closeQuietly(java.io.Closeable)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testGetTempDirectory", "testGetTempDirectoryPath", "testGetUserDirectory", "testGetUserDirectoryPath" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#<init>(int)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testGetTempDirectory", "testGetTempDirectoryPath", "testGetUserDirectory", "testGetUserDirectoryPath" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#close" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testGetTempDirectory", "testGetTempDirectoryPath", "testGetUserDirectory", "testGetUserDirectoryPath" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#toString" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testGetTempDirectory", "testGetTempDirectoryPath", "testGetUserDirectory", "testGetUserDirectoryPath" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#write(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testGetTempDirectory", "testGetTempDirectoryPath", "testGetUserDirectory", "testGetUserDirectoryPath" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#createFile(java.io.File,long)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testGetTempDirectory", "testGetTempDirectoryPath", "testGetUserDirectory", "testGetUserDirectoryPath" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#generateTestData(java.io.OutputStream,long)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testGetTempDirectory", "testGetTempDirectoryPath", "testGetUserDirectory", "testGetUserDirectoryPath" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#getTestDirectory" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testGetTempDirectory", "testGetTempDirectoryPath", "testGetUserDirectory", "testGetUserDirectoryPath" ]
          }
        }
      }
    },
    "bf0850a0e2dff6acf0041de4fde2828082c9195c" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "cdd0750b19a44dfe5fe0a2e74fbea2768e2292b3",
      "changedClazzes" : {
        "org.apache.commons.io.IOUtilsCopyTestCase#testCopy_inputStreamToWriter_Encoding_nullIn" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_inputStreamToWriter_Encoding_nullIn" ]
          }
        },
        "org.apache.commons.io.IOUtilsCopyTestCase#testCopy_inputStreamToWriter_nullIn" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_inputStreamToWriter_nullIn" ]
          }
        },
        "org.apache.commons.io.IOUtilsCopyTestCase#testCopy_readerToWriter_nullIn" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_readerToWriter_nullIn" ]
          }
        }
      }
    },
    "2f0b339e138e171a91360a98699e87505c03cde5" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "bf0850a0e2dff6acf0041de4fde2828082c9195c",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerNull" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerNull" ],
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce" ],
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testCleanEmpty", "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile", "testThrowsOnNullList" ],
            "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" : [ "testCleanDirWithASymlinkDir", "testCleanDirWithParentSymlinks", "testCleanDirWithSymlinkFile", "testCorrectlyIdentifySymlinkWithParentSymLink", "testIdentifiesSymlinkDir", "testIdentifiesSymlinkFile", "testStillClearsIfGivenDirectoryIsASymlink" ],
            "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testGetTempDirectory", "testGetTempDirectoryPath", "testGetUserDirectory", "testGetUserDirectoryPath", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToString", "testReadLines", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ],
            "org.apache.commons.io.FileUtilsWaitForTestCase" : [ "testWaitFor" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedError_IO_128", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPrefix", "testGetPrefixLength", "testIndexOfExtension", "testIndexOfLastSeparator", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testNormalize", "testNormalizeNoEndSeparator", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testByteArrayToOutputStream", "testByteArrayToString", "testByteArrayToWriter", "testCharSequenceToInputStream", "testConstants", "testInputStreamToBufferedInputStream", "testInputStreamToByteArray", "testInputStreamToCharArray", "testInputStreamToCharArrayWithEncoding", "testInputStreamToString", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testReaderToCharArray", "testReaderToString", "testSkipFileInput", "testSkipFileReader", "testSkipReader", "testSkipStream", "testStringToByteArray", "testStringToInputStream", "testStringToOutputStream", "testStringToWriter" ],
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFiltering", "testInvalidEncoding", "testMissingFile", "testNextLineOnly", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorArrayNull", "testConstructorIterable", "testConstructorIterableNull" ],
            "org.apache.commons.io.comparator.DirectoryFileComparatorTest" : [ "testSortArray", "testSortList" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testAnd", "testCanRead", "testCanWrite", "testDelegateFileFilter", "testDeprecatedWildcard", "testDirectory", "testEmpty", "testFalse", "testFiles", "testHidden", "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNameFilterNullArrayArgument", "testNameFilterNullListArgument", "testNot", "testOr", "testPrefix", "testPrefixCaseInsensitive", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testTrue", "testWildcard" ],
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ],
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ],
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "testConstructor_File_encoding_badEncoding" ],
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testFileLocked", "testFileNotLocked" ]
          }
        }
      }
    },
    "0e97953c31b9e6339e66fcdc5afc6e1b1ae6bfd7" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "2f0b339e138e171a91360a98699e87505c03cde5",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtilsTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testGetTempDirectory", "testGetTempDirectoryPath", "testGetUserDirectory", "testGetUserDirectoryPath", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToString", "testReadLines", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ]
          }
        }
      }
    },
    "6cc7234cfdb139356eba9e03eb98b72a61baa27a" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "0e97953c31b9e6339e66fcdc5afc6e1b1ae6bfd7",
      "changedClazzes" : { }
    },
    "8f2e98882296a917c500e35aaded0d6bec08d7ce" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "6cc7234cfdb139356eba9e03eb98b72a61baa27a",
      "changedClazzes" : { }
    },
    "86e4b30ba700cb8bcf4d7488e0d60e07a75d6315" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "8f2e98882296a917c500e35aaded0d6bec08d7ce",
      "changedClazzes" : {
        "org.apache.commons.io.input.SwappedDataInputStream#readBoolean" : {
          "testcases" : {
            "org.apache.commons.io.input.SwappedDataInputStreamTest" : [ "testReadBoolean" ]
          }
        },
        "org.apache.commons.io.input.SwappedDataInputStreamTest#testReadBoolean" : {
          "testcases" : {
            "org.apache.commons.io.input.SwappedDataInputStreamTest" : [ "testReadBoolean" ]
          }
        }
      }
    },
    "f6273c54219710924c1db46fae16824bf99053d7" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "86e4b30ba700cb8bcf4d7488e0d60e07a75d6315",
      "changedClazzes" : { }
    },
    "2969197cc539b484d048a9c24ea65ece7f271d27" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "f6273c54219710924c1db46fae16824bf99053d7",
      "changedClazzes" : { }
    },
    "3ca6e3770eb1192d3471bbf5ca49db9f61557d72" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "2969197cc539b484d048a9c24ea65ece7f271d27",
      "changedClazzes" : {
        "org.apache.commons.io.output.LockableFileWriter#initWriter(java.io.File,java.lang.String,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_encoding_badEncoding", "testFileLocked", "testFileNotLocked" ]
          }
        }
      }
    },
    "869d23be2e2fd509731da6f1ba58bd2fa9fcbfa4" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "3ca6e3770eb1192d3471bbf5ca49db9f61557d72",
      "changedClazzes" : { }
    },
    "27738832b3163724842379503ae3016e51131998" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "869d23be2e2fd509731da6f1ba58bd2fa9fcbfa4",
      "changedClazzes" : { }
    },
    "57686b62dba65d1dffb4ad472df93f920dbcf489" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "27738832b3163724842379503ae3016e51131998",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerNull" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerNull" ],
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce" ],
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testCleanEmpty", "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile", "testThrowsOnNullList" ],
            "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" : [ "testCleanDirWithASymlinkDir", "testCleanDirWithParentSymlinks", "testCleanDirWithSymlinkFile", "testCorrectlyIdentifySymlinkWithParentSymLink", "testIdentifiesSymlinkDir", "testIdentifiesSymlinkFile", "testStillClearsIfGivenDirectoryIsASymlink" ],
            "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testGetTempDirectory", "testGetTempDirectoryPath", "testGetUserDirectory", "testGetUserDirectoryPath", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToString", "testReadLines", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ],
            "org.apache.commons.io.FileUtilsWaitForTestCase" : [ "testWaitFor" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedError_IO_128", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPrefix", "testGetPrefixLength", "testIndexOfExtension", "testIndexOfLastSeparator", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testNormalize", "testNormalizeNoEndSeparator", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testByteArrayToOutputStream", "testByteArrayToString", "testByteArrayToWriter", "testCharSequenceToInputStream", "testConstants", "testInputStreamToBufferedInputStream", "testInputStreamToByteArray", "testInputStreamToCharArray", "testInputStreamToCharArrayWithEncoding", "testInputStreamToString", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testReaderToCharArray", "testReaderToString", "testSkipFileInput", "testSkipFileReader", "testSkipReader", "testSkipStream", "testStringToByteArray", "testStringToInputStream", "testStringToOutputStream", "testStringToWriter" ],
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFiltering", "testInvalidEncoding", "testMissingFile", "testNextLineOnly", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorArrayNull", "testConstructorIterable", "testConstructorIterableNull" ],
            "org.apache.commons.io.comparator.DirectoryFileComparatorTest" : [ "testSortArray", "testSortList" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testAnd", "testCanRead", "testCanWrite", "testDelegateFileFilter", "testDeprecatedWildcard", "testDirectory", "testEmpty", "testFalse", "testFiles", "testHidden", "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNameFilterNullArrayArgument", "testNameFilterNullListArgument", "testNot", "testOr", "testPrefix", "testPrefixCaseInsensitive", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testTrue", "testWildcard" ],
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ],
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ],
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "testConstructor_File_encoding_badEncoding" ],
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testFileLocked", "testFileNotLocked" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testGetTempDirectory", "testGetTempDirectoryPath", "testGetUserDirectory", "testGetUserDirectoryPath", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToString", "testReadLines", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ]
          }
        }
      }
    },
    "6e2f0e8bc89bbaabe8fa9734e246c285af232fd7" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "57686b62dba65d1dffb4ad472df93f920dbcf489",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils#cleanDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFileFilterUtils_and", "testFileFilterUtils_or" ]
          }
        },
        "org.apache.commons.io.FileUtils#deleteDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFileFilterUtils_and", "testFileFilterUtils_or" ]
          }
        },
        "org.apache.commons.io.FileUtils#isSymlink(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFileFilterUtils_and", "testFileFilterUtils_or" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#isSystemWindows" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFileFilterUtils_and", "testFileFilterUtils_or" ]
          }
        },
        "org.apache.commons.io.IOCase#<init>(java.lang.String,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFileFilterUtils_and", "testFileFilterUtils_or" ]
          }
        },
        "org.apache.commons.io.filefilter.AbstractFileFilter#<init>" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFileFilterUtils_and", "testFileFilterUtils_or" ]
          }
        },
        "org.apache.commons.io.filefilter.AndFileFilter#<init>(java.util.List)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFileFilterUtils_and", "testFileFilterUtils_or" ]
          }
        },
        "org.apache.commons.io.filefilter.AndFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFileFilterUtils_and" ]
          }
        },
        "org.apache.commons.io.filefilter.AndFileFilter#addFileFilter(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFileFilterUtils_and", "testFileFilterUtils_or" ]
          }
        },
        "org.apache.commons.io.filefilter.DirectoryFileFilter#<init>" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFileFilterUtils_and", "testFileFilterUtils_or" ]
          }
        },
        "org.apache.commons.io.filefilter.FalseFileFilter#<init>" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFileFilterUtils_and", "testFileFilterUtils_or" ]
          }
        },
        "org.apache.commons.io.filefilter.FalseFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFileFilterUtils_and", "testFileFilterUtils_or" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testAnd", "testCanRead", "testCanWrite", "testDelegateFileFilter", "testDeprecatedWildcard", "testDirectory", "testEmpty", "testFalse", "testFileFilterUtils_and", "testFileFilterUtils_or", "testFiles", "testHidden", "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNameFilterNullArrayArgument", "testNameFilterNullListArgument", "testNot", "testOr", "testPrefix", "testPrefixCaseInsensitive", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testTrue", "testWildcard" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase#assertFiltering(org.apache.commons.io.filefilter.IOFileFilter,java.io.File,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFileFilterUtils_and", "testFileFilterUtils_or" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase#setUp" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFileFilterUtils_and", "testFileFilterUtils_or" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase#tearDown" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFileFilterUtils_and", "testFileFilterUtils_or" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase#testFileFilterUtils_and" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFileFilterUtils_and" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase#testFileFilterUtils_or" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFileFilterUtils_or" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ],
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testListFiles" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testFalse", "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNot", "testPrefix", "testPrefixCaseInsensitive", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testTrue" ],
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#and(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFileFilterUtils_and" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#andFileFilter(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFileFilterUtils_and", "testFileFilterUtils_or" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#directoryFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFileFilterUtils_and", "testFileFilterUtils_or" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#nameFileFilter(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFileFilterUtils_and", "testFileFilterUtils_or" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#notFileFilter(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFileFilterUtils_and", "testFileFilterUtils_or" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#or(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFileFilterUtils_or" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#toList(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFileFilterUtils_and", "testFileFilterUtils_or" ]
          }
        },
        "org.apache.commons.io.filefilter.NameFileFilter#<init>(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFileFilterUtils_and", "testFileFilterUtils_or" ]
          }
        },
        "org.apache.commons.io.filefilter.NotFileFilter#<init>(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFileFilterUtils_and", "testFileFilterUtils_or" ]
          }
        },
        "org.apache.commons.io.filefilter.OrFileFilter#<init>(java.util.List)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFileFilterUtils_or" ]
          }
        },
        "org.apache.commons.io.filefilter.OrFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFileFilterUtils_or" ]
          }
        },
        "org.apache.commons.io.filefilter.TrueFileFilter#<init>" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFileFilterUtils_and", "testFileFilterUtils_or" ]
          }
        },
        "org.apache.commons.io.filefilter.TrueFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFileFilterUtils_and", "testFileFilterUtils_or" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#getTestDirectory" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFileFilterUtils_and", "testFileFilterUtils_or" ]
          }
        }
      }
    },
    "4353d481a16f046a19be7995e99bbc6edc18ddad" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "6e2f0e8bc89bbaabe8fa9734e246c285af232fd7",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils#isSymlink(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerNull" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerNull" ],
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce" ],
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testCleanEmpty", "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile", "testThrowsOnNullList" ],
            "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" : [ "testCleanDirWithASymlinkDir", "testCleanDirWithParentSymlinks", "testCleanDirWithSymlinkFile", "testCorrectlyIdentifySymlinkWithParentSymLink", "testIdentifiesSymlinkDir", "testIdentifiesSymlinkFile", "testStillClearsIfGivenDirectoryIsASymlink" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testGetTempDirectory", "testGetTempDirectoryPath", "testGetUserDirectory", "testGetUserDirectoryPath", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToString", "testReadLines", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ],
            "org.apache.commons.io.FileUtilsWaitForTestCase" : [ "testWaitFor" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedError_IO_128", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPrefix", "testGetPrefixLength", "testIndexOfExtension", "testIndexOfLastSeparator", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testNormalize", "testNormalizeNoEndSeparator", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testByteArrayToOutputStream", "testByteArrayToString", "testByteArrayToWriter", "testCharSequenceToInputStream", "testConstants", "testInputStreamToBufferedInputStream", "testInputStreamToByteArray", "testInputStreamToCharArray", "testInputStreamToCharArrayWithEncoding", "testInputStreamToString", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testReaderToCharArray", "testReaderToString", "testSkipFileInput", "testSkipFileReader", "testSkipReader", "testSkipStream", "testStringToByteArray", "testStringToInputStream", "testStringToOutputStream", "testStringToWriter" ],
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFiltering", "testInvalidEncoding", "testMissingFile", "testNextLineOnly", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorArrayNull", "testConstructorIterable", "testConstructorIterableNull" ],
            "org.apache.commons.io.comparator.DirectoryFileComparatorTest" : [ "testSortArray", "testSortList" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testAnd", "testCanRead", "testCanWrite", "testDelegateFileFilter", "testDeprecatedWildcard", "testDirectory", "testEmpty", "testFalse", "testFileFilterUtils_and", "testFileFilterUtils_or", "testFiles", "testHidden", "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNameFilterNullArrayArgument", "testNameFilterNullListArgument", "testNot", "testOr", "testPrefix", "testPrefixCaseInsensitive", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testTrue", "testWildcard" ],
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ],
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        }
      }
    },
    "4286199ac5ad636d11f4428d1827b78d94217e06" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "4353d481a16f046a19be7995e99bbc6edc18ddad",
      "changedClazzes" : {
        "org.apache.commons.io.DirectoryWalker#checkIfCancelled(java.io.File,int,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToItself" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker#filterDirectoryContents(java.io.File,int,java.io.File[])" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToItself" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker#handleDirectory(java.io.File,int,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToItself" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker#handleDirectoryEnd(java.io.File,int,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToItself" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker#handleEnd(java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToItself" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker#handleIsCancelled(java.io.File,int,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToItself" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker#handleStart(java.io.File,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToItself" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker#walk(java.io.File,int,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToItself" ]
          }
        },
        "org.apache.commons.io.FileUtils#cleanDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToItself", "testCopyURLToFileWithTimeout", "testSizeOf" ]
          }
        },
        "org.apache.commons.io.FileUtils#copyDirectory(java.io.File,java.io.File,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToItself" ]
          }
        },
        "org.apache.commons.io.FileUtils#copyDirectoryToDirectory(java.io.File,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToItself" ]
          }
        },
        "org.apache.commons.io.FileUtils#copyInputStreamToFile(java.io.InputStream,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyURLToFileWithTimeout" ]
          }
        },
        "org.apache.commons.io.FileUtils#copyURLToFile(java.net.URL,java.io.File,int,int)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyURLToFileWithTimeout" ]
          }
        },
        "org.apache.commons.io.FileUtils#deleteDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToItself", "testCopyURLToFileWithTimeout", "testSizeOf" ]
          }
        },
        "org.apache.commons.io.FileUtils#doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToItself" ]
          }
        },
        "org.apache.commons.io.FileUtils#forceDelete(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToItself", "testCopyURLToFileWithTimeout", "testSizeOf" ]
          }
        },
        "org.apache.commons.io.FileUtils#isSymlink(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToItself", "testCopyURLToFileWithTimeout", "testSizeOf" ]
          }
        },
        "org.apache.commons.io.FileUtils#openOutputStream(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyURLToFileWithTimeout" ]
          }
        },
        "org.apache.commons.io.FileUtils#sizeOf(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testSizeOf" ]
          }
        },
        "org.apache.commons.io.FileUtils#sizeOfDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testSizeOf" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToItself", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testCopyURLToFileWithTimeout", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testGetTempDirectory", "testGetTempDirectoryPath", "testGetUserDirectory", "testGetUserDirectoryPath", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToString", "testReadLines", "testSizeOf", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#setUp" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToItself", "testCopyURLToFileWithTimeout", "testSizeOf" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#tearDown" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToItself", "testCopyURLToFileWithTimeout", "testSizeOf" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testCopyDirectoryToItself" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToItself" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testCopyURLToFileWithTimeout" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyURLToFileWithTimeout" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testSizeOf" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testSizeOf" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase$ListDirectoryWalker" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToGrandChild" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase$ListDirectoryWalker#handleDirectoryStart(java.io.File,int,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToItself" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase$ListDirectoryWalker#list(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToItself" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#isSystemWindows" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToItself", "testCopyURLToFileWithTimeout", "testSizeOf" ]
          }
        },
        "org.apache.commons.io.IOUtils#closeQuietly(java.io.Closeable)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToItself", "testCopyURLToFileWithTimeout", "testSizeOf" ]
          }
        },
        "org.apache.commons.io.IOUtils#contentEquals(java.io.InputStream,java.io.InputStream)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyURLToFileWithTimeout" ]
          }
        },
        "org.apache.commons.io.IOUtils#copy(java.io.InputStream,java.io.OutputStream)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyURLToFileWithTimeout" ]
          }
        },
        "org.apache.commons.io.IOUtils#copyLarge(java.io.InputStream,java.io.OutputStream)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyURLToFileWithTimeout" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#<init>(int)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToItself", "testCopyURLToFileWithTimeout", "testSizeOf" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#close" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToItself", "testCopyURLToFileWithTimeout", "testSizeOf" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#toString" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToItself", "testCopyURLToFileWithTimeout", "testSizeOf" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#write(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToItself", "testCopyURLToFileWithTimeout", "testSizeOf" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#createFile(java.io.File,long)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToItself", "testCopyURLToFileWithTimeout", "testSizeOf" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#generateTestData(java.io.OutputStream,long)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToItself", "testCopyURLToFileWithTimeout", "testSizeOf" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#getTestDirectory" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToItself", "testCopyURLToFileWithTimeout", "testSizeOf" ]
          }
        }
      }
    },
    "c88a865299f2abb21082cf8ff24cf5e8f97126d2" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "4286199ac5ad636d11f4428d1827b78d94217e06",
      "changedClazzes" : {
        "org.apache.commons.io.input.BoundedInputStream" : { }
      }
    },
    "8c7fe8be2dc75c6c45c81812a0685e66e75c4e01" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "c88a865299f2abb21082cf8ff24cf5e8f97126d2",
      "changedClazzes" : { }
    },
    "2f1f38a46068f323711ed6e1a4662d3278660de4" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "8c7fe8be2dc75c6c45c81812a0685e66e75c4e01",
      "changedClazzes" : {
        "org.apache.commons.io.input.BoundedInputStream#<init>(java.io.InputStream,long)" : { },
        "org.apache.commons.io.input.BoundedInputStream#read(byte[],int,int)" : { }
      }
    },
    "5fddc0a35fa40efde63f4eb31b86710c8386ebff" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "2f1f38a46068f323711ed6e1a4662d3278660de4",
      "changedClazzes" : {
        "org.apache.commons.io.IOUtils#copy(java.io.InputStream,java.io.OutputStream)" : {
          "testcases" : {
            "org.apache.commons.io.input.BoundedInputStreamTest" : [ "testReadArray" ]
          }
        },
        "org.apache.commons.io.IOUtils#copyLarge(java.io.InputStream,java.io.OutputStream)" : {
          "testcases" : {
            "org.apache.commons.io.input.BoundedInputStreamTest" : [ "testReadArray" ]
          }
        },
        "org.apache.commons.io.IOUtils#toByteArray(java.io.InputStream)" : {
          "testcases" : {
            "org.apache.commons.io.input.BoundedInputStreamTest" : [ "testReadArray" ]
          }
        },
        "org.apache.commons.io.input.BoundedInputStream#<init>(java.io.InputStream)" : {
          "testcases" : {
            "org.apache.commons.io.input.BoundedInputStreamTest" : [ "testReadArray", "testReadSingle" ]
          }
        },
        "org.apache.commons.io.input.BoundedInputStream#read" : {
          "testcases" : {
            "org.apache.commons.io.input.BoundedInputStreamTest" : [ "testReadArray" ]
          }
        },
        "org.apache.commons.io.input.BoundedInputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.input.BoundedInputStreamTest" : [ "testReadArray", "testReadSingle" ]
          }
        },
        "org.apache.commons.io.input.BoundedInputStreamTest#compare(java.lang.String,byte[],byte[])" : {
          "testcases" : {
            "org.apache.commons.io.input.BoundedInputStreamTest" : [ "testReadArray" ]
          }
        },
        "org.apache.commons.io.input.BoundedInputStreamTest#testReadArray" : {
          "testcases" : {
            "org.apache.commons.io.input.BoundedInputStreamTest" : [ "testReadArray" ]
          }
        },
        "org.apache.commons.io.input.BoundedInputStreamTest#testReadSingle" : {
          "testcases" : {
            "org.apache.commons.io.input.BoundedInputStreamTest" : [ "testReadSingle" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream#<init>" : {
          "testcases" : {
            "org.apache.commons.io.input.BoundedInputStreamTest" : [ "testReadArray" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream#needNewBuffer(int)" : {
          "testcases" : {
            "org.apache.commons.io.input.BoundedInputStreamTest" : [ "testReadArray" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream#toByteArray" : {
          "testcases" : {
            "org.apache.commons.io.input.BoundedInputStreamTest" : [ "testReadArray" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream#write(byte[],int,int)" : {
          "testcases" : {
            "org.apache.commons.io.input.BoundedInputStreamTest" : [ "testReadArray" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#<init>(int)" : {
          "testcases" : {
            "org.apache.commons.io.input.BoundedInputStreamTest" : [ "testReadArray" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#close" : {
          "testcases" : {
            "org.apache.commons.io.input.BoundedInputStreamTest" : [ "testReadArray" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#toString" : {
          "testcases" : {
            "org.apache.commons.io.input.BoundedInputStreamTest" : [ "testReadArray" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#write(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.BoundedInputStreamTest" : [ "testReadArray" ]
          }
        }
      }
    },
    "0ea3d2f98434942cabdc951bbbc6414a0b6efb0a" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "5fddc0a35fa40efde63f4eb31b86710c8386ebff",
      "changedClazzes" : { }
    },
    "58db1d1a55827a211865f0bc73a529e1b1d0ffdc" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "0ea3d2f98434942cabdc951bbbc6414a0b6efb0a",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils#cleanDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFilterArray", "testFilterArrayNullParameters", "testFilterArray_fromList", "testFilterList", "testFilterListNullParameters", "testFilterList_fromArray", "testFilterSet", "testFilterSetNullParameters", "testFilterSet_fromArray" ]
          }
        },
        "org.apache.commons.io.FileUtils#deleteDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFilterArray", "testFilterArrayNullParameters", "testFilterArray_fromList", "testFilterList", "testFilterListNullParameters", "testFilterList_fromArray", "testFilterSet", "testFilterSetNullParameters", "testFilterSet_fromArray" ]
          }
        },
        "org.apache.commons.io.FileUtils#isSymlink(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFilterArray", "testFilterArrayNullParameters", "testFilterArray_fromList", "testFilterList", "testFilterListNullParameters", "testFilterList_fromArray", "testFilterSet", "testFilterSetNullParameters", "testFilterSet_fromArray" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#isSystemWindows" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFilterArray", "testFilterArrayNullParameters", "testFilterArray_fromList", "testFilterList", "testFilterListNullParameters", "testFilterList_fromArray", "testFilterSet", "testFilterSetNullParameters", "testFilterSet_fromArray" ]
          }
        },
        "org.apache.commons.io.IOCase#<init>(java.lang.String,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFilterArray", "testFilterArrayNullParameters", "testFilterArray_fromList", "testFilterList", "testFilterListNullParameters", "testFilterList_fromArray", "testFilterSet", "testFilterSetNullParameters", "testFilterSet_fromArray" ]
          }
        },
        "org.apache.commons.io.IOCase#checkEquals(java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFilterArray", "testFilterArray_fromList", "testFilterList", "testFilterList_fromArray", "testFilterSet", "testFilterSet_fromArray" ]
          }
        },
        "org.apache.commons.io.filefilter.AbstractFileFilter#<init>" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFilterArray", "testFilterArrayNullParameters", "testFilterArray_fromList", "testFilterList", "testFilterListNullParameters", "testFilterList_fromArray", "testFilterSet", "testFilterSetNullParameters", "testFilterSet_fromArray" ]
          }
        },
        "org.apache.commons.io.filefilter.AndFileFilter#<init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFilterArray", "testFilterArrayNullParameters", "testFilterArray_fromList", "testFilterList", "testFilterListNullParameters", "testFilterList_fromArray", "testFilterSet", "testFilterSetNullParameters", "testFilterSet_fromArray" ]
          }
        },
        "org.apache.commons.io.filefilter.AndFileFilter#addFileFilter(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFilterArray", "testFilterArrayNullParameters", "testFilterArray_fromList", "testFilterList", "testFilterListNullParameters", "testFilterList_fromArray", "testFilterSet", "testFilterSetNullParameters", "testFilterSet_fromArray" ]
          }
        },
        "org.apache.commons.io.filefilter.DirectoryFileFilter#<init>" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFilterArray", "testFilterArrayNullParameters", "testFilterArray_fromList", "testFilterList", "testFilterListNullParameters", "testFilterList_fromArray", "testFilterSet", "testFilterSetNullParameters", "testFilterSet_fromArray" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testAnd", "testCanRead", "testCanWrite", "testDelegateFileFilter", "testDeprecatedWildcard", "testDirectory", "testEmpty", "testFalse", "testFileFilterUtils_and", "testFileFilterUtils_or", "testFiles", "testFilterArray", "testFilterArrayNullParameters", "testFilterArray_fromList", "testFilterList", "testFilterListNullParameters", "testFilterList_fromArray", "testFilterSet", "testFilterSetNullParameters", "testFilterSet_fromArray", "testHidden", "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNameFilterNullArrayArgument", "testNameFilterNullListArgument", "testNot", "testOr", "testPrefix", "testPrefixCaseInsensitive", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testTrue", "testWildcard" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase#setUp" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFilterArray", "testFilterArrayNullParameters", "testFilterArray_fromList", "testFilterList", "testFilterListNullParameters", "testFilterList_fromArray", "testFilterSet", "testFilterSetNullParameters", "testFilterSet_fromArray" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase#tearDown" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFilterArray", "testFilterArrayNullParameters", "testFilterArray_fromList", "testFilterList", "testFilterListNullParameters", "testFilterList_fromArray", "testFilterSet", "testFilterSetNullParameters", "testFilterSet_fromArray" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase#testFilterArray" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFilterArray" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase#testFilterArrayNullParameters" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFilterArrayNullParameters" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase#testFilterArray_fromList" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFilterArray_fromList" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase#testFilterList" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFilterList" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase#testFilterListNullParameters" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFilterListNullParameters" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase#testFilterList_fromArray" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFilterList_fromArray" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase#testFilterSet" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFilterSet" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase#testFilterSetNullParameters" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFilterSetNullParameters" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase#testFilterSet_fromArray" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFilterSet_fromArray" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ],
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testListFiles" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testFalse", "testFileFilterUtils_and", "testFileFilterUtils_or", "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNot", "testPrefix", "testPrefixCaseInsensitive", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testTrue" ],
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#andFileFilter(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFilterArray", "testFilterArrayNullParameters", "testFilterArray_fromList", "testFilterList", "testFilterListNullParameters", "testFilterList_fromArray", "testFilterSet", "testFilterSetNullParameters", "testFilterSet_fromArray" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#directoryFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFilterArray", "testFilterArrayNullParameters", "testFilterArray_fromList", "testFilterList", "testFilterListNullParameters", "testFilterList_fromArray", "testFilterSet", "testFilterSetNullParameters", "testFilterSet_fromArray" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#filter(org.apache.commons.io.filefilter.IOFileFilter,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFilterArray_fromList", "testFilterList", "testFilterListNullParameters", "testFilterSet", "testFilterSetNullParameters" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#filterList(org.apache.commons.io.filefilter.IOFileFilter,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFilterArray_fromList", "testFilterList", "testFilterListNullParameters" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#filterSet(org.apache.commons.io.filefilter.IOFileFilter,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFilterSet", "testFilterSetNullParameters" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#nameFileFilter(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFilterArray", "testFilterArrayNullParameters", "testFilterArray_fromList", "testFilterList", "testFilterListNullParameters", "testFilterList_fromArray", "testFilterSet", "testFilterSetNullParameters", "testFilterSet_fromArray" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#notFileFilter(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFilterArray", "testFilterArrayNullParameters", "testFilterArray_fromList", "testFilterList", "testFilterListNullParameters", "testFilterList_fromArray", "testFilterSet", "testFilterSetNullParameters", "testFilterSet_fromArray" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#trueFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFilterArrayNullParameters", "testFilterListNullParameters", "testFilterSetNullParameters" ]
          }
        },
        "org.apache.commons.io.filefilter.NameFileFilter#<init>(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFilterArray", "testFilterArrayNullParameters", "testFilterArray_fromList", "testFilterList", "testFilterListNullParameters", "testFilterList_fromArray", "testFilterSet", "testFilterSetNullParameters", "testFilterSet_fromArray" ]
          }
        },
        "org.apache.commons.io.filefilter.NameFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFilterArray", "testFilterArray_fromList", "testFilterList", "testFilterList_fromArray", "testFilterSet", "testFilterSet_fromArray" ]
          }
        },
        "org.apache.commons.io.filefilter.NotFileFilter#<init>(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFilterArray", "testFilterArrayNullParameters", "testFilterArray_fromList", "testFilterList", "testFilterListNullParameters", "testFilterList_fromArray", "testFilterSet", "testFilterSetNullParameters", "testFilterSet_fromArray" ]
          }
        },
        "org.apache.commons.io.filefilter.TrueFileFilter#<init>" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFilterArrayNullParameters", "testFilterListNullParameters", "testFilterSetNullParameters" ]
          }
        },
        "org.apache.commons.io.filefilter.TrueFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFilterArrayNullParameters" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#getTestDirectory" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFilterArray", "testFilterArrayNullParameters", "testFilterArray_fromList", "testFilterList", "testFilterListNullParameters", "testFilterList_fromArray", "testFilterSet", "testFilterSetNullParameters", "testFilterSet_fromArray" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#newFile(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFilterArray", "testFilterArrayNullParameters", "testFilterArray_fromList", "testFilterList", "testFilterList_fromArray", "testFilterSet", "testFilterSet_fromArray" ]
          }
        }
      }
    },
    "ed01f165f9bbb7ccbd48dde7dd3106eb044dd859" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "58db1d1a55827a211865f0bc73a529e1b1d0ffdc",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerNull" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerNull" ],
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce" ],
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testCleanEmpty", "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile", "testThrowsOnNullList" ],
            "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" : [ "testCleanDirWithASymlinkDir", "testCleanDirWithParentSymlinks", "testCleanDirWithSymlinkFile", "testCorrectlyIdentifySymlinkWithParentSymLink", "testIdentifiesSymlinkDir", "testIdentifiesSymlinkFile", "testStillClearsIfGivenDirectoryIsASymlink" ],
            "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToItself", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testCopyURLToFileWithTimeout", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testGetTempDirectory", "testGetTempDirectoryPath", "testGetUserDirectory", "testGetUserDirectoryPath", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToString", "testReadLines", "testSizeOf", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ],
            "org.apache.commons.io.FileUtilsWaitForTestCase" : [ "testWaitFor" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedError_IO_128", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPrefix", "testGetPrefixLength", "testIndexOfExtension", "testIndexOfLastSeparator", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testNormalize", "testNormalizeNoEndSeparator", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testByteArrayToOutputStream", "testByteArrayToString", "testByteArrayToWriter", "testCharSequenceToInputStream", "testConstants", "testInputStreamToBufferedInputStream", "testInputStreamToByteArray", "testInputStreamToCharArray", "testInputStreamToCharArrayWithEncoding", "testInputStreamToString", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testReaderToCharArray", "testReaderToString", "testSkipFileInput", "testSkipFileReader", "testSkipReader", "testSkipStream", "testStringToByteArray", "testStringToInputStream", "testStringToOutputStream", "testStringToWriter" ],
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFiltering", "testInvalidEncoding", "testMissingFile", "testNextLineOnly", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorArrayNull", "testConstructorIterable", "testConstructorIterableNull" ],
            "org.apache.commons.io.comparator.DirectoryFileComparatorTest" : [ "testSortArray", "testSortList" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testAnd", "testCanRead", "testCanWrite", "testDelegateFileFilter", "testDeprecatedWildcard", "testDirectory", "testEmpty", "testFalse", "testFileFilterUtils_and", "testFileFilterUtils_or", "testFiles", "testFilterArray", "testFilterArrayNullParameters", "testFilterArray_fromList", "testFilterList", "testFilterListNullParameters", "testFilterList_fromArray", "testFilterSet", "testFilterSetNullParameters", "testFilterSet_fromArray", "testHidden", "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNameFilterNullArrayArgument", "testNameFilterNullListArgument", "testNot", "testOr", "testPrefix", "testPrefixCaseInsensitive", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testTrue", "testWildcard" ],
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ],
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ],
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "testConstructor_File_encoding_badEncoding" ],
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testFileLocked", "testFileNotLocked" ]
          }
        },
        "org.apache.commons.io.FileUtils#cleanDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testDecodeUrl", "testDecodeUrlEncodingUtf8", "testDecodeUrlLenient", "testDecodeUrlNullSafe", "testToFileUtf8" ]
          }
        },
        "org.apache.commons.io.FileUtils#decodeUrl(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testDecodeUrl", "testDecodeUrlEncodingUtf8", "testDecodeUrlLenient", "testDecodeUrlNullSafe", "testToFileUtf8" ]
          }
        },
        "org.apache.commons.io.FileUtils#deleteDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testDecodeUrl", "testDecodeUrlEncodingUtf8", "testDecodeUrlLenient", "testDecodeUrlNullSafe", "testToFileUtf8" ]
          }
        },
        "org.apache.commons.io.FileUtils#forceDelete(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testDecodeUrl", "testDecodeUrlEncodingUtf8", "testDecodeUrlLenient", "testDecodeUrlNullSafe", "testToFileUtf8" ]
          }
        },
        "org.apache.commons.io.FileUtils#isSymlink(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testDecodeUrl", "testDecodeUrlEncodingUtf8", "testDecodeUrlLenient", "testDecodeUrlNullSafe", "testToFileUtf8" ]
          }
        },
        "org.apache.commons.io.FileUtils#toFile(java.net.URL)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testToFileUtf8" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToItself", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testCopyURLToFileWithTimeout", "testDecodeUrl", "testDecodeUrlEncodingUtf8", "testDecodeUrlLenient", "testDecodeUrlNullSafe", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testGetTempDirectory", "testGetTempDirectoryPath", "testGetUserDirectory", "testGetUserDirectoryPath", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToString", "testReadLines", "testSizeOf", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFileUtf8", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#setUp" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testDecodeUrl", "testDecodeUrlEncodingUtf8", "testDecodeUrlLenient", "testDecodeUrlNullSafe", "testToFileUtf8" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#tearDown" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testDecodeUrl", "testDecodeUrlEncodingUtf8", "testDecodeUrlLenient", "testDecodeUrlNullSafe", "testToFileUtf8" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testDecodeUrl" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testDecodeUrl" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testDecodeUrlEncodingUtf8" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testDecodeUrlEncodingUtf8" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testDecodeUrlLenient" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testDecodeUrlLenient" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testDecodeUrlNullSafe" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testDecodeUrlNullSafe" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testToFileUtf8" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testToFileUtf8" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#isSystemWindows" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testDecodeUrl", "testDecodeUrlEncodingUtf8", "testDecodeUrlLenient", "testDecodeUrlNullSafe", "testToFileUtf8" ]
          }
        },
        "org.apache.commons.io.IOUtils#closeQuietly(java.io.Closeable)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testDecodeUrl", "testDecodeUrlEncodingUtf8", "testDecodeUrlLenient", "testDecodeUrlNullSafe", "testToFileUtf8" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#<init>(int)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testDecodeUrl", "testDecodeUrlEncodingUtf8", "testDecodeUrlLenient", "testDecodeUrlNullSafe", "testToFileUtf8" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#close" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testDecodeUrl", "testDecodeUrlEncodingUtf8", "testDecodeUrlLenient", "testDecodeUrlNullSafe", "testToFileUtf8" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#toString" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testDecodeUrl", "testDecodeUrlEncodingUtf8", "testDecodeUrlLenient", "testDecodeUrlNullSafe", "testToFileUtf8" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#write(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testDecodeUrl", "testDecodeUrlEncodingUtf8", "testDecodeUrlLenient", "testDecodeUrlNullSafe", "testToFileUtf8" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#createFile(java.io.File,long)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testDecodeUrl", "testDecodeUrlEncodingUtf8", "testDecodeUrlLenient", "testDecodeUrlNullSafe", "testToFileUtf8" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#generateTestData(java.io.OutputStream,long)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testDecodeUrl", "testDecodeUrlEncodingUtf8", "testDecodeUrlLenient", "testDecodeUrlNullSafe", "testToFileUtf8" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#getTestDirectory" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testDecodeUrl", "testDecodeUrlEncodingUtf8", "testDecodeUrlLenient", "testDecodeUrlNullSafe", "testToFileUtf8" ]
          }
        }
      }
    },
    "d062bd01f7e9e9194ae0fd9dc01683e7c934c315" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "ed01f165f9bbb7ccbd48dde7dd3106eb044dd859",
      "changedClazzes" : {
        "org.apache.commons.io.FilenameUtils#isSystemWindows" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsWildcardTestCase" : [ "test_IO_246" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#splitOnTokens(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsWildcardTestCase" : [ "test_IO_246" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#wildcardMatch(java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsWildcardTestCase" : [ "test_IO_246" ]
          }
        },
        "org.apache.commons.io.FilenameUtilsWildcardTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsWildcardTestCase" : [ "testLocaleIndependence", "testMatch", "testMatch2", "testMatchCaseSpecified", "testMatchOnSystem", "testSplitOnTokens", "test_IO_246" ]
          }
        },
        "org.apache.commons.io.FilenameUtilsWildcardTestCase#assertMatch(java.lang.String,java.lang.String,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsWildcardTestCase" : [ "test_IO_246" ]
          }
        },
        "org.apache.commons.io.FilenameUtilsWildcardTestCase#test_IO_246" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsWildcardTestCase" : [ "test_IO_246" ]
          }
        },
        "org.apache.commons.io.IOCase#<init>(java.lang.String,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsWildcardTestCase" : [ "test_IO_246" ]
          }
        },
        "org.apache.commons.io.IOCase#checkIndexOf(java.lang.String,int,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsWildcardTestCase" : [ "test_IO_246" ]
          }
        },
        "org.apache.commons.io.IOCase#checkRegionMatches(java.lang.String,int,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsWildcardTestCase" : [ "test_IO_246" ]
          }
        }
      }
    },
    "ab42367cc639fa3b18786d13afdc17a3394f229f" : {
      "running" : false,
      "jdk" : 8,
      "changedClazzes" : { }
    },
    "0e7c3a88a727f307e2d38701f8117ae59e019e93" : {
      "running" : false,
      "jdk" : 8,
      "changedClazzes" : { }
    },
    "55a86c21c2960a53118edfb23d1654fbfcf6b994" : {
      "running" : false,
      "jdk" : 8,
      "changedClazzes" : { }
    },
    "a8e9eef627d00022fe6a6bbda64a9478c6b89dab" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "d062bd01f7e9e9194ae0fd9dc01683e7c934c315",
      "changedClazzes" : {
        "org.apache.commons.io.FileSystemUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceOS_String_InitError", "testGetFreeSpaceOS_String_NullPath", "testGetFreeSpaceOS_String_Other", "testGetFreeSpaceOS_String_Unix", "testGetFreeSpaceOS_String_Windows", "testGetFreeSpaceUnix_String_EmptyPath", "testGetFreeSpaceUnix_String_EmptyResponse", "testGetFreeSpaceUnix_String_InvalidResponse1", "testGetFreeSpaceUnix_String_InvalidResponse2", "testGetFreeSpaceUnix_String_InvalidResponse3", "testGetFreeSpaceUnix_String_InvalidResponse4", "testGetFreeSpaceUnix_String_LongResponse", "testGetFreeSpaceUnix_String_LongResponseKb", "testGetFreeSpaceUnix_String_NormalResponseFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbLinux", "testGetFreeSpaceUnix_String_NormalResponseKbSolaris", "testGetFreeSpaceUnix_String_NormalResponseLinux", "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpace_String" ]
          }
        },
        "org.apache.commons.io.FileSystemUtilsTestCase#testGetFreeSpaceOS_String_InitError" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceOS_String_InitError" ]
          }
        },
        "org.apache.commons.io.FileSystemUtilsTestCase#testGetFreeSpaceOS_String_NullPath" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceOS_String_NullPath" ]
          }
        },
        "org.apache.commons.io.FileSystemUtilsTestCase#testGetFreeSpaceOS_String_Other" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceOS_String_Other" ]
          }
        },
        "org.apache.commons.io.FileSystemUtilsTestCase#testGetFreeSpaceOS_String_Unix" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceOS_String_Unix" ]
          }
        },
        "org.apache.commons.io.FileSystemUtilsTestCase#testGetFreeSpaceOS_String_Windows" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceOS_String_Windows" ]
          }
        },
        "org.apache.commons.io.FileSystemUtilsTestCase#testGetFreeSpaceUnix_String_EmptyPath" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceUnix_String_EmptyPath" ]
          }
        },
        "org.apache.commons.io.FileSystemUtilsTestCase#testGetFreeSpaceUnix_String_EmptyResponse" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceUnix_String_EmptyResponse" ]
          }
        },
        "org.apache.commons.io.FileSystemUtilsTestCase#testGetFreeSpaceUnix_String_InvalidResponse1" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceUnix_String_InvalidResponse1" ]
          }
        },
        "org.apache.commons.io.FileSystemUtilsTestCase#testGetFreeSpaceUnix_String_InvalidResponse2" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceUnix_String_InvalidResponse2" ]
          }
        },
        "org.apache.commons.io.FileSystemUtilsTestCase#testGetFreeSpaceUnix_String_InvalidResponse3" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceUnix_String_InvalidResponse3" ]
          }
        },
        "org.apache.commons.io.FileSystemUtilsTestCase#testGetFreeSpaceUnix_String_InvalidResponse4" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceUnix_String_InvalidResponse4" ]
          }
        },
        "org.apache.commons.io.FileSystemUtilsTestCase#testGetFreeSpaceUnix_String_LongResponse" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceUnix_String_LongResponse" ]
          }
        },
        "org.apache.commons.io.FileSystemUtilsTestCase#testGetFreeSpaceUnix_String_LongResponseKb" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceUnix_String_LongResponseKb" ]
          }
        },
        "org.apache.commons.io.FileSystemUtilsTestCase#testGetFreeSpaceUnix_String_NormalResponseFreeBSD" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceUnix_String_NormalResponseFreeBSD" ]
          }
        },
        "org.apache.commons.io.FileSystemUtilsTestCase#testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD" ]
          }
        },
        "org.apache.commons.io.FileSystemUtilsTestCase#testGetFreeSpaceUnix_String_NormalResponseKbLinux" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceUnix_String_NormalResponseKbLinux" ]
          }
        },
        "org.apache.commons.io.FileSystemUtilsTestCase#testGetFreeSpaceUnix_String_NormalResponseKbSolaris" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceUnix_String_NormalResponseKbSolaris" ]
          }
        },
        "org.apache.commons.io.FileSystemUtilsTestCase#testGetFreeSpaceUnix_String_NormalResponseLinux" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceUnix_String_NormalResponseLinux" ]
          }
        },
        "org.apache.commons.io.FileSystemUtilsTestCase#testGetFreeSpaceWindows_String_EmptyMultiLineResponse" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceWindows_String_EmptyMultiLineResponse" ]
          }
        },
        "org.apache.commons.io.FileSystemUtilsTestCase#testGetFreeSpaceWindows_String_EmptyPath" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceWindows_String_EmptyPath" ]
          }
        },
        "org.apache.commons.io.FileSystemUtilsTestCase#testGetFreeSpaceWindows_String_EmptyResponse" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceWindows_String_EmptyResponse" ]
          }
        },
        "org.apache.commons.io.FileSystemUtilsTestCase#testGetFreeSpaceWindows_String_InvalidTextResponse" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceWindows_String_InvalidTextResponse" ]
          }
        },
        "org.apache.commons.io.FileSystemUtilsTestCase#testGetFreeSpaceWindows_String_NoSuchDirectoryResponse" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse" ]
          }
        },
        "org.apache.commons.io.FileSystemUtilsTestCase#testGetFreeSpaceWindows_String_NormalResponse" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceWindows_String_NormalResponse" ]
          }
        },
        "org.apache.commons.io.FileSystemUtilsTestCase#testGetFreeSpaceWindows_String_ParseCommaFormatBytes" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceWindows_String_ParseCommaFormatBytes" ]
          }
        },
        "org.apache.commons.io.FileSystemUtilsTestCase#testGetFreeSpaceWindows_String_StripDrive" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceWindows_String_StripDrive" ]
          }
        },
        "org.apache.commons.io.ThreadMonitor" : { },
        "org.apache.commons.io.ThreadMonitor#<init>(java.lang.Thread,long)" : {
          "testcases" : {
            "org.apache.commons.io.ThreadMonitorTestCase" : [ "testCompletedWithoutTimeout", "testTimeout" ]
          }
        },
        "org.apache.commons.io.ThreadMonitor#run" : {
          "testcases" : {
            "org.apache.commons.io.ThreadMonitorTestCase" : [ "testCompletedWithoutTimeout", "testTimeout" ]
          }
        },
        "org.apache.commons.io.ThreadMonitor#start(java.lang.Thread,long)" : {
          "testcases" : {
            "org.apache.commons.io.ThreadMonitorTestCase" : [ "testCompletedWithoutTimeout", "testNoTimeout", "testTimeout" ]
          }
        },
        "org.apache.commons.io.ThreadMonitor#stop(java.lang.Thread)" : {
          "testcases" : {
            "org.apache.commons.io.ThreadMonitorTestCase" : [ "testCompletedWithoutTimeout", "testNoTimeout" ]
          }
        },
        "org.apache.commons.io.ThreadMonitorTestCase" : {
          "testcases" : {
            "org.apache.commons.io.ThreadMonitorTestCase" : [ "testCompletedWithoutTimeout", "testNoTimeout", "testTimeout" ]
          }
        },
        "org.apache.commons.io.ThreadMonitorTestCase#testCompletedWithoutTimeout" : {
          "testcases" : {
            "org.apache.commons.io.ThreadMonitorTestCase" : [ "testCompletedWithoutTimeout" ]
          }
        },
        "org.apache.commons.io.ThreadMonitorTestCase#testNoTimeout" : {
          "testcases" : {
            "org.apache.commons.io.ThreadMonitorTestCase" : [ "testNoTimeout" ]
          }
        },
        "org.apache.commons.io.ThreadMonitorTestCase#testTimeout" : {
          "testcases" : {
            "org.apache.commons.io.ThreadMonitorTestCase" : [ "testTimeout" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream#<init>(int)" : {
          "testcases" : {
            "org.apache.commons.io.CopyUtilsTest" : [ "testCopy_byteArrayToOutputStream", "testCopy_byteArrayToWriter", "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToWriter", "testCopy_readerToOutputStream", "testCopy_readerToWriter", "testCopy_stringToOutputStream", "testCopy_stringToWriter" ],
            "org.apache.commons.io.DemuxTestCase" : [ "testOutputStream" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testReadFileToByteArray" ],
            "org.apache.commons.io.HexDumpTest" : [ "testDump" ],
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToOutputStream_nullIn", "testCopy_inputStreamToWriter", "testCopy_inputStreamToWriter_Encoding", "testCopy_inputStreamToWriter_Encoding_nullEncoding", "testCopy_inputStreamToWriter_Encoding_nullIn", "testCopy_inputStreamToWriter_nullIn", "testCopy_readerToOutputStream", "testCopy_readerToOutputStream_Encoding", "testCopy_readerToOutputStream_Encoding_nullEncoding", "testCopy_readerToOutputStream_Encoding_nullIn", "testCopy_readerToOutputStream_nullIn", "testCopy_readerToWriter", "testCopy_readerToWriter_nullIn" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testByteArrayToOutputStream", "testByteArrayToString", "testByteArrayToWriter", "testCharSequenceToInputStream", "testInputStreamToBufferedInputStream", "testInputStreamToByteArray", "testStringToInputStream" ],
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWriteLines_OutputStream", "testWriteLines_OutputStream_Encoding", "testWriteLines_OutputStream_Encoding_nullData", "testWriteLines_OutputStream_Encoding_nullEncoding", "testWriteLines_OutputStream_Encoding_nullSeparator", "testWriteLines_OutputStream_nullData", "testWriteLines_OutputStream_nullSeparator", "testWriteLines_Writer", "testWriteLines_Writer_nullData", "testWriteLines_Writer_nullSeparator", "testWrite_byteArrayToOutputStream", "testWrite_byteArrayToOutputStream_nullData", "testWrite_byteArrayToWriter", "testWrite_byteArrayToWriter_Encoding", "testWrite_byteArrayToWriter_Encoding_nullData", "testWrite_byteArrayToWriter_Encoding_nullEncoding", "testWrite_byteArrayToWriter_nullData", "testWrite_charArrayToOutputStream", "testWrite_charArrayToOutputStream_Encoding", "testWrite_charArrayToOutputStream_Encoding_nullData", "testWrite_charArrayToOutputStream_nullData", "testWrite_charArrayToOutputStream_nullEncoding", "testWrite_charArrayToWriter", "testWrite_charArrayToWriter_Encoding_nullData", "testWrite_charSequenceToOutputStream", "testWrite_charSequenceToOutputStream_Encoding", "testWrite_charSequenceToOutputStream_Encoding_nullData", "testWrite_charSequenceToOutputStream_nullData", "testWrite_charSequenceToOutputStream_nullEncoding", "testWrite_charSequenceToWriter", "testWrite_charSequenceToWriter_Encoding_nullData", "testWrite_stringToOutputStream", "testWrite_stringToOutputStream_Encoding", "testWrite_stringToOutputStream_Encoding_nullData", "testWrite_stringToOutputStream_nullData", "testWrite_stringToOutputStream_nullEncoding", "testWrite_stringToWriter", "testWrite_stringToWriter_Encoding_nullData" ],
            "org.apache.commons.io.input.BoundedInputStreamTest" : [ "testReadArray" ],
            "org.apache.commons.io.output.ByteArrayOutputStreamTestCase" : [ "testStream" ],
            "org.apache.commons.io.output.CloseShieldOutputStreamTest" : [ "testClose" ],
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testAboveThreshold", "testAtThreshold", "testBelowThreshold", "testTempFileAboveThreshold", "testTempFileAboveThresholdPrefixOnly", "testTempFileBelowThreshold", "testTempFileError", "testThresholdReached", "testWriteToLarge", "testWriteToSmall" ],
            "org.apache.commons.io.output.TaggedOutputStreamTest" : [ "testNormalStream" ]
          }
        }
      }
    },
    "e295faec880b136d5c19d4164c17d768d7037af7" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "a8e9eef627d00022fe6a6bbda64a9478c6b89dab",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils#doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToItself", "testCopyDirectoryToNonExistingDest", "testMoveDirectory_CopyDelete" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToItself", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testCopyURLToFileWithTimeout", "testDecodeUrl", "testDecodeUrlEncodingUtf8", "testDecodeUrlLenient", "testDecodeUrlNullSafe", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testGetTempDirectory", "testGetTempDirectoryPath", "testGetUserDirectory", "testGetUserDirectoryPath", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToString", "testReadLines", "testSizeOf", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFileUtf8", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ]
          }
        }
      }
    },
    "5e0fe4de1790c5e50573a8b6a4f26510a3b3d62a" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "e295faec880b136d5c19d4164c17d768d7037af7",
      "changedClazzes" : { }
    },
    "226bb72340b7ad715df7a2de586531e7c3078026" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "5e0fe4de1790c5e50573a8b6a4f26510a3b3d62a",
      "changedClazzes" : { }
    },
    "709699a220fd036759ce28623a5389624ac81be0" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "226bb72340b7ad715df7a2de586531e7c3078026",
      "changedClazzes" : {
        "org.apache.commons.io.FilenameUtilsWildcardTestCase#testMatch" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsWildcardTestCase" : [ "testMatch" ]
          }
        },
        "org.apache.commons.io.FilenameUtilsWildcardTestCase#testSplitOnTokens" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsWildcardTestCase" : [ "testSplitOnTokens" ]
          }
        }
      }
    },
    "9e612272b0f2ae0f3fb0e2163fdcc918bc6731a4" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "709699a220fd036759ce28623a5389624ac81be0",
      "changedClazzes" : {
        "org.apache.commons.io.FilenameUtils#doGetFullPath(java.lang.String,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testGetFullPath", "testGetFullPathNoEndSeparator" ]
          }
        },
        "org.apache.commons.io.FilenameUtilsTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedError_IO_128", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPrefix", "testGetPrefixLength", "testIndexOfExtension", "testIndexOfLastSeparator", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testNormalize", "testNormalizeNoEndSeparator", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ]
          }
        }
      }
    },
    "f113fe9d2f6ad04047bde353994e4e475f83b409" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "9e612272b0f2ae0f3fb0e2163fdcc918bc6731a4",
      "changedClazzes" : {
        "org.apache.commons.io.FilenameUtilsWildcardTestCase#test_IO_246" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsWildcardTestCase" : [ "test_IO_246" ]
          }
        }
      }
    },
    "a8d59e345210ca6fd3fc426ab7fb7b3c2563cb04" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "f113fe9d2f6ad04047bde353994e4e475f83b409",
      "changedClazzes" : {
        "org.apache.commons.io.FileSystemUtils#freeSpaceWindows(java.lang.String,long)" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive" ]
          }
        },
        "org.apache.commons.io.FileSystemUtilsTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceOS_String_InitError", "testGetFreeSpaceOS_String_NullPath", "testGetFreeSpaceOS_String_Other", "testGetFreeSpaceOS_String_Unix", "testGetFreeSpaceOS_String_Windows", "testGetFreeSpaceUnix_String_EmptyPath", "testGetFreeSpaceUnix_String_EmptyResponse", "testGetFreeSpaceUnix_String_InvalidResponse1", "testGetFreeSpaceUnix_String_InvalidResponse2", "testGetFreeSpaceUnix_String_InvalidResponse3", "testGetFreeSpaceUnix_String_InvalidResponse4", "testGetFreeSpaceUnix_String_LongResponse", "testGetFreeSpaceUnix_String_LongResponseKb", "testGetFreeSpaceUnix_String_NormalResponseFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbLinux", "testGetFreeSpaceUnix_String_NormalResponseKbSolaris", "testGetFreeSpaceUnix_String_NormalResponseLinux", "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpace_String" ]
          }
        }
      }
    },
    "587f5571c6eb5a55b752fd7bfd66c2c535f5e566" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "a8d59e345210ca6fd3fc426ab7fb7b3c2563cb04",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils#isFileNewer(java.io.File,long)" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testTailer" ]
          }
        },
        "org.apache.commons.io.FileUtils#openInputStream(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testTailer" ]
          }
        },
        "org.apache.commons.io.FileUtils#readLines(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testTailer" ]
          }
        },
        "org.apache.commons.io.IOUtils#closeQuietly(java.io.Closeable)" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testTailer" ]
          }
        },
        "org.apache.commons.io.IOUtils#readLines(java.io.InputStream)" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testTailer" ]
          }
        },
        "org.apache.commons.io.input.Tailer" : { },
        "org.apache.commons.io.input.Tailer#<init>(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testTailer" ]
          }
        },
        "org.apache.commons.io.input.Tailer#readLines" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testTailer" ]
          }
        },
        "org.apache.commons.io.input.Tailer#run" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testTailer" ]
          }
        },
        "org.apache.commons.io.input.Tailer#stop" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testTailer" ]
          }
        },
        "org.apache.commons.io.input.TailerListener" : { },
        "org.apache.commons.io.input.TailerListenerAdapter" : { },
        "org.apache.commons.io.input.TailerListenerAdapter#<init>" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testTailer" ]
          }
        },
        "org.apache.commons.io.input.TailerListenerAdapter#fileRotated" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testTailer" ]
          }
        },
        "org.apache.commons.io.input.TailerListenerAdapter#init(org.apache.commons.io.input.Tailer)" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testTailer" ]
          }
        },
        "org.apache.commons.io.input.TailerTest" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testTailer" ]
          }
        },
        "org.apache.commons.io.input.TailerTest#start(java.io.File,org.apache.commons.io.input.TailerTest$TestTailerListener,long,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testTailer" ]
          }
        },
        "org.apache.commons.io.input.TailerTest#testTailer" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testTailer" ]
          }
        },
        "org.apache.commons.io.input.TailerTest#write(java.io.File,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testTailer" ]
          }
        },
        "org.apache.commons.io.input.TailerTest$TestTailerListener#<init>" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testTailer" ]
          }
        },
        "org.apache.commons.io.input.TailerTest$TestTailerListener#clear" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testTailer" ]
          }
        },
        "org.apache.commons.io.input.TailerTest$TestTailerListener#getLines" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testTailer" ]
          }
        },
        "org.apache.commons.io.input.TailerTest$TestTailerListener#handle(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testTailer" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#<init>(int)" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testTailer" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#close" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testTailer" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#toString" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testTailer" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#write(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testTailer" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#createFile(java.io.File,long)" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testTailer" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#generateTestData(java.io.OutputStream,long)" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testTailer" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#getTestDirectory" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testTailer" ]
          }
        }
      }
    },
    "cec1dafc28781df88278e22171b8977618f7c63e" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "587f5571c6eb5a55b752fd7bfd66c2c535f5e566",
      "changedClazzes" : { }
    },
    "61256c1fdea67508ad6cf99956cdc23cdfedb3d6" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "cec1dafc28781df88278e22171b8977618f7c63e",
      "changedClazzes" : {
        "org.apache.commons.io.DirectoryWalker#<init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter,int)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilterDirAndFile1", "testFilterDirAndFile2", "testFilterDirAndFile3", "testFilterDirAndFile4" ],
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testFilterDirAndFile1", "testFilterDirAndFile2", "testFilterDirAndFile3", "testFilterDirAndFile4" ]
          }
        },
        "org.apache.commons.io.FileUtils#listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testListFiles" ]
          }
        }
      }
    },
    "83e8dfb7d02b830db0dff8d50312167067bef93b" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "61256c1fdea67508ad6cf99956cdc23cdfedb3d6",
      "changedClazzes" : {
        "org.apache.commons.io.input.Tailer" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testTailer" ]
          }
        }
      }
    },
    "f34187ec9f43d416d4059bb3414476f960be87f2" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "83e8dfb7d02b830db0dff8d50312167067bef93b",
      "changedClazzes" : {
        "org.apache.commons.io.monitor.FilesystemObserverTestCase" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        }
      }
    },
    "317841f44a515e57356fe50d7eb1be15030dfb5b" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "f34187ec9f43d416d4059bb3414476f960be87f2",
      "changedClazzes" : {
        "org.apache.commons.io.input.Tailer" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testTailer" ]
          }
        }
      }
    },
    "a360f974003c5c60c16d019e873314c09d965107" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "317841f44a515e57356fe50d7eb1be15030dfb5b",
      "changedClazzes" : {
        "org.apache.commons.io.FileSystemUtils#freeSpaceWindows(java.lang.String,long)" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive" ]
          }
        }
      }
    },
    "a32a395a621098ce652ee8158e6320fa422f9fa3" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "a360f974003c5c60c16d019e873314c09d965107",
      "changedClazzes" : {
        "org.apache.commons.io.input.Tailer#<init>(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testStopWithNoFile" ]
          }
        },
        "org.apache.commons.io.input.Tailer#run" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testStopWithNoFile", "testTailer" ]
          }
        },
        "org.apache.commons.io.input.Tailer#stop" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testStopWithNoFile" ]
          }
        },
        "org.apache.commons.io.input.TailerListenerAdapter#<init>" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testStopWithNoFile" ]
          }
        },
        "org.apache.commons.io.input.TailerListenerAdapter#fileNotFound" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testStopWithNoFile" ]
          }
        },
        "org.apache.commons.io.input.TailerListenerAdapter#init(org.apache.commons.io.input.Tailer)" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testStopWithNoFile" ]
          }
        },
        "org.apache.commons.io.input.TailerTest" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testStopWithNoFile", "testTailer" ]
          }
        },
        "org.apache.commons.io.input.TailerTest#start(java.io.File,org.apache.commons.io.input.TailerTest$TestTailerListener,long,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testStopWithNoFile" ]
          }
        },
        "org.apache.commons.io.input.TailerTest#testStopWithNoFile" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testStopWithNoFile" ]
          }
        },
        "org.apache.commons.io.input.TailerTest$TestTailerListener" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testTailer" ]
          }
        },
        "org.apache.commons.io.input.TailerTest$TestTailerListener#<init>" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testStopWithNoFile" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#getTestDirectory" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testStopWithNoFile" ]
          }
        }
      }
    },
    "cc70c4c1647072de7b97af67b6e8351c2d360624" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "a32a395a621098ce652ee8158e6320fa422f9fa3",
      "changedClazzes" : {
        "org.apache.commons.io.FileCleaningTrackerTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerFile", "testFileCleanerNull" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerFile", "testFileCleanerNull" ]
          }
        }
      }
    },
    "e94870a592001f77c29368d2913b0d0aa29cac47" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "cc70c4c1647072de7b97af67b6e8351c2d360624",
      "changedClazzes" : { }
    },
    "25032e70cbf8cb14de334a5002811852867d16dd" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "e94870a592001f77c29368d2913b0d0aa29cac47",
      "changedClazzes" : {
        "org.apache.commons.io.input.Tailer" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testStopWithNoFile", "testTailer" ]
          }
        }
      }
    },
    "9f17760e3ea10bc221a006e10728c611f3b8ba01" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "25032e70cbf8cb14de334a5002811852867d16dd",
      "changedClazzes" : { }
    },
    "230a3c292c67918a019d96f15f2fb30bbb261bc1" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "9f17760e3ea10bc221a006e10728c611f3b8ba01",
      "changedClazzes" : {
        "org.apache.commons.io.input.Tailer" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testStopWithNoFile", "testTailer" ]
          }
        }
      }
    },
    "cdc2dadd24ee51a464cae08a98fb2da4f8ab4a76" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "230a3c292c67918a019d96f15f2fb30bbb261bc1",
      "changedClazzes" : {
        "org.apache.commons.io.input.Tailer#run" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testStopWithNoFile", "testTailer" ]
          }
        }
      }
    },
    "fb9d4d500f9a13684d6147456d7f9670fb1b1528" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "cdc2dadd24ee51a464cae08a98fb2da4f8ab4a76",
      "changedClazzes" : {
        "org.apache.commons.io.input.TailerTest" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testStopWithNoFile", "testTailer" ]
          }
        },
        "org.apache.commons.io.input.TailerTest$TestTailerListener" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testStopWithNoFile", "testTailer" ]
          }
        }
      }
    },
    "70f4ddc09819068a13fcb522ad08340140d48f37" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "fb9d4d500f9a13684d6147456d7f9670fb1b1528",
      "changedClazzes" : {
        "org.apache.commons.io.input.Tailer" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testStopWithNoFile", "testTailer" ]
          }
        }
      }
    },
    "09899f0dad6ae165122e5a0e765535f813bc9a71" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "70f4ddc09819068a13fcb522ad08340140d48f37",
      "changedClazzes" : {
        "org.apache.commons.io.IOUtils#closeQuietly(java.io.Closeable)" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testStopWithNoFileUsingExecutor" ]
          }
        },
        "org.apache.commons.io.input.Tailer#<init>(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testStopWithNoFileUsingExecutor" ]
          }
        },
        "org.apache.commons.io.input.Tailer#run" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testStopWithNoFileUsingExecutor" ]
          }
        },
        "org.apache.commons.io.input.Tailer#stop" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testStopWithNoFileUsingExecutor" ]
          }
        },
        "org.apache.commons.io.input.TailerTest" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testStopWithNoFile", "testStopWithNoFileUsingExecutor", "testTailer" ]
          }
        },
        "org.apache.commons.io.input.TailerTest#testStopWithNoFileUsingExecutor" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testStopWithNoFileUsingExecutor" ]
          }
        },
        "org.apache.commons.io.input.TailerTest$TestTailerListener" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testStopWithNoFile", "testTailer" ]
          }
        },
        "org.apache.commons.io.input.TailerTest$TestTailerListener#<init>" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testStopWithNoFileUsingExecutor" ]
          }
        },
        "org.apache.commons.io.input.TailerTest$TestTailerListener#fileNotFound" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testStopWithNoFileUsingExecutor" ]
          }
        },
        "org.apache.commons.io.input.TailerTest$TestTailerListener#init(org.apache.commons.io.input.Tailer)" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testStopWithNoFileUsingExecutor" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#<init>(int)" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testStopWithNoFileUsingExecutor" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#close" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testStopWithNoFileUsingExecutor" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#toString" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testStopWithNoFileUsingExecutor" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#write(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testStopWithNoFileUsingExecutor" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#getTestDirectory" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testStopWithNoFileUsingExecutor" ]
          }
        }
      }
    },
    "74b54ab22649c901e787598bffa8565059539d9a" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "09899f0dad6ae165122e5a0e765535f813bc9a71",
      "changedClazzes" : { }
    },
    "3e71a200c0208f83f126162443d61b354d6f7fb3" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "74b54ab22649c901e787598bffa8565059539d9a",
      "changedClazzes" : { }
    },
    "48e46e1f50acc5db088ca704bbcaa94ec5628553" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "3e71a200c0208f83f126162443d61b354d6f7fb3",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils#cleanDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.NameFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.PathFileComparatorTest" : [ "testCaseSensitivity" ]
          }
        },
        "org.apache.commons.io.FileUtils#deleteDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.NameFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.PathFileComparatorTest" : [ "testCaseSensitivity" ]
          }
        },
        "org.apache.commons.io.FileUtils#isSymlink(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.NameFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.PathFileComparatorTest" : [ "testCaseSensitivity" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#getExtension(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : [ "testCaseSensitivity" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#indexOfExtension(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : [ "testCaseSensitivity" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#indexOfLastSeparator(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : [ "testCaseSensitivity" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#isSystemWindows" : {
          "testcases" : {
            "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.NameFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.PathFileComparatorTest" : [ "testCaseSensitivity" ]
          }
        },
        "org.apache.commons.io.IOCase#<init>(java.lang.String,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.NameFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.PathFileComparatorTest" : [ "testCaseSensitivity" ]
          }
        },
        "org.apache.commons.io.IOCase#checkCompareTo(java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.NameFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.PathFileComparatorTest" : [ "testCaseSensitivity" ]
          }
        },
        "org.apache.commons.io.comparator.AbstractFileComparator#<init>" : {
          "testcases" : {
            "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.NameFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.PathFileComparatorTest" : [ "testCaseSensitivity" ]
          }
        },
        "org.apache.commons.io.comparator.ComparatorAbstractTestCase#setUp" : {
          "testcases" : {
            "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.NameFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.PathFileComparatorTest" : [ "testCaseSensitivity" ]
          }
        },
        "org.apache.commons.io.comparator.ComparatorAbstractTestCase#tearDown" : {
          "testcases" : {
            "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.NameFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.PathFileComparatorTest" : [ "testCaseSensitivity" ]
          }
        },
        "org.apache.commons.io.comparator.DefaultFileComparator#<init>" : {
          "testcases" : {
            "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.NameFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.PathFileComparatorTest" : [ "testCaseSensitivity" ]
          }
        },
        "org.apache.commons.io.comparator.ExtensionFileComparator#<init>" : {
          "testcases" : {
            "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : [ "testCaseSensitivity" ]
          }
        },
        "org.apache.commons.io.comparator.ExtensionFileComparator#compare(java.io.File,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : [ "testCaseSensitivity" ]
          }
        },
        "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : {
          "testcases" : {
            "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : [ "testCaseSensitivity" ]
          }
        },
        "org.apache.commons.io.comparator.ExtensionFileComparatorTest#setUp" : {
          "testcases" : {
            "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : [ "testCaseSensitivity" ]
          }
        },
        "org.apache.commons.io.comparator.ExtensionFileComparatorTest#testCaseSensitivity" : {
          "testcases" : {
            "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : [ "testCaseSensitivity" ]
          }
        },
        "org.apache.commons.io.comparator.NameFileComparator#<init>" : {
          "testcases" : {
            "org.apache.commons.io.comparator.NameFileComparatorTest" : [ "testCaseSensitivity" ]
          }
        },
        "org.apache.commons.io.comparator.NameFileComparator#compare(java.io.File,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.comparator.NameFileComparatorTest" : [ "testCaseSensitivity" ]
          }
        },
        "org.apache.commons.io.comparator.NameFileComparatorTest" : {
          "testcases" : {
            "org.apache.commons.io.comparator.NameFileComparatorTest" : [ "testCaseSensitivity" ]
          }
        },
        "org.apache.commons.io.comparator.NameFileComparatorTest#setUp" : {
          "testcases" : {
            "org.apache.commons.io.comparator.NameFileComparatorTest" : [ "testCaseSensitivity" ]
          }
        },
        "org.apache.commons.io.comparator.NameFileComparatorTest#testCaseSensitivity" : {
          "testcases" : {
            "org.apache.commons.io.comparator.NameFileComparatorTest" : [ "testCaseSensitivity" ]
          }
        },
        "org.apache.commons.io.comparator.PathFileComparator#<init>" : {
          "testcases" : {
            "org.apache.commons.io.comparator.PathFileComparatorTest" : [ "testCaseSensitivity" ]
          }
        },
        "org.apache.commons.io.comparator.PathFileComparator#compare(java.io.File,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.comparator.PathFileComparatorTest" : [ "testCaseSensitivity" ]
          }
        },
        "org.apache.commons.io.comparator.PathFileComparatorTest" : {
          "testcases" : {
            "org.apache.commons.io.comparator.PathFileComparatorTest" : [ "testCaseSensitivity" ]
          }
        },
        "org.apache.commons.io.comparator.PathFileComparatorTest#setUp" : {
          "testcases" : {
            "org.apache.commons.io.comparator.PathFileComparatorTest" : [ "testCaseSensitivity" ]
          }
        },
        "org.apache.commons.io.comparator.PathFileComparatorTest#testCaseSensitivity" : {
          "testcases" : {
            "org.apache.commons.io.comparator.PathFileComparatorTest" : [ "testCaseSensitivity" ]
          }
        },
        "org.apache.commons.io.comparator.ReverseComparator#<init>(java.util.Comparator)" : {
          "testcases" : {
            "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.NameFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.PathFileComparatorTest" : [ "testCaseSensitivity" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#getTestDirectory" : {
          "testcases" : {
            "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.NameFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.PathFileComparatorTest" : [ "testCaseSensitivity" ]
          }
        }
      }
    },
    "f9ae38abc1b8c957b7dfdf49b27992204c7b5ae0" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "48e46e1f50acc5db088ca704bbcaa94ec5628553",
      "changedClazzes" : { }
    },
    "3545c7701ef563309c4cb6dc3a66f68ec61ed980" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "f9ae38abc1b8c957b7dfdf49b27992204c7b5ae0",
      "changedClazzes" : {
        "org.apache.commons.io.output.ByteArrayOutputStream#<init>" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyOutputStreamTest" : [ "testWrite", "testWriteNullBaSucceeds" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream#needNewBuffer(int)" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyOutputStreamTest" : [ "testWrite", "testWriteNullBaSucceeds" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream#size" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyOutputStreamTest" : [ "testWrite" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream#toByteArray" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyOutputStreamTest" : [ "testWrite" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream#write(int)" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyOutputStreamTest" : [ "testWrite" ]
          }
        },
        "org.apache.commons.io.output.ProxyOutputStream#<init>(java.io.OutputStream)" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyOutputStreamTest" : [ "testWrite", "testWriteNullBaSucceeds" ]
          }
        },
        "org.apache.commons.io.output.ProxyOutputStream#afterWrite(int)" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyOutputStreamTest" : [ "testWrite", "testWriteNullBaSucceeds" ]
          }
        },
        "org.apache.commons.io.output.ProxyOutputStream#beforeWrite(int)" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyOutputStreamTest" : [ "testWrite", "testWriteNullBaSucceeds" ]
          }
        },
        "org.apache.commons.io.output.ProxyOutputStream#write(byte[])" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyOutputStreamTest" : [ "testWrite" ]
          }
        },
        "org.apache.commons.io.output.ProxyOutputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyOutputStreamTest" : [ "testWrite", "testWriteNullBaSucceeds" ]
          }
        },
        "org.apache.commons.io.output.ProxyOutputStreamTest#setUp" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyOutputStreamTest" : [ "testWrite", "testWriteNullBaSucceeds" ]
          }
        },
        "org.apache.commons.io.output.ProxyOutputStreamTest#testWrite" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyOutputStreamTest" : [ "testWrite" ]
          }
        },
        "org.apache.commons.io.output.ProxyOutputStreamTest#testWriteNullBaSucceeds" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyOutputStreamTest" : [ "testWriteNullBaSucceeds" ]
          }
        }
      }
    },
    "ba7b754546b22471e5d0df732afbe9d19ef62ce7" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "3545c7701ef563309c4cb6dc3a66f68ec61ed980",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils#cleanDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.FileUtils#deleteDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.FileUtils#isSymlink(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.FileUtils#openOutputStream(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.FileUtils#touch(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#isSystemWindows" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.IOCase#<init>(java.lang.String,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.IOCase#checkCompareTo(java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.IOCase#checkEndsWith(java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.IOUtils#closeQuietly(java.io.Closeable)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.comparator.AbstractFileComparator#<init>" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.comparator.NameFileComparator#<init>" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.comparator.NameFileComparator#compare(java.io.File,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.comparator.ReverseComparator#<init>(java.util.Comparator)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.filefilter.AbstractFileFilter#<init>" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.filefilter.AndFileFilter#<init>(java.util.List)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.filefilter.AndFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.filefilter.AndFileFilter#addFileFilter(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.filefilter.DirectoryFileFilter#<init>" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.filefilter.DirectoryFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFileFilter#<init>" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#and(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#andFileFilter(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#directoryFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#fileFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#nameFileFilter(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#notFileFilter(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#or(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#suffixFileFilter(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#toList(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.filefilter.HiddenFileFilter#<init>" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.filefilter.NameFileFilter#<init>(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.filefilter.NotFileFilter#<init>(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.filefilter.OrFileFilter#<init>(java.util.List)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.filefilter.OrFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.filefilter.SuffixFileFilter#<init>(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.filefilter.SuffixFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFilesystemListener" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFilesystemListener#clear" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFilesystemListener#getChangedDirectories" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFilesystemListener#getChangedFiles" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFilesystemListener#getCreatedDirectories" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFilesystemListener#getCreatedFiles" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFilesystemListener#getDeletedDirectories" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFilesystemListener#getDeletedFiles" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFilesystemListener#onFileChange(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFilesystemListener#onFileCreate(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFilesystemListener#onFileDelete(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFilesystemListener#onStart(org.apache.commons.io.monitor.FilesystemObserver)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFilesystemListener#onStop(org.apache.commons.io.monitor.FilesystemObserver)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.FileSystemMonitorTestCase#checkCollectionsEmpty(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.FileSystemMonitorTestCase#checkDirectoryCounts(java.lang.String,int,int,int)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.FileSystemMonitorTestCase#checkFile(java.lang.String,java.io.File,long,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.FileSystemMonitorTestCase#checkFileCounts(java.lang.String,int,int,int)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.FileSystemMonitorTestCase#setUp" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.FileSystemMonitorTestCase#tearDown" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.FileSystemMonitorTestCase#testMonitor" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.FileSystemMonitorTestCase#touch(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemEntry#<init>(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemEntry#getChildren" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemEntry#getFile" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemEntry#hasChanged" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemEntry#isDirectory" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemEntry#newChildInstance(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemEntry#refresh" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemEntry#setChildren(org.apache.commons.io.monitor.FilesystemEntry[])" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemEntry#setFile(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemMonitor#<init>(long)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemMonitor#addObserver(org.apache.commons.io.monitor.FilesystemObserver)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemMonitor#run" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemMonitor#start" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemMonitor#stop" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemObserver#<init>(java.io.File,java.io.FileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemObserver#addListener(org.apache.commons.io.monitor.FilesystemListener)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemObserver#checkAndNotify" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemObserver#createFileEntry(org.apache.commons.io.monitor.FilesystemEntry,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemObserver#destroy" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemObserver#doCreate(org.apache.commons.io.monitor.FilesystemEntry)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemObserver#doDelete(org.apache.commons.io.monitor.FilesystemEntry)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemObserver#doMatch(org.apache.commons.io.monitor.FilesystemEntry,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemObserver#initialize" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemObserver#listFiles(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemObserverTestCase" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#<init>(int)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#close" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#toString" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#write(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        }
      }
    },
    "45e7ddd803f4cd9949dcb3db947de2f27a634448" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "ba7b754546b22471e5d0df732afbe9d19ef62ce7",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtilsListFilesTestCase#testListFiles" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles" ]
          }
        },
        "org.apache.commons.io.input.NullInputStreamTest#testMarkAndReset" : {
          "testcases" : {
            "org.apache.commons.io.input.NullInputStreamTest" : [ "testMarkAndReset" ]
          }
        },
        "org.apache.commons.io.input.NullInputStreamTest#testSkip" : {
          "testcases" : {
            "org.apache.commons.io.input.NullInputStreamTest" : [ "testSkip" ]
          }
        },
        "org.apache.commons.io.input.NullReaderTest#testMarkAndReset" : {
          "testcases" : {
            "org.apache.commons.io.input.NullReaderTest" : [ "testMarkAndReset" ]
          }
        },
        "org.apache.commons.io.input.NullReaderTest#testSkip" : {
          "testcases" : {
            "org.apache.commons.io.input.NullReaderTest" : [ "testSkip" ]
          }
        }
      }
    },
    "724d798408a98141d537976a6c924ed8f5501fce" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "45e7ddd803f4cd9949dcb3db947de2f27a634448",
      "changedClazzes" : { }
    },
    "8bb718182e27ef0a030f0769238c01e019283652" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "724d798408a98141d537976a6c924ed8f5501fce",
      "changedClazzes" : {
        "org.apache.commons.io.IOUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy" ],
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce", "testDeleteNormal", "testDeleteQuietlyNormal" ],
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceUnix_String_EmptyResponse", "testGetFreeSpaceUnix_String_InvalidResponse1", "testGetFreeSpaceUnix_String_InvalidResponse2", "testGetFreeSpaceUnix_String_InvalidResponse3", "testGetFreeSpaceUnix_String_InvalidResponse4", "testGetFreeSpaceUnix_String_LongResponse", "testGetFreeSpaceUnix_String_LongResponseKb", "testGetFreeSpaceUnix_String_NormalResponseFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbLinux", "testGetFreeSpaceUnix_String_NormalResponseKbSolaris", "testGetFreeSpaceUnix_String_NormalResponseLinux", "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpace_String" ],
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile" ],
            "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" : [ "testCleanDirWithASymlinkDir", "testCleanDirWithParentSymlinks", "testCleanDirWithSymlinkFile", "testIdentifiesSymlinkFile", "testStillClearsIfGivenDirectoryIsASymlink" ],
            "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToItself", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testCopyURLToFileWithTimeout", "testDecodeUrl", "testDecodeUrlEncodingUtf8", "testDecodeUrlLenient", "testDecodeUrlNullSafe", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testGetTempDirectory", "testGetTempDirectoryPath", "testGetUserDirectory", "testGetUserDirectoryPath", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToString", "testReadLines", "testSizeOf", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFileUtf8", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedError_IO_128", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPrefix", "testGetPrefixLength", "testIndexOfExtension", "testIndexOfLastSeparator", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testNormalize", "testNormalizeNoEndSeparator", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToOutputStream_nullIn", "testCopy_inputStreamToOutputStream_nullOut", "testCopy_inputStreamToWriter", "testCopy_inputStreamToWriter_Encoding", "testCopy_inputStreamToWriter_Encoding_nullEncoding", "testCopy_inputStreamToWriter_Encoding_nullIn", "testCopy_inputStreamToWriter_Encoding_nullOut", "testCopy_inputStreamToWriter_nullIn", "testCopy_inputStreamToWriter_nullOut", "testCopy_readerToOutputStream", "testCopy_readerToOutputStream_Encoding", "testCopy_readerToOutputStream_Encoding_nullEncoding", "testCopy_readerToOutputStream_Encoding_nullIn", "testCopy_readerToOutputStream_Encoding_nullOut", "testCopy_readerToOutputStream_nullIn", "testCopy_readerToOutputStream_nullOut", "testCopy_readerToWriter", "testCopy_readerToWriter_nullIn", "testCopy_readerToWriter_nullOut" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testByteArrayToOutputStream", "testByteArrayToString", "testByteArrayToWriter", "testCharSequenceToInputStream", "testConstants", "testInputStreamToBufferedInputStream", "testInputStreamToByteArray", "testInputStreamToCharArray", "testInputStreamToCharArrayWithEncoding", "testInputStreamToString", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testReaderToCharArray", "testReaderToString", "testSkipFileInput", "testSkipFileReader", "testSkipReader", "testSkipStream", "testStringToByteArray", "testStringToInputStream", "testStringToOutputStream", "testStringToWriter" ],
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWriteLines_OutputStream", "testWriteLines_OutputStream_Encoding", "testWriteLines_OutputStream_Encoding_nullData", "testWriteLines_OutputStream_Encoding_nullEncoding", "testWriteLines_OutputStream_Encoding_nullSeparator", "testWriteLines_OutputStream_Encoding_nullStream", "testWriteLines_OutputStream_nullData", "testWriteLines_OutputStream_nullSeparator", "testWriteLines_OutputStream_nullStream", "testWriteLines_Writer", "testWriteLines_Writer_nullData", "testWriteLines_Writer_nullSeparator", "testWriteLines_Writer_nullStream", "testWrite_byteArrayToOutputStream", "testWrite_byteArrayToOutputStream_nullData", "testWrite_byteArrayToOutputStream_nullStream", "testWrite_byteArrayToWriter", "testWrite_byteArrayToWriter_Encoding", "testWrite_byteArrayToWriter_Encoding_nullData", "testWrite_byteArrayToWriter_Encoding_nullEncoding", "testWrite_byteArrayToWriter_Encoding_nullWriter", "testWrite_byteArrayToWriter_nullData", "testWrite_byteArrayToWriter_nullWriter", "testWrite_charArrayToOutputStream", "testWrite_charArrayToOutputStream_Encoding", "testWrite_charArrayToOutputStream_Encoding_nullData", "testWrite_charArrayToOutputStream_Encoding_nullStream", "testWrite_charArrayToOutputStream_nullData", "testWrite_charArrayToOutputStream_nullEncoding", "testWrite_charArrayToOutputStream_nullStream", "testWrite_charArrayToWriter", "testWrite_charArrayToWriter_Encoding_nullData", "testWrite_charArrayToWriter_Encoding_nullStream", "testWrite_charSequenceToOutputStream", "testWrite_charSequenceToOutputStream_Encoding", "testWrite_charSequenceToOutputStream_Encoding_nullData", "testWrite_charSequenceToOutputStream_Encoding_nullStream", "testWrite_charSequenceToOutputStream_nullData", "testWrite_charSequenceToOutputStream_nullEncoding", "testWrite_charSequenceToOutputStream_nullStream", "testWrite_charSequenceToWriter", "testWrite_charSequenceToWriter_Encoding_nullData", "testWrite_charSequenceToWriter_Encoding_nullStream", "testWrite_stringToOutputStream", "testWrite_stringToOutputStream_Encoding", "testWrite_stringToOutputStream_Encoding_nullData", "testWrite_stringToOutputStream_Encoding_nullStream", "testWrite_stringToOutputStream_nullData", "testWrite_stringToOutputStream_nullEncoding", "testWrite_stringToOutputStream_nullStream", "testWrite_stringToWriter", "testWrite_stringToWriter_Encoding_nullData", "testWrite_stringToWriter_Encoding_nullStream" ],
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testFiltering", "testInvalidEncoding", "testMissingFile", "testNextLineOnly", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorArrayNull", "testConstructorIterable", "testConstructorIterableNull" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testCanRead", "testCanWrite", "testEmpty", "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testSizeFilter" ],
            "org.apache.commons.io.input.BoundedInputStreamTest" : [ "testReadArray" ],
            "org.apache.commons.io.input.TailerTest" : [ "testStopWithNoFile", "testStopWithNoFileUsingExecutor", "testTailer" ],
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ],
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testWriteToLarge" ],
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testConstructor_fileName_nullFile", "testDifferentEncoding", "testSameEncoding" ],
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testConstructor_fileName_nullFile", "testFileLocked", "testFileNotLocked" ]
          }
        }
      }
    },
    "49509582b37ce84e9b8d313fc9e344ea856b276c" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "8bb718182e27ef0a030f0769238c01e019283652",
      "changedClazzes" : { }
    },
    "dbf024bd5d6043c7272f4b0d40eef3e6902f01d1" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "49509582b37ce84e9b8d313fc9e344ea856b276c",
      "changedClazzes" : {
        "org.apache.commons.io.filefilter.FileFilterTestCase#testSuffix" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testSuffix" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#makeCVSAware(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testMakeCVSAware" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#makeSVNAware(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testMakeSVNAware" ]
          }
        }
      }
    },
    "420395ab290c93598faf8ecd7dd21f970bc745f1" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "dbf024bd5d6043c7272f4b0d40eef3e6902f01d1",
      "changedClazzes" : {
        "org.apache.commons.io.IOUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy" ],
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce", "testDeleteNormal", "testDeleteQuietlyNormal" ],
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceUnix_String_EmptyResponse", "testGetFreeSpaceUnix_String_InvalidResponse1", "testGetFreeSpaceUnix_String_InvalidResponse2", "testGetFreeSpaceUnix_String_InvalidResponse3", "testGetFreeSpaceUnix_String_InvalidResponse4", "testGetFreeSpaceUnix_String_LongResponse", "testGetFreeSpaceUnix_String_LongResponseKb", "testGetFreeSpaceUnix_String_NormalResponseFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbLinux", "testGetFreeSpaceUnix_String_NormalResponseKbSolaris", "testGetFreeSpaceUnix_String_NormalResponseLinux", "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpace_String" ],
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile" ],
            "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" : [ "testCleanDirWithASymlinkDir", "testCleanDirWithParentSymlinks", "testCleanDirWithSymlinkFile", "testIdentifiesSymlinkFile", "testStillClearsIfGivenDirectoryIsASymlink" ],
            "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToItself", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testCopyURLToFileWithTimeout", "testDecodeUrl", "testDecodeUrlEncodingUtf8", "testDecodeUrlLenient", "testDecodeUrlNullSafe", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testGetTempDirectory", "testGetTempDirectoryPath", "testGetUserDirectory", "testGetUserDirectoryPath", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToString", "testReadLines", "testSizeOf", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFileUtf8", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedError_IO_128", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPrefix", "testGetPrefixLength", "testIndexOfExtension", "testIndexOfLastSeparator", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testNormalize", "testNormalizeNoEndSeparator", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToOutputStream_nullIn", "testCopy_inputStreamToOutputStream_nullOut", "testCopy_inputStreamToWriter", "testCopy_inputStreamToWriter_Encoding", "testCopy_inputStreamToWriter_Encoding_nullEncoding", "testCopy_inputStreamToWriter_Encoding_nullIn", "testCopy_inputStreamToWriter_Encoding_nullOut", "testCopy_inputStreamToWriter_nullIn", "testCopy_inputStreamToWriter_nullOut", "testCopy_readerToOutputStream", "testCopy_readerToOutputStream_Encoding", "testCopy_readerToOutputStream_Encoding_nullEncoding", "testCopy_readerToOutputStream_Encoding_nullIn", "testCopy_readerToOutputStream_Encoding_nullOut", "testCopy_readerToOutputStream_nullIn", "testCopy_readerToOutputStream_nullOut", "testCopy_readerToWriter", "testCopy_readerToWriter_nullIn", "testCopy_readerToWriter_nullOut" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testByteArrayToOutputStream", "testByteArrayToString", "testByteArrayToWriter", "testCharSequenceToInputStream", "testConstants", "testInputStreamToBufferedInputStream", "testInputStreamToByteArray", "testInputStreamToCharArray", "testInputStreamToCharArrayWithEncoding", "testInputStreamToString", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testReaderToCharArray", "testReaderToString", "testSkipFileInput", "testSkipFileReader", "testSkipReader", "testSkipStream", "testStringToByteArray", "testStringToInputStream", "testStringToOutputStream", "testStringToWriter" ],
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWriteLines_OutputStream", "testWriteLines_OutputStream_Encoding", "testWriteLines_OutputStream_Encoding_nullData", "testWriteLines_OutputStream_Encoding_nullEncoding", "testWriteLines_OutputStream_Encoding_nullSeparator", "testWriteLines_OutputStream_Encoding_nullStream", "testWriteLines_OutputStream_nullData", "testWriteLines_OutputStream_nullSeparator", "testWriteLines_OutputStream_nullStream", "testWriteLines_Writer", "testWriteLines_Writer_nullData", "testWriteLines_Writer_nullSeparator", "testWriteLines_Writer_nullStream", "testWrite_byteArrayToOutputStream", "testWrite_byteArrayToOutputStream_nullData", "testWrite_byteArrayToOutputStream_nullStream", "testWrite_byteArrayToWriter", "testWrite_byteArrayToWriter_Encoding", "testWrite_byteArrayToWriter_Encoding_nullData", "testWrite_byteArrayToWriter_Encoding_nullEncoding", "testWrite_byteArrayToWriter_Encoding_nullWriter", "testWrite_byteArrayToWriter_nullData", "testWrite_byteArrayToWriter_nullWriter", "testWrite_charArrayToOutputStream", "testWrite_charArrayToOutputStream_Encoding", "testWrite_charArrayToOutputStream_Encoding_nullData", "testWrite_charArrayToOutputStream_Encoding_nullStream", "testWrite_charArrayToOutputStream_nullData", "testWrite_charArrayToOutputStream_nullEncoding", "testWrite_charArrayToOutputStream_nullStream", "testWrite_charArrayToWriter", "testWrite_charArrayToWriter_Encoding_nullData", "testWrite_charArrayToWriter_Encoding_nullStream", "testWrite_charSequenceToOutputStream", "testWrite_charSequenceToOutputStream_Encoding", "testWrite_charSequenceToOutputStream_Encoding_nullData", "testWrite_charSequenceToOutputStream_Encoding_nullStream", "testWrite_charSequenceToOutputStream_nullData", "testWrite_charSequenceToOutputStream_nullEncoding", "testWrite_charSequenceToOutputStream_nullStream", "testWrite_charSequenceToWriter", "testWrite_charSequenceToWriter_Encoding_nullData", "testWrite_charSequenceToWriter_Encoding_nullStream", "testWrite_stringToOutputStream", "testWrite_stringToOutputStream_Encoding", "testWrite_stringToOutputStream_Encoding_nullData", "testWrite_stringToOutputStream_Encoding_nullStream", "testWrite_stringToOutputStream_nullData", "testWrite_stringToOutputStream_nullEncoding", "testWrite_stringToOutputStream_nullStream", "testWrite_stringToWriter", "testWrite_stringToWriter_Encoding_nullData", "testWrite_stringToWriter_Encoding_nullStream" ],
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testFiltering", "testInvalidEncoding", "testMissingFile", "testNextLineOnly", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorArrayNull", "testConstructorIterable", "testConstructorIterableNull" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testCanRead", "testCanWrite", "testEmpty", "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testSizeFilter" ],
            "org.apache.commons.io.input.BoundedInputStreamTest" : [ "testReadArray" ],
            "org.apache.commons.io.input.TailerTest" : [ "testStopWithNoFile", "testStopWithNoFileUsingExecutor", "testTailer" ],
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ],
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testWriteToLarge" ],
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testConstructor_fileName_nullFile", "testDifferentEncoding", "testSameEncoding" ],
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testConstructor_fileName_nullFile", "testFileLocked", "testFileNotLocked" ]
          }
        }
      }
    },
    "049d68042051f98a2c959eb6594ad2248890d0bd" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "420395ab290c93598faf8ecd7dd21f970bc745f1",
      "changedClazzes" : {
        "org.apache.commons.io.filefilter.FileFilterUtils" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ],
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testListFiles" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testFalse", "testFileFilterUtils_and", "testFileFilterUtils_or", "testFilterArray", "testFilterArrayNullParameters", "testFilterArray_fromList", "testFilterList", "testFilterListNullParameters", "testFilterList_fromArray", "testFilterSet", "testFilterSetNullParameters", "testFilterSet_fromArray", "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNot", "testPrefix", "testPrefixCaseInsensitive", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testTrue" ],
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        }
      }
    },
    "67053cbf321a333bcb9741f9bba5a78298c90189" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "049d68042051f98a2c959eb6594ad2248890d0bd",
      "changedClazzes" : {
        "org.apache.commons.io.input.ProxyReaderTest" : {
          "testcases" : {
            "org.apache.commons.io.input.ProxyReaderTest" : [ "testNullCharArray", "testNullCharBuffer" ]
          }
        },
        "org.apache.commons.io.input.ProxyReaderTest$CustomNullReader" : {
          "testcases" : {
            "org.apache.commons.io.input.ProxyReaderTest" : [ "testNullCharArray", "testNullCharBuffer" ]
          }
        },
        "org.apache.commons.io.input.ProxyReaderTest$ProxyReaderImpl" : {
          "testcases" : {
            "org.apache.commons.io.input.ProxyReaderTest" : [ "testNullCharArray", "testNullCharBuffer" ]
          }
        }
      }
    },
    "9c16abaad33a595959b5f82b1bd98ee884f334e9" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "67053cbf321a333bcb9741f9bba5a78298c90189",
      "changedClazzes" : {
        "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testCancel", "testFilter", "testFilterAndLimitA", "testFilterAndLimitB", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile2", "testFilterDirAndFile3", "testFilterDirAndFile4", "testHandleStartDirectoryFalse", "testLimitToCurrent", "testMissingStartDirectory", "testMultiThreadCancel" ]
          }
        }
      }
    },
    "803484d8d5ba799e76ee241920662cf23aa40630" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "9c16abaad33a595959b5f82b1bd98ee884f334e9",
      "changedClazzes" : { }
    },
    "4c17f2bcb464dc60c1937ee9ba5c5bbe2a84c2e8" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "803484d8d5ba799e76ee241920662cf23aa40630",
      "changedClazzes" : { }
    },
    "7fd0d3d22f83789ad0203394158320bd8ff4066e" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "4c17f2bcb464dc60c1937ee9ba5c5bbe2a84c2e8",
      "changedClazzes" : { }
    },
    "3c14167fecb1e1ee38891efcc2423e3c82466de1" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "7fd0d3d22f83789ad0203394158320bd8ff4066e",
      "changedClazzes" : { }
    },
    "ea84049a791cfe83d9fb93e0cdea74dd362b0692" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "3c14167fecb1e1ee38891efcc2423e3c82466de1",
      "changedClazzes" : {
        "org.apache.commons.io.ByteOrderMark" : { },
        "org.apache.commons.io.ByteOrderMark#<init>(java.lang.String,int)" : {
          "testcases" : {
            "org.apache.commons.io.ByteOrderMarkTestCase" : [ "testEquals", "testErrors" ],
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testAvailableWithBOM", "testAvailableWithoutBOM", "testClose", "testGetBOMFirstThenRead", "testLargeBufferWithBOM", "testLargeBufferWithoutBOM", "testLeadingNonBOMBufferedRead", "testLeadingNonBOMSingleRead", "testMarkResetAfterReadWithBOM", "testMarkResetAfterReadWithoutBOM", "testMarkResetBeforeReadWithBOM", "testMarkResetBeforeReadWithoutBOM", "testReadEmpty", "testReadSmall", "testReadWithBOM", "testReadWithBOMInclude", "testReadWithMultipleBOM", "testReadWithoutBOM", "testSkipWithBOM", "testSkipWithoutBOM", "testSmallBufferWithBOM", "testSmallBufferWithoutBOM" ]
          }
        },
        "org.apache.commons.io.ByteOrderMark#equals(java.lang.Object)" : {
          "testcases" : {
            "org.apache.commons.io.ByteOrderMarkTestCase" : [ "testEquals" ],
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testGetBOMFirstThenRead", "testReadEmpty", "testReadSmall", "testReadWithBOM", "testReadWithBOMInclude", "testReadWithMultipleBOM", "testReadWithoutBOM" ]
          }
        },
        "org.apache.commons.io.ByteOrderMark#get(int)" : {
          "testcases" : {
            "org.apache.commons.io.ByteOrderMarkTestCase" : [ "testEquals", "testGet" ],
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testGetBOMFirstThenRead", "testLargeBufferWithBOM", "testLargeBufferWithoutBOM", "testLeadingNonBOMBufferedRead", "testLeadingNonBOMSingleRead", "testMarkResetAfterReadWithBOM", "testMarkResetAfterReadWithoutBOM", "testMarkResetBeforeReadWithBOM", "testMarkResetBeforeReadWithoutBOM", "testReadEmpty", "testReadSmall", "testReadWithBOM", "testReadWithBOMInclude", "testReadWithMultipleBOM", "testReadWithoutBOM", "testSkipWithBOM", "testSkipWithoutBOM", "testSmallBufferWithBOM", "testSmallBufferWithoutBOM" ]
          }
        },
        "org.apache.commons.io.ByteOrderMark#getBytes" : {
          "testcases" : {
            "org.apache.commons.io.ByteOrderMarkTestCase" : [ "testGetBytes" ]
          }
        },
        "org.apache.commons.io.ByteOrderMark#getCharsetName" : {
          "testcases" : {
            "org.apache.commons.io.ByteOrderMarkTestCase" : [ "testCharsetName" ]
          }
        },
        "org.apache.commons.io.ByteOrderMark#hashCode" : {
          "testcases" : {
            "org.apache.commons.io.ByteOrderMarkTestCase" : [ "testHashCode" ]
          }
        },
        "org.apache.commons.io.ByteOrderMark#length" : {
          "testcases" : {
            "org.apache.commons.io.ByteOrderMarkTestCase" : [ "testEquals", "testLength" ],
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testGetBOMFirstThenRead", "testLargeBufferWithBOM", "testLargeBufferWithoutBOM", "testLeadingNonBOMBufferedRead", "testLeadingNonBOMSingleRead", "testMarkResetAfterReadWithBOM", "testMarkResetAfterReadWithoutBOM", "testMarkResetBeforeReadWithBOM", "testMarkResetBeforeReadWithoutBOM", "testReadEmpty", "testReadSmall", "testReadWithBOM", "testReadWithBOMInclude", "testReadWithMultipleBOM", "testReadWithoutBOM", "testSkipWithBOM", "testSkipWithoutBOM", "testSmallBufferWithBOM", "testSmallBufferWithoutBOM" ]
          }
        },
        "org.apache.commons.io.ByteOrderMark#toString" : {
          "testcases" : {
            "org.apache.commons.io.ByteOrderMarkTestCase" : [ "testToString" ],
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testReadWithBOM" ]
          }
        },
        "org.apache.commons.io.ByteOrderMarkTestCase" : {
          "testcases" : {
            "org.apache.commons.io.ByteOrderMarkTestCase" : [ "testCharsetName", "testEquals", "testErrors", "testGet", "testGetBytes", "testHashCode", "testLength", "testToString" ]
          }
        },
        "org.apache.commons.io.ByteOrderMarkTestCase#testCharsetName" : {
          "testcases" : {
            "org.apache.commons.io.ByteOrderMarkTestCase" : [ "testCharsetName" ]
          }
        },
        "org.apache.commons.io.ByteOrderMarkTestCase#testEquals" : {
          "testcases" : {
            "org.apache.commons.io.ByteOrderMarkTestCase" : [ "testEquals" ]
          }
        },
        "org.apache.commons.io.ByteOrderMarkTestCase#testErrors" : {
          "testcases" : {
            "org.apache.commons.io.ByteOrderMarkTestCase" : [ "testErrors" ]
          }
        },
        "org.apache.commons.io.ByteOrderMarkTestCase#testGet" : {
          "testcases" : {
            "org.apache.commons.io.ByteOrderMarkTestCase" : [ "testGet" ]
          }
        },
        "org.apache.commons.io.ByteOrderMarkTestCase#testGetBytes" : {
          "testcases" : {
            "org.apache.commons.io.ByteOrderMarkTestCase" : [ "testGetBytes" ]
          }
        },
        "org.apache.commons.io.ByteOrderMarkTestCase#testHashCode" : {
          "testcases" : {
            "org.apache.commons.io.ByteOrderMarkTestCase" : [ "testHashCode" ]
          }
        },
        "org.apache.commons.io.ByteOrderMarkTestCase#testLength" : {
          "testcases" : {
            "org.apache.commons.io.ByteOrderMarkTestCase" : [ "testLength" ]
          }
        },
        "org.apache.commons.io.ByteOrderMarkTestCase#testToString" : {
          "testcases" : {
            "org.apache.commons.io.ByteOrderMarkTestCase" : [ "testToString" ]
          }
        },
        "org.apache.commons.io.input.BOMExclusionInputStream" : { },
        "org.apache.commons.io.input.BOMInputStream" : { },
        "org.apache.commons.io.input.BOMInputStream#<init>(java.io.InputStream)" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testReadWithMultipleBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStream#find" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testGetBOMFirstThenRead", "testLargeBufferWithBOM", "testLargeBufferWithoutBOM", "testLeadingNonBOMBufferedRead", "testLeadingNonBOMSingleRead", "testMarkResetAfterReadWithBOM", "testMarkResetAfterReadWithoutBOM", "testMarkResetBeforeReadWithBOM", "testMarkResetBeforeReadWithoutBOM", "testReadSmall", "testReadWithBOM", "testReadWithBOMInclude", "testReadWithMultipleBOM", "testReadWithoutBOM", "testSkipWithBOM", "testSkipWithoutBOM", "testSmallBufferWithBOM", "testSmallBufferWithoutBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStream#getBOM" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testGetBOMFirstThenRead", "testReadEmpty", "testReadSmall", "testReadWithBOM", "testReadWithBOMInclude", "testReadWithMultipleBOM", "testReadWithoutBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStream#hasBOM" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testGetBOMFirstThenRead", "testReadEmpty", "testReadSmall", "testReadWithBOM", "testReadWithBOMInclude", "testReadWithMultipleBOM", "testReadWithoutBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStream#mark(int)" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testMarkResetAfterReadWithBOM", "testMarkResetAfterReadWithoutBOM", "testMarkResetBeforeReadWithBOM", "testMarkResetBeforeReadWithoutBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStream#matches(org.apache.commons.io.ByteOrderMark)" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testGetBOMFirstThenRead", "testLargeBufferWithBOM", "testLargeBufferWithoutBOM", "testLeadingNonBOMBufferedRead", "testLeadingNonBOMSingleRead", "testMarkResetAfterReadWithBOM", "testMarkResetAfterReadWithoutBOM", "testMarkResetBeforeReadWithBOM", "testMarkResetBeforeReadWithoutBOM", "testReadSmall", "testReadWithBOM", "testReadWithBOMInclude", "testReadWithMultipleBOM", "testReadWithoutBOM", "testSkipWithBOM", "testSkipWithoutBOM", "testSmallBufferWithBOM", "testSmallBufferWithoutBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStream#read" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testLargeBufferWithBOM", "testLargeBufferWithoutBOM", "testLeadingNonBOMBufferedRead", "testSmallBufferWithBOM", "testSmallBufferWithoutBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStream#readFirstBytes" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testGetBOMFirstThenRead", "testLargeBufferWithBOM", "testLargeBufferWithoutBOM", "testLeadingNonBOMBufferedRead", "testLeadingNonBOMSingleRead", "testMarkResetAfterReadWithBOM", "testMarkResetAfterReadWithoutBOM", "testMarkResetBeforeReadWithBOM", "testMarkResetBeforeReadWithoutBOM", "testReadEmpty", "testReadSmall", "testReadWithBOM", "testReadWithBOMInclude", "testReadWithMultipleBOM", "testReadWithoutBOM", "testSkipWithBOM", "testSkipWithoutBOM", "testSmallBufferWithBOM", "testSmallBufferWithoutBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStream#reset" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testMarkResetAfterReadWithBOM", "testMarkResetAfterReadWithoutBOM", "testMarkResetBeforeReadWithBOM", "testMarkResetBeforeReadWithoutBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStream#skip(long)" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testSkipWithBOM", "testSkipWithoutBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testAvailableWithBOM", "testAvailableWithoutBOM", "testClose", "testGetBOMFirstThenRead", "testLargeBufferWithBOM", "testLargeBufferWithoutBOM", "testLeadingNonBOMBufferedRead", "testLeadingNonBOMSingleRead", "testMarkResetAfterReadWithBOM", "testMarkResetAfterReadWithoutBOM", "testMarkResetBeforeReadWithBOM", "testMarkResetBeforeReadWithoutBOM", "testNoBoms", "testReadEmpty", "testReadSmall", "testReadWithBOM", "testReadWithBOMInclude", "testReadWithMultipleBOM", "testReadWithoutBOM", "testSkipWithBOM", "testSkipWithoutBOM", "testSmallBufferWithBOM", "testSmallBufferWithoutBOM", "testSupportCode" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#assertData(byte[],byte[],int,int)" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testLargeBufferWithBOM", "testLargeBufferWithoutBOM", "testLeadingNonBOMBufferedRead", "testSmallBufferWithBOM", "testSmallBufferWithoutBOM", "testSupportCode" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#createDataStream(byte[],boolean)" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testAvailableWithBOM", "testAvailableWithoutBOM", "testGetBOMFirstThenRead", "testLargeBufferWithBOM", "testLargeBufferWithoutBOM", "testLeadingNonBOMBufferedRead", "testLeadingNonBOMSingleRead", "testMarkResetAfterReadWithBOM", "testMarkResetAfterReadWithoutBOM", "testMarkResetBeforeReadWithBOM", "testMarkResetBeforeReadWithoutBOM", "testNoBoms", "testReadEmpty", "testReadSmall", "testReadWithBOM", "testReadWithBOMInclude", "testReadWithMultipleBOM", "testReadWithoutBOM", "testSkipWithBOM", "testSkipWithoutBOM", "testSmallBufferWithBOM", "testSmallBufferWithoutBOM", "testSupportCode" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#testAvailableWithBOM" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testAvailableWithBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#testAvailableWithoutBOM" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testAvailableWithoutBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#testClose" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testClose" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#testGetBOMFirstThenRead" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testGetBOMFirstThenRead" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#testLargeBufferWithBOM" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testLargeBufferWithBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#testLargeBufferWithoutBOM" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testLargeBufferWithoutBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#testLeadingNonBOMBufferedRead" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testLeadingNonBOMBufferedRead" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#testLeadingNonBOMSingleRead" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testLeadingNonBOMSingleRead" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#testMarkResetAfterReadWithBOM" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testMarkResetAfterReadWithBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#testMarkResetAfterReadWithoutBOM" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testMarkResetAfterReadWithoutBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#testMarkResetBeforeReadWithBOM" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testMarkResetBeforeReadWithBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#testMarkResetBeforeReadWithoutBOM" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testMarkResetBeforeReadWithoutBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#testNoBoms" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testNoBoms" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#testReadEmpty" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testReadEmpty" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#testReadSmall" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testReadSmall" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#testReadWithBOM" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testReadWithBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#testReadWithBOMInclude" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testReadWithBOMInclude" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#testReadWithMultipleBOM" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testReadWithMultipleBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#testReadWithoutBOM" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testReadWithoutBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#testSkipWithBOM" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testSkipWithBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#testSkipWithoutBOM" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testSkipWithoutBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#testSmallBufferWithBOM" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testSmallBufferWithBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#testSmallBufferWithoutBOM" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testSmallBufferWithoutBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#testSupportCode" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testSupportCode" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest$ExpectCloseInputStream#<init>" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testClose" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest$ExpectCloseInputStream#assertCloseCalled" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testClose" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest$ExpectCloseInputStream#close" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testClose" ]
          }
        },
        "org.apache.commons.io.input.ProxyInputStream#<init>(java.io.InputStream)" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testAvailableWithBOM", "testAvailableWithoutBOM", "testClose", "testGetBOMFirstThenRead", "testLargeBufferWithBOM", "testLargeBufferWithoutBOM", "testLeadingNonBOMBufferedRead", "testLeadingNonBOMSingleRead", "testMarkResetAfterReadWithBOM", "testMarkResetAfterReadWithoutBOM", "testMarkResetBeforeReadWithBOM", "testMarkResetBeforeReadWithoutBOM", "testNoBoms", "testReadEmpty", "testReadSmall", "testReadWithBOM", "testReadWithBOMInclude", "testReadWithMultipleBOM", "testReadWithoutBOM", "testSkipWithBOM", "testSkipWithoutBOM", "testSmallBufferWithBOM", "testSmallBufferWithoutBOM" ]
          }
        },
        "org.apache.commons.io.input.ProxyInputStream#available" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testAvailableWithBOM", "testAvailableWithoutBOM" ]
          }
        },
        "org.apache.commons.io.input.ProxyInputStream#close" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testClose" ]
          }
        },
        "org.apache.commons.io.input.ProxyInputStream#markSupported" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testMarkResetAfterReadWithBOM", "testMarkResetAfterReadWithoutBOM", "testMarkResetBeforeReadWithBOM", "testMarkResetBeforeReadWithoutBOM" ]
          }
        }
      }
    },
    "218a9e687dd42de2d2bc43eadec6f02ab685f410" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "ea84049a791cfe83d9fb93e0cdea74dd362b0692",
      "changedClazzes" : { }
    },
    "79c97ab6a11d8c67914982bf2efdc82009de977b" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "218a9e687dd42de2d2bc43eadec6f02ab685f410",
      "changedClazzes" : {
        "org.apache.commons.io.FilenameUtils#equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testEquals", "testEqualsNormalized", "testEqualsNormalizedError_IO_128", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase#testMagicNumberFileFilterBytes" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testMagicNumberFileFilterBytes" ]
          }
        },
        "org.apache.commons.io.filefilter.MagicNumberFileFilter#<init>(byte[],long)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset" ]
          }
        },
        "org.apache.commons.io.filefilter.MagicNumberFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset" ]
          }
        },
        "org.apache.commons.io.filefilter.NameFileFilter#<init>(org.apache.commons.io.filefilter.String[],org.apache.commons.io.IOCase)" : { },
        "org.apache.commons.io.filefilter.PrefixFileFilter#<init>(org.apache.commons.io.filefilter.String[],org.apache.commons.io.IOCase)" : { },
        "org.apache.commons.io.filefilter.SuffixFileFilter#<init>(org.apache.commons.io.filefilter.String[],org.apache.commons.io.IOCase)" : { },
        "org.apache.commons.io.filefilter.WildcardFileFilter#<init>(org.apache.commons.io.filefilter.String[],org.apache.commons.io.IOCase)" : { },
        "org.apache.commons.io.filefilter.WildcardFilter#<init>(org.apache.commons.io.filefilter.String[])" : { }
      }
    },
    "94d8c10b757a5f85012916255bb43d49f854a3c8" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "79c97ab6a11d8c67914982bf2efdc82009de977b",
      "changedClazzes" : {
        "org.apache.commons.io.input.CountingInputStream" : {
          "testcases" : {
            "org.apache.commons.io.input.CountingInputStreamTest" : [ "testCounting", "testEOF1", "testEOF2", "testEOF3", "testResetting", "testSkipping", "testZeroLength1", "testZeroLength2", "testZeroLength3" ]
          }
        },
        "org.apache.commons.io.output.CountingOutputStream" : {
          "testcases" : {
            "org.apache.commons.io.output.CountingOutputStreamTest" : [ "testCounting" ]
          }
        }
      }
    },
    "d43262058d2a3530c4d7305ea1a1e03d7001bd1d" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "94d8c10b757a5f85012916255bb43d49f854a3c8",
      "changedClazzes" : {
        "org.apache.commons.io.input.BOMInputStream#getBOM" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testGetBOMFirstThenRead", "testReadEmpty", "testReadSmall", "testReadWithBOM", "testReadWithBOMInclude", "testReadWithMultipleBOM", "testReadWithoutBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStream#readFirstBytes" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testGetBOMFirstThenRead", "testLargeBufferWithBOM", "testLargeBufferWithoutBOM", "testLeadingNonBOMBufferedRead", "testLeadingNonBOMSingleRead", "testMarkResetAfterReadWithBOM", "testMarkResetAfterReadWithoutBOM", "testMarkResetBeforeReadWithBOM", "testMarkResetBeforeReadWithoutBOM", "testReadEmpty", "testReadSmall", "testReadWithBOM", "testReadWithBOMInclude", "testReadWithMultipleBOM", "testReadWithoutBOM", "testSkipWithBOM", "testSkipWithoutBOM", "testSmallBufferWithBOM", "testSmallBufferWithoutBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testAvailableWithBOM", "testAvailableWithoutBOM", "testClose", "testGetBOMFirstThenRead", "testLargeBufferWithBOM", "testLargeBufferWithoutBOM", "testLeadingNonBOMBufferedRead", "testLeadingNonBOMSingleRead", "testMarkResetAfterReadWithBOM", "testMarkResetAfterReadWithoutBOM", "testMarkResetBeforeReadWithBOM", "testMarkResetBeforeReadWithoutBOM", "testNoBoms", "testReadEmpty", "testReadSmall", "testReadWithBOM", "testReadWithBOMInclude", "testReadWithMultipleBOM", "testReadWithoutBOM", "testSkipWithBOM", "testSkipWithoutBOM", "testSmallBufferWithBOM", "testSmallBufferWithoutBOM", "testSupportCode" ]
          }
        }
      }
    },
    "5b75cf83b2db408f8228b26910a8d3d3633cd54f" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "d43262058d2a3530c4d7305ea1a1e03d7001bd1d",
      "changedClazzes" : {
        "org.apache.commons.io.input.XmlStreamReader" : { },
        "org.apache.commons.io.input.XmlStreamReader#<init>(java.io.InputStream)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testEncodingAttributeXML", "testHttp" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReader#calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.io.InputStream,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testEncodingAttributeXML", "testHttp" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReader#calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String,java.io.InputStream)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testHttp", "testRawBom", "testRawNoBom" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReader#doHttpStream(java.io.InputStream,java.lang.String,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testEncodingAttributeXML", "testHttp" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReader#doLenientDetection(java.lang.String,org.apache.commons.io.input.XmlStreamReaderException)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testEncodingAttributeXML", "testHttp" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReader#doRawStream(java.io.InputStream,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testRawBom", "testRawNoBom" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReader#getBOMEncoding(java.io.BufferedInputStream)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testEncodingAttributeXML", "testHttp", "testRawBom", "testRawNoBom" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReader#getContentTypeEncoding(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testEncodingAttributeXML", "testHttp" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReader#getContentTypeMime(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testEncodingAttributeXML", "testHttp" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReader#getEncoding" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testEncodingAttributeXML", "testHttp", "testRawBom", "testRawNoBom" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReader#getXMLGuessEncoding(java.io.BufferedInputStream)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testEncodingAttributeXML", "testHttp", "testRawBom", "testRawNoBom" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReader#getXmlProlog(java.io.BufferedInputStream,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testEncodingAttributeXML", "testHttp", "testRawBom", "testRawNoBom" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReader#isAppXml(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testEncodingAttributeXML", "testHttp" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReader#isTextXml(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testEncodingAttributeXML", "testHttp" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReader#prepareReader(java.io.InputStream,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testEncodingAttributeXML", "testHttp", "testRawBom", "testRawNoBom" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReader#setDefaultEncoding(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testHttp" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReaderException" : { },
        "org.apache.commons.io.input.XmlStreamReaderException#<init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.io.InputStream)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testEncodingAttributeXML", "testHttp", "testRawBom" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReaderException#getContentTypeEncoding" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testEncodingAttributeXML", "testHttp" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReaderException#getInputStream" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testEncodingAttributeXML", "testHttp" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReaderException#getXmlEncoding" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testEncodingAttributeXML", "testHttp" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReaderTest" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testEncodingAttributeXML", "testHttp", "testRawBom", "testRawNoBom" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReaderTest#_testAlternateDefaultEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testHttp" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReaderTest#_testHttpInvalid(java.lang.String,java.lang.String,java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testHttp" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReaderTest#_testHttpLenient(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testHttp" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReaderTest#_testHttpValid(java.lang.String,java.lang.String,java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testHttp" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReaderTest#_testRawBomInvalid(java.lang.String,java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testRawBom" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReaderTest#_testRawBomValid(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testRawBom" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReaderTest#_testRawNoBomValid(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testRawNoBom" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReaderTest#getXmlStream(java.lang.String,java.lang.String,java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testHttp", "testRawBom", "testRawNoBom" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReaderTest#testEncodingAttributeXML" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testEncodingAttributeXML" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReaderTest#testHttp" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testHttp" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReaderTest#testRawBom" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testRawBom" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReaderTest#testRawNoBom" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testRawNoBom" ]
          }
        },
        "org.apache.commons.io.output.XmlStreamWriter" : { },
        "org.apache.commons.io.output.XmlStreamWriter#<init>(java.io.OutputStream)" : {
          "testcases" : {
            "org.apache.commons.io.output.XmlStreamWriterTest" : [ "testDefaultEncoding", "testEBCDICEncoding", "testEUC_JPEncoding", "testEmpty", "testLatin15Encoding", "testLatin1Encoding", "testLatin7Encoding", "testNoXmlHeader", "testUTF16BEEncoding", "testUTF16Encoding", "testUTF16LEEncoding", "testUTF8Encoding" ]
          }
        },
        "org.apache.commons.io.output.XmlStreamWriter#close" : {
          "testcases" : {
            "org.apache.commons.io.output.XmlStreamWriterTest" : [ "testDefaultEncoding", "testEBCDICEncoding", "testEUC_JPEncoding", "testEmpty", "testLatin15Encoding", "testLatin1Encoding", "testLatin7Encoding", "testNoXmlHeader", "testUTF16BEEncoding", "testUTF16Encoding", "testUTF16LEEncoding", "testUTF8Encoding" ]
          }
        },
        "org.apache.commons.io.output.XmlStreamWriter#detectEncoding(char[],int,int)" : {
          "testcases" : {
            "org.apache.commons.io.output.XmlStreamWriterTest" : [ "testDefaultEncoding", "testEBCDICEncoding", "testEUC_JPEncoding", "testEmpty", "testLatin15Encoding", "testLatin1Encoding", "testLatin7Encoding", "testNoXmlHeader", "testUTF16BEEncoding", "testUTF16Encoding", "testUTF16LEEncoding", "testUTF8Encoding" ]
          }
        },
        "org.apache.commons.io.output.XmlStreamWriter#flush" : {
          "testcases" : {
            "org.apache.commons.io.output.XmlStreamWriterTest" : [ "testEmpty" ]
          }
        },
        "org.apache.commons.io.output.XmlStreamWriter#write(char[],int,int)" : {
          "testcases" : {
            "org.apache.commons.io.output.XmlStreamWriterTest" : [ "testDefaultEncoding", "testEBCDICEncoding", "testEUC_JPEncoding", "testEmpty", "testLatin15Encoding", "testLatin1Encoding", "testLatin7Encoding", "testNoXmlHeader", "testUTF16BEEncoding", "testUTF16Encoding", "testUTF16LEEncoding", "testUTF8Encoding" ]
          }
        },
        "org.apache.commons.io.output.XmlStreamWriterTest" : {
          "testcases" : {
            "org.apache.commons.io.output.XmlStreamWriterTest" : [ "testDefaultEncoding", "testEBCDICEncoding", "testEUC_JPEncoding", "testEmpty", "testLatin15Encoding", "testLatin1Encoding", "testLatin7Encoding", "testNoXmlHeader", "testUTF16BEEncoding", "testUTF16Encoding", "testUTF16LEEncoding", "testUTF8Encoding" ]
          }
        },
        "org.apache.commons.io.output.XmlStreamWriterTest#checkXmlContent(java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.output.XmlStreamWriterTest" : [ "testDefaultEncoding", "testEBCDICEncoding", "testEUC_JPEncoding", "testLatin15Encoding", "testLatin1Encoding", "testLatin7Encoding", "testNoXmlHeader", "testUTF16BEEncoding", "testUTF16Encoding", "testUTF16LEEncoding", "testUTF8Encoding" ]
          }
        },
        "org.apache.commons.io.output.XmlStreamWriterTest#checkXmlWriter(java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.output.XmlStreamWriterTest" : [ "testDefaultEncoding", "testEBCDICEncoding", "testEUC_JPEncoding", "testLatin15Encoding", "testLatin1Encoding", "testLatin7Encoding", "testUTF16BEEncoding", "testUTF16Encoding", "testUTF16LEEncoding", "testUTF8Encoding" ]
          }
        },
        "org.apache.commons.io.output.XmlStreamWriterTest#createXmlContent(java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.output.XmlStreamWriterTest" : [ "testDefaultEncoding", "testEBCDICEncoding", "testEUC_JPEncoding", "testLatin15Encoding", "testLatin1Encoding", "testLatin7Encoding", "testUTF16BEEncoding", "testUTF16Encoding", "testUTF16LEEncoding", "testUTF8Encoding" ]
          }
        },
        "org.apache.commons.io.output.XmlStreamWriterTest#testDefaultEncoding" : {
          "testcases" : {
            "org.apache.commons.io.output.XmlStreamWriterTest" : [ "testDefaultEncoding" ]
          }
        },
        "org.apache.commons.io.output.XmlStreamWriterTest#testEBCDICEncoding" : {
          "testcases" : {
            "org.apache.commons.io.output.XmlStreamWriterTest" : [ "testEBCDICEncoding" ]
          }
        },
        "org.apache.commons.io.output.XmlStreamWriterTest#testEUC_JPEncoding" : {
          "testcases" : {
            "org.apache.commons.io.output.XmlStreamWriterTest" : [ "testEUC_JPEncoding" ]
          }
        },
        "org.apache.commons.io.output.XmlStreamWriterTest#testEmpty" : {
          "testcases" : {
            "org.apache.commons.io.output.XmlStreamWriterTest" : [ "testEmpty" ]
          }
        },
        "org.apache.commons.io.output.XmlStreamWriterTest#testLatin15Encoding" : {
          "testcases" : {
            "org.apache.commons.io.output.XmlStreamWriterTest" : [ "testLatin15Encoding" ]
          }
        },
        "org.apache.commons.io.output.XmlStreamWriterTest#testLatin1Encoding" : {
          "testcases" : {
            "org.apache.commons.io.output.XmlStreamWriterTest" : [ "testLatin1Encoding" ]
          }
        },
        "org.apache.commons.io.output.XmlStreamWriterTest#testLatin7Encoding" : {
          "testcases" : {
            "org.apache.commons.io.output.XmlStreamWriterTest" : [ "testLatin7Encoding" ]
          }
        },
        "org.apache.commons.io.output.XmlStreamWriterTest#testNoXmlHeader" : {
          "testcases" : {
            "org.apache.commons.io.output.XmlStreamWriterTest" : [ "testNoXmlHeader" ]
          }
        },
        "org.apache.commons.io.output.XmlStreamWriterTest#testUTF16BEEncoding" : {
          "testcases" : {
            "org.apache.commons.io.output.XmlStreamWriterTest" : [ "testUTF16BEEncoding" ]
          }
        },
        "org.apache.commons.io.output.XmlStreamWriterTest#testUTF16Encoding" : {
          "testcases" : {
            "org.apache.commons.io.output.XmlStreamWriterTest" : [ "testUTF16Encoding" ]
          }
        },
        "org.apache.commons.io.output.XmlStreamWriterTest#testUTF16LEEncoding" : {
          "testcases" : {
            "org.apache.commons.io.output.XmlStreamWriterTest" : [ "testUTF16LEEncoding" ]
          }
        },
        "org.apache.commons.io.output.XmlStreamWriterTest#testUTF8Encoding" : {
          "testcases" : {
            "org.apache.commons.io.output.XmlStreamWriterTest" : [ "testUTF8Encoding" ]
          }
        }
      }
    },
    "2fbbf47aaf12f3efc333caf06bb61d63472d610e" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "5b75cf83b2db408f8228b26910a8d3d3633cd54f",
      "changedClazzes" : {
        "org.apache.commons.io.input.XmlStreamReader" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testEncodingAttributeXML", "testHttp", "testRawBom", "testRawNoBom" ]
          }
        }
      }
    },
    "a2800c889834ee30b5e8c0971cd1efbfa980bf9a" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "2fbbf47aaf12f3efc333caf06bb61d63472d610e",
      "changedClazzes" : {
        "org.apache.commons.io.input.XmlStreamReader" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testEncodingAttributeXML", "testHttp", "testRawBom", "testRawNoBom" ]
          }
        },
        "org.apache.commons.io.output.XmlStreamWriter" : {
          "testcases" : {
            "org.apache.commons.io.output.XmlStreamWriterTest" : [ "testDefaultEncoding", "testEBCDICEncoding", "testEUC_JPEncoding", "testEmpty", "testLatin15Encoding", "testLatin1Encoding", "testLatin7Encoding", "testNoXmlHeader", "testUTF16BEEncoding", "testUTF16Encoding", "testUTF16LEEncoding", "testUTF8Encoding" ]
          }
        }
      }
    },
    "e8703179767272e33bc097c730606ee03476c44b" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "a2800c889834ee30b5e8c0971cd1efbfa980bf9a",
      "changedClazzes" : {
        "org.apache.commons.io.input.XmlStreamReader" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testEncodingAttributeXML", "testHttp", "testRawBom", "testRawNoBom" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReaderException" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testEncodingAttributeXML", "testHttp", "testRawBom" ]
          }
        }
      }
    },
    "5b4212d98988e6798d1ced601a2036f7e98b70e0" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "e8703179767272e33bc097c730606ee03476c44b",
      "changedClazzes" : { }
    },
    "50d5aeea6180c582b788aedc44c3ae2c3c441eff" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "5b4212d98988e6798d1ced601a2036f7e98b70e0",
      "changedClazzes" : {
        "org.apache.commons.io.input.XmlStreamReader" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testEncodingAttributeXML", "testHttp", "testRawBom", "testRawNoBom" ]
          }
        }
      }
    },
    "1056d5ded9d19c3ee8c013d35fa5679163935935" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "50d5aeea6180c582b788aedc44c3ae2c3c441eff",
      "changedClazzes" : {
        "org.apache.commons.io.input.XmlStreamReader#getContentTypeMime(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testEncodingAttributeXML", "testHttp" ]
          }
        }
      }
    },
    "5a21350fb904af0f0e0f8d1cc5ce484c7183dd13" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "1056d5ded9d19c3ee8c013d35fa5679163935935",
      "changedClazzes" : {
        "org.apache.commons.io.input.BOMInputStream" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testAvailableWithBOM", "testAvailableWithoutBOM", "testClose", "testGetBOMFirstThenRead", "testLargeBufferWithBOM", "testLargeBufferWithoutBOM", "testLeadingNonBOMBufferedRead", "testLeadingNonBOMSingleRead", "testMarkResetAfterReadWithBOM", "testMarkResetAfterReadWithoutBOM", "testMarkResetBeforeReadWithBOM", "testMarkResetBeforeReadWithoutBOM", "testNoBoms", "testReadEmpty", "testReadSmall", "testReadWithBOM", "testReadWithBOMInclude", "testReadWithMultipleBOM", "testReadWithoutBOM", "testSkipWithBOM", "testSkipWithoutBOM", "testSmallBufferWithBOM", "testSmallBufferWithoutBOM" ],
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testEncodingAttributeXML", "testHttp", "testRawBom", "testRawNoBom" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReader#doHttpStream(java.io.InputStream,java.lang.String,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testEncodingAttributeXML", "testHttp" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReader#doRawStream(java.io.InputStream,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testRawBom", "testRawNoBom" ]
          }
        }
      }
    },
    "19f48eb1711427a43a5e10c84bbbf1218a08bdd2" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "5a21350fb904af0f0e0f8d1cc5ce484c7183dd13",
      "changedClazzes" : { }
    },
    "83f7246c3e9fe1d3f1ad6cf7ea0715a573fe2f2a" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "19f48eb1711427a43a5e10c84bbbf1218a08bdd2",
      "changedClazzes" : { }
    },
    "b575a8b771ac2140c893ce9c8364bbede89cf7a7" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "83f7246c3e9fe1d3f1ad6cf7ea0715a573fe2f2a",
      "changedClazzes" : {
        "org.apache.commons.io.filefilter.FileFilterTestCase#testDirectory" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testDirectory" ]
          }
        }
      }
    },
    "bf318110372968dd8c940edab471011bd84239cb" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "b575a8b771ac2140c893ce9c8364bbede89cf7a7",
      "changedClazzes" : { }
    },
    "d853a4300bebfecafd5d73a7f8d174cec6dd1867" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "bf318110372968dd8c940edab471011bd84239cb",
      "changedClazzes" : { }
    },
    "01afc9d7d01e802ee3a0d91ff47c75041cff0cfe" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "d853a4300bebfecafd5d73a7f8d174cec6dd1867",
      "changedClazzes" : {
        "org.apache.commons.io.ByteOrderMark#toString" : {
          "testcases" : {
            "org.apache.commons.io.ByteOrderMarkTestCase" : [ "testToString" ],
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testReadWithBOM" ]
          }
        }
      }
    },
    "d4024e163d1cde2c8db1a481abd0c10ef05dabed" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "01afc9d7d01e802ee3a0d91ff47c75041cff0cfe",
      "changedClazzes" : { }
    },
    "784ddb2e02b273db264b250d1b852eccac0f96dc" : {
      "running" : false,
      "jdk" : 8,
      "changedClazzes" : { }
    },
    "823fe4d9ff7b795287ce5c813b1a0e79d4e81c3d" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "d4024e163d1cde2c8db1a481abd0c10ef05dabed",
      "changedClazzes" : { }
    },
    "073bda909983f5a42365728e9a659c6c09464bc1" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "823fe4d9ff7b795287ce5c813b1a0e79d4e81c3d",
      "changedClazzes" : {
        "org.apache.commons.io.input.compatibility.XmlStreamReader" : { },
        "org.apache.commons.io.input.compatibility.XmlStreamReaderException" : { }
      }
    },
    "ac500460cc6de2f84921faaa7c65bbe812cb2fd2" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "073bda909983f5a42365728e9a659c6c09464bc1",
      "changedClazzes" : {
        "org.apache.commons.io.input.XmlStreamReader" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testEncodingAttributeXML", "testHttp", "testRawBom", "testRawNoBom" ]
          }
        }
      }
    },
    "305062404737ecf9a3ff561bca985513cee818ad" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "ac500460cc6de2f84921faaa7c65bbe812cb2fd2",
      "changedClazzes" : {
        "org.apache.commons.io.input.XmlStreamReader" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testEncodingAttributeXML", "testHttp", "testRawBom", "testRawNoBom" ]
          }
        }
      }
    },
    "e4540bba7aebd88d3d4b22e68a6a916ddfc48890" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "305062404737ecf9a3ff561bca985513cee818ad",
      "changedClazzes" : {
        "org.apache.commons.io.input.XmlStreamReader" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testEncodingAttributeXML", "testHttp", "testRawBom", "testRawNoBom" ]
          }
        }
      }
    },
    "7264eea73bc0f9560520ed6c423ff62f18ab4940" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "e4540bba7aebd88d3d4b22e68a6a916ddfc48890",
      "changedClazzes" : {
        "org.apache.commons.io.input.XmlStreamReader" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testEncodingAttributeXML", "testHttp", "testRawBom", "testRawNoBom" ]
          }
        }
      }
    },
    "7b6afbba6b7d568983f6b4481f96e0d1f207eafa" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "7264eea73bc0f9560520ed6c423ff62f18ab4940",
      "changedClazzes" : {
        "org.apache.commons.io.input.XmlStreamReader#calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testEncodingAttributeXML", "testHttp" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReader#calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testHttp", "testRawBom", "testRawNoBom" ]
          }
        }
      }
    },
    "6a5b920a68647879ee26d015d66b0d66ad11c159" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "7b6afbba6b7d568983f6b4481f96e0d1f207eafa",
      "changedClazzes" : {
        "org.apache.commons.io.output.XmlStreamWriter" : {
          "testcases" : {
            "org.apache.commons.io.output.XmlStreamWriterTest" : [ "testDefaultEncoding", "testEBCDICEncoding", "testEUC_JPEncoding", "testEmpty", "testLatin15Encoding", "testLatin1Encoding", "testLatin7Encoding", "testNoXmlHeader", "testUTF16BEEncoding", "testUTF16Encoding", "testUTF16LEEncoding", "testUTF8Encoding" ]
          }
        },
        "org.apache.commons.io.output.XmlStreamWriterTest" : {
          "testcases" : {
            "org.apache.commons.io.output.XmlStreamWriterTest" : [ "testDefaultEncoding", "testEBCDICEncoding", "testEUC_JPEncoding", "testEmpty", "testLatin15Encoding", "testLatin1Encoding", "testLatin7Encoding", "testNoXmlHeader", "testUTF16BEEncoding", "testUTF16Encoding", "testUTF16LEEncoding", "testUTF8Encoding" ]
          }
        }
      }
    },
    "d46782f8408d2ae17f8e05f18080db51ed608b35" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "6a5b920a68647879ee26d015d66b0d66ad11c159",
      "changedClazzes" : {
        "org.apache.commons.io.ByteOrderMark#<init>(java.lang.String,int)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testAppXml", "testCalculateHttpEncoding", "testCalculateRawEncodingAdditonalkUTF16", "testCalculateRawEncodingNoBOM", "testCalculateRawEncodingStandard", "testContentTypeEncoding", "testContentTypeMime", "testTextXml" ]
          }
        },
        "org.apache.commons.io.ByteOrderMark#length" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testCalculateHttpEncoding", "testCalculateRawEncodingAdditonalkUTF16", "testCalculateRawEncodingNoBOM", "testCalculateRawEncodingStandard" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStream#<init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testCalculateHttpEncoding", "testCalculateRawEncodingAdditonalkUTF16", "testCalculateRawEncodingNoBOM", "testCalculateRawEncodingStandard" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStream#getBOM" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testCalculateHttpEncoding", "testCalculateRawEncodingAdditonalkUTF16", "testCalculateRawEncodingNoBOM", "testCalculateRawEncodingStandard" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStream#getBOMCharsetName" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testCalculateHttpEncoding", "testCalculateRawEncodingAdditonalkUTF16", "testCalculateRawEncodingNoBOM", "testCalculateRawEncodingStandard" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStream#read" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testCalculateHttpEncoding", "testCalculateRawEncodingAdditonalkUTF16", "testCalculateRawEncodingNoBOM", "testCalculateRawEncodingStandard" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStream#readFirstBytes" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testCalculateHttpEncoding", "testCalculateRawEncodingAdditonalkUTF16", "testCalculateRawEncodingNoBOM", "testCalculateRawEncodingStandard" ]
          }
        },
        "org.apache.commons.io.input.ProxyInputStream#<init>(java.io.InputStream)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testCalculateHttpEncoding", "testCalculateRawEncodingAdditonalkUTF16", "testCalculateRawEncodingNoBOM", "testCalculateRawEncodingStandard" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReader" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testEncodingAttributeXML", "testHttp", "testRawBom", "testRawNoBom" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReader#<init>(java.io.InputStream,java.lang.String,boolean,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testCalculateHttpEncoding", "testCalculateRawEncodingAdditonalkUTF16", "testCalculateRawEncodingNoBOM", "testCalculateRawEncodingStandard" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReader#calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testCalculateHttpEncoding", "testCalculateRawEncodingAdditonalkUTF16", "testCalculateRawEncodingNoBOM", "testCalculateRawEncodingStandard" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReader#calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testCalculateHttpEncoding", "testCalculateRawEncodingAdditonalkUTF16", "testCalculateRawEncodingNoBOM", "testCalculateRawEncodingStandard" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReader#doHttpStream(java.io.InputStream,java.lang.String,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testCalculateHttpEncoding", "testCalculateRawEncodingAdditonalkUTF16", "testCalculateRawEncodingNoBOM", "testCalculateRawEncodingStandard" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReader#doLenientDetection(java.lang.String,java.io.InputStream,org.apache.commons.io.input.XmlStreamReaderException)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testCalculateHttpEncoding", "testCalculateRawEncodingAdditonalkUTF16", "testCalculateRawEncodingNoBOM", "testCalculateRawEncodingStandard" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReader#getContentTypeEncoding(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testCalculateHttpEncoding", "testCalculateRawEncodingAdditonalkUTF16", "testCalculateRawEncodingNoBOM", "testCalculateRawEncodingStandard", "testContentTypeEncoding" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReader#getContentTypeMime(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testCalculateHttpEncoding", "testCalculateRawEncodingAdditonalkUTF16", "testCalculateRawEncodingNoBOM", "testCalculateRawEncodingStandard", "testContentTypeMime" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReader#getXmlProlog(java.io.InputStream,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testCalculateHttpEncoding", "testCalculateRawEncodingAdditonalkUTF16", "testCalculateRawEncodingNoBOM", "testCalculateRawEncodingStandard" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReader#isAppXml(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testAppXml", "testCalculateHttpEncoding", "testCalculateRawEncodingAdditonalkUTF16", "testCalculateRawEncodingNoBOM", "testCalculateRawEncodingStandard" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReader#isTextXml(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testCalculateHttpEncoding", "testCalculateRawEncodingAdditonalkUTF16", "testCalculateRawEncodingNoBOM", "testCalculateRawEncodingStandard", "testTextXml" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReaderException#<init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testCalculateHttpEncoding", "testCalculateRawEncodingAdditonalkUTF16", "testCalculateRawEncodingNoBOM", "testCalculateRawEncodingStandard" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReaderException#getBomEncoding" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testCalculateHttpEncoding", "testCalculateRawEncodingAdditonalkUTF16", "testCalculateRawEncodingNoBOM", "testCalculateRawEncodingStandard" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReaderException#getContentTypeEncoding" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testCalculateHttpEncoding", "testCalculateRawEncodingAdditonalkUTF16", "testCalculateRawEncodingNoBOM", "testCalculateRawEncodingStandard" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReaderException#getContentTypeMime" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testCalculateHttpEncoding", "testCalculateRawEncodingAdditonalkUTF16", "testCalculateRawEncodingNoBOM", "testCalculateRawEncodingStandard" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReaderException#getXmlEncoding" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testCalculateHttpEncoding", "testCalculateRawEncodingAdditonalkUTF16", "testCalculateRawEncodingNoBOM", "testCalculateRawEncodingStandard" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReaderException#getXmlGuessEncoding" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testCalculateHttpEncoding", "testCalculateRawEncodingAdditonalkUTF16", "testCalculateRawEncodingNoBOM", "testCalculateRawEncodingStandard" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testAppXml", "testCalculateHttpEncoding", "testCalculateRawEncodingAdditonalkUTF16", "testCalculateRawEncodingNoBOM", "testCalculateRawEncodingStandard", "testContentTypeEncoding", "testContentTypeMime", "testTextXml" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest#checkAppXml(boolean,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testAppXml" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest#checkContentTypeEncoding(java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testContentTypeEncoding" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest#checkContentTypeMime(java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testContentTypeMime" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest#checkHttpEncoding(java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testCalculateHttpEncoding" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest#checkHttpError(java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testCalculateHttpEncoding" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest#checkRawEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testCalculateRawEncodingAdditonalkUTF16", "testCalculateRawEncodingNoBOM", "testCalculateRawEncodingStandard" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest#checkRawError(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testCalculateRawEncodingAdditonalkUTF16", "testCalculateRawEncodingNoBOM", "testCalculateRawEncodingStandard" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest#checkTextXml(boolean,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testTextXml" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest#setUp" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testAppXml", "testCalculateHttpEncoding", "testCalculateRawEncodingAdditonalkUTF16", "testCalculateRawEncodingNoBOM", "testCalculateRawEncodingStandard", "testContentTypeEncoding", "testContentTypeMime", "testTextXml" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest#testAppXml" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testAppXml" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest#testCalculateHttpEncoding" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testCalculateHttpEncoding" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest#testCalculateRawEncodingAdditonalkUTF16" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testCalculateRawEncodingAdditonalkUTF16" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest#testCalculateRawEncodingNoBOM" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testCalculateRawEncodingNoBOM" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest#testCalculateRawEncodingStandard" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testCalculateRawEncodingStandard" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest#testContentTypeEncoding" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testContentTypeEncoding" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest#testContentTypeMime" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testContentTypeMime" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest#testTextXml" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testTextXml" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest$MockXmlStreamReader#<init>(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testCalculateHttpEncoding", "testCalculateRawEncodingAdditonalkUTF16", "testCalculateRawEncodingNoBOM", "testCalculateRawEncodingStandard" ]
          }
        }
      }
    },
    "0ac9cccd34c88c2421550cfd30ec7cc2af62e3c3" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "d46782f8408d2ae17f8e05f18080db51ed608b35",
      "changedClazzes" : {
        "org.apache.commons.io.input.XmlStreamReader#calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testHttp", "testRawBom", "testRawNoBom" ],
            "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testCalculateHttpEncoding", "testCalculateRawEncodingAdditonalkUTF16", "testCalculateRawEncodingNoBOM", "testCalculateRawEncodingStandard" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest#testCalculateRawEncodingAdditonalkUTF16" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testCalculateRawEncodingAdditonalkUTF16" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest#testCalculateRawEncodingStandard(java.lang.String,java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testCalculateRawEncodingStandard" ]
          }
        }
      }
    },
    "4edc41ae11f428ac4efce237ba91654ed13fdaf8" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "0ac9cccd34c88c2421550cfd30ec7cc2af62e3c3",
      "changedClazzes" : { }
    },
    "1f37a65bf704e25a0d6b0642ab8b2e74647b18c7" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "4edc41ae11f428ac4efce237ba91654ed13fdaf8",
      "changedClazzes" : {
        "org.apache.commons.io.input.XmlStreamReaderTest#getXmlStream(java.lang.String,java.lang.String,java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testHttp", "testRawBom", "testRawNoBom" ]
          }
        }
      }
    },
    "3fb12de7946abf01216f303bd97e1ec051a65d2e" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "1f37a65bf704e25a0d6b0642ab8b2e74647b18c7",
      "changedClazzes" : {
        "org.apache.commons.io.input.XmlStreamReader" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testEncodingAttributeXML", "testHttp", "testRawBom", "testRawNoBom" ],
            "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testAppXml", "testCalculateHttpEncoding", "testCalculateRawEncodingAdditonalkUTF16", "testCalculateRawEncodingNoBOM", "testCalculateRawEncodingStandard", "testContentTypeEncoding", "testContentTypeMime", "testTextXml" ]
          }
        }
      }
    },
    "c388d20a4b41438628c91bb47497753cc21d1af5" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "3fb12de7946abf01216f303bd97e1ec051a65d2e",
      "changedClazzes" : {
        "org.apache.commons.io.input.compatibility.XmlStreamReader" : { }
      }
    },
    "389eebcb50481ac5cb120688175eb946ae295629" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "c388d20a4b41438628c91bb47497753cc21d1af5",
      "changedClazzes" : {
        "org.apache.commons.io.input.compatibility.XmlStreamReader#calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String,java.io.InputStream)" : { }
      }
    },
    "3777327db78077f50f7e7488298588c90c6589de" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "389eebcb50481ac5cb120688175eb946ae295629",
      "changedClazzes" : {
        "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testAppXml" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest$MockXmlStreamReader" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ ]
          }
        },
        "org.apache.commons.io.input.compatibility.XmlStreamReaderException" : { },
        "org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest" : { }
      }
    },
    "8a1529917f7aa5604fbdaa689b086c04848779af" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "3777327db78077f50f7e7488298588c90c6589de",
      "changedClazzes" : {
        "org.apache.commons.io.input.XmlStreamReader" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testEncodingAttributeXML", "testHttp", "testRawBom", "testRawNoBom" ],
            "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testAppXml" ]
          }
        }
      }
    },
    "447d9982998a63275e78048a1beb081bb50b3536" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "8a1529917f7aa5604fbdaa689b086c04848779af",
      "changedClazzes" : {
        "org.apache.commons.io.input.XmlStreamReader" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testEncodingAttributeXML", "testHttp", "testRawBom", "testRawNoBom" ],
            "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testAppXml" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReaderTest#_testAlternateDefaultEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testHttp" ]
          }
        }
      }
    },
    "621a3b44fe7971f2362dc8ae48387c48b94fa131" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "447d9982998a63275e78048a1beb081bb50b3536",
      "changedClazzes" : {
        "org.apache.commons.io.input.XmlStreamReaderTest#_testAlternateDefaultEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testHttp" ]
          }
        }
      }
    },
    "4b7b166727ea45b2c6edaf77bdc056d3da6350a2" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "621a3b44fe7971f2362dc8ae48387c48b94fa131",
      "changedClazzes" : {
        "org.apache.commons.io.input.XmlStreamReaderTest#_testAlternateDefaultEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testHttp" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReaderTest#_testHttpValid(java.lang.String,java.lang.String,java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testHttp" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReaderTest#testHttp" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testHttp" ]
          }
        }
      }
    },
    "ec9c918889a17312effbd8b555489103da1df04e" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "4b7b166727ea45b2c6edaf77bdc056d3da6350a2",
      "changedClazzes" : {
        "org.apache.commons.io.input.XmlStreamReader#doLenientDetection(java.lang.String,java.io.InputStream,org.apache.commons.io.input.XmlStreamReaderException)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testEncodingAttributeXML", "testHttp" ]
          }
        }
      }
    },
    "294c570fcae9ca62e3157a9e7b8293a08e68dae2" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "ec9c918889a17312effbd8b555489103da1df04e",
      "changedClazzes" : {
        "org.apache.commons.io.input.XmlStreamReader" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testEncodingAttributeXML", "testHttp", "testRawBom", "testRawNoBom" ],
            "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testAppXml" ]
          }
        }
      }
    },
    "ede1a5e2ca688af0e4bc83ba1aa47acc6d827cfc" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "294c570fcae9ca62e3157a9e7b8293a08e68dae2",
      "changedClazzes" : {
        "org.apache.commons.io.input.XmlStreamReader" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testEncodingAttributeXML", "testHttp", "testRawBom", "testRawNoBom" ],
            "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testAppXml" ]
          }
        }
      }
    },
    "ca59df82b6c947868938b88334aa88d245a35817" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "ede1a5e2ca688af0e4bc83ba1aa47acc6d827cfc",
      "changedClazzes" : { }
    },
    "06270b963eb6fb9ae1b6c9635e83ae4177d712a7" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "ca59df82b6c947868938b88334aa88d245a35817",
      "changedClazzes" : { }
    },
    "f634622b0e963bf591b1f606d154ff558cdacc36" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "06270b963eb6fb9ae1b6c9635e83ae4177d712a7",
      "changedClazzes" : { }
    },
    "4a60ccc9ac2d254adafb266faad7939817aba641" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "f634622b0e963bf591b1f606d154ff558cdacc36",
      "changedClazzes" : { }
    },
    "a9729401eb69e3e3a30a552974ef4a1c4d9c7cd2" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "4a60ccc9ac2d254adafb266faad7939817aba641",
      "changedClazzes" : { }
    },
    "3f124c68426718bd5870a85930fd075c151ccb33" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "a9729401eb69e3e3a30a552974ef4a1c4d9c7cd2",
      "changedClazzes" : {
        "org.apache.commons.io.FileCleaningTracker$Reaper#run" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2" ]
          }
        },
        "org.apache.commons.io.FileCleaningTrackerTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerFile", "testFileCleanerNull" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerFile", "testFileCleanerNull" ]
          }
        }
      }
    },
    "f11021dca612e6bc4e9963248c0927225299a857" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "3f124c68426718bd5870a85930fd075c151ccb33",
      "changedClazzes" : {
        "org.apache.commons.io.monitor.FilesystemEntry" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemObserver#createFileEntry(org.apache.commons.io.monitor.FilesystemEntry,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemObserver#doMatch(org.apache.commons.io.monitor.FilesystemEntry,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemObserver#initialize" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemObserverTestCase" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        }
      }
    },
    "6c289ff54d3caf4940063b57223d03b272ab5333" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "f11021dca612e6bc4e9963248c0927225299a857",
      "changedClazzes" : {
        "org.apache.commons.io.monitor.FilesystemObserver" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        }
      }
    },
    "c92f4ac0a572b70ac760612525ebb59de696431f" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "6c289ff54d3caf4940063b57223d03b272ab5333",
      "changedClazzes" : {
        "org.apache.commons.io.monitor.FilesystemEntry" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemObserver#doMatch(org.apache.commons.io.monitor.FilesystemEntry,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        }
      }
    },
    "073ee87731292eb74b9df83acaf88fc2673bc86e" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "c92f4ac0a572b70ac760612525ebb59de696431f",
      "changedClazzes" : { }
    },
    "ec8a3410e55e7fcc45102451c439cc86383524d3" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "073ee87731292eb74b9df83acaf88fc2673bc86e",
      "changedClazzes" : {
        "org.apache.commons.io.FileCleaningTracker" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerFile", "testFileCleanerNull" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerFile", "testFileCleanerNull" ]
          }
        },
        "org.apache.commons.io.FileCleaningTracker$Reaper" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerFile" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerFile" ]
          }
        },
        "org.apache.commons.io.FileCleaningTracker$Tracker" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerFile" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerFile" ]
          }
        },
        "org.apache.commons.io.FileCleaningTrackerTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerFile", "testFileCleanerNull" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerFile", "testFileCleanerNull" ]
          }
        }
      }
    },
    "f6c8dcc99db1929435fd8bb05dc0cf77e956e6e6" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "ec8a3410e55e7fcc45102451c439cc86383524d3",
      "changedClazzes" : {
        "org.apache.commons.io.input.Tailer#run" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testStopWithNoFile", "testStopWithNoFileUsingExecutor", "testTailer" ]
          }
        },
        "org.apache.commons.io.input.TailerTest" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testStopWithNoFile", "testStopWithNoFileUsingExecutor", "testTailer" ]
          }
        }
      }
    },
    "011e77539e7f0821c11ecac37d237a228f4aefa6" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "f6c8dcc99db1929435fd8bb05dc0cf77e956e6e6",
      "changedClazzes" : {
        "org.apache.commons.io.input.TailerTest" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testStopWithNoFile", "testStopWithNoFileUsingExecutor", "testTailer" ]
          }
        },
        "org.apache.commons.io.input.TailerTest$TestTailerListener" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testStopWithNoFile", "testStopWithNoFileUsingExecutor", "testTailer" ]
          }
        }
      }
    },
    "25362de1c6f5f8680707826067414d29604b9add" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "011e77539e7f0821c11ecac37d237a228f4aefa6",
      "changedClazzes" : {
        "org.apache.commons.io.monitor.FileSystemMonitorTestCase#touch(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        }
      }
    },
    "26e295fcbe53496e0cf2f60d56bacab5cbcd87de" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "25362de1c6f5f8680707826067414d29604b9add",
      "changedClazzes" : {
        "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemObserverTestCase" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        }
      }
    },
    "aba6c1bc1684e9e837c72584084dace6ca5865d1" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "26e295fcbe53496e0cf2f60d56bacab5cbcd87de",
      "changedClazzes" : {
        "org.apache.commons.io.monitor.AbstractMonitorTestCase" : { },
        "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemObserverTestCase" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        }
      }
    },
    "624ad8570111e173dcad14505f3539741394c506" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "aba6c1bc1684e9e837c72584084dace6ca5865d1",
      "changedClazzes" : {
        "org.apache.commons.io.monitor.AbstractMonitorTestCase#touch(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FileSystemMonitorTestCase#checkFile(java.lang.String,java.io.File,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        }
      }
    },
    "c17956b11812f6e3825af5142dbceb397e5ba5b0" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "624ad8570111e173dcad14505f3539741394c506",
      "changedClazzes" : {
        "org.apache.commons.io.monitor.AbstractMonitorTestCase" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FileSystemMonitorTestCase#setUp" : { },
        "org.apache.commons.io.monitor.FileSystemMonitorTestCase#tearDown" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.FilesystemObserverTestCase" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        }
      }
    },
    "cef880c4c87d15e223dbf09f6dadd95305cf83d4" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "c17956b11812f6e3825af5142dbceb397e5ba5b0",
      "changedClazzes" : {
        "org.apache.commons.io.FileCleaningTrackerTestCase#showFailures" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory_ForceStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerFile" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory_ForceStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerFile" ]
          }
        },
        "org.apache.commons.io.FileCleaningTrackerTestCase#waitUntilTrackCount" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerFile" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerFile" ]
          }
        }
      }
    },
    "c681da4a8412669e8ce1d8793b8b1443df1d4d61" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "cef880c4c87d15e223dbf09f6dadd95305cf83d4",
      "changedClazzes" : {
        "org.apache.commons.io.FileCleaningTrackerTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerFile", "testFileCleanerNull" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerFile", "testFileCleanerNull" ]
          }
        }
      }
    },
    "53615435dbb357c140a5eb6a15f7a1c10a434458" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "c681da4a8412669e8ce1d8793b8b1443df1d4d61",
      "changedClazzes" : {
        "org.apache.commons.io.FileCleaningTrackerTestCase#waitUntilTrackCount" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerFile" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerFile" ]
          }
        }
      }
    },
    "069578098a65a05069e77e6d5292759900bb422b" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "53615435dbb357c140a5eb6a15f7a1c10a434458",
      "changedClazzes" : {
        "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ]
          }
        }
      }
    },
    "174d05d977705af532733c2464ecb994da0d2145" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "069578098a65a05069e77e6d5292759900bb422b",
      "changedClazzes" : { }
    },
    "29f32c7bc5b96669a97c6c2446d0f3f284a3db53" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "174d05d977705af532733c2464ecb994da0d2145",
      "changedClazzes" : {
        "org.apache.commons.io.input.TailerTest" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testStopWithNoFile", "testStopWithNoFileUsingExecutor", "testTailer" ]
          }
        },
        "org.apache.commons.io.input.TailerTest$TestTailerListener" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testStopWithNoFile", "testStopWithNoFileUsingExecutor", "testTailer" ]
          }
        },
        "org.apache.commons.io.output.FileWriterWithEncodingTest" : {
          "testcases" : {
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testConstructor_fileName_nullFile", "testDifferentEncoding", "testSameEncoding" ]
          }
        }
      }
    },
    "9a9ab90365b6244bbb2053080652f65eaf9bc6c4" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "29f32c7bc5b96669a97c6c2446d0f3f284a3db53",
      "changedClazzes" : { }
    },
    "f04a6d47557933a7fb855c1646c350c856def37d" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "9a9ab90365b6244bbb2053080652f65eaf9bc6c4",
      "changedClazzes" : {
        "org.apache.commons.io.ByteOrderMark#<init>(java.lang.String,int)" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testGetBOMFirstThenReadInclude" ]
          }
        },
        "org.apache.commons.io.ByteOrderMark#equals(java.lang.Object)" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testGetBOMFirstThenReadInclude" ]
          }
        },
        "org.apache.commons.io.ByteOrderMark#get(int)" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testGetBOMFirstThenReadInclude" ]
          }
        },
        "org.apache.commons.io.ByteOrderMark#length" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testGetBOMFirstThenReadInclude" ]
          }
        },
        "org.apache.commons.io.comparator.ReverseComparator" : {
          "testcases" : {
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorArrayNull", "testConstructorIterable", "testConstructorIterableNull" ],
            "org.apache.commons.io.comparator.DirectoryFileComparatorTest" : [ "testSortArray", "testSortList" ],
            "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.NameFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.PathFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ],
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStream#<init>(java.io.InputStream,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testGetBOMFirstThenReadInclude" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStream#find" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testGetBOMFirstThenReadInclude" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStream#getBOM" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testGetBOMFirstThenReadInclude" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStream#hasBOM" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testGetBOMFirstThenReadInclude" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStream#matches(org.apache.commons.io.ByteOrderMark)" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testGetBOMFirstThenReadInclude" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStream#read" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testGetBOMFirstThenReadInclude" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStream#readFirstBytes" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testGetBOMFirstThenReadInclude" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testAvailableWithBOM", "testAvailableWithoutBOM", "testClose", "testGetBOMFirstThenRead", "testGetBOMFirstThenReadInclude", "testLargeBufferWithBOM", "testLargeBufferWithoutBOM", "testLeadingNonBOMBufferedRead", "testLeadingNonBOMSingleRead", "testMarkResetAfterReadWithBOM", "testMarkResetAfterReadWithoutBOM", "testMarkResetBeforeReadWithBOM", "testMarkResetBeforeReadWithoutBOM", "testNoBoms", "testReadEmpty", "testReadSmall", "testReadWithBOM", "testReadWithBOMInclude", "testReadWithMultipleBOM", "testReadWithoutBOM", "testSkipWithBOM", "testSkipWithoutBOM", "testSmallBufferWithBOM", "testSmallBufferWithoutBOM", "testSupportCode" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#createDataStream(byte[],boolean)" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testGetBOMFirstThenReadInclude" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#testGetBOMFirstThenReadInclude" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testGetBOMFirstThenReadInclude" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest$ExpectCloseInputStream" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testClose" ]
          }
        },
        "org.apache.commons.io.input.ProxyInputStream#<init>(java.io.InputStream)" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testGetBOMFirstThenReadInclude" ]
          }
        },
        "org.apache.commons.io.input.TaggedInputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.input.TaggedInputStreamTest" : [ "testBrokenStream", "testEmptyStream", "testNormalStream", "testOtherException" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReader" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testEncodingAttributeXML", "testHttp", "testRawBom", "testRawNoBom" ],
            "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testAppXml" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReaderTest" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testEncodingAttributeXML", "testHttp", "testRawBom", "testRawNoBom" ]
          }
        },
        "org.apache.commons.io.input.compatibility.XmlStreamReader" : { },
        "org.apache.commons.io.monitor.AbstractMonitorTestCase" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileSystemMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FilesystemObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.output.TaggedOutputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.output.TaggedOutputStreamTest" : [ "testBrokenStream", "testNormalStream", "testOtherException" ]
          }
        }
      }
    },
    "2ee073f3eb5da25c88e184ea78581b297f168a06" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "f04a6d47557933a7fb855c1646c350c856def37d",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils#cleanDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.FileUtils#deleteDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.FileUtils#deleteQuietly(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testFileDelete", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.FileUtils#forceDelete(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.FileUtils#isSymlink(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.FileUtils#openOutputStream(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.FileUtils#touch(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#isSystemWindows" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.IOCase#<init>(java.lang.String,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.IOCase#checkCompareTo(java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.IOCase#checkEndsWith(java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate" ]
          }
        },
        "org.apache.commons.io.IOCase#checkEquals(java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.IOUtils#closeQuietly(java.io.Closeable)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.comparator.AbstractFileComparator#<init>" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.comparator.NameFileComparator#<init>" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.comparator.NameFileComparator#compare(java.io.File,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.comparator.ReverseComparator#<init>(java.util.Comparator)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.AbstractFileFilter#<init>" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.AndFileFilter#<init>(java.util.List)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.AndFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate" ]
          }
        },
        "org.apache.commons.io.filefilter.DirectoryFileFilter#<init>" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.DirectoryFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFileFilter#<init>" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#and(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#directoryFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#fileFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#nameFileFilter(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#notFileFilter(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#or(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#suffixFileFilter(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#toList(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.HiddenFileFilter#<init>" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.HiddenFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate" ]
          }
        },
        "org.apache.commons.io.filefilter.NameFileFilter#<init>(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.NameFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.NotFileFilter#<init>(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.NotFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate" ]
          }
        },
        "org.apache.commons.io.filefilter.OrFileFilter#<init>(java.util.List)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.OrFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate" ]
          }
        },
        "org.apache.commons.io.filefilter.SuffixFileFilter#<init>(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.SuffixFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate" ]
          }
        },
        "org.apache.commons.io.monitor.AbstractMonitorTestCase#checkCollectionSizes(java.lang.String,int,int,int,int,int,int)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.AbstractMonitorTestCase#checkCollectionsEmpty(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.AbstractMonitorTestCase#createObserver(java.io.File,java.io.FileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.AbstractMonitorTestCase#setUp" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.AbstractMonitorTestCase#sleepHandleInterruped(long)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.AbstractMonitorTestCase#tearDown" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.AbstractMonitorTestCase#touch(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFileListener" : { },
        "org.apache.commons.io.monitor.CollectionFileListener#<init>(boolean)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFileListener#clear" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFileListener#getChangedDirectories" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFileListener#getChangedFiles" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFileListener#getCreatedDirectories" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFileListener#getCreatedFiles" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFileListener#getDeletedDirectories" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFileListener#getDeletedFiles" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFileListener#onDirectoryChange(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testFileCreate", "testFileDelete", "testFileUpdate" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFileListener#onDirectoryCreate(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFileListener#onDirectoryDelete(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFileListener#onFileChange(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFileListener#onFileCreate(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFileListener#onFileDelete(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileDelete", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFileListener#onStart(org.apache.commons.io.monitor.FileObserver)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFileListener#onStop(org.apache.commons.io.monitor.FileObserver)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FileEntry" : { },
        "org.apache.commons.io.monitor.FileEntry#<init>(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FileEntry#getChildren" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FileEntry#getFile" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FileEntry#isDirectory" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FileEntry#isExists" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory" ]
          }
        },
        "org.apache.commons.io.monitor.FileEntry#newChildInstance(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FileEntry#refresh(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FileEntry#setChildren(org.apache.commons.io.monitor.FileEntry[])" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FileListener" : { },
        "org.apache.commons.io.monitor.FileListenerAdaptor" : { },
        "org.apache.commons.io.monitor.FileMonitor" : { },
        "org.apache.commons.io.monitor.FileMonitor#<init>(long)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.FileMonitor#addObserver(org.apache.commons.io.monitor.FileObserver)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.FileMonitor#run" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.FileMonitor#start" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.FileMonitor#stop" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.FileMonitorTestCase" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.FileMonitorTestCase#checkFile(java.lang.String,java.io.File,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.FileMonitorTestCase#setUp" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.FileMonitorTestCase#testMonitor" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.FileObserver" : { },
        "org.apache.commons.io.monitor.FileObserver#<init>(java.io.File,java.io.FileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FileObserver#addListener(org.apache.commons.io.monitor.FileListener)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FileObserver#checkAndNotify" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FileObserver#createFileEntry(org.apache.commons.io.monitor.FileEntry,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FileObserver#destroy" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.FileObserver#doCreate(org.apache.commons.io.monitor.FileEntry)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FileObserver#doDelete(org.apache.commons.io.monitor.FileEntry)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileDelete", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FileObserver#doMatch(org.apache.commons.io.monitor.FileEntry,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FileObserver#initialize" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FileObserver#listFiles(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FileObserverTestCase" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FileObserverTestCase#checkAndNotify" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FileObserverTestCase#setUp" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FileObserverTestCase#testDirectory" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory" ]
          }
        },
        "org.apache.commons.io.monitor.FileObserverTestCase#testFileCreate" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testFileCreate" ]
          }
        },
        "org.apache.commons.io.monitor.FileObserverTestCase#testFileDelete" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testFileDelete" ]
          }
        },
        "org.apache.commons.io.monitor.FileObserverTestCase#testFileUpdate" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testFileUpdate" ]
          }
        },
        "org.apache.commons.io.monitor.FileObserverTestCase#testObserveSingleFile" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#<init>(int)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#close" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#toString" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#write(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        }
      }
    },
    "8698ec2d5196d160c6a888e4346d2790e669f123" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "2ee073f3eb5da25c88e184ea78581b297f168a06",
      "changedClazzes" : {
        "org.apache.commons.io.CopyUtils#<init>" : {
          "testcases" : {
            "org.apache.commons.io.CopyUtilsTest" : [ "testCtor" ]
          }
        },
        "org.apache.commons.io.CopyUtils#copy(byte[],java.io.Writer,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.CopyUtilsTest" : [ "testCopy_byteArrayToWriterWithEncoding", "testCopy_inputStreamToWriterWithEncoding" ]
          }
        },
        "org.apache.commons.io.CopyUtilsTest" : {
          "testcases" : {
            "org.apache.commons.io.CopyUtilsTest" : [ "testCopy_byteArrayToOutputStream", "testCopy_byteArrayToWriter", "testCopy_byteArrayToWriterWithEncoding", "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToWriter", "testCopy_inputStreamToWriterWithEncoding", "testCopy_readerToOutputStream", "testCopy_readerToWriter", "testCopy_stringToOutputStream", "testCopy_stringToWriter", "testCtor" ]
          }
        },
        "org.apache.commons.io.CopyUtilsTest#setUp" : {
          "testcases" : {
            "org.apache.commons.io.CopyUtilsTest" : [ "testCopy_byteArrayToWriterWithEncoding", "testCopy_inputStreamToWriterWithEncoding", "testCtor" ]
          }
        },
        "org.apache.commons.io.CopyUtilsTest#tearDown" : {
          "testcases" : {
            "org.apache.commons.io.CopyUtilsTest" : [ "testCopy_byteArrayToWriterWithEncoding", "testCopy_inputStreamToWriterWithEncoding", "testCtor" ]
          }
        },
        "org.apache.commons.io.CopyUtilsTest#testCopy_byteArrayToWriterWithEncoding" : {
          "testcases" : {
            "org.apache.commons.io.CopyUtilsTest" : [ "testCopy_byteArrayToWriterWithEncoding" ]
          }
        },
        "org.apache.commons.io.CopyUtilsTest#testCopy_inputStreamToWriterWithEncoding" : {
          "testcases" : {
            "org.apache.commons.io.CopyUtilsTest" : [ "testCopy_inputStreamToWriterWithEncoding" ]
          }
        },
        "org.apache.commons.io.CopyUtilsTest#testCtor" : {
          "testcases" : {
            "org.apache.commons.io.CopyUtilsTest" : [ "testCtor" ]
          }
        }
      }
    },
    "6a60c3a6f28353068dfb21267c0f6048b55f6c13" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "8698ec2d5196d160c6a888e4346d2790e669f123",
      "changedClazzes" : {
        "org.apache.commons.io.EndianUtils#<init>" : {
          "testcases" : {
            "org.apache.commons.io.EndianUtilsTest" : [ "testCtor" ]
          }
        },
        "org.apache.commons.io.EndianUtils#read(java.io.InputStream)" : {
          "testcases" : {
            "org.apache.commons.io.EndianUtilsTest" : [ "testEOFException" ]
          }
        },
        "org.apache.commons.io.EndianUtils#readSwappedDouble(java.io.InputStream)" : {
          "testcases" : {
            "org.apache.commons.io.EndianUtilsTest" : [ "testEOFException" ]
          }
        },
        "org.apache.commons.io.EndianUtils#readSwappedLong(java.io.InputStream)" : {
          "testcases" : {
            "org.apache.commons.io.EndianUtilsTest" : [ "testEOFException" ]
          }
        },
        "org.apache.commons.io.EndianUtilsTest" : {
          "testcases" : {
            "org.apache.commons.io.EndianUtilsTest" : [ "testCtor", "testEOFException", "testReadSwappedDouble", "testReadSwappedFloat", "testReadSwappedInteger", "testReadSwappedLong", "testReadSwappedShort", "testReadSwappedUnsignedInteger", "testReadSwappedUnsignedShort", "testSwapDouble", "testSwapFloat", "testSwapInteger", "testSwapLong", "testSwapShort", "testSymmetry", "testSymmetryOfLong", "testUnsignedOverrun", "testWriteSwappedDouble", "testWriteSwappedFloat", "testWriteSwappedInteger", "testWriteSwappedLong", "testWriteSwappedShort" ]
          }
        },
        "org.apache.commons.io.EndianUtilsTest#testCtor" : {
          "testcases" : {
            "org.apache.commons.io.EndianUtilsTest" : [ "testCtor" ]
          }
        },
        "org.apache.commons.io.EndianUtilsTest#testEOFException" : {
          "testcases" : {
            "org.apache.commons.io.EndianUtilsTest" : [ "testEOFException" ]
          }
        }
      }
    },
    "9a1f3f7593406baba3a7fb5a01b2f3b622d53931" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "6a60c3a6f28353068dfb21267c0f6048b55f6c13",
      "changedClazzes" : { }
    },
    "f2c7194deeaf66ef3c83e24cb3a13236efe68261" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "9a1f3f7593406baba3a7fb5a01b2f3b622d53931",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils#cleanDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.FileUtils#deleteDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.FileUtils#deleteQuietly(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testFileDelete", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.FileUtils#forceDelete(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.FileUtils#isSymlink(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.FileUtils#openOutputStream(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.FileUtils#touch(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#isSystemWindows" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.IOCase#<init>(java.lang.String,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.IOCase#checkCompareTo(java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.IOCase#checkEndsWith(java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate" ]
          }
        },
        "org.apache.commons.io.IOCase#checkEquals(java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.IOUtils#closeQuietly(java.io.Closeable)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.comparator.AbstractFileComparator#<init>" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.comparator.NameFileComparator#<init>" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.comparator.NameFileComparator#compare(java.io.File,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.comparator.ReverseComparator#<init>(java.util.Comparator)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.AbstractFileFilter#<init>" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.AndFileFilter#<init>(java.util.List)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.AndFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate" ]
          }
        },
        "org.apache.commons.io.filefilter.DirectoryFileFilter#<init>" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.DirectoryFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFileFilter#<init>" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#and(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#directoryFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#fileFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#nameFileFilter(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#notFileFilter(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#or(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#suffixFileFilter(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#toList(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.HiddenFileFilter#<init>" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.HiddenFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate" ]
          }
        },
        "org.apache.commons.io.filefilter.NameFileFilter#<init>(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.NameFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.NotFileFilter#<init>(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.NotFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate" ]
          }
        },
        "org.apache.commons.io.filefilter.OrFileFilter#<init>(java.util.List)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.OrFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate" ]
          }
        },
        "org.apache.commons.io.filefilter.SuffixFileFilter#<init>(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.filefilter.SuffixFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate" ]
          }
        },
        "org.apache.commons.io.monitor.AbstractMonitorTestCase#checkCollectionSizes(java.lang.String,int,int,int,int,int,int)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.AbstractMonitorTestCase#checkCollectionsEmpty(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.AbstractMonitorTestCase#createObserver(java.io.File,java.io.FileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.AbstractMonitorTestCase#setUp" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.AbstractMonitorTestCase#sleepHandleInterruped(long)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.AbstractMonitorTestCase#tearDown" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.AbstractMonitorTestCase#touch(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFileListener#<init>(boolean)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFileListener#clear" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFileListener#getChangedDirectories" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFileListener#getChangedFiles" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFileListener#getCreatedDirectories" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFileListener#getCreatedFiles" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFileListener#getDeletedDirectories" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFileListener#getDeletedFiles" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFileListener#onDirectoryChange(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testFileCreate", "testFileDelete", "testFileUpdate" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFileListener#onDirectoryCreate(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFileListener#onDirectoryDelete(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFileListener#onFileChange(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFileListener#onFileCreate(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFileListener#onFileDelete(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileDelete", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFileListener#onStart(org.apache.commons.io.monitor.FileAlterationObserver)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFileListener#onStop(org.apache.commons.io.monitor.FileAlterationObserver)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationListener" : { },
        "org.apache.commons.io.monitor.FileAlterationListenerAdaptor" : { },
        "org.apache.commons.io.monitor.FileAlterationMonitor" : { },
        "org.apache.commons.io.monitor.FileAlterationMonitor#<init>(long)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationMonitor#addObserver(org.apache.commons.io.monitor.FileAlterationObserver)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationMonitor#run" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationMonitor#start" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationMonitor#stop" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationMonitorTestCase#checkFile(java.lang.String,java.io.File,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationMonitorTestCase#setUp" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationMonitorTestCase#testMonitor" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationObserver" : { },
        "org.apache.commons.io.monitor.FileAlterationObserver#<init>(java.io.File,java.io.FileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationObserver#addListener(org.apache.commons.io.monitor.FileAlterationListener)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationObserver#checkAndNotify" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationObserver#createFileEntry(org.apache.commons.io.monitor.FileEntry,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationObserver#destroy" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationObserver#doCreate(org.apache.commons.io.monitor.FileEntry)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationObserver#doDelete(org.apache.commons.io.monitor.FileEntry)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileDelete", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationObserver#doMatch(org.apache.commons.io.monitor.FileEntry,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationObserver#initialize" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationObserver#listFiles(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationObserverTestCase#checkAndNotify" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationObserverTestCase#setUp" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationObserverTestCase#testDirectory" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationObserverTestCase#testFileCreate" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testFileCreate" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationObserverTestCase#testFileDelete" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testFileDelete" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationObserverTestCase#testFileUpdate" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testFileUpdate" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationObserverTestCase#testObserveSingleFile" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FileEntry#<init>(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FileEntry#getChildren" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FileEntry#getFile" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FileEntry#isDirectory" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FileEntry#isExists" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory" ]
          }
        },
        "org.apache.commons.io.monitor.FileEntry#newChildInstance(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FileEntry#refresh(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FileEntry#setChildren(org.apache.commons.io.monitor.FileEntry[])" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#<init>(int)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#close" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#toString" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#write(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        }
      }
    },
    "5bb5a5e588ef0c2c52f517210df79bf7f5e91708" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "f2c7194deeaf66ef3c83e24cb3a13236efe68261",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils#cleanDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testFilteringBufferedReader", "testFilteringFileReader" ]
          }
        },
        "org.apache.commons.io.FileUtils#deleteDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testFilteringBufferedReader", "testFilteringFileReader" ]
          }
        },
        "org.apache.commons.io.FileUtils#forceDelete(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testFilteringBufferedReader", "testFilteringFileReader" ]
          }
        },
        "org.apache.commons.io.FileUtils#isSymlink(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testFilteringBufferedReader", "testFilteringFileReader" ]
          }
        },
        "org.apache.commons.io.FileUtils#openOutputStream(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testFilteringBufferedReader", "testFilteringFileReader" ]
          }
        },
        "org.apache.commons.io.FileUtils#writeLines(java.io.File,java.lang.String,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testFilteringBufferedReader", "testFilteringFileReader" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#isSystemWindows" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testFilteringBufferedReader", "testFilteringFileReader" ]
          }
        },
        "org.apache.commons.io.IOUtils#closeQuietly(java.io.Closeable)" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testFilteringBufferedReader", "testFilteringFileReader" ]
          }
        },
        "org.apache.commons.io.IOUtils#writeLines(java.util.Collection,java.lang.String,java.io.OutputStream,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testFilteringBufferedReader", "testFilteringFileReader" ]
          }
        },
        "org.apache.commons.io.LineIterator#<init>(java.io.Reader)" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testFilteringBufferedReader", "testFilteringFileReader" ]
          }
        },
        "org.apache.commons.io.LineIterator#close" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testFilteringBufferedReader", "testFilteringFileReader" ]
          }
        },
        "org.apache.commons.io.LineIterator#closeQuietly(org.apache.commons.io.LineIterator)" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testFilteringBufferedReader", "testFilteringFileReader" ]
          }
        },
        "org.apache.commons.io.LineIterator#hasNext" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testFilteringBufferedReader", "testFilteringFileReader" ]
          }
        },
        "org.apache.commons.io.LineIterator#next" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testFilteringBufferedReader", "testFilteringFileReader" ]
          }
        },
        "org.apache.commons.io.LineIterator#nextLine" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testFilteringBufferedReader", "testFilteringFileReader" ]
          }
        },
        "org.apache.commons.io.LineIterator#remove" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testFilteringBufferedReader", "testFilteringFileReader" ]
          }
        },
        "org.apache.commons.io.LineIteratorTestCase" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFilteringBufferedReader", "testFilteringFileReader", "testInvalidEncoding", "testMissingFile", "testNextLineOnly", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ]
          }
        },
        "org.apache.commons.io.LineIteratorTestCase#createFile(java.io.File,java.lang.String,int)" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testFilteringBufferedReader", "testFilteringFileReader" ]
          }
        },
        "org.apache.commons.io.LineIteratorTestCase#setUp" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testFilteringBufferedReader", "testFilteringFileReader" ]
          }
        },
        "org.apache.commons.io.LineIteratorTestCase#tearDown" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testFilteringBufferedReader", "testFilteringFileReader" ]
          }
        },
        "org.apache.commons.io.LineIteratorTestCase#testFiltering(java.util.List,java.io.Reader)" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testFilteringBufferedReader", "testFilteringFileReader" ]
          }
        },
        "org.apache.commons.io.LineIteratorTestCase#testFilteringBufferedReader" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testFilteringBufferedReader" ]
          }
        },
        "org.apache.commons.io.LineIteratorTestCase#testFilteringFileReader" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testFilteringFileReader" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#<init>(int)" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testFilteringBufferedReader", "testFilteringFileReader" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#close" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testFilteringBufferedReader", "testFilteringFileReader" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#toString" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testFilteringBufferedReader", "testFilteringFileReader" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#write(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testFilteringBufferedReader", "testFilteringFileReader" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#getTestDirectory" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testFilteringBufferedReader", "testFilteringFileReader" ]
          }
        }
      }
    },
    "709de522737d7d97118560416aad2d4f69a8720d" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "5bb5a5e588ef0c2c52f517210df79bf7f5e91708",
      "changedClazzes" : {
        "org.apache.commons.io.LineIteratorTestCase" : { }
      }
    },
    "9ec6f62abcf0283ec4d64c85f35e25c7252c0e23" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "709de522737d7d97118560416aad2d4f69a8720d",
      "changedClazzes" : {
        "org.apache.commons.io.LineIterator#hasNext" : { }
      }
    },
    "e07acbbff9fa0706298401441a123a01da112cc7" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "9ec6f62abcf0283ec4d64c85f35e25c7252c0e23",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtilsTestCase" : { },
        "org.apache.commons.io.FileUtilsTestCase$ListDirectoryWalker" : { }
      }
    },
    "f06d54344383a8b1a2d9ad2c7400259b5da11ce7" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "e07acbbff9fa0706298401441a123a01da112cc7",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils#cleanDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFilteringBufferedReader", "testFilteringFileReader", "testInvalidEncoding", "testMissingFile", "testNextLineOnly", "testNextOnly", "testNextWithException", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ]
          }
        },
        "org.apache.commons.io.FileUtils#deleteDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFilteringBufferedReader", "testFilteringFileReader", "testInvalidEncoding", "testMissingFile", "testNextLineOnly", "testNextOnly", "testNextWithException", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ]
          }
        },
        "org.apache.commons.io.FileUtils#forceDelete(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testFilteringBufferedReader", "testFilteringFileReader", "testInvalidEncoding", "testNextLineOnly", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ]
          }
        },
        "org.apache.commons.io.FileUtils#isSymlink(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFilteringBufferedReader", "testFilteringFileReader", "testInvalidEncoding", "testMissingFile", "testNextLineOnly", "testNextOnly", "testNextWithException", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ]
          }
        },
        "org.apache.commons.io.FileUtils#lineIterator(java.io.File,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testInvalidEncoding", "testMissingFile", "testNextLineOnly", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ]
          }
        },
        "org.apache.commons.io.FileUtils#openInputStream(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testInvalidEncoding", "testMissingFile", "testNextLineOnly", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ]
          }
        },
        "org.apache.commons.io.FileUtils#openOutputStream(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testFilteringBufferedReader", "testFilteringFileReader", "testInvalidEncoding", "testNextLineOnly", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ]
          }
        },
        "org.apache.commons.io.FileUtils#writeLines(java.io.File,java.lang.String,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testFilteringBufferedReader", "testFilteringFileReader", "testInvalidEncoding", "testNextLineOnly", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#isSystemWindows" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFilteringBufferedReader", "testFilteringFileReader", "testInvalidEncoding", "testMissingFile", "testNextLineOnly", "testNextOnly", "testNextWithException", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ]
          }
        },
        "org.apache.commons.io.IOUtils#closeQuietly(java.io.Closeable)" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testFilteringBufferedReader", "testFilteringFileReader", "testNextLineOnly", "testNextOnly", "testNextWithException", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ]
          }
        },
        "org.apache.commons.io.IOUtils#lineIterator(java.io.InputStream,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testInvalidEncoding", "testNextLineOnly", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ]
          }
        },
        "org.apache.commons.io.IOUtils#writeLines(java.util.Collection,java.lang.String,java.io.OutputStream)" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testFilteringBufferedReader", "testFilteringFileReader", "testInvalidEncoding", "testNextLineOnly", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ]
          }
        },
        "org.apache.commons.io.LineIterator#<init>(java.io.Reader)" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFilteringBufferedReader", "testFilteringFileReader", "testNextLineOnly", "testNextOnly", "testNextWithException", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ]
          }
        },
        "org.apache.commons.io.LineIterator#close" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testFilteringBufferedReader", "testFilteringFileReader", "testNextLineOnly", "testNextOnly", "testNextWithException", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ]
          }
        },
        "org.apache.commons.io.LineIterator#closeQuietly(org.apache.commons.io.LineIterator)" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testFilteringBufferedReader", "testFilteringFileReader", "testInvalidEncoding", "testMissingFile", "testNextLineOnly", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ]
          }
        },
        "org.apache.commons.io.LineIterator#hasNext" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testFilteringBufferedReader", "testFilteringFileReader", "testNextLineOnly", "testNextOnly", "testNextWithException", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ]
          }
        },
        "org.apache.commons.io.LineIterator#isValidLine(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testNextLineOnly", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding" ]
          }
        },
        "org.apache.commons.io.LineIterator#next" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testFilteringBufferedReader", "testFilteringFileReader", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ]
          }
        },
        "org.apache.commons.io.LineIterator#nextLine" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testFilteringBufferedReader", "testFilteringFileReader", "testNextLineOnly", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ]
          }
        },
        "org.apache.commons.io.LineIterator#remove" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testFilteringBufferedReader", "testFilteringFileReader", "testOneLines", "testThreeLines", "testTwoLines", "testZeroLines" ]
          }
        },
        "org.apache.commons.io.LineIteratorTestCase" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFilteringBufferedReader", "testFilteringFileReader", "testInvalidEncoding", "testMissingFile", "testNextLineOnly", "testNextOnly", "testNextWithException", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ]
          }
        },
        "org.apache.commons.io.LineIteratorTestCase#createFile(java.io.File,java.lang.String,int)" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testFilteringBufferedReader", "testFilteringFileReader", "testInvalidEncoding", "testNextLineOnly", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ]
          }
        },
        "org.apache.commons.io.LineIteratorTestCase#doTestFileWithSpecifiedLines(int)" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testOneLines", "testThreeLines", "testTwoLines", "testZeroLines" ]
          }
        },
        "org.apache.commons.io.LineIteratorTestCase#setUp" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFilteringBufferedReader", "testFilteringFileReader", "testInvalidEncoding", "testMissingFile", "testNextLineOnly", "testNextOnly", "testNextWithException", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ]
          }
        },
        "org.apache.commons.io.LineIteratorTestCase#tearDown" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFilteringBufferedReader", "testFilteringFileReader", "testInvalidEncoding", "testMissingFile", "testNextLineOnly", "testNextOnly", "testNextWithException", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ]
          }
        },
        "org.apache.commons.io.LineIteratorTestCase#testCloseEarly" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly" ]
          }
        },
        "org.apache.commons.io.LineIteratorTestCase#testConstructor" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testConstructor" ]
          }
        },
        "org.apache.commons.io.LineIteratorTestCase#testFiltering(java.util.List,java.io.Reader)" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testFilteringBufferedReader", "testFilteringFileReader" ]
          }
        },
        "org.apache.commons.io.LineIteratorTestCase#testFilteringBufferedReader" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testFilteringBufferedReader" ]
          }
        },
        "org.apache.commons.io.LineIteratorTestCase#testFilteringFileReader" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testFilteringFileReader" ]
          }
        },
        "org.apache.commons.io.LineIteratorTestCase#testInvalidEncoding" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testInvalidEncoding" ]
          }
        },
        "org.apache.commons.io.LineIteratorTestCase#testMissingFile" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testMissingFile" ]
          }
        },
        "org.apache.commons.io.LineIteratorTestCase#testNextLineOnly" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testNextLineOnly" ]
          }
        },
        "org.apache.commons.io.LineIteratorTestCase#testNextOnly" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testNextOnly" ]
          }
        },
        "org.apache.commons.io.LineIteratorTestCase#testNextWithException" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testNextWithException" ]
          }
        },
        "org.apache.commons.io.LineIteratorTestCase#testOneLines" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testOneLines" ]
          }
        },
        "org.apache.commons.io.LineIteratorTestCase#testThreeLines" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testThreeLines" ]
          }
        },
        "org.apache.commons.io.LineIteratorTestCase#testTwoLines" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testTwoLines" ]
          }
        },
        "org.apache.commons.io.LineIteratorTestCase#testValidEncoding" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testValidEncoding" ]
          }
        },
        "org.apache.commons.io.LineIteratorTestCase#testZeroLines" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testZeroLines" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#<init>(int)" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testFilteringBufferedReader", "testFilteringFileReader", "testInvalidEncoding", "testMissingFile", "testNextLineOnly", "testNextOnly", "testNextWithException", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#close" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testFilteringBufferedReader", "testFilteringFileReader", "testInvalidEncoding", "testMissingFile", "testNextLineOnly", "testNextOnly", "testNextWithException", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#toString" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testFilteringBufferedReader", "testFilteringFileReader", "testInvalidEncoding", "testMissingFile", "testNextLineOnly", "testNextOnly", "testNextWithException", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#write(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testFilteringBufferedReader", "testFilteringFileReader", "testInvalidEncoding", "testMissingFile", "testNextLineOnly", "testNextOnly", "testNextWithException", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#getTestDirectory" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFilteringBufferedReader", "testFilteringFileReader", "testInvalidEncoding", "testMissingFile", "testNextLineOnly", "testNextOnly", "testNextWithException", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ]
          }
        }
      }
    },
    "2abfa999f08533349b7067edb4c5d368f5b3612c" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "f06d54344383a8b1a2d9ad2c7400259b5da11ce7",
      "changedClazzes" : {
        "org.apache.commons.io.monitor.FileAlterationObserver" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FileEntry" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        }
      }
    },
    "111e91b8f3d71b51edd1a5900e64be844c374bc9" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "2abfa999f08533349b7067edb4c5d368f5b3612c",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils#cleanDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension" ]
          }
        },
        "org.apache.commons.io.FileUtils#deleteDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension" ]
          }
        },
        "org.apache.commons.io.FileUtils#forceDelete(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension" ]
          }
        },
        "org.apache.commons.io.FileUtils#innerListFiles(java.util.Collection,java.io.File,org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension" ]
          }
        },
        "org.apache.commons.io.FileUtils#isSymlink(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension" ]
          }
        },
        "org.apache.commons.io.FileUtils#iterateFiles(java.io.File,java.lang.String[],boolean)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension" ]
          }
        },
        "org.apache.commons.io.FileUtils#listFiles(java.io.File,java.lang.String[],boolean)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension" ]
          }
        },
        "org.apache.commons.io.FileUtils#openOutputStream(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension" ]
          }
        },
        "org.apache.commons.io.FileUtils#toSuffixes(java.lang.String[])" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension" ]
          }
        },
        "org.apache.commons.io.FileUtils#touch(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension" ]
          }
        },
        "org.apache.commons.io.FileUtilsListFilesTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension", "testListFiles", "testListFilesByExtension" ]
          }
        },
        "org.apache.commons.io.FileUtilsListFilesTestCase#filesToFilenames(java.util.Iterator)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension" ]
          }
        },
        "org.apache.commons.io.FileUtilsListFilesTestCase#getLocalTestDirectory" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension" ]
          }
        },
        "org.apache.commons.io.FileUtilsListFilesTestCase#setUp" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension" ]
          }
        },
        "org.apache.commons.io.FileUtilsListFilesTestCase#tearDown" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension" ]
          }
        },
        "org.apache.commons.io.FileUtilsListFilesTestCase#testIterateFilesByExtension" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#isSystemWindows" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension" ]
          }
        },
        "org.apache.commons.io.IOCase#<init>(java.lang.String,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension" ]
          }
        },
        "org.apache.commons.io.IOCase#checkEndsWith(java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension" ]
          }
        },
        "org.apache.commons.io.IOUtils#closeQuietly(java.io.Closeable)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension" ]
          }
        },
        "org.apache.commons.io.filefilter.AbstractFileFilter#<init>" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension" ]
          }
        },
        "org.apache.commons.io.filefilter.AndFileFilter#<init>(java.util.List)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension" ]
          }
        },
        "org.apache.commons.io.filefilter.AndFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension" ]
          }
        },
        "org.apache.commons.io.filefilter.DirectoryFileFilter#<init>" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension" ]
          }
        },
        "org.apache.commons.io.filefilter.DirectoryFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension" ]
          }
        },
        "org.apache.commons.io.filefilter.FalseFileFilter#<init>" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension" ]
          }
        },
        "org.apache.commons.io.filefilter.FalseFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#and(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#directoryFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#nameFileFilter(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#notFileFilter(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#or(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#toList(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension" ]
          }
        },
        "org.apache.commons.io.filefilter.NameFileFilter#<init>(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension" ]
          }
        },
        "org.apache.commons.io.filefilter.NotFileFilter#<init>(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension" ]
          }
        },
        "org.apache.commons.io.filefilter.NotFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension" ]
          }
        },
        "org.apache.commons.io.filefilter.OrFileFilter#<init>(java.util.List)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension" ]
          }
        },
        "org.apache.commons.io.filefilter.OrFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension" ]
          }
        },
        "org.apache.commons.io.filefilter.SuffixFileFilter#<init>(java.lang.String[])" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension" ]
          }
        },
        "org.apache.commons.io.filefilter.SuffixFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension" ]
          }
        },
        "org.apache.commons.io.filefilter.TrueFileFilter#<init>" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension" ]
          }
        },
        "org.apache.commons.io.filefilter.TrueFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#<init>(int)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#close" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#toString" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#write(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#getTestDirectory" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension" ]
          }
        }
      }
    },
    "db112a356cc85342592d33e20de9ff83372e1904" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "111e91b8f3d71b51edd1a5900e64be844c374bc9",
      "changedClazzes" : {
        "org.apache.commons.io.DirectoryWalker#checkIfCancelled(java.io.File,int,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToGrandChild", "testCopyDirectoryToItself" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker#filterDirectoryContents(java.io.File,int,java.io.File[])" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToGrandChild", "testCopyDirectoryToItself" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker#handleDirectory(java.io.File,int,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToGrandChild", "testCopyDirectoryToItself" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker#handleDirectoryEnd(java.io.File,int,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToGrandChild", "testCopyDirectoryToItself" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker#handleEnd(java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToGrandChild", "testCopyDirectoryToItself" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker#handleIsCancelled(java.io.File,int,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToGrandChild", "testCopyDirectoryToItself" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker#handleStart(java.io.File,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToGrandChild", "testCopyDirectoryToItself" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker#walk(java.io.File,int,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToGrandChild", "testCopyDirectoryToItself" ]
          }
        },
        "org.apache.commons.io.FileExistsException#<init>(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveDirectory_Errors", "testMoveFile_Errors" ]
          }
        },
        "org.apache.commons.io.FileUtils#byteCountToDisplaySize(long)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize" ]
          }
        },
        "org.apache.commons.io.FileUtils#checksum(java.io.File,java.util.zip.Checksum)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile" ]
          }
        },
        "org.apache.commons.io.FileUtils#checksumCRC32(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testChecksumCRC32" ]
          }
        },
        "org.apache.commons.io.FileUtils#cleanDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryPreserveDates", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToItself", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testCopyURLToFileWithTimeout", "testDecodeUrl", "testDecodeUrlEncodingUtf8", "testDecodeUrlLenient", "testDecodeUrlNullSafe", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testGetTempDirectory", "testGetTempDirectoryPath", "testGetUserDirectory", "testGetUserDirectoryPath", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToStringWithDefaultEncoding", "testReadFileToStringWithEncoding", "testReadLines", "testSizeOf", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFile5", "testToFileUtf8", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ]
          }
        },
        "org.apache.commons.io.FileUtils#contentEquals(java.io.File,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testContentEquals" ]
          }
        },
        "org.apache.commons.io.FileUtils#copyDirectory(java.io.File,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryPreserveDates", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToItself", "testCopyDirectoryToNonExistingDest", "testMoveDirectory_CopyDelete" ]
          }
        },
        "org.apache.commons.io.FileUtils#copyDirectoryToDirectory(java.io.File,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToItself" ]
          }
        },
        "org.apache.commons.io.FileUtils#copyFile(java.io.File,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed" ]
          }
        },
        "org.apache.commons.io.FileUtils#copyFileToDirectory(java.io.File,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyFile1ToDir", "testCopyFile2ToDir" ]
          }
        },
        "org.apache.commons.io.FileUtils#copyInputStreamToFile(java.io.InputStream,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testContentEquals", "testCopyURLToFile", "testCopyURLToFileWithTimeout" ]
          }
        },
        "org.apache.commons.io.FileUtils#copyURLToFile(java.net.URL,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyURLToFileWithTimeout" ]
          }
        },
        "org.apache.commons.io.FileUtils#decodeUrl(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testDecodeUrl", "testDecodeUrlEncodingUtf8", "testDecodeUrlLenient", "testDecodeUrlNullSafe", "testToFile1", "testToFile2", "testToFile4", "testToFile5", "testToFileUtf8", "testToFiles1", "testToFiles2", "testToFiles4" ]
          }
        },
        "org.apache.commons.io.FileUtils#deleteDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryPreserveDates", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToItself", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testCopyURLToFileWithTimeout", "testDecodeUrl", "testDecodeUrlEncodingUtf8", "testDecodeUrlLenient", "testDecodeUrlNullSafe", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testGetTempDirectory", "testGetTempDirectoryPath", "testGetUserDirectory", "testGetUserDirectoryPath", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToStringWithDefaultEncoding", "testReadFileToStringWithEncoding", "testReadLines", "testSizeOf", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFile5", "testToFileUtf8", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ]
          }
        },
        "org.apache.commons.io.FileUtils#deleteQuietly(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testMoveFile_CopyDelete_Failed" ]
          }
        },
        "org.apache.commons.io.FileUtils#doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryPreserveDates", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToItself", "testCopyDirectoryToNonExistingDest", "testMoveDirectory_CopyDelete" ]
          }
        },
        "org.apache.commons.io.FileUtils#doCopyFile(java.io.File,java.io.File,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered", "testCopyDirectoryPreserveDates", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testMoveDirectory_CopyDelete", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed" ]
          }
        },
        "org.apache.commons.io.FileUtils#forceDelete(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryPreserveDates", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToItself", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testCopyURLToFileWithTimeout", "testDecodeUrl", "testDecodeUrlEncodingUtf8", "testDecodeUrlLenient", "testDecodeUrlNullSafe", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testGetTempDirectory", "testGetTempDirectoryPath", "testGetUserDirectory", "testGetUserDirectoryPath", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToStringWithDefaultEncoding", "testReadFileToStringWithEncoding", "testReadLines", "testSizeOf", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFile5", "testToFileUtf8", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ]
          }
        },
        "org.apache.commons.io.FileUtils#forceMkdir(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testForceMkdir" ]
          }
        },
        "org.apache.commons.io.FileUtils#getTempDirectory" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testGetTempDirectory" ]
          }
        },
        "org.apache.commons.io.FileUtils#getTempDirectoryPath" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testGetTempDirectory", "testGetTempDirectoryPath" ]
          }
        },
        "org.apache.commons.io.FileUtils#getUserDirectory" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testGetUserDirectory" ]
          }
        },
        "org.apache.commons.io.FileUtils#getUserDirectoryPath" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testGetUserDirectory", "testGetUserDirectoryPath" ]
          }
        },
        "org.apache.commons.io.FileUtils#innerListFiles(java.util.Collection,java.io.File,org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testListFiles" ]
          }
        },
        "org.apache.commons.io.FileUtils#isFileNewer(java.io.File,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIsFileNewerOlder" ]
          }
        },
        "org.apache.commons.io.FileUtils#isFileOlder(java.io.File,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIsFileNewerOlder" ]
          }
        },
        "org.apache.commons.io.FileUtils#isSymlink(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryPreserveDates", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToItself", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testCopyURLToFileWithTimeout", "testDecodeUrl", "testDecodeUrlEncodingUtf8", "testDecodeUrlLenient", "testDecodeUrlNullSafe", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testGetTempDirectory", "testGetTempDirectoryPath", "testGetUserDirectory", "testGetUserDirectoryPath", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToStringWithDefaultEncoding", "testReadFileToStringWithEncoding", "testReadLines", "testSizeOf", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFile5", "testToFileUtf8", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ]
          }
        },
        "org.apache.commons.io.FileUtils#iterateFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles" ]
          }
        },
        "org.apache.commons.io.FileUtils#listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testListFiles" ]
          }
        },
        "org.apache.commons.io.FileUtils#moveDirectory(java.io.File,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveDirectoryToDirectory", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveToDirectory" ]
          }
        },
        "org.apache.commons.io.FileUtils#moveDirectoryToDirectory(java.io.File,java.io.File,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveToDirectory", "testMoveToDirectory_Errors" ]
          }
        },
        "org.apache.commons.io.FileUtils#moveFile(java.io.File,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveFileToDirectory", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory" ]
          }
        },
        "org.apache.commons.io.FileUtils#moveFileToDirectory(java.io.File,java.io.File,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveToDirectory" ]
          }
        },
        "org.apache.commons.io.FileUtils#moveToDirectory(java.io.File,java.io.File,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveToDirectory", "testMoveToDirectory_Errors" ]
          }
        },
        "org.apache.commons.io.FileUtils#openInputStream(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testFileUtils", "testReadFileToByteArray", "testReadFileToStringWithDefaultEncoding", "testReadFileToStringWithEncoding", "testReadLines", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_nullSeparator", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists" ]
          }
        },
        "org.apache.commons.io.FileUtils#openOutputStream(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnNullChecksum", "testContentEquals", "testCopyDirectoryFiltered", "testCopyDirectoryPreserveDates", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testCopyURLToFile", "testCopyURLToFileWithTimeout", "testFileUtils", "testTouch", "testWriteByteArrayToFile", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ]
          }
        },
        "org.apache.commons.io.FileUtils#readFileToByteArray(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testReadFileToByteArray" ]
          }
        },
        "org.apache.commons.io.FileUtils#readFileToString(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testFileUtils", "testReadFileToStringWithDefaultEncoding", "testReadFileToStringWithEncoding", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_nullSeparator" ]
          }
        },
        "org.apache.commons.io.FileUtils#readLines(java.io.File,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testReadLines" ]
          }
        },
        "org.apache.commons.io.FileUtils#sizeOf(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testSizeOf" ]
          }
        },
        "org.apache.commons.io.FileUtils#sizeOfDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testSizeOf", "testSizeOfDirectory" ]
          }
        },
        "org.apache.commons.io.FileUtils#toFile(java.net.URL)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFile5", "testToFileUtf8", "testToFiles1", "testToFiles2", "testToFiles4" ]
          }
        },
        "org.apache.commons.io.FileUtils#toFiles(java.net.URL[])" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4" ]
          }
        },
        "org.apache.commons.io.FileUtils#toURLs(java.io.File[])" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testToURLs1" ]
          }
        },
        "org.apache.commons.io.FileUtils#touch(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testTouch" ]
          }
        },
        "org.apache.commons.io.FileUtils#write(java.io.File,java.lang.CharSequence,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteCharSequence1", "testWriteCharSequence2" ]
          }
        },
        "org.apache.commons.io.FileUtils#writeByteArrayToFile(java.io.File,byte[])" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteByteArrayToFile" ]
          }
        },
        "org.apache.commons.io.FileUtils#writeLines(java.io.File,java.lang.String,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator" ]
          }
        },
        "org.apache.commons.io.FileUtils#writeStringToFile(java.io.File,java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnNullChecksum", "testCopyDirectoryFiltered", "testCopyDirectoryPreserveDates", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testFileUtils", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteStringToFile1", "testWriteStringToFile2" ]
          }
        },
        "org.apache.commons.io.FileUtilsListFilesTestCase#testIterateFilesByExtension" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension" ]
          }
        },
        "org.apache.commons.io.FileUtilsListFilesTestCase#testListFilesByExtension" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFilesByExtension" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryPreserveDates", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToItself", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testCopyURLToFileWithTimeout", "testDecodeUrl", "testDecodeUrlEncodingUtf8", "testDecodeUrlLenient", "testDecodeUrlNullSafe", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testGetTempDirectory", "testGetTempDirectoryPath", "testGetUserDirectory", "testGetUserDirectoryPath", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToStringWithDefaultEncoding", "testReadFileToStringWithEncoding", "testReadLines", "testSizeOf", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFile5", "testToFileUtf8", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#createFilesForTestCopyDirectory(java.io.File,java.io.File,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToGrandChild" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#openOutputStream_noParent(boolean)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#setUp" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryPreserveDates", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToItself", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testCopyURLToFileWithTimeout", "testDecodeUrl", "testDecodeUrlEncodingUtf8", "testDecodeUrlLenient", "testDecodeUrlNullSafe", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testGetTempDirectory", "testGetTempDirectoryPath", "testGetUserDirectory", "testGetUserDirectoryPath", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToStringWithDefaultEncoding", "testReadFileToStringWithEncoding", "testReadLines", "testSizeOf", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFile5", "testToFileUtf8", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#tearDown" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryPreserveDates", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToItself", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testCopyURLToFileWithTimeout", "testDecodeUrl", "testDecodeUrlEncodingUtf8", "testDecodeUrlLenient", "testDecodeUrlNullSafe", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testGetTempDirectory", "testGetTempDirectoryPath", "testGetUserDirectory", "testGetUserDirectoryPath", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToStringWithDefaultEncoding", "testReadFileToStringWithEncoding", "testReadLines", "testSizeOf", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFile5", "testToFileUtf8", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testByteCountToDisplaySize" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testChecksum" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testChecksum" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testChecksumCRC32" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testChecksumCRC32" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testChecksumDouble" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testChecksumDouble" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testChecksumOnDirectory" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testChecksumOnDirectory" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testChecksumOnNullChecksum" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testChecksumOnNullChecksum" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testChecksumOnNullFile" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testChecksumOnNullFile" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testContentEquals" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testContentEquals" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testCopyDirectoryErrors" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryErrors" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testCopyDirectoryFiltered" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testCopyDirectoryPreserveDates" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryPreserveDates" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testCopyDirectoryToChild" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToChild" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testCopyDirectoryToDirectory_NonExistingDest" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToDirectory_NonExistingDest" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testCopyDirectoryToExistingDest" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToExistingDest" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testCopyDirectoryToGrandChild" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToGrandChild" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testCopyDirectoryToItself" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToItself" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testCopyDirectoryToNonExistingDest" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToNonExistingDest" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testCopyFile1" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyFile1" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testCopyFile1ToDir" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyFile1ToDir" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testCopyFile2" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyFile2" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testCopyFile2ToDir" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyFile2ToDir" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testCopyFile2WithoutFileDatePreservation" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyFile2WithoutFileDatePreservation" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testCopyToSelf" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyToSelf" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testCopyURLToFile" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyURLToFile" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testCopyURLToFileWithTimeout" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyURLToFileWithTimeout" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testDecodeUrl" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testDecodeUrl" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testDecodeUrlEncodingUtf8" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testDecodeUrlEncodingUtf8" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testDecodeUrlLenient" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testDecodeUrlLenient" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testDecodeUrlNullSafe" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testDecodeUrlNullSafe" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testDeleteQuietlyDir" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testDeleteQuietlyDir" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testDeleteQuietlyFile" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testDeleteQuietlyFile" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testDeleteQuietlyForNull" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testDeleteQuietlyForNull" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testDeleteQuietlyNonExistent" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testDeleteQuietlyNonExistent" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testFileUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testFileUtils" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testForceDeleteAFile1" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testForceDeleteAFile1" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testForceDeleteAFile2" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testForceDeleteAFile2" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testForceDeleteAFile3" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testForceDeleteAFile3" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testForceDeleteDir" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testForceDeleteDir" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testForceMkdir" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testForceMkdir" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testGetTempDirectory" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testGetTempDirectory" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testGetTempDirectoryPath" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testGetTempDirectoryPath" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testGetUserDirectory" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testGetUserDirectory" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testGetUserDirectoryPath" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testGetUserDirectoryPath" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testIsFileNewerOlder" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIsFileNewerOlder" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testIterateFiles" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testListFiles" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testListFiles" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testMoveDirectoryToDirectory" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveDirectoryToDirectory" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testMoveDirectoryToDirectory_Errors" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveDirectoryToDirectory_Errors" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testMoveDirectory_CopyDelete" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveDirectory_CopyDelete" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testMoveDirectory_Errors" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveDirectory_Errors" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testMoveDirectory_Rename" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveDirectory_Rename" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testMoveFileToDirectory" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveFileToDirectory" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testMoveFileToDirectory_Errors" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveFileToDirectory_Errors" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testMoveFile_CopyDelete" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveFile_CopyDelete" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testMoveFile_CopyDelete_Failed" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveFile_CopyDelete_Failed" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testMoveFile_Errors" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveFile_Errors" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testMoveFile_Rename" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveFile_Rename" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testMoveToDirectory" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveToDirectory" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testMoveToDirectory_Errors" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveToDirectory_Errors" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testReadFileToByteArray" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testReadFileToByteArray" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testReadFileToStringWithDefaultEncoding" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testReadFileToStringWithDefaultEncoding" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testReadFileToStringWithEncoding" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testReadFileToStringWithEncoding" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testReadLines" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testReadLines" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testSizeOf" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testSizeOf" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testSizeOfDirectory" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testSizeOfDirectory" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testToFile1" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testToFile1" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testToFile2" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testToFile2" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testToFile3" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testToFile3" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testToFile4" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testToFile4" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testToFile5" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testToFile5" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testToFileUtf8" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testToFileUtf8" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testToFiles1" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testToFiles1" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testToFiles2" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testToFiles2" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testToFiles3" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testToFiles3" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testToFiles4" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testToFiles4" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testToURLs1" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testToURLs1" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testTouch" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testTouch" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testWriteByteArrayToFile" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteByteArrayToFile" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testWriteCharSequence1" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteCharSequence1" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testWriteCharSequence2" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteCharSequence2" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testWriteLines_3arg_nullSeparator" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteLines_3arg_nullSeparator" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testWriteLines_4arg" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteLines_4arg" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testWriteLines_4arg_Writer_nullData" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteLines_4arg_Writer_nullData" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testWriteLines_4arg_nullSeparator" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteLines_4arg_nullSeparator" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testWriteStringToFile1" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteStringToFile1" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testWriteStringToFile2" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteStringToFile2" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#test_openInputStream_exists" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "test_openInputStream_exists" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#test_openInputStream_existsButIsDirectory" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "test_openInputStream_existsButIsDirectory" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#test_openInputStream_notExists" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "test_openInputStream_notExists" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#test_openOutputStream_exists" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "test_openOutputStream_exists" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#test_openOutputStream_existsButIsDirectory" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "test_openOutputStream_existsButIsDirectory" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#test_openOutputStream_noParentCreateFile" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "test_openOutputStream_noParentCreateFile" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#test_openOutputStream_noParentNoFile" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "test_openOutputStream_noParentNoFile" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#test_openOutputStream_notExists" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "test_openOutputStream_notExists" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#test_openOutputStream_notExistsCannotCreate" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "test_openOutputStream_notExistsCannotCreate" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase$ListDirectoryWalker#handleDirectoryStart(java.io.File,int,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToGrandChild", "testCopyDirectoryToItself" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase$ListDirectoryWalker#handleFile(java.io.File,int,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToGrandChild" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase$ListDirectoryWalker#list(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToGrandChild", "testCopyDirectoryToItself" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#isSystemWindows" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryPreserveDates", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToItself", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testCopyURLToFileWithTimeout", "testDecodeUrl", "testDecodeUrlEncodingUtf8", "testDecodeUrlLenient", "testDecodeUrlNullSafe", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testGetTempDirectory", "testGetTempDirectoryPath", "testGetUserDirectory", "testGetUserDirectoryPath", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToStringWithDefaultEncoding", "testReadFileToStringWithEncoding", "testReadLines", "testSizeOf", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFile5", "testToFileUtf8", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#splitOnTokens(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testListFiles" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#wildcardMatch(java.lang.String,java.lang.String,org.apache.commons.io.IOCase)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testListFiles" ]
          }
        },
        "org.apache.commons.io.IOCase#<init>(java.lang.String,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered", "testIterateFiles", "testListFiles" ]
          }
        },
        "org.apache.commons.io.IOCase#checkEquals(java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered" ]
          }
        },
        "org.apache.commons.io.IOCase#checkIndexOf(java.lang.String,int,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testListFiles" ]
          }
        },
        "org.apache.commons.io.IOCase#checkRegionMatches(java.lang.String,int,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testListFiles" ]
          }
        },
        "org.apache.commons.io.IOUtils#closeQuietly(java.io.Closeable)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testReadLines", "test_openInputStream_exists", "test_openOutputStream_exists", "test_openOutputStream_noParentCreateFile" ]
          }
        },
        "org.apache.commons.io.IOUtils#contentEquals(java.io.InputStream,java.io.InputStream)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testContentEquals", "testCopyURLToFile", "testCopyURLToFileWithTimeout" ]
          }
        },
        "org.apache.commons.io.IOUtils#copy(java.io.InputStream,java.io.OutputStream)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testFileUtils", "testReadFileToStringWithDefaultEncoding", "testReadFileToStringWithEncoding", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_nullSeparator" ]
          }
        },
        "org.apache.commons.io.IOUtils#copyLarge(java.io.InputStream,java.io.OutputStream)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testFileUtils", "testReadFileToStringWithDefaultEncoding", "testReadFileToStringWithEncoding", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_nullSeparator" ]
          }
        },
        "org.apache.commons.io.IOUtils#readLines(java.io.InputStream,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testReadLines" ]
          }
        },
        "org.apache.commons.io.IOUtils#toByteArray(java.io.InputStream)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testReadFileToByteArray" ]
          }
        },
        "org.apache.commons.io.IOUtils#toString(java.io.InputStream,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testFileUtils", "testReadFileToStringWithDefaultEncoding", "testReadFileToStringWithEncoding", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_nullSeparator" ]
          }
        },
        "org.apache.commons.io.IOUtils#write(java.lang.String,java.io.OutputStream)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnNullChecksum", "testCopyDirectoryFiltered", "testCopyDirectoryPreserveDates", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testFileUtils", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteStringToFile1", "testWriteStringToFile2" ]
          }
        },
        "org.apache.commons.io.IOUtils#writeLines(java.util.Collection,java.lang.String,java.io.OutputStream,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator" ]
          }
        },
        "org.apache.commons.io.filefilter.AbstractFileFilter#<init>" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered", "testIterateFiles", "testListFiles" ]
          }
        },
        "org.apache.commons.io.filefilter.AndFileFilter#<init>(java.util.List)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testListFiles" ]
          }
        },
        "org.apache.commons.io.filefilter.AndFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testListFiles" ]
          }
        },
        "org.apache.commons.io.filefilter.DirectoryFileFilter#<init>" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testListFiles" ]
          }
        },
        "org.apache.commons.io.filefilter.DirectoryFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testListFiles" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#and(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testListFiles" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#directoryFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testListFiles" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#nameFileFilter(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testListFiles" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#notFileFilter(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testListFiles" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#or(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testListFiles" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#toList(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testListFiles" ]
          }
        },
        "org.apache.commons.io.filefilter.NameFileFilter#<init>(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered" ]
          }
        },
        "org.apache.commons.io.filefilter.NameFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered" ]
          }
        },
        "org.apache.commons.io.filefilter.NotFileFilter#<init>(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testListFiles" ]
          }
        },
        "org.apache.commons.io.filefilter.NotFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testListFiles" ]
          }
        },
        "org.apache.commons.io.filefilter.OrFileFilter#<init>(java.util.List)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testListFiles" ]
          }
        },
        "org.apache.commons.io.filefilter.OrFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testListFiles" ]
          }
        },
        "org.apache.commons.io.filefilter.WildcardFileFilter#<init>(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testListFiles" ]
          }
        },
        "org.apache.commons.io.filefilter.WildcardFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testListFiles" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream#<init>" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testReadFileToByteArray" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream#needNewBuffer(int)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testReadFileToByteArray" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream#toByteArray" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testReadFileToByteArray" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream#write(byte[],int,int)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testReadFileToByteArray" ]
          }
        },
        "org.apache.commons.io.output.NullOutputStream#<init>" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnNullChecksum" ]
          }
        },
        "org.apache.commons.io.output.NullOutputStream#write(byte[],int,int)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testChecksum", "testChecksumCRC32", "testChecksumDouble" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#<init>" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryPreserveDates", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToItself", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testCopyURLToFileWithTimeout", "testDecodeUrl", "testDecodeUrlEncodingUtf8", "testDecodeUrlLenient", "testDecodeUrlNullSafe", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testGetTempDirectory", "testGetTempDirectoryPath", "testGetUserDirectory", "testGetUserDirectoryPath", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToStringWithDefaultEncoding", "testReadFileToStringWithEncoding", "testReadLines", "testSizeOf", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFile5", "testToFileUtf8", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#close" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryPreserveDates", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToItself", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testCopyURLToFileWithTimeout", "testDecodeUrl", "testDecodeUrlEncodingUtf8", "testDecodeUrlLenient", "testDecodeUrlNullSafe", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testGetTempDirectory", "testGetTempDirectoryPath", "testGetUserDirectory", "testGetUserDirectoryPath", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToStringWithDefaultEncoding", "testReadFileToStringWithEncoding", "testReadLines", "testSizeOf", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFile5", "testToFileUtf8", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#toString" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryPreserveDates", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToItself", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testCopyURLToFileWithTimeout", "testDecodeUrl", "testDecodeUrlEncodingUtf8", "testDecodeUrlLenient", "testDecodeUrlNullSafe", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testGetTempDirectory", "testGetTempDirectoryPath", "testGetUserDirectory", "testGetUserDirectoryPath", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToStringWithDefaultEncoding", "testReadFileToStringWithEncoding", "testReadLines", "testSizeOf", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFile5", "testToFileUtf8", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#write(char[],int,int)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryPreserveDates", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToItself", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testCopyURLToFileWithTimeout", "testDecodeUrl", "testDecodeUrlEncodingUtf8", "testDecodeUrlLenient", "testDecodeUrlNullSafe", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testGetTempDirectory", "testGetTempDirectoryPath", "testGetUserDirectory", "testGetUserDirectoryPath", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToStringWithDefaultEncoding", "testReadFileToStringWithEncoding", "testReadLines", "testSizeOf", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFile5", "testToFileUtf8", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#assertEqualContent(byte[],java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteByteArrayToFile", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteStringToFile1", "testWriteStringToFile2" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#createFile(java.io.File,long)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryPreserveDates", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToItself", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testCopyURLToFileWithTimeout", "testDecodeUrl", "testDecodeUrlEncodingUtf8", "testDecodeUrlLenient", "testDecodeUrlNullSafe", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testGetTempDirectory", "testGetTempDirectoryPath", "testGetUserDirectory", "testGetUserDirectoryPath", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToStringWithDefaultEncoding", "testReadFileToStringWithEncoding", "testReadLines", "testSizeOf", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFile5", "testToFileUtf8", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#createLineBasedFile(java.io.File,java.lang.String[])" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testReadLines", "test_openInputStream_exists", "test_openOutputStream_exists", "test_openOutputStream_noParentCreateFile" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#deleteFile(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testReadLines" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#generateTestData(java.io.OutputStream,long)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryPreserveDates", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToItself", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testCopyURLToFileWithTimeout", "testDecodeUrl", "testDecodeUrlEncodingUtf8", "testDecodeUrlLenient", "testDecodeUrlNullSafe", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testGetTempDirectory", "testGetTempDirectoryPath", "testGetUserDirectory", "testGetUserDirectoryPath", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToStringWithDefaultEncoding", "testReadFileToStringWithEncoding", "testReadLines", "testSizeOf", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFile5", "testToFileUtf8", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#getTestDirectory" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryPreserveDates", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToItself", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testCopyURLToFileWithTimeout", "testDecodeUrl", "testDecodeUrlEncodingUtf8", "testDecodeUrlLenient", "testDecodeUrlNullSafe", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testGetTempDirectory", "testGetTempDirectoryPath", "testGetUserDirectory", "testGetUserDirectoryPath", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToStringWithDefaultEncoding", "testReadFileToStringWithEncoding", "testReadLines", "testSizeOf", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFile5", "testToFileUtf8", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#newFile(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testReadLines", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator" ]
          }
        }
      }
    },
    "7e6494dcfbcff992f6c8af187640cf10217ed928" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "db112a356cc85342592d33e20de9ff83372e1904",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils#cleanDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testNextLineOnlyDefaultEncoding", "testNextLineOnlyWithEncoding" ]
          }
        },
        "org.apache.commons.io.FileUtils#deleteDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testNextLineOnlyDefaultEncoding", "testNextLineOnlyWithEncoding" ]
          }
        },
        "org.apache.commons.io.FileUtils#forceDelete(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testNextLineOnlyDefaultEncoding", "testNextLineOnlyWithEncoding" ]
          }
        },
        "org.apache.commons.io.FileUtils#isSymlink(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testNextLineOnlyDefaultEncoding", "testNextLineOnlyWithEncoding" ]
          }
        },
        "org.apache.commons.io.FileUtils#lineIterator(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testNextLineOnlyDefaultEncoding", "testNextLineOnlyWithEncoding" ]
          }
        },
        "org.apache.commons.io.FileUtils#openInputStream(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testNextLineOnlyDefaultEncoding", "testNextLineOnlyWithEncoding" ]
          }
        },
        "org.apache.commons.io.FileUtils#openOutputStream(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testNextLineOnlyDefaultEncoding", "testNextLineOnlyWithEncoding" ]
          }
        },
        "org.apache.commons.io.FileUtils#writeLines(java.io.File,java.lang.String,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testNextLineOnlyDefaultEncoding" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#isSystemWindows" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testNextLineOnlyDefaultEncoding", "testNextLineOnlyWithEncoding" ]
          }
        },
        "org.apache.commons.io.IOUtils#closeQuietly(java.io.Closeable)" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testNextLineOnlyDefaultEncoding", "testNextLineOnlyWithEncoding" ]
          }
        },
        "org.apache.commons.io.IOUtils#lineIterator(java.io.InputStream,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testNextLineOnlyDefaultEncoding", "testNextLineOnlyWithEncoding" ]
          }
        },
        "org.apache.commons.io.IOUtils#writeLines(java.util.Collection,java.lang.String,java.io.OutputStream)" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testNextLineOnlyDefaultEncoding", "testNextLineOnlyWithEncoding" ]
          }
        },
        "org.apache.commons.io.LineIterator#<init>(java.io.Reader)" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testNextLineOnlyDefaultEncoding", "testNextLineOnlyWithEncoding" ]
          }
        },
        "org.apache.commons.io.LineIterator#close" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testNextLineOnlyDefaultEncoding", "testNextLineOnlyWithEncoding" ]
          }
        },
        "org.apache.commons.io.LineIterator#closeQuietly(org.apache.commons.io.LineIterator)" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testNextLineOnlyDefaultEncoding", "testNextLineOnlyWithEncoding" ]
          }
        },
        "org.apache.commons.io.LineIterator#hasNext" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testNextLineOnlyDefaultEncoding", "testNextLineOnlyWithEncoding" ]
          }
        },
        "org.apache.commons.io.LineIterator#isValidLine(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testNextLineOnlyDefaultEncoding", "testNextLineOnlyWithEncoding" ]
          }
        },
        "org.apache.commons.io.LineIterator#nextLine" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testNextLineOnlyDefaultEncoding", "testNextLineOnlyWithEncoding" ]
          }
        },
        "org.apache.commons.io.LineIteratorTestCase" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFilteringBufferedReader", "testFilteringFileReader", "testInvalidEncoding", "testMissingFile", "testNextLineOnlyDefaultEncoding", "testNextLineOnlyWithEncoding", "testNextOnly", "testNextWithException", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ]
          }
        },
        "org.apache.commons.io.LineIteratorTestCase#assertLines(java.util.List,org.apache.commons.io.LineIterator)" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testNextLineOnlyDefaultEncoding", "testNextLineOnlyWithEncoding" ]
          }
        },
        "org.apache.commons.io.LineIteratorTestCase#createLinesFile(java.io.File,int)" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testNextLineOnlyWithEncoding" ]
          }
        },
        "org.apache.commons.io.LineIteratorTestCase#createStringLines(int)" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testNextLineOnlyDefaultEncoding", "testNextLineOnlyWithEncoding" ]
          }
        },
        "org.apache.commons.io.LineIteratorTestCase#setUp" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testNextLineOnlyDefaultEncoding", "testNextLineOnlyWithEncoding" ]
          }
        },
        "org.apache.commons.io.LineIteratorTestCase#tearDown" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testNextLineOnlyDefaultEncoding", "testNextLineOnlyWithEncoding" ]
          }
        },
        "org.apache.commons.io.LineIteratorTestCase#testNextLineOnlyDefaultEncoding" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testNextLineOnlyDefaultEncoding" ]
          }
        },
        "org.apache.commons.io.LineIteratorTestCase#testNextLineOnlyWithEncoding" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testNextLineOnlyWithEncoding" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#<init>(int)" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testNextLineOnlyDefaultEncoding", "testNextLineOnlyWithEncoding" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#close" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testNextLineOnlyDefaultEncoding", "testNextLineOnlyWithEncoding" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#toString" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testNextLineOnlyDefaultEncoding", "testNextLineOnlyWithEncoding" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#write(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testNextLineOnlyDefaultEncoding", "testNextLineOnlyWithEncoding" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#getTestDirectory" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testNextLineOnlyDefaultEncoding", "testNextLineOnlyWithEncoding" ]
          }
        }
      }
    },
    "4e0b338d9871f8f5dae68e4c6f71345e2087e614" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "7e6494dcfbcff992f6c8af187640cf10217ed928",
      "changedClazzes" : {
        "org.apache.commons.io.LineIteratorTestCase" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFilteringBufferedReader", "testFilteringFileReader", "testInvalidEncoding", "testMissingFile", "testNextLineOnlyDefaultEncoding", "testNextOnly", "testNextWithException", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ]
          }
        }
      }
    },
    "941cf6c6f55191f5bdb59b3c85bd4a166b0107bd" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "4e0b338d9871f8f5dae68e4c6f71345e2087e614",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils#cleanDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor" ]
          }
        },
        "org.apache.commons.io.FileUtils#deleteDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor" ]
          }
        },
        "org.apache.commons.io.FileUtils#isSymlink(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#isSystemWindows" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor" ]
          }
        },
        "org.apache.commons.io.IOCase#<init>(java.lang.String,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor" ]
          }
        },
        "org.apache.commons.io.comparator.AbstractFileComparator#<init>" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor" ]
          }
        },
        "org.apache.commons.io.comparator.NameFileComparator#<init>" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor" ]
          }
        },
        "org.apache.commons.io.comparator.ReverseComparator#<init>(java.util.Comparator)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor" ]
          }
        },
        "org.apache.commons.io.filefilter.AbstractFileFilter#<init>" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor" ]
          }
        },
        "org.apache.commons.io.filefilter.AndFileFilter#<init>(java.util.List)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor" ]
          }
        },
        "org.apache.commons.io.filefilter.DirectoryFileFilter#<init>" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFileFilter#<init>" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#and(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#directoryFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#fileFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#nameFileFilter(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#notFileFilter(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#or(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#suffixFileFilter(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#toList(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor" ]
          }
        },
        "org.apache.commons.io.filefilter.HiddenFileFilter#<init>" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor" ]
          }
        },
        "org.apache.commons.io.filefilter.NameFileFilter#<init>(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor" ]
          }
        },
        "org.apache.commons.io.filefilter.NotFileFilter#<init>(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor" ]
          }
        },
        "org.apache.commons.io.filefilter.OrFileFilter#<init>(java.util.List)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor" ]
          }
        },
        "org.apache.commons.io.filefilter.SuffixFileFilter#<init>(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor" ]
          }
        },
        "org.apache.commons.io.monitor.AbstractMonitorTestCase#createObserver(java.io.File,java.io.FileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor" ]
          }
        },
        "org.apache.commons.io.monitor.AbstractMonitorTestCase#setUp" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor" ]
          }
        },
        "org.apache.commons.io.monitor.AbstractMonitorTestCase#tearDown" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFileListener#<init>(boolean)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationMonitor" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationMonitor#<init>" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationMonitor#addObserver(org.apache.commons.io.monitor.FileAlterationObserver)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationMonitor#getInterval" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationMonitor#getObservers" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationMonitor#removeObserver(org.apache.commons.io.monitor.FileAlterationObserver)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor", "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationMonitorTestCase#setUp" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationMonitorTestCase#testAddRemoveObservers" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationMonitorTestCase#testDefaultConstructor" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testDefaultConstructor" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationObserver#<init>(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationObserver#addListener(org.apache.commons.io.monitor.FileAlterationListener)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationObserver#initialize" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationObserver#listFiles(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor" ]
          }
        },
        "org.apache.commons.io.monitor.FileEntry#<init>(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor" ]
          }
        },
        "org.apache.commons.io.monitor.FileEntry#getFile" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor" ]
          }
        },
        "org.apache.commons.io.monitor.FileEntry#refresh(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor" ]
          }
        },
        "org.apache.commons.io.monitor.FileEntry#setChildren(org.apache.commons.io.monitor.FileEntry[])" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor" ]
          }
        }
      }
    },
    "9436fa7239285285678252d0043f4686d486bc59" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "941cf6c6f55191f5bdb59b3c85bd4a166b0107bd",
      "changedClazzes" : {
        "org.apache.commons.io.monitor.FileAlterationObserver" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor", "testMonitor" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        }
      }
    },
    "5b3872f2b89f3227007bc08751e6792fe4a3ff0d" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "9436fa7239285285678252d0043f4686d486bc59",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils#cleanDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners" ]
          }
        },
        "org.apache.commons.io.FileUtils#deleteDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners" ]
          }
        },
        "org.apache.commons.io.FileUtils#isSymlink(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#isSystemWindows" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testToString" ]
          }
        },
        "org.apache.commons.io.IOCase#<init>(java.lang.String,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testToString" ]
          }
        },
        "org.apache.commons.io.comparator.AbstractFileComparator#<init>" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testToString" ]
          }
        },
        "org.apache.commons.io.comparator.NameFileComparator#<init>" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testToString" ]
          }
        },
        "org.apache.commons.io.comparator.ReverseComparator#<init>(java.util.Comparator)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testToString" ]
          }
        },
        "org.apache.commons.io.filefilter.AbstractFileFilter#<init>" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testToString" ]
          }
        },
        "org.apache.commons.io.filefilter.AndFileFilter#<init>(java.util.List)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testToString" ]
          }
        },
        "org.apache.commons.io.filefilter.DirectoryFileFilter#<init>" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testToString" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFileFilter#<init>" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testToString" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#and(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testToString" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#directoryFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testToString" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#fileFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testToString" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#nameFileFilter(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testToString" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#notFileFilter(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testToString" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#or(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testToString" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#suffixFileFilter(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testToString" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#toList(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testToString" ]
          }
        },
        "org.apache.commons.io.filefilter.HiddenFileFilter#<init>" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testToString" ]
          }
        },
        "org.apache.commons.io.filefilter.NameFileFilter#<init>(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testToString" ]
          }
        },
        "org.apache.commons.io.filefilter.NotFileFilter#<init>(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testToString" ]
          }
        },
        "org.apache.commons.io.filefilter.OrFileFilter#<init>(java.util.List)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testToString" ]
          }
        },
        "org.apache.commons.io.filefilter.SuffixFileFilter#<init>(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testToString" ]
          }
        },
        "org.apache.commons.io.monitor.AbstractMonitorTestCase#createObserver(java.io.File,java.io.FileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testToString" ]
          }
        },
        "org.apache.commons.io.monitor.AbstractMonitorTestCase#setUp" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testToString" ]
          }
        },
        "org.apache.commons.io.monitor.AbstractMonitorTestCase#tearDown" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFileListener#<init>(boolean)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testToString" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationListenerAdaptor#<init>" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testToString" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationObserver#<init>(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testToString" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationObserver#addListener(org.apache.commons.io.monitor.FileAlterationListener)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testToString" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationObserver#getDirectory" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testToString" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationObserver#getListeners" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationObserver#initialize" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testToString" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationObserver#listFiles(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testToString" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationObserver#removeListener(org.apache.commons.io.monitor.FileAlterationListener)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationObserver#toString" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testToString" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile", "testToString" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationObserverTestCase#setUp" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testToString" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationObserverTestCase#testAddRemoveListeners" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationObserverTestCase#testToString" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testToString" ]
          }
        },
        "org.apache.commons.io.monitor.FileEntry#<init>(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testToString" ]
          }
        },
        "org.apache.commons.io.monitor.FileEntry#getFile" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testToString" ]
          }
        },
        "org.apache.commons.io.monitor.FileEntry#refresh(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testToString" ]
          }
        },
        "org.apache.commons.io.monitor.FileEntry#setChildren(org.apache.commons.io.monitor.FileEntry[])" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testToString" ]
          }
        }
      }
    },
    "464bb1796d2f95fab4e4a75ceedd5ceab872cbcd" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "5b3872f2b89f3227007bc08751e6792fe4a3ff0d",
      "changedClazzes" : {
        "org.apache.commons.io.monitor.FileAlterationObserverTestCase#testToString" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testToString" ]
          }
        }
      }
    },
    "c1caf399806c2181d1d84c8ac65b280782ccdacf" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "464bb1796d2f95fab4e4a75ceedd5ceab872cbcd",
      "changedClazzes" : { }
    },
    "4b2a01082422bba069543dd468e0322e21fca9fa" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "c1caf399806c2181d1d84c8ac65b280782ccdacf",
      "changedClazzes" : { }
    },
    "ab3f42c7e5d084d0b7a05c747678bebbc2de676d" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "4b2a01082422bba069543dd468e0322e21fca9fa",
      "changedClazzes" : {
        "org.apache.commons.io.output.WriterOutputStream#<init>(java.io.Writer,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.output.WriterOutputStreamTest" : [ "testLargeUTF16BEWithBufferedWrite", "testLargeUTF16LEWithBufferedWrite", "testLargeUTF16WithBufferedWrite", "testUTF16BEWithSingleByteWrite", "testUTF16LEWithSingleByteWrite" ]
          }
        },
        "org.apache.commons.io.output.WriterOutputStream#close" : {
          "testcases" : {
            "org.apache.commons.io.output.WriterOutputStreamTest" : [ "testLargeUTF16BEWithBufferedWrite", "testLargeUTF16LEWithBufferedWrite", "testLargeUTF16WithBufferedWrite", "testUTF16BEWithSingleByteWrite", "testUTF16LEWithSingleByteWrite" ]
          }
        },
        "org.apache.commons.io.output.WriterOutputStream#flushOutput" : {
          "testcases" : {
            "org.apache.commons.io.output.WriterOutputStreamTest" : [ "testLargeUTF16BEWithBufferedWrite", "testLargeUTF16LEWithBufferedWrite", "testLargeUTF16WithBufferedWrite", "testUTF16BEWithSingleByteWrite", "testUTF16LEWithSingleByteWrite" ]
          }
        },
        "org.apache.commons.io.output.WriterOutputStream#processInput(boolean)" : {
          "testcases" : {
            "org.apache.commons.io.output.WriterOutputStreamTest" : [ "testLargeUTF16BEWithBufferedWrite", "testLargeUTF16LEWithBufferedWrite", "testLargeUTF16WithBufferedWrite", "testUTF16BEWithSingleByteWrite", "testUTF16LEWithSingleByteWrite" ]
          }
        },
        "org.apache.commons.io.output.WriterOutputStream#write(byte[],int,int)" : {
          "testcases" : {
            "org.apache.commons.io.output.WriterOutputStreamTest" : [ "testUTF16BEWithSingleByteWrite", "testUTF16LEWithSingleByteWrite" ]
          }
        },
        "org.apache.commons.io.output.WriterOutputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.output.WriterOutputStreamTest" : [ "testFlush", "testLargeUTF16BEWithBufferedWrite", "testLargeUTF16LEWithBufferedWrite", "testLargeUTF16WithBufferedWrite", "testLargeUTF8WithBufferedWrite", "testLargeUTF8WithSingleByteWrite", "testUTF16BEWithSingleByteWrite", "testUTF16LEWithSingleByteWrite", "testUTF16WithSingleByteWrite", "testUTF8WithBufferedWrite", "testUTF8WithSingleByteWrite", "testWriteImmediately" ]
          }
        },
        "org.apache.commons.io.output.WriterOutputStreamTest#testLargeUTF16BEWithBufferedWrite" : {
          "testcases" : {
            "org.apache.commons.io.output.WriterOutputStreamTest" : [ "testLargeUTF16BEWithBufferedWrite" ]
          }
        },
        "org.apache.commons.io.output.WriterOutputStreamTest#testLargeUTF16LEWithBufferedWrite" : {
          "testcases" : {
            "org.apache.commons.io.output.WriterOutputStreamTest" : [ "testLargeUTF16LEWithBufferedWrite" ]
          }
        },
        "org.apache.commons.io.output.WriterOutputStreamTest#testLargeUTF16WithBufferedWrite" : {
          "testcases" : {
            "org.apache.commons.io.output.WriterOutputStreamTest" : [ "testLargeUTF16WithBufferedWrite" ]
          }
        },
        "org.apache.commons.io.output.WriterOutputStreamTest#testUTF16BEWithSingleByteWrite" : {
          "testcases" : {
            "org.apache.commons.io.output.WriterOutputStreamTest" : [ "testUTF16BEWithSingleByteWrite" ]
          }
        },
        "org.apache.commons.io.output.WriterOutputStreamTest#testUTF16LEWithSingleByteWrite" : {
          "testcases" : {
            "org.apache.commons.io.output.WriterOutputStreamTest" : [ "testUTF16LEWithSingleByteWrite" ]
          }
        },
        "org.apache.commons.io.output.WriterOutputStreamTest#testWithBufferedWrite(java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.output.WriterOutputStreamTest" : [ "testLargeUTF16BEWithBufferedWrite", "testLargeUTF16LEWithBufferedWrite", "testLargeUTF16WithBufferedWrite" ]
          }
        },
        "org.apache.commons.io.output.WriterOutputStreamTest#testWithSingleByteWrite(java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.output.WriterOutputStreamTest" : [ "testUTF16BEWithSingleByteWrite", "testUTF16LEWithSingleByteWrite" ]
          }
        }
      }
    },
    "99c5008d71b61f84a114038b064d58c837ee7ed6" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "ab3f42c7e5d084d0b7a05c747678bebbc2de676d",
      "changedClazzes" : {
        "org.apache.commons.io.output.WriterOutputStreamTest#testLargeUTF16BEWithBufferedWrite" : { },
        "org.apache.commons.io.output.WriterOutputStreamTest#testLargeUTF16LEWithBufferedWrite" : { },
        "org.apache.commons.io.output.WriterOutputStreamTest#testLargeUTF16WithBufferedWrite" : { },
        "org.apache.commons.io.output.WriterOutputStreamTest#testUTF16BEWithBufferedWrite" : { },
        "org.apache.commons.io.output.WriterOutputStreamTest#testUTF16LEWithBufferedWrite" : { },
        "org.apache.commons.io.output.WriterOutputStreamTest#testUTF16WithBufferedWrite" : { }
      }
    },
    "5fc886996cfda333600cfe3e05c26f87d20de4d6" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "99c5008d71b61f84a114038b064d58c837ee7ed6",
      "changedClazzes" : { }
    },
    "7a36e6f02afc7fe925ec53f4b503932a8ec0a562" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "5fc886996cfda333600cfe3e05c26f87d20de4d6",
      "changedClazzes" : { }
    },
    "9e5ee12e1aac345affebd0ac7313bf04000fd9ad" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "7a36e6f02afc7fe925ec53f4b503932a8ec0a562",
      "changedClazzes" : { }
    },
    "5abb5e227907a855e34fd22719836871d370956f" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "9e5ee12e1aac345affebd0ac7313bf04000fd9ad",
      "changedClazzes" : {
        "org.apache.commons.io.output.FileWriterWithEncodingTest#testDifferentEncoding" : {
          "testcases" : {
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "testDifferentEncoding" ]
          }
        }
      }
    },
    "997d8231b9559404aa2447265c6002d6a47d1453" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "5abb5e227907a855e34fd22719836871d370956f",
      "changedClazzes" : {
        "org.apache.commons.io.output.FileWriterWithEncodingTest" : {
          "testcases" : {
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testConstructor_fileName_nullFile", "testDifferentEncoding", "testSameEncoding" ]
          }
        }
      }
    },
    "58c093f5d823641031e6a4d6655e8dac0a477ede" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "997d8231b9559404aa2447265c6002d6a47d1453",
      "changedClazzes" : { }
    },
    "dccf793eb78ddc93de1f745f39fb58251fc81ad0" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "58c093f5d823641031e6a4d6655e8dac0a477ede",
      "changedClazzes" : {
        "org.apache.commons.io.ByteOrderMark#<init>(java.lang.String,int)" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testEmptyBufferWithBOM", "testEmptyBufferWithoutBOM" ]
          }
        },
        "org.apache.commons.io.ByteOrderMark#get(int)" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testEmptyBufferWithBOM" ]
          }
        },
        "org.apache.commons.io.ByteOrderMark#length" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testEmptyBufferWithBOM", "testEmptyBufferWithoutBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStream#<init>(java.io.InputStream)" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testEmptyBufferWithBOM", "testEmptyBufferWithoutBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStream#find" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testEmptyBufferWithBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStream#getBOM" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testEmptyBufferWithBOM", "testEmptyBufferWithoutBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStream#matches(org.apache.commons.io.ByteOrderMark)" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testEmptyBufferWithBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStream#read(byte[])" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testEmptyBufferWithBOM", "testEmptyBufferWithoutBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStream#readFirstBytes" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testEmptyBufferWithBOM", "testEmptyBufferWithoutBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testAvailableWithBOM", "testAvailableWithoutBOM", "testClose", "testEmptyBufferWithBOM", "testEmptyBufferWithoutBOM", "testGetBOMFirstThenRead", "testGetBOMFirstThenReadInclude", "testLargeBufferWithBOM", "testLargeBufferWithoutBOM", "testLeadingNonBOMBufferedRead", "testLeadingNonBOMSingleRead", "testMarkResetAfterReadWithBOM", "testMarkResetAfterReadWithoutBOM", "testMarkResetBeforeReadWithBOM", "testMarkResetBeforeReadWithoutBOM", "testNoBoms", "testReadEmpty", "testReadSmall", "testReadWithBOM", "testReadWithBOMInclude", "testReadWithMultipleBOM", "testReadWithoutBOM", "testSkipWithBOM", "testSkipWithoutBOM", "testSmallBufferWithBOM", "testSmallBufferWithoutBOM", "testSupportCode" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#createDataStream(byte[],boolean)" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testEmptyBufferWithBOM", "testEmptyBufferWithoutBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#testEmptyBufferWithBOM" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testEmptyBufferWithBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#testEmptyBufferWithoutBOM" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testEmptyBufferWithoutBOM" ]
          }
        },
        "org.apache.commons.io.input.ProxyInputStream#<init>(java.io.InputStream)" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testEmptyBufferWithBOM", "testEmptyBufferWithoutBOM" ]
          }
        }
      }
    },
    "8cddc2d38e778440bfa1f010be664dd87b349fba" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "dccf793eb78ddc93de1f745f39fb58251fc81ad0",
      "changedClazzes" : {
        "org.apache.commons.io.monitor.FileAlterationMonitor" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor", "testMonitor" ]
          }
        }
      }
    },
    "268dd3f018c9153671215a858be0c6e4cc40125b" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "8cddc2d38e778440bfa1f010be664dd87b349fba",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils#cleanDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.FileUtils#deleteDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.FileUtils#isSymlink(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.FileUtils#openOutputStream(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.FileUtils#touch(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#isSystemWindows" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.IOCase#<init>(java.lang.String,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.IOCase#checkEndsWith(java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.IOUtils#closeQuietly(java.io.Closeable)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.comparator.AbstractFileComparator#<init>" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.comparator.NameFileComparator#<init>" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.comparator.ReverseComparator#<init>(java.util.Comparator)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.filefilter.AbstractFileFilter#<init>" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.filefilter.AndFileFilter#<init>(java.util.List)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.filefilter.AndFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.filefilter.DirectoryFileFilter#<init>" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.filefilter.DirectoryFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFileFilter#<init>" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#and(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#directoryFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#fileFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#nameFileFilter(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#notFileFilter(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#or(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#suffixFileFilter(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#toList(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.filefilter.HiddenFileFilter#<init>" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.filefilter.NameFileFilter#<init>(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.filefilter.NotFileFilter#<init>(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.filefilter.OrFileFilter#<init>(java.util.List)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.filefilter.OrFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.filefilter.SuffixFileFilter#<init>(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.filefilter.SuffixFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.monitor.AbstractMonitorTestCase#checkCollectionSizes(java.lang.String,int,int,int,int,int,int)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.monitor.AbstractMonitorTestCase#checkCollectionsEmpty(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.monitor.AbstractMonitorTestCase#createObserver(java.io.File,java.io.FileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.monitor.AbstractMonitorTestCase#setUp" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.monitor.AbstractMonitorTestCase#sleepHandleInterruped(long)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.monitor.AbstractMonitorTestCase#tearDown" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.monitor.AbstractMonitorTestCase#touch(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFileListener#<init>(boolean)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFileListener#clear" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFileListener#getChangedDirectories" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFileListener#getChangedFiles" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFileListener#getCreatedDirectories" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFileListener#getCreatedFiles" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFileListener#getDeletedDirectories" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFileListener#getDeletedFiles" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFileListener#onFileCreate(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFileListener#onFileDelete(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFileListener#onStart(org.apache.commons.io.monitor.FileAlterationObserver)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFileListener#onStop(org.apache.commons.io.monitor.FileAlterationObserver)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationListenerAdaptor#<init>" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationListenerAdaptor#onFileCreate(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationListenerAdaptor#onFileDelete(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationListenerAdaptor#onStart(org.apache.commons.io.monitor.FileAlterationObserver)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationListenerAdaptor#onStop(org.apache.commons.io.monitor.FileAlterationObserver)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationMonitor" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor", "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationMonitor#<init>(long)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationMonitor#addObserver(org.apache.commons.io.monitor.FileAlterationObserver)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationMonitor#getInterval" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationMonitor#getThreadFactory" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationMonitor#run" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationMonitor#setThreadFactory(java.util.concurrent.ThreadFactory)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationMonitor#start" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationMonitor#stop" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor", "testMonitor", "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationMonitorTestCase#checkFile(java.lang.String,java.io.File,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationMonitorTestCase#setUp" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationMonitorTestCase#testThreadFactory" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationObserver#<init>(java.io.File,java.io.FileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationObserver#addListener(org.apache.commons.io.monitor.FileAlterationListener)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationObserver#checkAndNotify" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationObserver#createFileEntry(org.apache.commons.io.monitor.FileEntry,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationObserver#destroy" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationObserver#doCreate(org.apache.commons.io.monitor.FileEntry)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationObserver#doDelete(org.apache.commons.io.monitor.FileEntry)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationObserver#initialize" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationObserver#listFiles(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.monitor.FileEntry#<init>(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.monitor.FileEntry#getChildren" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.monitor.FileEntry#getFile" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.monitor.FileEntry#isDirectory" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.monitor.FileEntry#newChildInstance(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.monitor.FileEntry#refresh(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.monitor.FileEntry#setChildren(org.apache.commons.io.monitor.FileEntry[])" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#<init>(int)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#close" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#toString" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#write(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        }
      }
    },
    "6322084e97e79ddbc810123960216227c3283cb1" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "268dd3f018c9153671215a858be0c6e4cc40125b",
      "changedClazzes" : {
        "org.apache.commons.io.monitor.FileAlterationMonitor" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor", "testMonitor", "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationMonitorTestCase#testMonitor" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationMonitorTestCase#testThreadFactory" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testThreadFactory" ]
          }
        }
      }
    },
    "97191772383bc267d16497c884a1c8b90033911b" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "6322084e97e79ddbc810123960216227c3283cb1",
      "changedClazzes" : {
        "org.apache.commons.io.ByteOrderMark#<init>(java.lang.String,int)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testHttpContent", "testRawContent" ]
          }
        },
        "org.apache.commons.io.ByteOrderMark#get(int)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testHttpContent", "testRawContent" ]
          }
        },
        "org.apache.commons.io.ByteOrderMark#getCharsetName" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testHttpContent", "testRawContent" ]
          }
        },
        "org.apache.commons.io.ByteOrderMark#length" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testHttpContent", "testRawContent" ]
          }
        },
        "org.apache.commons.io.IOUtils#copy(java.io.Reader,java.io.Writer)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testHttpContent", "testRawContent" ]
          }
        },
        "org.apache.commons.io.IOUtils#copyLarge(java.io.Reader,java.io.Writer)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testHttpContent", "testRawContent" ]
          }
        },
        "org.apache.commons.io.IOUtils#toString(java.io.Reader)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testHttpContent", "testRawContent" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStream#<init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testHttpContent", "testRawContent" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStream#find" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testHttpContent", "testRawContent" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStream#getBOM" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testHttpContent", "testRawContent" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStream#getBOMCharsetName" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testHttpContent", "testRawContent" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStream#mark(int)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testHttpContent", "testRawContent" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStream#matches(org.apache.commons.io.ByteOrderMark)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testHttpContent", "testRawContent" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStream#read" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testHttpContent", "testRawContent" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStream#readFirstBytes" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testHttpContent", "testRawContent" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStream#reset" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testHttpContent", "testRawContent" ]
          }
        },
        "org.apache.commons.io.input.ProxyInputStream#<init>(java.io.InputStream)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testHttpContent", "testRawContent" ]
          }
        },
        "org.apache.commons.io.input.ProxyInputStream#available" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testHttpContent", "testRawContent" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReader" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testEncodingAttributeXML", "testHttp", "testRawBom", "testRawNoBom" ],
            "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testAppXml" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReader#<init>(java.io.InputStream)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testHttpContent" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReader#calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testHttpContent" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReader#calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testRawContent" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReader#doHttpStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,java.lang.String,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testHttpContent" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReader#doRawStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testRawContent" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReader#getEncoding" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testHttpContent", "testRawContent" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReader#getXmlProlog(java.io.InputStream,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testHttpContent", "testRawContent" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReader#read(char[],int,int)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testHttpContent", "testRawContent" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReaderTest" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testEncodingAttributeXML", "testHttp", "testHttpContent", "testRawBom", "testRawContent", "testRawNoBom" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReaderTest#getXML(java.lang.String,java.lang.String,java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testHttpContent", "testRawContent" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReaderTest#testHttpContent" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testHttpContent" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReaderTest#testRawContent" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testRawContent" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#<init>" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testHttpContent", "testRawContent" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#close" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testHttpContent", "testRawContent" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#toString" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testHttpContent", "testRawContent" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#write(char[],int,int)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testHttpContent", "testRawContent" ]
          }
        }
      }
    },
    "f37d91a5137eb89a9c8053cb4eefc523232e7c00" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "97191772383bc267d16497c884a1c8b90033911b",
      "changedClazzes" : { }
    },
    "ecb36dc6789572cb6d93a8ee32bbb65d1363f779" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "f37d91a5137eb89a9c8053cb4eefc523232e7c00",
      "changedClazzes" : { }
    },
    "23ef3dbd2ff30ac49fc20599d59281a5aa3528e0" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "ecb36dc6789572cb6d93a8ee32bbb65d1363f779",
      "changedClazzes" : { }
    },
    "c76a64eff364dfe74ae9a4cace0b1022cf79b8f7" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "23ef3dbd2ff30ac49fc20599d59281a5aa3528e0",
      "changedClazzes" : { }
    },
    "5e3cf432e9ee1b027d45e8833beb6807ba35c0e9" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "c76a64eff364dfe74ae9a4cace0b1022cf79b8f7",
      "changedClazzes" : { }
    },
    "44fad86bcbaab3cc71bc0b844a4f5ef66e6be852" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "5e3cf432e9ee1b027d45e8833beb6807ba35c0e9",
      "changedClazzes" : { }
    },
    "90c3202b561339a50c54b14eaa2fb6f09aadc2fa" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "44fad86bcbaab3cc71bc0b844a4f5ef66e6be852",
      "changedClazzes" : { }
    },
    "c7a7418920656c7fc1e42cdd4fb8760ccb1ce5f7" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "90c3202b561339a50c54b14eaa2fb6f09aadc2fa",
      "changedClazzes" : {
        "org.apache.commons.io.monitor.FileAlterationObserver" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor", "testMonitor", "testThreadFactory" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile", "testToString" ]
          }
        }
      }
    },
    "476ccd8898ca8c491047a993e2310fe94affe086" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "c7a7418920656c7fc1e42cdd4fb8760ccb1ce5f7",
      "changedClazzes" : { }
    },
    "8ff60c3e444c84396c54eb5621c829067954f66d" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "476ccd8898ca8c491047a993e2310fe94affe086",
      "changedClazzes" : {
        "org.apache.commons.io.input.ClassLoaderObjectInputStream" : {
          "testcases" : {
            "org.apache.commons.io.input.ClassLoaderObjectInputStreamTest" : [ "testExpected" ]
          }
        },
        "org.apache.commons.io.input.ClassLoaderObjectInputStream#<init>(java.lang.ClassLoader,java.io.InputStream)" : {
          "testcases" : {
            "org.apache.commons.io.input.ClassLoaderObjectInputStreamTest" : [ "testResolveProxyClass" ]
          }
        },
        "org.apache.commons.io.input.ClassLoaderObjectInputStream#resolveProxyClass(java.lang.String[])" : {
          "testcases" : {
            "org.apache.commons.io.input.ClassLoaderObjectInputStreamTest" : [ "testResolveProxyClass" ]
          }
        },
        "org.apache.commons.io.input.ClassLoaderObjectInputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.input.ClassLoaderObjectInputStreamTest" : [ "testExpected", "testResolveProxyClass" ]
          }
        },
        "org.apache.commons.io.input.ClassLoaderObjectInputStreamTest#testResolveProxyClass" : {
          "testcases" : {
            "org.apache.commons.io.input.ClassLoaderObjectInputStreamTest" : [ "testResolveProxyClass" ]
          }
        }
      }
    },
    "1efc3cfe76f9667516e4639dbc05158a974f2935" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "8ff60c3e444c84396c54eb5621c829067954f66d",
      "changedClazzes" : {
        "org.apache.commons.io.monitor.FileAlterationMonitor" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor", "testMonitor", "testThreadFactory" ]
          }
        }
      }
    },
    "2caf0f9f11f3eeca9cea906929e7366c76826466" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "1efc3cfe76f9667516e4639dbc05158a974f2935",
      "changedClazzes" : { }
    },
    "0582d2e11ce7585c53ffcc9c25c2ab68ea40f713" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "2caf0f9f11f3eeca9cea906929e7366c76826466",
      "changedClazzes" : { }
    },
    "76436482b20d36a96aaa1fece95511c6d07f3bf8" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "0582d2e11ce7585c53ffcc9c25c2ab68ea40f713",
      "changedClazzes" : {
        "org.apache.commons.io.monitor.FileAlterationMonitor#stop(long)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor", "testThreadFactory" ]
          }
        }
      }
    },
    "b188f593df2bd24b8f8c2f14d531e2d33305ec4c" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "76436482b20d36a96aaa1fece95511c6d07f3bf8",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerNull" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerNull" ],
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce" ],
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testCleanEmpty", "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile", "testThrowsOnNullList" ],
            "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" : [ "testCleanDirWithASymlinkDir", "testCleanDirWithParentSymlinks", "testCleanDirWithSymlinkFile", "testCorrectlyIdentifySymlinkWithParentSymLink", "testIdentifiesSymlinkDir", "testIdentifiesSymlinkFile", "testStillClearsIfGivenDirectoryIsASymlink" ],
            "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension", "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryPreserveDates", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToItself", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testCopyURLToFileWithTimeout", "testDecodeUrl", "testDecodeUrlEncodingUtf8", "testDecodeUrlLenient", "testDecodeUrlNullSafe", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testGetTempDirectory", "testGetTempDirectoryPath", "testGetUserDirectory", "testGetUserDirectoryPath", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToStringWithDefaultEncoding", "testReadFileToStringWithEncoding", "testReadLines", "testSizeOf", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFile5", "testToFileUtf8", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLines_3arg_nullSeparator", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteStringToFile1", "testWriteStringToFile2", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ],
            "org.apache.commons.io.FileUtilsWaitForTestCase" : [ "testWaitFor" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedError_IO_128", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPrefix", "testGetPrefixLength", "testIndexOfExtension", "testIndexOfLastSeparator", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testNormalize", "testNormalizeNoEndSeparator", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testByteArrayToOutputStream", "testByteArrayToString", "testByteArrayToWriter", "testCharSequenceToInputStream", "testConstants", "testInputStreamToBufferedInputStream", "testInputStreamToByteArray", "testInputStreamToCharArray", "testInputStreamToCharArrayWithEncoding", "testInputStreamToString", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testReaderToCharArray", "testReaderToString", "testSkipFileInput", "testSkipFileReader", "testSkipReader", "testSkipStream", "testStringToByteArray", "testStringToInputStream", "testStringToOutputStream", "testStringToWriter" ],
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFilteringBufferedReader", "testFilteringFileReader", "testInvalidEncoding", "testMissingFile", "testNextLineOnlyDefaultEncoding", "testNextOnly", "testNextWithException", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorArrayNull", "testConstructorIterable", "testConstructorIterableNull" ],
            "org.apache.commons.io.comparator.DirectoryFileComparatorTest" : [ "testSortArray", "testSortList" ],
            "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.NameFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.PathFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testAnd", "testCanRead", "testCanWrite", "testDelegateFileFilter", "testDeprecatedWildcard", "testDirectory", "testEmpty", "testFalse", "testFileFilterUtils_and", "testFileFilterUtils_or", "testFiles", "testFilterArray", "testFilterArrayNullParameters", "testFilterArray_fromList", "testFilterList", "testFilterListNullParameters", "testFilterList_fromArray", "testFilterSet", "testFilterSetNullParameters", "testFilterSet_fromArray", "testHidden", "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNameFilterNullArrayArgument", "testNameFilterNullListArgument", "testNot", "testOr", "testPrefix", "testPrefixCaseInsensitive", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testTrue", "testWildcard" ],
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ],
            "org.apache.commons.io.input.TailerTest" : [ "testStopWithNoFile", "testStopWithNoFileUsingExecutor", "testTailer" ],
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor", "testMonitor", "testThreadFactory" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile", "testToString" ],
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testConstructor_fileName_nullFile", "testDifferentEncoding", "testSameEncoding" ],
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testFileLocked", "testFileNotLocked" ]
          }
        },
        "org.apache.commons.io.FileUtils#cleanDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.FileUtils#deleteDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.FileUtils#forceDelete(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.FileUtils#isSymlink(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.FileUtils#openInputStream(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.FileUtils#openOutputStream(java.io.File,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.FileUtils#readFileToString(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.FileUtils#write(java.io.File,java.lang.CharSequence,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.FileUtils#writeByteArrayToFile(java.io.File,byte[],boolean)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.FileUtils#writeLines(java.io.File,java.lang.String,java.util.Collection,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.FileUtils#writeStringToFile(java.io.File,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryPreserveDates", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToItself", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testCopyURLToFileWithTimeout", "testDecodeUrl", "testDecodeUrlEncodingUtf8", "testDecodeUrlLenient", "testDecodeUrlNullSafe", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testGetTempDirectory", "testGetTempDirectoryPath", "testGetUserDirectory", "testGetUserDirectoryPath", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToStringWithDefaultEncoding", "testReadFileToStringWithEncoding", "testReadLines", "testSizeOf", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFile5", "testToFileUtf8", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_3arg_nullSeparator", "testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile1", "testWriteStringToFile2", "testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#setUp" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#tearDown" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#isSystemWindows" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.IOUtils#closeQuietly(java.io.Closeable)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.IOUtils#copy(java.io.InputStream,java.io.Writer)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.IOUtils#copyLarge(java.io.Reader,java.io.Writer)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.IOUtils#toString(java.io.InputStream,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.IOUtils#write(java.lang.String,java.io.OutputStream)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.IOUtils#writeLines(java.util.Collection,java.lang.String,java.io.OutputStream)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#<init>" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#close" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#toString" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#write(char[],int,int)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#createFile(java.io.File,long)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#generateTestData(java.io.OutputStream,long)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#getTestDirectory" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#newFile(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" ]
          }
        }
      }
    },
    "54640931bd0a5e3aae2a0603774842f32bb77260" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "b188f593df2bd24b8f8c2f14d531e2d33305ec4c",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileCleanerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerNull" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerNull" ],
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce" ],
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testCleanEmpty", "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile", "testThrowsOnNullList" ],
            "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" : [ "testCleanDirWithASymlinkDir", "testCleanDirWithParentSymlinks", "testCleanDirWithSymlinkFile", "testCorrectlyIdentifySymlinkWithParentSymLink", "testIdentifiesSymlinkDir", "testIdentifiesSymlinkFile", "testStillClearsIfGivenDirectoryIsASymlink" ],
            "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension", "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryPreserveDates", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToItself", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testCopyURLToFileWithTimeout", "testDecodeUrl", "testDecodeUrlEncodingUtf8", "testDecodeUrlLenient", "testDecodeUrlNullSafe", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testGetTempDirectory", "testGetTempDirectoryPath", "testGetUserDirectory", "testGetUserDirectoryPath", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToStringWithDefaultEncoding", "testReadFileToStringWithEncoding", "testReadLines", "testSizeOf", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFile5", "testToFileUtf8", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_3arg_nullSeparator", "testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile1", "testWriteStringToFile2", "testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ],
            "org.apache.commons.io.FileUtilsWaitForTestCase" : [ "testWaitFor" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedError_IO_128", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPrefix", "testGetPrefixLength", "testIndexOfExtension", "testIndexOfLastSeparator", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testNormalize", "testNormalizeNoEndSeparator", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testByteArrayToOutputStream", "testByteArrayToString", "testByteArrayToWriter", "testCharSequenceToInputStream", "testConstants", "testInputStreamToBufferedInputStream", "testInputStreamToByteArray", "testInputStreamToCharArray", "testInputStreamToCharArrayWithEncoding", "testInputStreamToString", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testReaderToCharArray", "testReaderToString", "testSkipFileInput", "testSkipFileReader", "testSkipReader", "testSkipStream", "testStringToByteArray", "testStringToInputStream", "testStringToOutputStream", "testStringToWriter" ],
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFilteringBufferedReader", "testFilteringFileReader", "testInvalidEncoding", "testMissingFile", "testNextLineOnlyDefaultEncoding", "testNextOnly", "testNextWithException", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "testConstructorArrayNull", "testConstructorIterable", "testConstructorIterableNull" ],
            "org.apache.commons.io.comparator.DirectoryFileComparatorTest" : [ "testSortArray", "testSortList" ],
            "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.NameFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.PathFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testAnd", "testCanRead", "testCanWrite", "testDelegateFileFilter", "testDeprecatedWildcard", "testDirectory", "testEmpty", "testFalse", "testFileFilterUtils_and", "testFileFilterUtils_or", "testFiles", "testFilterArray", "testFilterArrayNullParameters", "testFilterArray_fromList", "testFilterList", "testFilterListNullParameters", "testFilterList_fromArray", "testFilterSet", "testFilterSetNullParameters", "testFilterSet_fromArray", "testHidden", "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNameFilterNullArrayArgument", "testNameFilterNullListArgument", "testNot", "testOr", "testPrefix", "testPrefixCaseInsensitive", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testTrue", "testWildcard" ],
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ],
            "org.apache.commons.io.input.TailerTest" : [ "testStopWithNoFile", "testStopWithNoFileUsingExecutor", "testTailer" ],
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor", "testMonitor", "testThreadFactory" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile", "testToString" ],
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testConstructor_fileName_nullFile", "testDifferentEncoding", "testSameEncoding" ],
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testFileLocked", "testFileNotLocked" ]
          }
        },
        "org.apache.commons.io.FileUtils#cleanDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testGetFile", "testGetFile_Parent" ]
          }
        },
        "org.apache.commons.io.FileUtils#deleteDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testGetFile", "testGetFile_Parent" ]
          }
        },
        "org.apache.commons.io.FileUtils#forceDelete(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testGetFile", "testGetFile_Parent" ]
          }
        },
        "org.apache.commons.io.FileUtils#getFile(java.io.File,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testGetFile" ]
          }
        },
        "org.apache.commons.io.FileUtils#isSymlink(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testGetFile", "testGetFile_Parent" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySize", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testContentEquals", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryPreserveDates", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToItself", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToSelf", "testCopyURLToFile", "testCopyURLToFileWithTimeout", "testDecodeUrl", "testDecodeUrlEncodingUtf8", "testDecodeUrlLenient", "testDecodeUrlNullSafe", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testGetFile", "testGetFile_Parent", "testGetTempDirectory", "testGetTempDirectoryPath", "testGetUserDirectory", "testGetUserDirectoryPath", "testIsFileNewerOlder", "testIterateFiles", "testListFiles", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToStringWithDefaultEncoding", "testReadFileToStringWithEncoding", "testReadLines", "testSizeOf", "testSizeOfDirectory", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFile5", "testToFileUtf8", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles4", "testToURLs1", "testTouch", "testWriteByteArrayToFile", "testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_3arg_nullSeparator", "testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile1", "testWriteStringToFile2", "testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#setUp" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testGetFile", "testGetFile_Parent" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#tearDown" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testGetFile", "testGetFile_Parent" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testGetFile" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testGetFile" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testGetFile_Parent" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testGetFile_Parent" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#isSystemWindows" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testGetFile", "testGetFile_Parent" ]
          }
        },
        "org.apache.commons.io.IOUtils#closeQuietly(java.io.Closeable)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testGetFile", "testGetFile_Parent" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#<init>(int)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testGetFile", "testGetFile_Parent" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#close" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testGetFile", "testGetFile_Parent" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#toString" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testGetFile", "testGetFile_Parent" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#write(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testGetFile", "testGetFile_Parent" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#createFile(java.io.File,long)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testGetFile", "testGetFile_Parent" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#generateTestData(java.io.OutputStream,long)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testGetFile", "testGetFile_Parent" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#getTestDirectory" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testGetFile", "testGetFile_Parent" ]
          }
        }
      }
    },
    "dea8bbe064f4b02db647965a6ac76af3a27b97f7" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "54640931bd0a5e3aae2a0603774842f32bb77260",
      "changedClazzes" : { }
    },
    "e9786fc569a2a73767d110ed7287d3fd8e9433ac" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "dea8bbe064f4b02db647965a6ac76af3a27b97f7",
      "changedClazzes" : {
        "org.apache.commons.io.input.TailerTest" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testStopWithNoFile", "testStopWithNoFileUsingExecutor", "testTailer" ]
          }
        },
        "org.apache.commons.io.input.TailerTest$TestTailerListener" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testStopWithNoFile", "testStopWithNoFileUsingExecutor", "testTailer" ]
          }
        }
      }
    },
    "7b1b3624d78e659e0bf80b061756d8c6e08640c6" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "d6c608bde40de82cb3b7dce47c51d5b0bc9e9d94",
      "changedClazzes" : {
        "org.apache.commons.io.input.CharSequenceInputStreamTest#isOddBallLegacyCharsetThatDoesNotSupportFrenchCharacters(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.CharSequenceInputStreamTest" : [ "testAvailable", "testBufferedRead_AvailableCharset" ]
          }
        }
      },
      "ignoredAffectedTests" : {
        "testcases" : {
          "org.apache.commons.io.input.CharSequenceInputStreamTest" : [ "testMarkReset_RequiredCharsets", "testSkip_RequiredCharsets" ]
        }
      }
    },
    "107bad489300392970d451e05fdc024e6d5f72b7" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "7b1b3624d78e659e0bf80b061756d8c6e08640c6",
      "changedClazzes" : { }
    },
    "98577e2da894d78c682637c5aa32e44ccd0c828f" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "107bad489300392970d451e05fdc024e6d5f72b7",
      "changedClazzes" : { }
    },
    "c33a5a0cfa12d48d66a700cc0ccd4e92cf4b22f7" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "98577e2da894d78c682637c5aa32e44ccd0c828f",
      "changedClazzes" : { }
    },
    "897654b205a41b40c36f705361b0e2366dae6499" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "c33a5a0cfa12d48d66a700cc0ccd4e92cf4b22f7",
      "changedClazzes" : { }
    },
    "d3e99ef44f911b0448f9f82020b71dc392bc0082" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "897654b205a41b40c36f705361b0e2366dae6499",
      "changedClazzes" : { }
    },
    "a878281e93d707edf92d12cefd4f7f307df9553c" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "d3e99ef44f911b0448f9f82020b71dc392bc0082",
      "changedClazzes" : { }
    },
    "3775e6d352985cac43e3b00572f8dcc9fe826ac5" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "a878281e93d707edf92d12cefd4f7f307df9553c",
      "changedClazzes" : { }
    },
    "54eeaee27c4d73a5b3b6ee84e53ee9046919a18b" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "3775e6d352985cac43e3b00572f8dcc9fe826ac5",
      "changedClazzes" : { }
    },
    "284886bd96c93740a26cac4c6e39a255fecf6062" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "54eeaee27c4d73a5b3b6ee84e53ee9046919a18b",
      "changedClazzes" : { }
    },
    "b2da444800d4c5d472da58a6b776891621d11718" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "284886bd96c93740a26cac4c6e39a255fecf6062",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils#waitFor(java.io.File,int)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsWaitForTestCase" : [ "testWaitFor", "testWaitForInterrupted" ]
          }
        }
      }
    },
    "2e72f7494ae59cb11b11a43f87839315390beaf4" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "b2da444800d4c5d472da58a6b776891621d11718",
      "changedClazzes" : { }
    },
    "9146eca01bc208c9923aff6880b220a0fe3e6894" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "2e72f7494ae59cb11b11a43f87839315390beaf4",
      "changedClazzes" : { }
    },
    "76c4ec233c1a61b1f46df6d6847b889c0a7a978a" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "9146eca01bc208c9923aff6880b220a0fe3e6894",
      "changedClazzes" : { }
    },
    "7506aa1a2c648ca3da724aa83de41bf526239add" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "76c4ec233c1a61b1f46df6d6847b889c0a7a978a",
      "changedClazzes" : { }
    },
    "8f06c0ddc6fb9d17075e688265ac3767259bc5e4" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "7506aa1a2c648ca3da724aa83de41bf526239add",
      "changedClazzes" : { }
    },
    "1d031d6eb6e6861f38e228bd587ff74e7f6fcce8" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "8f06c0ddc6fb9d17075e688265ac3767259bc5e4",
      "changedClazzes" : {
        "org.apache.commons.io.output.DemuxOutputStream#bindStream(java.io.OutputStream)" : {
          "testcases" : {
            "org.apache.commons.io.DemuxTestCase" : [ "testOutputStream" ]
          }
        },
        "org.apache.commons.io.output.DemuxOutputStream#close" : { },
        "org.apache.commons.io.output.DemuxOutputStream#flush" : { },
        "org.apache.commons.io.output.DemuxOutputStream#write(int)" : {
          "testcases" : {
            "org.apache.commons.io.DemuxTestCase" : [ "testOutputStream" ]
          }
        }
      }
    },
    "426cd8c52ef1732ad3a57171429bf7704d80bcc0" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "1d031d6eb6e6861f38e228bd587ff74e7f6fcce8",
      "changedClazzes" : {
        "org.apache.commons.io.output.DemuxOutputStream#flush" : { },
        "org.apache.commons.io.output.DemuxOutputStream#write(int)" : {
          "testcases" : {
            "org.apache.commons.io.DemuxTestCase" : [ "testOutputStream" ]
          }
        }
      }
    },
    "24df623ed69f86a13a2ec453f480a4e3f93b04ff" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "426cd8c52ef1732ad3a57171429bf7704d80bcc0",
      "changedClazzes" : {
        "org.apache.commons.io.input.CharSequenceInputStream#read" : {
          "testcases" : {
            "org.apache.commons.io.input.CharSequenceInputStreamTest" : [ "testAvailable", "testCharsetMismatchInfiniteLoop_RequiredCharsets", "testIO_356_B10_D10_S1_UTF8", "testIO_356_B10_D10_S2_UTF8", "testIO_356_B10_D13_S1_UTF8", "testLargeSingleByteRead_RequiredCharsets", "testLargeSingleByteRead_UTF8", "testMarkReset_USASCII", "testMarkReset_UTF8", "testSingleByteRead_RequiredCharsets", "testSingleByteRead_UTF16", "testSingleByteRead_UTF8", "testSkip_USASCII", "testSkip_UTF8" ]
          }
        }
      },
      "ignoredAffectedTests" : {
        "testcases" : {
          "org.apache.commons.io.input.CharSequenceInputStreamTest" : [ "testMarkReset_RequiredCharsets", "testSkip_RequiredCharsets" ]
        }
      }
    },
    "d2edcde68b3fbaa68aa892f90ebcd0d7ec104176" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "24df623ed69f86a13a2ec453f480a4e3f93b04ff",
      "changedClazzes" : { }
    },
    "2f02e64b2e90766ec1c35437b03b7d127c70af58" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "d2edcde68b3fbaa68aa892f90ebcd0d7ec104176",
      "changedClazzes" : { }
    },
    "7c7c9372db6d79f950ee16ec8943dd76fc0f06e4" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "2f02e64b2e90766ec1c35437b03b7d127c70af58",
      "changedClazzes" : { }
    },
    "45524d8bdb5640b81d13ee63a072e88c81981a7e" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "7c7c9372db6d79f950ee16ec8943dd76fc0f06e4",
      "changedClazzes" : { }
    },
    "318d3a57394781e05d2372fc2b2c095c02c25379" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "45524d8bdb5640b81d13ee63a072e88c81981a7e",
      "changedClazzes" : { }
    },
    "87a126f7cf7df3a3f83551a6421ab2ed1426a2d7" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "318d3a57394781e05d2372fc2b2c095c02c25379",
      "changedClazzes" : { }
    },
    "7908be284dc2e24e3d89787e64e272409d25338a" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "87a126f7cf7df3a3f83551a6421ab2ed1426a2d7",
      "changedClazzes" : { }
    },
    "14a08584c7cf63dfadddaeec102820f9de901c60" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "7908be284dc2e24e3d89787e64e272409d25338a",
      "changedClazzes" : {
        "org.apache.commons.io.output.WriterOutputStream#checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)" : {
          "testcases" : {
            "org.apache.commons.io.output.WriterOutputStreamTest" : [ "testFlush", "testLargeUTF8WithBufferedWrite", "testLargeUTF8WithSingleByteWrite", "testUTF16BEWithBufferedWrite", "testUTF16BEWithSingleByteWrite", "testUTF16LEWithBufferedWrite", "testUTF16LEWithSingleByteWrite", "testUTF16WithBufferedWrite", "testUTF16WithSingleByteWrite", "testUTF8WithBufferedWrite", "testUTF8WithSingleByteWrite", "testWriteImmediately" ]
          }
        }
      }
    },
    "31373778a21bf4124ba2c120e384db8062f0a2b6" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "14a08584c7cf63dfadddaeec102820f9de901c60",
      "changedClazzes" : { }
    },
    "4a0bf370411e027ee9c7e835f4834593917aa35d" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "31373778a21bf4124ba2c120e384db8062f0a2b6",
      "changedClazzes" : { }
    },
    "db551e3eb6805a69d4967265570811b011fd89f4" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "4a0bf370411e027ee9c7e835f4834593917aa35d",
      "changedClazzes" : { }
    },
    "679e9cfe62ff26b1205f0a9de7a96f12fc771230" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "db551e3eb6805a69d4967265570811b011fd89f4",
      "changedClazzes" : { }
    },
    "67f6f50a013d6eb6bdc4d0ed20b11081723d7054" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "679e9cfe62ff26b1205f0a9de7a96f12fc771230",
      "changedClazzes" : { }
    },
    "e1c5de1bbe2bf93ea9e5212c0f71fb7255dbdcff" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "67f6f50a013d6eb6bdc4d0ed20b11081723d7054",
      "changedClazzes" : { }
    },
    "d9406824aeba0e977c0692971a6dbb2e62823886" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "e1c5de1bbe2bf93ea9e5212c0f71fb7255dbdcff",
      "changedClazzes" : {
        "org.apache.commons.io.FileSystemUtils#performCommand(org.apache.commons.io.String[],int,long)" : { }
      }
    },
    "6c3a1bb78c3e92fded50c1c1e9f4c3e2e6e9dd4c" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "d9406824aeba0e977c0692971a6dbb2e62823886",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils#doCopyFile(java.io.File,java.io.File,boolean)" : { }
      }
    },
    "6aa7ba1d927cc57769d4ed589326053849b235ea" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "6c3a1bb78c3e92fded50c1c1e9f4c3e2e6e9dd4c",
      "changedClazzes" : {
        "org.apache.commons.io.FileSystemUtils#<init>" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceOS_String_InitError", "testGetFreeSpaceOS_String_NullPath", "testGetFreeSpaceOS_String_Other", "testGetFreeSpaceOS_String_Unix", "testGetFreeSpaceOS_String_Windows", "testGetFreeSpaceUnix_String_EmptyPath", "testGetFreeSpaceUnix_String_EmptyResponse", "testGetFreeSpaceUnix_String_InvalidResponse1", "testGetFreeSpaceUnix_String_InvalidResponse2", "testGetFreeSpaceUnix_String_InvalidResponse3", "testGetFreeSpaceUnix_String_InvalidResponse4", "testGetFreeSpaceUnix_String_LongResponse", "testGetFreeSpaceUnix_String_LongResponseKb", "testGetFreeSpaceUnix_String_NormalResponseFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbLinux", "testGetFreeSpaceUnix_String_NormalResponseKbSolaris", "testGetFreeSpaceUnix_String_NormalResponseLinux", "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpaceWindows_String_quoted", "testGetFreeSpace_String" ]
          }
        }
      }
    },
    "3733512df9b172e0fdcf6cb0bdb7bc76131f0c8f" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "6aa7ba1d927cc57769d4ed589326053849b235ea",
      "changedClazzes" : { }
    },
    "aa5a7fb583802372a8898b87bfd708412f839a0f" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "3733512df9b172e0fdcf6cb0bdb7bc76131f0c8f",
      "changedClazzes" : { }
    },
    "10b116c6559cd8ef555ac0962db515ec00b8ec0f" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "aa5a7fb583802372a8898b87bfd708412f839a0f",
      "changedClazzes" : { }
    },
    "ac1a0ccf92a8ae27f1cd9562da400b636b2feabd" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "10b116c6559cd8ef555ac0962db515ec00b8ec0f",
      "changedClazzes" : { }
    },
    "be499afb078e7c64c59ace84f811bfd2edfa9be6" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "ac1a0ccf92a8ae27f1cd9562da400b636b2feabd",
      "changedClazzes" : { }
    },
    "0ac6369a0239d5ba310b9a86e7c26e35acecb982" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "be499afb078e7c64c59ace84f811bfd2edfa9be6",
      "changedClazzes" : { }
    },
    "3206b41cc6b60ef2854273ab0eee5e406f9f6efa" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "0ac6369a0239d5ba310b9a86e7c26e35acecb982",
      "changedClazzes" : {
        "org.apache.commons.io.FileSystemUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceOS_String_InitError", "testGetFreeSpaceOS_String_NullPath", "testGetFreeSpaceOS_String_Other", "testGetFreeSpaceOS_String_Unix", "testGetFreeSpaceOS_String_Windows", "testGetFreeSpaceUnix_String_EmptyPath", "testGetFreeSpaceUnix_String_EmptyResponse", "testGetFreeSpaceUnix_String_InvalidResponse1", "testGetFreeSpaceUnix_String_InvalidResponse2", "testGetFreeSpaceUnix_String_InvalidResponse3", "testGetFreeSpaceUnix_String_InvalidResponse4", "testGetFreeSpaceUnix_String_LongResponse", "testGetFreeSpaceUnix_String_LongResponseKb", "testGetFreeSpaceUnix_String_NormalResponseFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbLinux", "testGetFreeSpaceUnix_String_NormalResponseKbSolaris", "testGetFreeSpaceUnix_String_NormalResponseLinux", "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpaceWindows_String_quoted", "testGetFreeSpace_String" ]
          }
        }
      }
    },
    "0c3612764955e209ecf1ebdae609b2656d6debc3" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "3206b41cc6b60ef2854273ab0eee5e406f9f6efa",
      "changedClazzes" : { }
    },
    "c1d92d87157b7d5a27aa989eff14e302e15f96d7" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "0c3612764955e209ecf1ebdae609b2656d6debc3",
      "changedClazzes" : {
        "org.apache.commons.io.LineIterator" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFilteringBufferedReader", "testFilteringFileReader", "testInvalidEncoding", "testMissingFile", "testNextLineOnlyDefaultEncoding", "testNextLineOnlyNullEncoding", "testNextLineOnlyUtf8Encoding", "testNextOnly", "testNextWithException", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ]
          }
        }
      }
    },
    "842bf6f447aac7d05c75c6143a5affe9e383b3b3" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "c1d92d87157b7d5a27aa989eff14e302e15f96d7",
      "changedClazzes" : {
        "org.apache.commons.io.ByteOrderFactory" : { }
      }
    },
    "4dc97b64005f0083b2facaa70f661138a4fa3fc0" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "842bf6f447aac7d05c75c6143a5affe9e383b3b3",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils#checksum(java.io.File,java.util.zip.Checksum)" : { },
        "org.apache.commons.io.FileUtils#contentEquals(java.io.File,java.io.File)" : { },
        "org.apache.commons.io.FileUtils#contentEqualsIgnoreEOL(java.io.File,java.io.File,java.lang.String)" : { },
        "org.apache.commons.io.FileUtils#copyInputStreamToFile(java.io.InputStream,java.io.File)" : { },
        "org.apache.commons.io.FileUtils#copyToFile(java.io.InputStream,java.io.File)" : { },
        "org.apache.commons.io.FileUtils#doCopyFile(java.io.File,java.io.File,boolean)" : { },
        "org.apache.commons.io.FileUtils#lineIterator(java.io.File,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testInvalidEncoding", "testMissingFile", "testNextLineOnlyDefaultEncoding", "testNextLineOnlyNullEncoding", "testNextLineOnlyUtf8Encoding", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ]
          }
        },
        "org.apache.commons.io.FileUtils#readFileToByteArray(java.io.File)" : { },
        "org.apache.commons.io.FileUtils#readFileToString(java.io.File,java.nio.charset.Charset)" : { },
        "org.apache.commons.io.FileUtils#readLines(java.io.File,java.nio.charset.Charset)" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testTailer" ]
          }
        },
        "org.apache.commons.io.FileUtils#touch(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile" ],
            "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" : [ "testCleanDirWithASymlinkDir", "testCleanDirWithParentSymlinks", "testCleanDirWithSymlinkFile", "testIdentifiesSymlinkFile", "testStillClearsIfGivenDirectoryIsASymlink" ],
            "org.apache.commons.io.FileUtilsDirectoryContainsTestCase" : [ "testCanonicalPath", "testDirectoryContainsDirectory", "testDirectoryContainsFile", "testDirectoryDoesNotContainFile", "testDirectoryDoesNotContainsDirectory", "testDirectoryDoesNotExist", "testFileDoesNotExist", "testFileDoesNotExistBug", "testIO466", "testSameFile", "testUnrealizedContainment" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension", "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testMagicNumberFileFilterBytes" ],
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor", "testThreadFactory" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.FileUtils#writeByteArrayToFile(java.io.File,byte[],int,int,boolean)" : { },
        "org.apache.commons.io.FileUtils#writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testFilteringBufferedReader", "testFilteringFileReader", "testInvalidEncoding", "testNextLineOnlyDefaultEncoding", "testNextLineOnlyNullEncoding", "testNextLineOnlyUtf8Encoding", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ]
          }
        },
        "org.apache.commons.io.FileUtils#writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterString" ]
          }
        },
        "org.apache.commons.io.IOUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy" ],
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce", "testDeleteNormal", "testDeleteQuietlyNormal" ],
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceUnix_String_EmptyResponse", "testGetFreeSpaceUnix_String_InvalidResponse1", "testGetFreeSpaceUnix_String_InvalidResponse2", "testGetFreeSpaceUnix_String_InvalidResponse3", "testGetFreeSpaceUnix_String_InvalidResponse4", "testGetFreeSpaceUnix_String_LongResponse", "testGetFreeSpaceUnix_String_LongResponseKb", "testGetFreeSpaceUnix_String_NormalResponseFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbLinux", "testGetFreeSpaceUnix_String_NormalResponseKbSolaris", "testGetFreeSpaceUnix_String_NormalResponseLinux", "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpaceWindows_String_quoted", "testGetFreeSpace_String" ],
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile" ],
            "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" : [ "testCleanDirWithASymlinkDir", "testCleanDirWithParentSymlinks", "testCleanDirWithSymlinkFile", "testIdentifiesSymlinkFile", "testStillClearsIfGivenDirectoryIsASymlink" ],
            "org.apache.commons.io.FileUtilsDirectoryContainsTestCase" : [ "testCanonicalPath", "testDirectoryContainsDirectory", "testDirectoryContainsFile", "testDirectoryDoesNotContainFile", "testDirectoryDoesNotContainsDirectory", "testDirectoryDoesNotExist", "testFileDoesNotExist", "testFileDoesNotExistBug", "testIO466", "testSameFile", "testUnrealizedContainment" ],
            "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension", "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedError_IO_128", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetBaseName_with_nullByte", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetFullPathNoEndSeparator_IO_248", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPathNoEndSeparator_with_null_byte", "testGetPath_with_nullbyte", "testGetPrefix", "testGetPrefixLength", "testGetPrefix_with_nullbyte", "testIndexOfExtension", "testIndexOfLastSeparator", "testInjectionFailure", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testIsExtension_injection", "testNormalize", "testNormalizeNoEndSeparator", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin", "testNormalize_with_nullbytes", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToOutputStreamWithBufferSize", "testCopy_inputStreamToOutputStream_nullIn", "testCopy_inputStreamToOutputStream_nullOut", "testCopy_inputStreamToWriter", "testCopy_inputStreamToWriter_Encoding", "testCopy_inputStreamToWriter_Encoding_nullEncoding", "testCopy_inputStreamToWriter_Encoding_nullIn", "testCopy_inputStreamToWriter_Encoding_nullOut", "testCopy_inputStreamToWriter_nullIn", "testCopy_inputStreamToWriter_nullOut", "testCopy_readerToOutputStream", "testCopy_readerToOutputStream_Encoding", "testCopy_readerToOutputStream_Encoding_nullEncoding", "testCopy_readerToOutputStream_Encoding_nullIn", "testCopy_readerToOutputStream_Encoding_nullOut", "testCopy_readerToOutputStream_nullIn", "testCopy_readerToOutputStream_nullOut", "testCopy_readerToWriter", "testCopy_readerToWriter_nullIn", "testCopy_readerToWriter_nullOut" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testAsBufferedInputStream", "testAsBufferedInputStreamWithBufferSize", "testAsBufferedNull", "testAsBufferedOutputStream", "testAsBufferedOutputStreamWithBufferSize", "testAsBufferedReader", "testAsBufferedReaderWithBufferSize", "testAsBufferedWriter", "testAsBufferedWriterWithBufferSize", "testCloseQuietly_AllCloseableIOException", "testCloseQuietly_CloseableIOException", "testCloseQuietly_Selector", "testCloseQuietly_SelectorIOException", "testCloseQuietly_SelectorNull", "testCloseQuietly_SelectorTwice", "testCloseQuietly_ServerSocket", "testCloseQuietly_ServerSocketIOException", "testCloseQuietly_Socket", "testCloseQuietly_SocketIOException", "testConstants", "testContentEqualsIgnoreEOL", "testContentEquals_InputStream_InputStream", "testContentEquals_Reader_Reader", "testCopyLarge_CharExtraLength", "testCopyLarge_CharFullLength", "testCopyLarge_CharNoSkip", "testCopyLarge_CharSkip", "testCopyLarge_CharSkipInvalid", "testCopyLarge_ExtraLength", "testCopyLarge_FullLength", "testCopyLarge_NoSkip", "testCopyLarge_Skip", "testCopyLarge_SkipInvalid", "testCopy_ByteArray_OutputStream", "testCopy_ByteArray_Writer", "testCopy_String_Writer", "testReadFully_InputStream_ByteArray", "testReadFully_InputStream_Offset", "testReadFully_InputStream__ReturnByteArray", "testReadFully_ReadableByteChannel", "testReadFully_Reader", "testReadFully_Reader_Offset", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testRead_ReadableByteChannel", "testSkipFully_InputStream", "testSkipFully_ReadableByteChannel", "testSkipFully_Reader", "testSkip_FileReader", "testSkip_InputStream", "testSkip_ReadableByteChannel", "testStringToOutputStream", "testToBufferedInputStreamWithBufferSize_InputStream", "testToBufferedInputStream_InputStream", "testToByteArray_InputStream", "testToByteArray_InputStream_NegativeSize", "testToByteArray_InputStream_Size", "testToByteArray_InputStream_SizeIllegal", "testToByteArray_InputStream_SizeLong", "testToByteArray_InputStream_SizeZero", "testToByteArray_Reader", "testToByteArray_String", "testToByteArray_URI", "testToByteArray_URL", "testToByteArray_URLConnection", "testToCharArray_InputStream", "testToCharArray_InputStream_CharsetName", "testToCharArray_Reader", "testToInputStream_CharSequence", "testToInputStream_String", "testToString_ByteArray", "testToString_InputStream", "testToString_Reader", "testToString_URI", "testToString_URI_CharsetName", "testToString_URI_CharsetNameNull", "testToString_URL", "testToString_URL_CharsetName", "testToString_URL_CharsetNameNull" ],
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWriteLines_OutputStream", "testWriteLines_OutputStream_Encoding", "testWriteLines_OutputStream_Encoding_nullData", "testWriteLines_OutputStream_Encoding_nullEncoding", "testWriteLines_OutputStream_Encoding_nullSeparator", "testWriteLines_OutputStream_Encoding_nullStream", "testWriteLines_OutputStream_nullData", "testWriteLines_OutputStream_nullSeparator", "testWriteLines_OutputStream_nullStream", "testWriteLines_Writer", "testWriteLines_Writer_nullData", "testWriteLines_Writer_nullSeparator", "testWriteLines_Writer_nullStream", "testWrite_byteArrayToOutputStream", "testWrite_byteArrayToOutputStream_nullData", "testWrite_byteArrayToOutputStream_nullStream", "testWrite_byteArrayToWriter", "testWrite_byteArrayToWriter_Encoding", "testWrite_byteArrayToWriter_Encoding_nullData", "testWrite_byteArrayToWriter_Encoding_nullEncoding", "testWrite_byteArrayToWriter_Encoding_nullWriter", "testWrite_byteArrayToWriter_nullData", "testWrite_byteArrayToWriter_nullWriter", "testWrite_charArrayToOutputStream", "testWrite_charArrayToOutputStream_Encoding", "testWrite_charArrayToOutputStream_Encoding_nullData", "testWrite_charArrayToOutputStream_Encoding_nullStream", "testWrite_charArrayToOutputStream_nullData", "testWrite_charArrayToOutputStream_nullEncoding", "testWrite_charArrayToOutputStream_nullStream", "testWrite_charArrayToWriter", "testWrite_charArrayToWriter_Encoding_nullData", "testWrite_charArrayToWriter_Encoding_nullStream", "testWrite_charSequenceToOutputStream", "testWrite_charSequenceToOutputStream_Encoding", "testWrite_charSequenceToOutputStream_Encoding_nullData", "testWrite_charSequenceToOutputStream_Encoding_nullStream", "testWrite_charSequenceToOutputStream_nullData", "testWrite_charSequenceToOutputStream_nullEncoding", "testWrite_charSequenceToOutputStream_nullStream", "testWrite_charSequenceToWriter", "testWrite_charSequenceToWriter_Encoding_nullData", "testWrite_charSequenceToWriter_Encoding_nullStream", "testWrite_stringToOutputStream", "testWrite_stringToOutputStream_Encoding", "testWrite_stringToOutputStream_Encoding_nullData", "testWrite_stringToOutputStream_Encoding_nullStream", "testWrite_stringToOutputStream_nullData", "testWrite_stringToOutputStream_nullEncoding", "testWrite_stringToOutputStream_nullStream", "testWrite_stringToWriter", "testWrite_stringToWriter_Encoding_nullData", "testWrite_stringToWriter_Encoding_nullStream" ],
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testFilteringBufferedReader", "testFilteringFileReader", "testInvalidEncoding", "testMissingFile", "testNextLineOnlyDefaultEncoding", "testNextLineOnlyNullEncoding", "testNextLineOnlyUtf8Encoding", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "constructorArray_Null", "constructorIterable_Null", "constructorIterable_order" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testCanRead", "testCanWrite", "testEmpty", "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testSizeFilter" ],
            "org.apache.commons.io.input.BoundedInputStreamTest" : [ "testReadArray" ],
            "org.apache.commons.io.input.TailerTest" : [ "testBufferBreak", "testIO335", "testInterrupt", "testLongFile", "testMultiByteBreak", "testStopWithNoFile", "testStopWithNoFileUsingExecutor", "testTailer", "testTailerEndOfFileReached", "testTailerEof" ],
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testHttpContent", "testRawContent" ],
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor", "testThreadFactory" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ],
            "org.apache.commons.io.output.ByteArrayOutputStreamTestCase" : [ "testToInputStream", "testToInputStreamWithReset" ],
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testWriteToLarge" ],
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "constructor_File_directory", "constructor_File_encoding_badEncoding", "constructor_File_nullFile", "constructor_fileName_nullFile", "sameEncoding_CharsetEncoder_constructor", "sameEncoding_Charset_constructor", "sameEncoding_null_Charset_constructor", "sameEncoding_string_CharsetEncoder_constructor", "sameEncoding_string_Charset_constructor", "sameEncoding_string_constructor", "sameEncoding_string_string_constructor", "testDifferentEncoding" ],
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testConstructor_fileName_nullFile", "testFileLocked", "testFileNotLocked" ]
          }
        },
        "org.apache.commons.io.filefilter.MagicNumberFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset", "testMagicNumberFileFilterValidation" ]
          }
        },
        "org.apache.commons.io.input.Tailer" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testBufferBreak", "testIO335", "testInterrupt", "testLongFile", "testMultiByteBreak", "testStopWithNoFile", "testStopWithNoFileUsingExecutor", "testTailer", "testTailerEndOfFileReached", "testTailerEof" ]
          }
        },
        "org.apache.commons.io.output.DeferredFileOutputStream#writeTo(java.io.OutputStream)" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testWriteToLarge", "testWriteToSmall" ]
          }
        },
        "org.apache.commons.io.output.FileWriterWithEncoding" : {
          "testcases" : {
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "constructor_File_directory", "constructor_File_encoding_badEncoding", "constructor_File_nullFile", "sameEncoding_CharsetEncoder_constructor", "sameEncoding_Charset_constructor", "sameEncoding_null_Charset_constructor", "sameEncoding_string_CharsetEncoder_constructor", "sameEncoding_string_Charset_constructor", "sameEncoding_string_constructor", "sameEncoding_string_string_constructor", "testDifferentEncoding" ]
          }
        },
        "org.apache.commons.io.output.LockableFileWriter" : {
          "testcases" : {
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_nullFile", "testFileLocked", "testFileNotLocked" ]
          }
        }
      }
    },
    "eaeffded81ec88f4d0e7494bd544821412435ce8" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "4dc97b64005f0083b2facaa70f661138a4fa3fc0",
      "changedClazzes" : {
        "org.apache.commons.io.ByteOrderFactory#parseByteOrder(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.ByteOrderFactoryTest" : [ "testParseBig", "testParseLittle" ]
          }
        },
        "org.apache.commons.io.ByteOrderFactoryTest" : {
          "testcases" : {
            "org.apache.commons.io.ByteOrderFactoryTest" : [ "testParseBig", "testParseLittle" ]
          }
        },
        "org.apache.commons.io.ByteOrderFactoryTest#parseByteOrder(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.ByteOrderFactoryTest" : [ "testParseBig", "testParseLittle" ]
          }
        },
        "org.apache.commons.io.ByteOrderFactoryTest#testParseBig" : {
          "testcases" : {
            "org.apache.commons.io.ByteOrderFactoryTest" : [ "testParseBig" ]
          }
        },
        "org.apache.commons.io.ByteOrderFactoryTest#testParseLittle" : {
          "testcases" : {
            "org.apache.commons.io.ByteOrderFactoryTest" : [ "testParseLittle" ]
          }
        }
      }
    },
    "59bc597a256f0146b5bb05d951ae2d84963cf3df" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "eaeffded81ec88f4d0e7494bd544821412435ce8",
      "changedClazzes" : {
        "org.apache.commons.io.input.BOMInputStreamTest#doesSaxSupportCharacterSet(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testReadXmlWithBOMUtf32Be", "testReadXmlWithBOMUtf32Le", "testReadXmlWithoutBOMUtf32Be", "testReadXmlWithoutBOMUtf32Le" ]
          }
        }
      }
    },
    "d58f0dd73515f5e2226aeaa4f431f7e43444432d" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "59bc597a256f0146b5bb05d951ae2d84963cf3df",
      "changedClazzes" : { }
    },
    "a2396b4637c11992de40d3715dfb41a738d5913b" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "d58f0dd73515f5e2226aeaa4f431f7e43444432d",
      "changedClazzes" : { }
    },
    "fedbfc171fdfcb2b5e36a73e56f86d2d233f2439" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "a2396b4637c11992de40d3715dfb41a738d5913b",
      "changedClazzes" : { }
    },
    "51f13c846dae950e1d27693c9e23c1063945210f" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "fedbfc171fdfcb2b5e36a73e56f86d2d233f2439",
      "changedClazzes" : {
        "org.apache.commons.io.Charsets#requiredCharsets" : {
          "testcases" : {
            "org.apache.commons.io.CharsetsTestCase" : [ "testRequiredCharsets" ],
            "org.apache.commons.io.input.CharSequenceInputStreamTest" : [ "testBufferedRead_RequiredCharset", "testCharsetMismatchInfiniteLoop_RequiredCharsets", "testLargeBufferedRead_RequiredCharsets", "testLargeSingleByteRead_RequiredCharsets", "testReadZero_RequiredCharsets", "testSingleByteRead_RequiredCharsets" ]
          }
        },
        "org.apache.commons.io.DemuxTestCase" : {
          "testcases" : {
            "org.apache.commons.io.DemuxTestCase" : [ "testInputStream", "testOutputStream" ]
          }
        },
        "org.apache.commons.io.DemuxTestCase$ReaderThread" : {
          "testcases" : {
            "org.apache.commons.io.DemuxTestCase" : [ "testInputStream" ]
          }
        },
        "org.apache.commons.io.DemuxTestCase$WriterThread" : {
          "testcases" : {
            "org.apache.commons.io.DemuxTestCase" : [ "testOutputStream" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCase#directoriesOnly(java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilterDirAndFile3" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCase#filesOnly(java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilterDirAndFile4" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCase$TestCancelWalker#find(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder#find(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilter", "testFilterAndLimitA", "testFilterAndLimitB", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile2", "testFilterDirAndFile3", "testFilterDirAndFile4", "testHandleStartDirectoryFalse", "testLimitToCurrent", "testMissingStartDirectory" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinderString#find(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilterString" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCase$TestMultiThreadCancelWalker#find(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testMultiThreadCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFileFinder#find(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testFilter", "testFilterAndLimitA", "testFilterAndLimitB", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile2", "testFilterDirAndFile3", "testFilterDirAndFile4", "testHandleStartDirectoryFalse", "testLimitToCurrent", "testMissingStartDirectory" ]
          }
        },
        "org.apache.commons.io.FileCleaningTracker" : {
          "testcases" : {
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerFile", "testFileCleanerNull" ]
          }
        },
        "org.apache.commons.io.FileCleaningTracker$Reaper" : {
          "testcases" : {
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerFile" ]
          }
        },
        "org.apache.commons.io.FileCleaningTracker$Tracker" : {
          "testcases" : {
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerFile" ]
          }
        },
        "org.apache.commons.io.FileCleaningTrackerTestCase#tearDown" : {
          "testcases" : {
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerNull" ]
          }
        },
        "org.apache.commons.io.FileCleaningTrackerTestCase#waitUntilTrackCount" : {
          "testcases" : {
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerFile" ]
          }
        },
        "org.apache.commons.io.FileSystemUtils#performCommand(org.apache.commons.io.String[],int,long)" : { },
        "org.apache.commons.io.FileUtils#copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)" : { },
        "org.apache.commons.io.FileUtils#copyFile(java.io.File,java.io.OutputStream)" : { },
        "org.apache.commons.io.FileUtils#listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension", "testListFiles", "testListFilesByExtension" ]
          }
        },
        "org.apache.commons.io.FileUtils#listFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)" : { },
        "org.apache.commons.io.FileUtilsCleanDirectoryTestCase#chmod(java.io.File,int,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testCleanEmpty", "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile", "testThrowsOnNullList" ]
          }
        },
        "org.apache.commons.io.FileUtilsCleanSymlinksTestCase#setupSymlink(java.io.File,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" : [ "testCleanDirWithASymlinkDir", "testCleanDirWithParentSymlinks", "testCleanDirWithSymlinkFile", "testCorrectlyIdentifySymlinkWithParentSymLink", "testIdentifiesBrokenSymlinkFile", "testIdentifiesSymlinkDir", "testIdentifiesSymlinkFile", "testStillClearsIfGivenDirectoryIsASymlink" ]
          }
        },
        "org.apache.commons.io.FileUtilsListFilesTestCase#filesToFilenames(java.util.Iterator)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testCopyURLToFile" : { },
        "org.apache.commons.io.FileUtilsTestCase#testCopyURLToFileWithTimeout" : { },
        "org.apache.commons.io.FileUtilsTestCase#testFileUtils" : { },
        "org.apache.commons.io.FileUtilsTestCase#testIterateFiles" : { },
        "org.apache.commons.io.FileUtilsTestCase#testListFiles" : { },
        "org.apache.commons.io.FileUtilsTestCase$ListDirectoryWalker#list(org.apache.commons.io.File)" : { },
        "org.apache.commons.io.FilenameUtils#splitOnTokens(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsWildcardTestCase" : [ "testLocaleIndependence", "testMatch", "testMatch2", "testMatchCaseSpecified", "testMatchOnSystem", "testSplitOnTokens", "test_IO_246" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testDeprecatedWildcard", "testWildcard" ],
            "org.apache.commons.io.serialization.MoreComplexObjectTest" : [ "trustJavaIncludingArrays", "trustJavaLang", "useBlacklist" ],
            "org.apache.commons.io.serialization.ValidatingObjectInputStreamTest" : [ "acceptWildcard", "ourTestClassAcceptedFirstWildcard", "ourTestClassAcceptedSecondWildcard", "rejectWildcard" ],
            "org.apache.commons.io.serialization.WildcardClassNameMatcherTest" : [ "noPattern", "star", "starAndQuestionMark" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#wildcardMatch(java.lang.String,java.lang.String,org.apache.commons.io.IOCase)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsWildcardTestCase" : [ "testLocaleIndependence", "testMatch", "testMatch2", "testMatchCaseSpecified", "testMatchOnSystem", "test_IO_246" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testDeprecatedWildcard", "testWildcard" ],
            "org.apache.commons.io.serialization.MoreComplexObjectTest" : [ "trustJavaIncludingArrays", "trustJavaLang", "useBlacklist" ],
            "org.apache.commons.io.serialization.ValidatingObjectInputStreamTest" : [ "acceptWildcard", "ourTestClassAcceptedFirstWildcard", "ourTestClassAcceptedSecondWildcard", "rejectWildcard" ],
            "org.apache.commons.io.serialization.WildcardClassNameMatcherTest" : [ "noPattern", "star", "starAndQuestionMark" ]
          }
        },
        "org.apache.commons.io.FilenameUtilsTestCase#testIsExtensionCollection" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testIsExtensionCollection" ]
          }
        },
        "org.apache.commons.io.IOUtils#readLines(java.io.Reader)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader" ],
            "org.apache.commons.io.input.TailerTest" : [ "testTailer" ]
          }
        },
        "org.apache.commons.io.IOUtils#toByteArray(java.net.URLConnection)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testToByteArray_URI", "testToByteArray_URL", "testToByteArray_URLConnection" ]
          }
        },
        "org.apache.commons.io.IOUtils#toString(java.net.URL,java.nio.charset.Charset)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testToString_URI", "testToString_URI_CharsetName", "testToString_URI_CharsetNameNull", "testToString_URL", "testToString_URL_CharsetName", "testToString_URL_CharsetNameNull" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testCopy_ByteArray_OutputStream" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testCopy_ByteArray_OutputStream" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testCopy_ByteArray_Writer" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testCopy_ByteArray_Writer" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testCopy_String_Writer" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testCopy_String_Writer" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testSkip_FileReader" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testSkip_FileReader" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testSkip_InputStream" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testSkip_InputStream" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testStringToOutputStream" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testStringToOutputStream" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testToBufferedInputStreamWithBufferSize_InputStream" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testToBufferedInputStreamWithBufferSize_InputStream" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testToBufferedInputStream_InputStream" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testToBufferedInputStream_InputStream" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testToByteArray_InputStream" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testToByteArray_InputStream" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testToByteArray_InputStream_NegativeSize" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testToByteArray_InputStream_NegativeSize" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testToByteArray_InputStream_Size" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testToByteArray_InputStream_Size" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testToByteArray_InputStream_SizeIllegal" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testToByteArray_InputStream_SizeIllegal" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testToByteArray_InputStream_SizeLong" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testToByteArray_InputStream_SizeLong" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testToByteArray_InputStream_SizeZero" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testToByteArray_InputStream_SizeZero" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testToByteArray_String" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testToByteArray_String" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testToCharArray_InputStream" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testToCharArray_InputStream" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testToCharArray_InputStream_CharsetName" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testToCharArray_InputStream_CharsetName" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testToCharArray_Reader" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testToCharArray_Reader" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testToString_ByteArray" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testToString_ByteArray" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testToString_InputStream" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testToString_InputStream" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testToString_Reader" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testToString_Reader" ]
          }
        },
        "org.apache.commons.io.Java7Support#<init>" : { },
        "org.apache.commons.io.Java7Support#isSymLink(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerNull" ],
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce" ],
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testCleanEmpty", "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile", "testThrowsOnNullList" ],
            "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" : [ "testCleanDirWithASymlinkDir", "testCleanDirWithParentSymlinks", "testCleanDirWithSymlinkFile", "testCorrectlyIdentifySymlinkWithParentSymLink", "testIdentifiesBrokenSymlinkFile", "testIdentifiesSymlinkDir", "testIdentifiesSymlinkFile", "testStillClearsIfGivenDirectoryIsASymlink" ],
            "org.apache.commons.io.FileUtilsDirectoryContainsTestCase" : [ "testCanonicalPath", "testDirectoryContainsDirectory", "testDirectoryContainsFile", "testDirectoryDoesNotContainFile", "testDirectoryDoesNotContainsDirectory", "testDirectoryDoesNotExist", "testFileDoesNotExist", "testFileDoesNotExistBug", "testIO466", "testSameFile", "testUnrealizedContainment" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension", "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedError_IO_128", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetBaseName_with_nullByte", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetFullPathNoEndSeparator_IO_248", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPathNoEndSeparator_with_null_byte", "testGetPath_with_nullbyte", "testGetPrefix", "testGetPrefixLength", "testGetPrefix_with_nullbyte", "testIndexOfExtension", "testIndexOfLastSeparator", "testInjectionFailure", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testIsExtension_injection", "testNormalize", "testNormalizeNoEndSeparator", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin", "testNormalize_with_nullbytes", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testAsBufferedInputStream", "testAsBufferedInputStreamWithBufferSize", "testAsBufferedNull", "testAsBufferedOutputStream", "testAsBufferedOutputStreamWithBufferSize", "testAsBufferedReader", "testAsBufferedReaderWithBufferSize", "testAsBufferedWriter", "testAsBufferedWriterWithBufferSize", "testCloseQuietly_AllCloseableIOException", "testCloseQuietly_CloseableIOException", "testCloseQuietly_Selector", "testCloseQuietly_SelectorIOException", "testCloseQuietly_SelectorNull", "testCloseQuietly_SelectorTwice", "testCloseQuietly_ServerSocket", "testCloseQuietly_ServerSocketIOException", "testCloseQuietly_Socket", "testCloseQuietly_SocketIOException", "testConstants", "testContentEqualsIgnoreEOL", "testContentEquals_InputStream_InputStream", "testContentEquals_Reader_Reader", "testCopyLarge_CharExtraLength", "testCopyLarge_CharFullLength", "testCopyLarge_CharNoSkip", "testCopyLarge_CharSkip", "testCopyLarge_CharSkipInvalid", "testCopyLarge_ExtraLength", "testCopyLarge_FullLength", "testCopyLarge_NoSkip", "testCopyLarge_Skip", "testCopyLarge_SkipInvalid", "testCopy_ByteArray_OutputStream", "testCopy_ByteArray_Writer", "testCopy_String_Writer", "testReadFully_InputStream_ByteArray", "testReadFully_InputStream_Offset", "testReadFully_InputStream__ReturnByteArray", "testReadFully_ReadableByteChannel", "testReadFully_Reader", "testReadFully_Reader_Offset", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testRead_ReadableByteChannel", "testSkipFully_InputStream", "testSkipFully_ReadableByteChannel", "testSkipFully_Reader", "testSkip_FileReader", "testSkip_InputStream", "testSkip_ReadableByteChannel", "testStringToOutputStream", "testToBufferedInputStreamWithBufferSize_InputStream", "testToBufferedInputStream_InputStream", "testToByteArray_InputStream", "testToByteArray_InputStream_NegativeSize", "testToByteArray_InputStream_Size", "testToByteArray_InputStream_SizeIllegal", "testToByteArray_InputStream_SizeLong", "testToByteArray_InputStream_SizeZero", "testToByteArray_Reader", "testToByteArray_String", "testToByteArray_URI", "testToByteArray_URL", "testToByteArray_URLConnection", "testToCharArray_InputStream", "testToCharArray_InputStream_CharsetName", "testToCharArray_Reader", "testToInputStream_CharSequence", "testToInputStream_String", "testToString_ByteArray", "testToString_InputStream", "testToString_Reader", "testToString_URI", "testToString_URI_CharsetName", "testToString_URI_CharsetNameNull", "testToString_URL", "testToString_URL_CharsetName", "testToString_URL_CharsetNameNull" ],
            "org.apache.commons.io.Java7SupportTest" : [ "testIsSymLink" ],
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFilteringBufferedReader", "testFilteringFileReader", "testInvalidEncoding", "testMissingFile", "testNextLineOnlyDefaultEncoding", "testNextLineOnlyNullEncoding", "testNextLineOnlyUtf8Encoding", "testNextOnly", "testNextWithException", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "constructorArray_Null", "constructorIterable_Null", "constructorIterable_order" ],
            "org.apache.commons.io.comparator.DirectoryFileComparatorTest" : [ "testSortArray" ],
            "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.NameFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.PathFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testAnd", "testCanRead", "testCanWrite", "testDelegateFileFilter", "testDelegation", "testDeprecatedWildcard", "testDirectory", "testEmpty", "testEnsureTestCoverage", "testFalse", "testFileFilterUtils_and", "testFileFilterUtils_or", "testFiles", "testFilterArray", "testFilterArrayNullParameters", "testFilterArray_fromList", "testFilterList", "testFilterListNullParameters", "testFilterList_fromArray", "testFilterSet", "testFilterSetNullParameters", "testFilterSet_fromArray", "testHidden", "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset", "testMagicNumberFileFilterValidation", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNameFilterNullArrayArgument", "testNameFilterNullListArgument", "testNot", "testNullFilters", "testOr", "testPrefix", "testPrefixCaseInsensitive", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testTrue", "testWildcard" ],
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ],
            "org.apache.commons.io.input.TailerTest" : [ "testBufferBreak", "testIO335", "testInterrupt", "testLongFile", "testMultiByteBreak", "testStopWithNoFile", "testStopWithNoFileUsingExecutor", "testTailer", "testTailerEndOfFileReached", "testTailerEof" ],
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor", "testMonitor", "testThreadFactory" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile", "testToString" ],
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "constructor_File_directory", "constructor_File_encoding_badEncoding", "constructor_File_nullFile", "constructor_fileName_nullFile", "sameEncoding_CharsetEncoder_constructor", "sameEncoding_Charset_constructor", "sameEncoding_null_Charset_constructor", "sameEncoding_string_CharsetEncoder_constructor", "sameEncoding_string_Charset_constructor", "sameEncoding_string_constructor", "sameEncoding_string_string_constructor", "testDifferentEncoding" ]
          }
        },
        "org.apache.commons.io.Java7Support#readSymbolicLink(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.Java7SupportTest" : [ "createAndReadSymlink" ]
          }
        },
        "org.apache.commons.io.LineIteratorTestCase#createStringLines(int)" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testFilteringBufferedReader", "testFilteringFileReader", "testInvalidEncoding", "testNextLineOnlyDefaultEncoding", "testNextLineOnlyNullEncoding", "testNextLineOnlyUtf8Encoding", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ]
          }
        },
        "org.apache.commons.io.comparator.ComparatorAbstractTestCase#testSortList" : { },
        "org.apache.commons.io.comparator.CompositeFileComparator#<init>(java.lang.Iterable)" : {
          "testcases" : {
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "constructorIterable_Null", "constructorIterable_order" ]
          }
        },
        "org.apache.commons.io.comparator.CompositeFileComparatorTest#constructorIterable_order" : {
          "testcases" : {
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "constructorIterable_order" ]
          }
        },
        "org.apache.commons.io.filefilter.AndFileFilter#<init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ],
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAnd", "testCanRead", "testMakeDirectoryOnly", "testMakeFileOnly", "testSizeFilter" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testToString" ]
          }
        },
        "org.apache.commons.io.filefilter.AndFileFilterTestCase#setUpTestFilters" : { },
        "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase#testAdd" : { },
        "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase#testRemove" : { },
        "org.apache.commons.io.filefilter.FileFilterTestCase#testAnd" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAnd" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase#testFilterSet" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFilterSet" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase#testFilterSetNullParameters" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testFilterSetNullParameters" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase#testNameFilter" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testNameFilter" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase#testOr" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testOr" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#filter(org.apache.commons.io.filefilter.IOFileFilter,java.io.File[])" : { },
        "org.apache.commons.io.filefilter.FileFilterUtils#filterSet(org.apache.commons.io.filefilter.IOFileFilter,java.io.File[])" : { },
        "org.apache.commons.io.filefilter.FileFilterUtils#toList(org.apache.commons.io.filefilter.IOFileFilter[])" : { },
        "org.apache.commons.io.filefilter.OrFileFilter#<init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testOr" ]
          }
        },
        "org.apache.commons.io.filefilter.OrFileFilterTestCase#setUpTestFilters" : { },
        "org.apache.commons.io.input.CharSequenceInputStreamTest#testAvailableRead(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.CharSequenceInputStreamTest" : [ "testAvailable" ]
          }
        },
        "org.apache.commons.io.input.CharSequenceInputStreamTest#testAvailableSkip(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.CharSequenceInputStreamTest" : [ "testAvailable" ]
          }
        },
        "org.apache.commons.io.input.CharSequenceInputStreamTest#testBufferedRead(java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.CharSequenceInputStreamTest" : [ "testBufferedRead_AvailableCharset", "testBufferedRead_RequiredCharset", "testBufferedRead_UTF8", "testLargeBufferedRead_RequiredCharsets", "testLargeBufferedRead_UTF8" ]
          }
        },
        "org.apache.commons.io.input.CharSequenceInputStreamTest#testCharsetMismatchInfiniteLoop(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.CharSequenceInputStreamTest" : [ "testCharsetMismatchInfiniteLoop_RequiredCharsets" ]
          }
        },
        "org.apache.commons.io.input.CharSequenceInputStreamTest#testMarkReset(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.CharSequenceInputStreamTest" : [ "testMarkReset_USASCII", "testMarkReset_UTF8" ]
          }
        },
        "org.apache.commons.io.input.CharSequenceInputStreamTest#testMarkSupported" : {
          "testcases" : {
            "org.apache.commons.io.input.CharSequenceInputStreamTest" : [ "testMarkSupported" ]
          }
        },
        "org.apache.commons.io.input.CharSequenceInputStreamTest#testReadZero(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.CharSequenceInputStreamTest" : [ "testReadZero_RequiredCharsets" ]
          }
        },
        "org.apache.commons.io.input.CharSequenceInputStreamTest#testReadZero_EmptyString" : {
          "testcases" : {
            "org.apache.commons.io.input.CharSequenceInputStreamTest" : [ "testReadZero_EmptyString" ]
          }
        },
        "org.apache.commons.io.input.CharSequenceInputStreamTest#testSingleByteRead(java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.CharSequenceInputStreamTest" : [ "testLargeSingleByteRead_RequiredCharsets", "testLargeSingleByteRead_UTF8", "testSingleByteRead_RequiredCharsets", "testSingleByteRead_UTF16", "testSingleByteRead_UTF8" ]
          }
        },
        "org.apache.commons.io.input.CharSequenceInputStreamTest#testSkip(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.CharSequenceInputStreamTest" : [ "testSkip_USASCII", "testSkip_UTF8" ]
          }
        },
        "org.apache.commons.io.input.DemuxInputStream" : {
          "testcases" : {
            "org.apache.commons.io.DemuxTestCase" : [ "testInputStream" ]
          }
        },
        "org.apache.commons.io.input.ReaderInputStreamTest#testCharsetMismatchInfiniteLoop" : {
          "testcases" : {
            "org.apache.commons.io.input.ReaderInputStreamTest" : [ "testCharsetMismatchInfiniteLoop" ]
          }
        },
        "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile#testDataIntegrityWithBufferedReader" : {
          "testcases" : {
            "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile" : [ "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-20byteslength.bin, charset=ISO_8859_1)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-gbk.bin, charset=gbk)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-iso8859-1-shortlines-win-linebr.bin, charset=ISO_8859_1)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-iso8859-1.bin, charset=ISO_8859_1)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-shiftjis.bin, charset=Shift_JIS)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf16be.bin, charset=UTF-16BE)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf16le.bin, charset=UTF-16LE)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf8-cr-only.bin, charset=UTF-8)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf8-win-linebr.bin, charset=UTF-8)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf8.bin, charset=UTF-8)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-windows-31j.bin, charset=windows-31j)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-x-windows-949.bin, charset=x-windows-949)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-x-windows-950.bin, charset=x-windows-950)" ]
          }
        },
        "org.apache.commons.io.input.TailerTest#testMultiByteBreak" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testMultiByteBreak" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReaderTest" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testEncodingAttributeXML", "testHttp", "testHttpContent", "testRawBomUtf16", "testRawBomUtf32", "testRawBomUtf8", "testRawContent", "testRawNoBomCp1047", "testRawNoBomIso8859_1", "testRawNoBomUsAscii", "testRawNoBomUtf16BE", "testRawNoBomUtf16LE", "testRawNoBomUtf32BE", "testRawNoBomUtf32LE", "testRawNoBomUtf8" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFileListener" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor", "testThreadFactory" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationMonitor" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor", "testMonitor", "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationObserver" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor", "testMonitor", "testThreadFactory" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile", "testToString" ]
          }
        },
        "org.apache.commons.io.output.AppendableOutputStreamTest#setUp" : {
          "testcases" : {
            "org.apache.commons.io.output.AppendableOutputStreamTest" : [ "testWriteInt", "testWriteStringBuilder" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream" : {
          "testcases" : {
            "org.apache.commons.io.CopyUtilsTest" : [ "copy_byteArrayToOutputStream", "copy_byteArrayToWriter", "copy_inputStreamToWriter", "copy_readerToWriter", "copy_stringToOutputStream", "copy_stringToWriter", "testCopy_inputStreamToOutputStream", "testCopy_readerToOutputStream" ],
            "org.apache.commons.io.DemuxTestCase" : [ "testOutputStream" ],
            "org.apache.commons.io.HexDumpTest" : [ "testDump" ],
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToOutputStreamWithBufferSize", "testCopy_inputStreamToOutputStream_nullIn", "testCopy_inputStreamToWriter", "testCopy_inputStreamToWriter_Encoding", "testCopy_inputStreamToWriter_Encoding_nullEncoding", "testCopy_inputStreamToWriter_Encoding_nullIn", "testCopy_inputStreamToWriter_nullIn", "testCopy_readerToOutputStream", "testCopy_readerToOutputStream_Encoding", "testCopy_readerToOutputStream_Encoding_nullEncoding", "testCopy_readerToOutputStream_Encoding_nullIn", "testCopy_readerToOutputStream_nullIn", "testCopy_readerToWriter", "testCopy_readerToWriter_nullIn" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testCopy_ByteArray_OutputStream", "testCopy_ByteArray_Writer", "testToBufferedInputStreamWithBufferSize_InputStream", "testToBufferedInputStream_InputStream", "testToByteArray_InputStream", "testToByteArray_Reader", "testToByteArray_URI", "testToByteArray_URL", "testToByteArray_URLConnection", "testToInputStream_CharSequence", "testToInputStream_String", "testToString_ByteArray" ],
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWriteLines_OutputStream", "testWriteLines_OutputStream_Encoding", "testWriteLines_OutputStream_Encoding_nullData", "testWriteLines_OutputStream_Encoding_nullEncoding", "testWriteLines_OutputStream_Encoding_nullSeparator", "testWriteLines_OutputStream_nullData", "testWriteLines_OutputStream_nullSeparator", "testWriteLines_Writer", "testWriteLines_Writer_nullData", "testWriteLines_Writer_nullSeparator", "testWrite_byteArrayToOutputStream", "testWrite_byteArrayToOutputStream_nullData", "testWrite_byteArrayToWriter", "testWrite_byteArrayToWriter_Encoding", "testWrite_byteArrayToWriter_Encoding_nullData", "testWrite_byteArrayToWriter_Encoding_nullEncoding", "testWrite_byteArrayToWriter_nullData", "testWrite_charArrayToOutputStream", "testWrite_charArrayToOutputStream_Encoding", "testWrite_charArrayToOutputStream_Encoding_nullData", "testWrite_charArrayToOutputStream_nullData", "testWrite_charArrayToOutputStream_nullEncoding", "testWrite_charArrayToWriter", "testWrite_charArrayToWriter_Encoding_nullData", "testWrite_charSequenceToOutputStream", "testWrite_charSequenceToOutputStream_Encoding", "testWrite_charSequenceToOutputStream_Encoding_nullData", "testWrite_charSequenceToOutputStream_nullData", "testWrite_charSequenceToOutputStream_nullEncoding", "testWrite_charSequenceToWriter", "testWrite_charSequenceToWriter_Encoding_nullData", "testWrite_stringToOutputStream", "testWrite_stringToOutputStream_Encoding", "testWrite_stringToOutputStream_Encoding_nullData", "testWrite_stringToOutputStream_nullData", "testWrite_stringToOutputStream_nullEncoding", "testWrite_stringToWriter", "testWrite_stringToWriter_Encoding_nullData" ],
            "org.apache.commons.io.input.BoundedInputStreamTest" : [ "testReadArray" ],
            "org.apache.commons.io.output.ByteArrayOutputStreamTestCase" : [ "testStream", "testToInputStream", "testToInputStreamWithReset" ],
            "org.apache.commons.io.output.ChunkedOutputStreamTest" : [ "defaultConstructor", "negative_chunksize_not_permitted", "write_four_chunks" ],
            "org.apache.commons.io.output.ChunkedWriterTest" : [ "negative_chunksize_not_permitted", "write_four_chunks", "write_two_chunks_default_constructor" ],
            "org.apache.commons.io.output.CloseShieldOutputStreamTest" : [ "testClose" ],
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testAboveThreshold", "testAtThreshold", "testBelowThreshold", "testTempFileAboveThreshold", "testTempFileAboveThresholdPrefixOnly", "testTempFileBelowThreshold", "testTempFileError", "testThresholdReached", "testWriteToLarge", "testWriteToSmall" ],
            "org.apache.commons.io.output.ProxyOutputStreamTest" : [ "testWrite", "testWriteNullBaSucceeds" ],
            "org.apache.commons.io.output.ProxyWriterTest" : [ "exceptions_in_append_char", "exceptions_in_append_charSequence", "exceptions_in_append_charSequence_offset", "exceptions_in_close", "exceptions_in_flush", "exceptions_in_write_char_array", "exceptions_in_write_int", "exceptions_in_write_offset_char_array", "exceptions_in_write_string", "exceptions_in_write_string_offset" ],
            "org.apache.commons.io.output.TaggedOutputStreamTest" : [ "testNormalStream" ],
            "org.apache.commons.io.output.ThresholdingOutputStreamTest" : [ "testSetByteCount" ]
          }
        },
        "org.apache.commons.io.output.ClosedOutputStreamTest#testRead" : {
          "testcases" : {
            "org.apache.commons.io.output.ClosedOutputStreamTest" : [ "testRead" ]
          }
        },
        "org.apache.commons.io.output.DemuxOutputStream" : {
          "testcases" : {
            "org.apache.commons.io.DemuxTestCase" : [ "testOutputStream" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriterTest#exceptions_in_append_char" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "exceptions_in_append_char" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriterTest#exceptions_in_append_charSequence" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "exceptions_in_append_charSequence" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriterTest#exceptions_in_append_charSequence_offset" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "exceptions_in_append_charSequence_offset" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriterTest#exceptions_in_flush" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "exceptions_in_flush" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriterTest#exceptions_in_write_char_array" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "exceptions_in_write_char_array" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriterTest#exceptions_in_write_int" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "exceptions_in_write_int" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriterTest#exceptions_in_write_offset_char_array" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "exceptions_in_write_offset_char_array" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriterTest#exceptions_in_write_string" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "exceptions_in_write_string" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriterTest#exceptions_in_write_string_offset" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "exceptions_in_write_string_offset" ]
          }
        },
        "org.apache.commons.io.serialization.ClosingBase" : {
          "testcases" : {
            "org.apache.commons.io.serialization.MoreComplexObjectTest" : [ "trustJavaIncludingArrays", "trustJavaLang", "useBlacklist" ],
            "org.apache.commons.io.serialization.ValidatingObjectInputStreamTest" : [ "acceptCustomMatcher", "acceptPattern", "acceptWildcard", "customInvalidMethod", "exceptionIncludesClassName", "noAccept", "ourTestClassAcceptedFirst", "ourTestClassAcceptedFirstWildcard", "ourTestClassAcceptedSecond", "ourTestClassAcceptedSecondWildcard", "ourTestClassNotAccepted", "ourTestClassOnlyAccepted", "reject", "rejectCustomMatcher", "rejectOnly", "rejectPattern", "rejectPrecedence", "rejectWildcard" ]
          }
        },
        "org.apache.commons.io.serialization.FullClassNameMatcher#<init>(java.lang.String[])" : { },
        "org.apache.commons.io.serialization.MoreComplexObject" : {
          "testcases" : {
            "org.apache.commons.io.serialization.MoreComplexObjectTest" : [ "trustJavaIncludingArrays", "trustJavaLang", "useBlacklist" ]
          }
        },
        "org.apache.commons.io.serialization.ValidatingObjectInputStream" : {
          "testcases" : {
            "org.apache.commons.io.serialization.MoreComplexObjectTest" : [ "trustJavaIncludingArrays", "trustJavaLang", "useBlacklist" ],
            "org.apache.commons.io.serialization.ValidatingObjectInputStreamTest" : [ "acceptCustomMatcher", "acceptPattern", "acceptWildcard", "customInvalidMethod", "exceptionIncludesClassName", "noAccept", "ourTestClassAcceptedFirst", "ourTestClassAcceptedFirstWildcard", "ourTestClassAcceptedSecond", "ourTestClassAcceptedSecondWildcard", "ourTestClassNotAccepted", "ourTestClassOnlyAccepted", "reject", "rejectCustomMatcher", "rejectOnly", "rejectPattern", "rejectPrecedence", "rejectWildcard" ]
          }
        },
        "org.apache.commons.io.testtools.TestUtils#assertEqualContent(char[],org.apache.commons.io.testtools.File)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testToCharArray_InputStream", "testToCharArray_InputStream_CharsetName", "testToCharArray_Reader" ]
          }
        }
      },
      "ignoredAffectedTests" : {
        "testcases" : {
          "org.apache.commons.io.input.CharSequenceInputStreamTest" : [ "testMarkReset_RequiredCharsets", "testSkip_RequiredCharsets" ]
        }
      }
    },
    "81210eb267181b766acaf201a424a80d96bb5bed" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "51f13c846dae950e1d27693c9e23c1063945210f",
      "changedClazzes" : {
        "org.apache.commons.io.input.BoundedReader#<init>(java.io.Reader,int)" : {
          "testcases" : {
            "org.apache.commons.io.input.BoundedReaderTest" : [ "testReadBytesEOF" ]
          }
        },
        "org.apache.commons.io.input.BoundedReader#read(char[],int,int)" : {
          "testcases" : {
            "org.apache.commons.io.input.BoundedReaderTest" : [ "testReadBytesEOF" ]
          }
        },
        "org.apache.commons.io.input.BoundedReaderTest" : {
          "testcases" : {
            "org.apache.commons.io.input.BoundedReaderTest" : [ "closeTest", "markReset", "markResetFromOffset1", "markResetMarkMore", "markResetWithMarkOutsideBoundedReaderMax", "markResetWithMarkOutsideBoundedReaderMaxAndInitialOffset", "readMulti", "readMultiWithOffset", "readTillEnd", "shortReader", "skipTest", "testReadBytesEOF" ]
          }
        },
        "org.apache.commons.io.input.BoundedReaderTest#testReadBytesEOF" : {
          "testcases" : {
            "org.apache.commons.io.input.BoundedReaderTest" : [ "testReadBytesEOF" ]
          }
        }
      }
    },
    "e6832682adbd29fc47e90109a59ed5dca0c9d742" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "81210eb267181b766acaf201a424a80d96bb5bed",
      "changedClazzes" : { }
    },
    "b8225108253fc5e3bb83607200611024521609a9" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "e6832682adbd29fc47e90109a59ed5dca0c9d742",
      "changedClazzes" : { }
    },
    "5815293807b55cef2792edd9c440160ca8292b3f" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "b8225108253fc5e3bb83607200611024521609a9",
      "changedClazzes" : { }
    },
    "261e73236c58e094d5d68c5a063152a7169beafd" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "5815293807b55cef2792edd9c440160ca8292b3f",
      "changedClazzes" : { }
    },
    "209976ee53c9b584c013a9b0b21ec98ef733c6f1" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "261e73236c58e094d5d68c5a063152a7169beafd",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerNull" ],
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce" ],
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testCleanEmpty", "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile", "testThrowsOnNullList" ],
            "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" : [ "testCleanDirWithASymlinkDir", "testCleanDirWithParentSymlinks", "testCleanDirWithSymlinkFile", "testCorrectlyIdentifySymlinkWithParentSymLink", "testIdentifiesBrokenSymlinkFile", "testIdentifiesSymlinkDir", "testIdentifiesSymlinkFile", "testStillClearsIfGivenDirectoryIsASymlink" ],
            "org.apache.commons.io.FileUtilsDirectoryContainsTestCase" : [ "testCanonicalPath", "testDirectoryContainsDirectory", "testDirectoryContainsFile", "testDirectoryDoesNotContainFile", "testDirectoryDoesNotContainsDirectory", "testDirectoryDoesNotExist", "testFileDoesNotExist", "testFileDoesNotExistBug", "testIO466", "testSameFile", "testUnrealizedContainment" ],
            "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension", "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsWaitForTestCase" : [ "testWaitFor", "testWaitForInterrupted" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedError_IO_128", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetBaseName_with_nullByte", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetFullPathNoEndSeparator_IO_248", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPathNoEndSeparator_with_null_byte", "testGetPath_with_nullbyte", "testGetPrefix", "testGetPrefixLength", "testGetPrefix_with_nullbyte", "testIndexOfExtension", "testIndexOfLastSeparator", "testInjectionFailure", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testIsExtension_injection", "testNormalize", "testNormalizeNoEndSeparator", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin", "testNormalize_with_nullbytes", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testAsBufferedInputStream", "testAsBufferedInputStreamWithBufferSize", "testAsBufferedNull", "testAsBufferedOutputStream", "testAsBufferedOutputStreamWithBufferSize", "testAsBufferedReader", "testAsBufferedReaderWithBufferSize", "testAsBufferedWriter", "testAsBufferedWriterWithBufferSize", "testCloseQuietly_AllCloseableIOException", "testCloseQuietly_CloseableIOException", "testCloseQuietly_Selector", "testCloseQuietly_SelectorIOException", "testCloseQuietly_SelectorNull", "testCloseQuietly_SelectorTwice", "testCloseQuietly_ServerSocket", "testCloseQuietly_ServerSocketIOException", "testCloseQuietly_Socket", "testCloseQuietly_SocketIOException", "testConstants", "testContentEqualsIgnoreEOL", "testContentEquals_InputStream_InputStream", "testContentEquals_Reader_Reader", "testCopyLarge_CharExtraLength", "testCopyLarge_CharFullLength", "testCopyLarge_CharNoSkip", "testCopyLarge_CharSkip", "testCopyLarge_CharSkipInvalid", "testCopyLarge_ExtraLength", "testCopyLarge_FullLength", "testCopyLarge_NoSkip", "testCopyLarge_Skip", "testCopyLarge_SkipInvalid", "testCopy_ByteArray_OutputStream", "testCopy_ByteArray_Writer", "testCopy_String_Writer", "testReadFully_InputStream_ByteArray", "testReadFully_InputStream_Offset", "testReadFully_InputStream__ReturnByteArray", "testReadFully_ReadableByteChannel", "testReadFully_Reader", "testReadFully_Reader_Offset", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testRead_ReadableByteChannel", "testSkipFully_InputStream", "testSkipFully_ReadableByteChannel", "testSkipFully_Reader", "testSkip_FileReader", "testSkip_InputStream", "testSkip_ReadableByteChannel", "testStringToOutputStream", "testToBufferedInputStreamWithBufferSize_InputStream", "testToBufferedInputStream_InputStream", "testToByteArray_InputStream", "testToByteArray_InputStream_NegativeSize", "testToByteArray_InputStream_Size", "testToByteArray_InputStream_SizeIllegal", "testToByteArray_InputStream_SizeLong", "testToByteArray_InputStream_SizeZero", "testToByteArray_Reader", "testToByteArray_String", "testToByteArray_URI", "testToByteArray_URL", "testToByteArray_URLConnection", "testToCharArray_InputStream", "testToCharArray_InputStream_CharsetName", "testToCharArray_Reader", "testToInputStream_CharSequence", "testToInputStream_String", "testToString_ByteArray", "testToString_InputStream", "testToString_Reader", "testToString_URI", "testToString_URI_CharsetName", "testToString_URI_CharsetNameNull", "testToString_URL", "testToString_URL_CharsetName", "testToString_URL_CharsetNameNull" ],
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFilteringBufferedReader", "testFilteringFileReader", "testInvalidEncoding", "testMissingFile", "testNextLineOnlyDefaultEncoding", "testNextLineOnlyNullEncoding", "testNextLineOnlyUtf8Encoding", "testNextOnly", "testNextWithException", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "constructorArray_Null", "constructorIterable_Null", "constructorIterable_order" ],
            "org.apache.commons.io.comparator.DirectoryFileComparatorTest" : [ "testSortArray" ],
            "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.NameFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.PathFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testAnd", "testCanRead", "testCanWrite", "testDelegateFileFilter", "testDelegation", "testDeprecatedWildcard", "testDirectory", "testEmpty", "testEnsureTestCoverage", "testFalse", "testFileFilterUtils_and", "testFileFilterUtils_or", "testFiles", "testFilterArray", "testFilterArrayNullParameters", "testFilterArray_fromList", "testFilterList", "testFilterListNullParameters", "testFilterList_fromArray", "testFilterSet", "testFilterSetNullParameters", "testFilterSet_fromArray", "testHidden", "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset", "testMagicNumberFileFilterValidation", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNameFilterNullArrayArgument", "testNameFilterNullListArgument", "testNot", "testNullFilters", "testOr", "testPrefix", "testPrefixCaseInsensitive", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testTrue", "testWildcard" ],
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ],
            "org.apache.commons.io.input.TailerTest" : [ "testBufferBreak", "testIO335", "testInterrupt", "testLongFile", "testMultiByteBreak", "testStopWithNoFile", "testStopWithNoFileUsingExecutor", "testTailer", "testTailerEndOfFileReached", "testTailerEof" ],
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor", "testMonitor", "testThreadFactory" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile", "testToString" ],
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "constructor_File_directory", "constructor_File_encoding_badEncoding", "constructor_File_nullFile", "constructor_fileName_nullFile", "sameEncoding_CharsetEncoder_constructor", "sameEncoding_Charset_constructor", "sameEncoding_null_Charset_constructor", "sameEncoding_string_CharsetEncoder_constructor", "sameEncoding_string_Charset_constructor", "sameEncoding_string_constructor", "sameEncoding_string_string_constructor", "testDifferentEncoding" ],
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testFileLocked", "testFileNotLocked" ]
          }
        }
      }
    },
    "cf402c948b2144ea83c40edb00163b74505335d1" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "209976ee53c9b584c013a9b0b21ec98ef733c6f1",
      "changedClazzes" : { }
    },
    "5e3359388b0732fd1b3d055036187525eea76521" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "cf402c948b2144ea83c40edb00163b74505335d1",
      "changedClazzes" : {
        "org.apache.commons.io.FileDeleteStrategyTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce", "testDeleteNormal", "testDeleteNull", "testDeleteQuietlyNormal", "testToString" ]
          }
        },
        "org.apache.commons.io.FileUtilsCleanDirectoryTestCase#tearDown" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testCleanEmpty", "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile", "testThrowsOnNullList" ]
          }
        },
        "org.apache.commons.io.FileUtilsFileNewerTestCase#tearDown" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ]
          }
        },
        "org.apache.commons.io.FileUtilsListFilesTestCase#tearDown" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension", "testListFiles", "testListFilesByExtension" ]
          }
        },
        "org.apache.commons.io.output.LockableFileWriterTest" : {
          "testcases" : {
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testConstructor_fileName_nullFile", "testFileLocked", "testFileNotLocked" ]
          }
        }
      }
    },
    "ab2aa8d6fdcdf5b3d326e7e86ac9d045f4859e98" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "5e3359388b0732fd1b3d055036187525eea76521",
      "changedClazzes" : {
        "org.apache.commons.io.Charsets" : {
          "testcases" : {
            "org.apache.commons.io.CharsetsTestCase" : [ "testRequiredCharsets", "testToCharset" ],
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_inputStreamToWriter", "testCopy_inputStreamToWriter_Encoding", "testCopy_inputStreamToWriter_Encoding_nullEncoding", "testCopy_inputStreamToWriter_Encoding_nullIn", "testCopy_inputStreamToWriter_Encoding_nullOut", "testCopy_inputStreamToWriter_nullIn", "testCopy_inputStreamToWriter_nullOut", "testCopy_readerToOutputStream", "testCopy_readerToOutputStream_Encoding", "testCopy_readerToOutputStream_Encoding_nullEncoding", "testCopy_readerToOutputStream_Encoding_nullIn", "testCopy_readerToOutputStream_Encoding_nullOut", "testCopy_readerToOutputStream_nullIn", "testCopy_readerToOutputStream_nullOut" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testReadLines_InputStream", "testReadLines_InputStream_String", "testToByteArray_Reader", "testToCharArray_InputStream", "testToCharArray_InputStream_CharsetName", "testToInputStream_CharSequence", "testToInputStream_String", "testToString_InputStream", "testToString_URI", "testToString_URI_CharsetName", "testToString_URI_CharsetNameNull", "testToString_URL", "testToString_URL_CharsetName", "testToString_URL_CharsetNameNull" ],
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWriteLines_OutputStream", "testWriteLines_OutputStream_Encoding", "testWriteLines_OutputStream_Encoding_nullData", "testWriteLines_OutputStream_Encoding_nullEncoding", "testWriteLines_OutputStream_Encoding_nullSeparator", "testWriteLines_OutputStream_Encoding_nullStream", "testWriteLines_OutputStream_nullSeparator", "testWriteLines_OutputStream_nullStream", "testWrite_byteArrayToWriter", "testWrite_byteArrayToWriter_Encoding", "testWrite_byteArrayToWriter_Encoding_nullData", "testWrite_byteArrayToWriter_Encoding_nullEncoding", "testWrite_byteArrayToWriter_Encoding_nullWriter", "testWrite_byteArrayToWriter_nullWriter", "testWrite_charArrayToOutputStream", "testWrite_charArrayToOutputStream_Encoding", "testWrite_charArrayToOutputStream_Encoding_nullStream", "testWrite_charArrayToOutputStream_nullEncoding", "testWrite_charArrayToOutputStream_nullStream", "testWrite_charSequenceToOutputStream", "testWrite_charSequenceToOutputStream_Encoding", "testWrite_charSequenceToOutputStream_Encoding_nullStream", "testWrite_charSequenceToOutputStream_nullEncoding", "testWrite_charSequenceToOutputStream_nullStream", "testWrite_stringToOutputStream", "testWrite_stringToOutputStream_Encoding", "testWrite_stringToOutputStream_Encoding_nullStream", "testWrite_stringToOutputStream_nullEncoding", "testWrite_stringToOutputStream_nullStream" ],
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testFilteringBufferedReader", "testFilteringFileReader", "testInvalidEncoding", "testNextLineOnlyDefaultEncoding", "testNextLineOnlyNullEncoding", "testNextLineOnlyUtf8Encoding", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset" ],
            "org.apache.commons.io.input.CharSequenceInputStreamTest" : [ "testBufferedRead_RequiredCharset", "testCharsetMismatchInfiniteLoop_RequiredCharsets", "testLargeBufferedRead_RequiredCharsets", "testLargeSingleByteRead_RequiredCharsets", "testReadZero_RequiredCharsets", "testSingleByteRead_RequiredCharsets" ],
            "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize" : [ "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=256)", "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=1)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=256)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=3)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=8)", "testGBK(JUNIT_PARAMETERIZED-BlockSize=1)", "testGBK(JUNIT_PARAMETERIZED-BlockSize=256)", "testGBK(JUNIT_PARAMETERIZED-BlockSize=3)", "testGBK(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testGBK(JUNIT_PARAMETERIZED-BlockSize=8)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=1)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=256)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=3)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=8)", "testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=1)", "testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=256)", "testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=3)", "testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=8)", "testShiftJISFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testShiftJISFile(JUNIT_PARAMETERIZED-BlockSize=256)", "testShiftJISFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testShiftJISFile(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testShiftJISFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=8)", "testUnsupportedEncodingBig5(JUNIT_PARAMETERIZED-BlockSize=1)", "testUnsupportedEncodingBig5(JUNIT_PARAMETERIZED-BlockSize=256)", "testUnsupportedEncodingBig5(JUNIT_PARAMETERIZED-BlockSize=3)", "testUnsupportedEncodingBig5(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUnsupportedEncodingBig5(JUNIT_PARAMETERIZED-BlockSize=8)", "testUnsupportedEncodingUTF16(JUNIT_PARAMETERIZED-BlockSize=1)", "testUnsupportedEncodingUTF16(JUNIT_PARAMETERIZED-BlockSize=256)", "testUnsupportedEncodingUTF16(JUNIT_PARAMETERIZED-BlockSize=3)", "testUnsupportedEncodingUTF16(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUnsupportedEncodingUTF16(JUNIT_PARAMETERIZED-BlockSize=8)", "testWindows31jFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testWindows31jFile(JUNIT_PARAMETERIZED-BlockSize=256)", "testWindows31jFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testWindows31jFile(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testWindows31jFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testxWindows949File(JUNIT_PARAMETERIZED-BlockSize=1)", "testxWindows949File(JUNIT_PARAMETERIZED-BlockSize=256)", "testxWindows949File(JUNIT_PARAMETERIZED-BlockSize=3)", "testxWindows949File(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testxWindows949File(JUNIT_PARAMETERIZED-BlockSize=8)", "testxWindows950File(JUNIT_PARAMETERIZED-BlockSize=1)", "testxWindows950File(JUNIT_PARAMETERIZED-BlockSize=256)", "testxWindows950File(JUNIT_PARAMETERIZED-BlockSize=3)", "testxWindows950File(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testxWindows950File(JUNIT_PARAMETERIZED-BlockSize=8)" ],
            "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile" : [ "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-20byteslength.bin, charset=ISO_8859_1)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-gbk.bin, charset=gbk)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-iso8859-1-shortlines-win-linebr.bin, charset=ISO_8859_1)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-iso8859-1.bin, charset=ISO_8859_1)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-shiftjis.bin, charset=Shift_JIS)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf16be.bin, charset=UTF-16BE)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf16le.bin, charset=UTF-16LE)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf8-cr-only.bin, charset=UTF-8)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf8-win-linebr.bin, charset=UTF-8)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf8.bin, charset=UTF-8)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-windows-31j.bin, charset=windows-31j)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-x-windows-949.bin, charset=x-windows-949)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-x-windows-950.bin, charset=x-windows-950)" ],
            "org.apache.commons.io.input.ReversedLinesFileReaderTestSimple" : [ "testFileSizeIsExactMultipleOfBlockSize", "testUnsupportedEncodingBig5", "testUnsupportedEncodingUTF16" ],
            "org.apache.commons.io.input.TailerTest" : [ "testTailer" ],
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_encoding_badEncoding", "testFileLocked", "testFileNotLocked" ]
          }
        }
      },
      "ignoredAffectedTests" : {
        "testcases" : {
          "org.apache.commons.io.input.CharSequenceInputStreamTest" : [ "testMarkReset_RequiredCharsets", "testSkip_RequiredCharsets" ]
        }
      }
    },
    "2b9443351e9c89e812b4166f38c0f137eeaa0777" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "ab2aa8d6fdcdf5b3d326e7e86ac9d045f4859e98",
      "changedClazzes" : { }
    },
    "e180578289a5c65e19e430bd3300a72c9ba97a9b" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "2b9443351e9c89e812b4166f38c0f137eeaa0777",
      "changedClazzes" : {
        "org.apache.commons.io.input.MessageDigestCalculatingInputStream" : { },
        "org.apache.commons.io.input.MessageDigestCalculatingInputStream#<init>(java.io.InputStream)" : {
          "testcases" : {
            "org.apache.commons.io.input.MessageDigestCalculatingInputStreamTest" : [ "test" ]
          }
        },
        "org.apache.commons.io.input.MessageDigestCalculatingInputStream#getMessageDigest" : {
          "testcases" : {
            "org.apache.commons.io.input.MessageDigestCalculatingInputStreamTest" : [ "test" ]
          }
        },
        "org.apache.commons.io.input.MessageDigestCalculatingInputStream$MessageDigestMaintainingObserver#<init>(java.security.MessageDigest)" : {
          "testcases" : {
            "org.apache.commons.io.input.MessageDigestCalculatingInputStreamTest" : [ "test" ]
          }
        },
        "org.apache.commons.io.input.MessageDigestCalculatingInputStream$MessageDigestMaintainingObserver#data(byte[],int,int)" : {
          "testcases" : {
            "org.apache.commons.io.input.MessageDigestCalculatingInputStreamTest" : [ "test" ]
          }
        },
        "org.apache.commons.io.input.MessageDigestCalculatingInputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.input.MessageDigestCalculatingInputStreamTest" : [ "test" ]
          }
        },
        "org.apache.commons.io.input.MessageDigestCalculatingInputStreamTest#generateRandomByteStream(int)" : {
          "testcases" : {
            "org.apache.commons.io.input.MessageDigestCalculatingInputStreamTest" : [ "test" ],
            "org.apache.commons.io.input.ObservableInputStreamTest" : [ "testDataByteCalled", "testDataBytesCalled" ]
          }
        },
        "org.apache.commons.io.input.MessageDigestCalculatingInputStreamTest#test" : {
          "testcases" : {
            "org.apache.commons.io.input.MessageDigestCalculatingInputStreamTest" : [ "test" ]
          }
        },
        "org.apache.commons.io.input.ObservableInputStream" : { },
        "org.apache.commons.io.input.ObservableInputStream#<init>(java.io.InputStream)" : {
          "testcases" : {
            "org.apache.commons.io.input.MessageDigestCalculatingInputStreamTest" : [ "test" ],
            "org.apache.commons.io.input.ObservableInputStreamTest" : [ "testDataByteCalled", "testDataBytesCalled" ]
          }
        },
        "org.apache.commons.io.input.ObservableInputStream#add(org.apache.commons.io.input.ObservableInputStream$Observer)" : {
          "testcases" : {
            "org.apache.commons.io.input.MessageDigestCalculatingInputStreamTest" : [ "test" ],
            "org.apache.commons.io.input.ObservableInputStreamTest" : [ "testDataByteCalled", "testDataBytesCalled" ]
          }
        },
        "org.apache.commons.io.input.ObservableInputStream#close" : {
          "testcases" : {
            "org.apache.commons.io.input.ObservableInputStreamTest" : [ "testDataByteCalled", "testDataBytesCalled" ]
          }
        },
        "org.apache.commons.io.input.ObservableInputStream#consume" : {
          "testcases" : {
            "org.apache.commons.io.input.MessageDigestCalculatingInputStreamTest" : [ "test" ]
          }
        },
        "org.apache.commons.io.input.ObservableInputStream#getObservers" : {
          "testcases" : {
            "org.apache.commons.io.input.MessageDigestCalculatingInputStreamTest" : [ "test" ],
            "org.apache.commons.io.input.ObservableInputStreamTest" : [ "testDataByteCalled", "testDataBytesCalled" ]
          }
        },
        "org.apache.commons.io.input.ObservableInputStream#noteClosed" : {
          "testcases" : {
            "org.apache.commons.io.input.ObservableInputStreamTest" : [ "testDataByteCalled", "testDataBytesCalled" ]
          }
        },
        "org.apache.commons.io.input.ObservableInputStream#noteDataByte(int)" : {
          "testcases" : {
            "org.apache.commons.io.input.ObservableInputStreamTest" : [ "testDataByteCalled" ]
          }
        },
        "org.apache.commons.io.input.ObservableInputStream#noteDataBytes(byte[],int,int)" : {
          "testcases" : {
            "org.apache.commons.io.input.MessageDigestCalculatingInputStreamTest" : [ "test" ],
            "org.apache.commons.io.input.ObservableInputStreamTest" : [ "testDataBytesCalled" ]
          }
        },
        "org.apache.commons.io.input.ObservableInputStream#noteFinished" : {
          "testcases" : {
            "org.apache.commons.io.input.MessageDigestCalculatingInputStreamTest" : [ "test" ],
            "org.apache.commons.io.input.ObservableInputStreamTest" : [ "testDataByteCalled", "testDataBytesCalled" ]
          }
        },
        "org.apache.commons.io.input.ObservableInputStream#read" : {
          "testcases" : {
            "org.apache.commons.io.input.ObservableInputStreamTest" : [ "testDataBytesCalled" ]
          }
        },
        "org.apache.commons.io.input.ObservableInputStream$Observer#<init>" : {
          "testcases" : {
            "org.apache.commons.io.input.MessageDigestCalculatingInputStreamTest" : [ "test" ],
            "org.apache.commons.io.input.ObservableInputStreamTest" : [ "testDataByteCalled", "testDataBytesCalled" ]
          }
        },
        "org.apache.commons.io.input.ObservableInputStream$Observer#closed" : {
          "testcases" : {
            "org.apache.commons.io.input.ObservableInputStreamTest" : [ "testDataByteCalled", "testDataBytesCalled" ]
          }
        },
        "org.apache.commons.io.input.ObservableInputStream$Observer#data(byte[],int,int)" : {
          "testcases" : {
            "org.apache.commons.io.input.ObservableInputStreamTest" : [ "testDataByteCalled" ]
          }
        },
        "org.apache.commons.io.input.ObservableInputStream$Observer#finished" : {
          "testcases" : {
            "org.apache.commons.io.input.MessageDigestCalculatingInputStreamTest" : [ "test" ],
            "org.apache.commons.io.input.ObservableInputStreamTest" : [ "testDataByteCalled", "testDataBytesCalled" ]
          }
        },
        "org.apache.commons.io.input.ObservableInputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.input.ObservableInputStreamTest" : [ "testDataByteCalled", "testDataBytesCalled" ]
          }
        },
        "org.apache.commons.io.input.ObservableInputStreamTest#testDataByteCalled" : {
          "testcases" : {
            "org.apache.commons.io.input.ObservableInputStreamTest" : [ "testDataByteCalled" ]
          }
        },
        "org.apache.commons.io.input.ObservableInputStreamTest#testDataBytesCalled" : {
          "testcases" : {
            "org.apache.commons.io.input.ObservableInputStreamTest" : [ "testDataBytesCalled" ]
          }
        },
        "org.apache.commons.io.input.ObservableInputStreamTest$LastByteKeepingObserver#<init>" : {
          "testcases" : {
            "org.apache.commons.io.input.ObservableInputStreamTest" : [ "testDataByteCalled" ]
          }
        },
        "org.apache.commons.io.input.ObservableInputStreamTest$LastByteKeepingObserver#closed" : {
          "testcases" : {
            "org.apache.commons.io.input.ObservableInputStreamTest" : [ "testDataByteCalled" ]
          }
        },
        "org.apache.commons.io.input.ObservableInputStreamTest$LastByteKeepingObserver#data(int)" : {
          "testcases" : {
            "org.apache.commons.io.input.ObservableInputStreamTest" : [ "testDataByteCalled" ]
          }
        },
        "org.apache.commons.io.input.ObservableInputStreamTest$LastByteKeepingObserver#finished" : {
          "testcases" : {
            "org.apache.commons.io.input.ObservableInputStreamTest" : [ "testDataByteCalled" ]
          }
        },
        "org.apache.commons.io.input.ObservableInputStreamTest$LastBytesKeepingObserver#<init>" : {
          "testcases" : {
            "org.apache.commons.io.input.ObservableInputStreamTest" : [ "testDataBytesCalled" ]
          }
        },
        "org.apache.commons.io.input.ObservableInputStreamTest$LastBytesKeepingObserver#data(byte[],int,int)" : {
          "testcases" : {
            "org.apache.commons.io.input.ObservableInputStreamTest" : [ "testDataBytesCalled" ]
          }
        },
        "org.apache.commons.io.input.ProxyInputStream#<init>(java.io.InputStream)" : {
          "testcases" : {
            "org.apache.commons.io.input.MessageDigestCalculatingInputStreamTest" : [ "test" ],
            "org.apache.commons.io.input.ObservableInputStreamTest" : [ "testDataByteCalled", "testDataBytesCalled" ]
          }
        },
        "org.apache.commons.io.input.ProxyInputStream#afterRead(int)" : {
          "testcases" : {
            "org.apache.commons.io.input.MessageDigestCalculatingInputStreamTest" : [ "test" ],
            "org.apache.commons.io.input.ObservableInputStreamTest" : [ "testDataByteCalled", "testDataBytesCalled" ]
          }
        },
        "org.apache.commons.io.input.ProxyInputStream#beforeRead(int)" : {
          "testcases" : {
            "org.apache.commons.io.input.MessageDigestCalculatingInputStreamTest" : [ "test" ],
            "org.apache.commons.io.input.ObservableInputStreamTest" : [ "testDataByteCalled", "testDataBytesCalled" ]
          }
        },
        "org.apache.commons.io.input.ProxyInputStream#close" : {
          "testcases" : {
            "org.apache.commons.io.input.ObservableInputStreamTest" : [ "testDataByteCalled", "testDataBytesCalled" ]
          }
        },
        "org.apache.commons.io.input.ProxyInputStream#read" : {
          "testcases" : {
            "org.apache.commons.io.input.ObservableInputStreamTest" : [ "testDataBytesCalled" ]
          }
        }
      }
    },
    "c6e63f2aae570a99bccbe8caf4f2164fb926d09a" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "e180578289a5c65e19e430bd3300a72c9ba97a9b",
      "changedClazzes" : { }
    },
    "092bc1c46f3fcb90bb5eaba1d502aa13ff365ba7" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "c6e63f2aae570a99bccbe8caf4f2164fb926d09a",
      "changedClazzes" : { }
    },
    "fe24fcae4fa7c308dcc8ac232e06f310e52545d6" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "092bc1c46f3fcb90bb5eaba1d502aa13ff365ba7",
      "changedClazzes" : { }
    },
    "d6beaa363bca8324c7a699ce797a89698d49ba54" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "fe24fcae4fa7c308dcc8ac232e06f310e52545d6",
      "changedClazzes" : {
        "org.apache.commons.io.IOUtils#<init>" : { },
        "org.apache.commons.io.IOUtils#toByteArray(java.io.InputStream)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testCopy_ByteArray_OutputStream", "testCopy_ByteArray_Writer", "testToBufferedInputStreamWithBufferSize_InputStream", "testToBufferedInputStream_InputStream", "testToByteArray_InputStream", "testToByteArray_URI", "testToByteArray_URL", "testToByteArray_URLConnection", "testToInputStream_CharSequence", "testToInputStream_String", "testToString_ByteArray" ],
            "org.apache.commons.io.input.BoundedInputStreamTest" : [ "testReadArray" ],
            "org.apache.commons.io.output.ByteArrayOutputStreamTestCase" : [ "testToInputStream", "testToInputStreamWithReset" ]
          }
        },
        "org.apache.commons.io.IOUtils#toString(java.io.Reader)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testCopy_String_Writer", "testStringToOutputStream", "testToByteArray_String", "testToString_Reader" ],
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testHttpContent", "testRawContent" ]
          }
        }
      }
    },
    "65e1c9c38becbee2f84d822cd65fd7dbce42b903" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "d6beaa363bca8324c7a699ce797a89698d49ba54",
      "changedClazzes" : {
        "org.apache.commons.io.output.DeferredFileOutputStream" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testAboveThreshold", "testAtThreshold", "testBelowThreshold", "testTempFileAboveThreshold", "testTempFileAboveThresholdPrefixOnly", "testTempFileBelowThreshold", "testTempFileError", "testThresholdReached", "testWriteToLarge", "testWriteToSmall" ]
          }
        }
      }
    },
    "2c771decc2fb117d73e40b17d2691cf9c1c3569d" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "65e1c9c38becbee2f84d822cd65fd7dbce42b903",
      "changedClazzes" : { }
    },
    "dd5db159f7ab0e5ef8861d3e1d5a5cda5434073b" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "2c771decc2fb117d73e40b17d2691cf9c1c3569d",
      "changedClazzes" : { }
    },
    "9ba9b49af72269568ff4bdf516ee233642d761f3" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "dd5db159f7ab0e5ef8861d3e1d5a5cda5434073b",
      "changedClazzes" : { }
    },
    "822bd135f3a54b8fbeb23c313535b13c18198c3a" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "9ba9b49af72269568ff4bdf516ee233642d761f3",
      "changedClazzes" : {
        "org.apache.commons.io.input.ObservableInputStream" : {
          "testcases" : {
            "org.apache.commons.io.input.MessageDigestCalculatingInputStreamTest" : [ "test" ],
            "org.apache.commons.io.input.ObservableInputStreamTest" : [ "testDataByteCalled", "testDataBytesCalled" ]
          }
        },
        "org.apache.commons.io.input.ObservableInputStream$Observer" : {
          "testcases" : {
            "org.apache.commons.io.input.MessageDigestCalculatingInputStreamTest" : [ "test" ],
            "org.apache.commons.io.input.ObservableInputStreamTest" : [ "testDataByteCalled", "testDataBytesCalled" ]
          }
        }
      }
    },
    "941a9a6c2735543607e55fa0d54546b9b229c8e8" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "822bd135f3a54b8fbeb23c313535b13c18198c3a",
      "changedClazzes" : { }
    },
    "9e2b2c09732ca596331f7ca34ba4e0f03d70093d" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "941a9a6c2735543607e55fa0d54546b9b229c8e8",
      "changedClazzes" : { }
    },
    "c5f2e40e7a8234fe48e08d451d3152ba58a03ac6" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "9e2b2c09732ca596331f7ca34ba4e0f03d70093d",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils#forceMkdir(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testTempFileAboveThreshold", "testTempFileAboveThresholdPrefixOnly" ]
          }
        },
        "org.apache.commons.io.FileUtils#forceMkdirParent(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testAboveThreshold", "testTempFileAboveThreshold", "testTempFileAboveThresholdPrefixOnly", "testThresholdReached", "testWriteToLarge" ]
          }
        },
        "org.apache.commons.io.IOUtils#copy(java.io.InputStream,java.io.OutputStream)" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testWriteToLarge" ]
          }
        },
        "org.apache.commons.io.IOUtils#copyLarge(java.io.InputStream,java.io.OutputStream)" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testWriteToLarge" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream" : {
          "testcases" : {
            "org.apache.commons.io.CopyUtilsTest" : [ "copy_byteArrayToOutputStream", "copy_byteArrayToWriter", "copy_inputStreamToWriter", "copy_readerToWriter", "copy_stringToOutputStream", "copy_stringToWriter", "testCopy_inputStreamToOutputStream", "testCopy_readerToOutputStream" ],
            "org.apache.commons.io.DemuxTestCase" : [ "testOutputStream" ],
            "org.apache.commons.io.HexDumpTest" : [ "testDump" ],
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToOutputStreamWithBufferSize", "testCopy_inputStreamToOutputStream_nullIn", "testCopy_inputStreamToWriter", "testCopy_inputStreamToWriter_Encoding", "testCopy_inputStreamToWriter_Encoding_nullEncoding", "testCopy_inputStreamToWriter_Encoding_nullIn", "testCopy_inputStreamToWriter_nullIn", "testCopy_readerToOutputStream", "testCopy_readerToOutputStream_Encoding", "testCopy_readerToOutputStream_Encoding_nullEncoding", "testCopy_readerToOutputStream_Encoding_nullIn", "testCopy_readerToOutputStream_nullIn", "testCopy_readerToWriter", "testCopy_readerToWriter_nullIn" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testCopy_ByteArray_OutputStream", "testCopy_ByteArray_Writer", "testToBufferedInputStreamWithBufferSize_InputStream", "testToBufferedInputStream_InputStream", "testToByteArray_InputStream", "testToByteArray_Reader", "testToByteArray_URI", "testToByteArray_URL", "testToByteArray_URLConnection", "testToInputStream_CharSequence", "testToInputStream_String", "testToString_ByteArray" ],
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWriteLines_OutputStream", "testWriteLines_OutputStream_Encoding", "testWriteLines_OutputStream_Encoding_nullData", "testWriteLines_OutputStream_Encoding_nullEncoding", "testWriteLines_OutputStream_Encoding_nullSeparator", "testWriteLines_OutputStream_nullData", "testWriteLines_OutputStream_nullSeparator", "testWriteLines_Writer", "testWriteLines_Writer_nullData", "testWriteLines_Writer_nullSeparator", "testWrite_byteArrayToOutputStream", "testWrite_byteArrayToOutputStream_nullData", "testWrite_byteArrayToWriter", "testWrite_byteArrayToWriter_Encoding", "testWrite_byteArrayToWriter_Encoding_nullData", "testWrite_byteArrayToWriter_Encoding_nullEncoding", "testWrite_byteArrayToWriter_nullData", "testWrite_charArrayToOutputStream", "testWrite_charArrayToOutputStream_Encoding", "testWrite_charArrayToOutputStream_Encoding_nullData", "testWrite_charArrayToOutputStream_nullData", "testWrite_charArrayToOutputStream_nullEncoding", "testWrite_charArrayToWriter", "testWrite_charArrayToWriter_Encoding_nullData", "testWrite_charSequenceToOutputStream", "testWrite_charSequenceToOutputStream_Encoding", "testWrite_charSequenceToOutputStream_Encoding_nullData", "testWrite_charSequenceToOutputStream_nullData", "testWrite_charSequenceToOutputStream_nullEncoding", "testWrite_charSequenceToWriter", "testWrite_charSequenceToWriter_Encoding_nullData", "testWrite_stringToOutputStream", "testWrite_stringToOutputStream_Encoding", "testWrite_stringToOutputStream_Encoding_nullData", "testWrite_stringToOutputStream_nullData", "testWrite_stringToOutputStream_nullEncoding", "testWrite_stringToWriter", "testWrite_stringToWriter_Encoding_nullData" ],
            "org.apache.commons.io.input.BoundedInputStreamTest" : [ "testReadArray" ],
            "org.apache.commons.io.output.ByteArrayOutputStreamTestCase" : [ "testStream", "testToInputStream", "testToInputStreamWithReset" ],
            "org.apache.commons.io.output.ChunkedOutputStreamTest" : [ "defaultConstructor", "negative_chunksize_not_permitted", "write_four_chunks" ],
            "org.apache.commons.io.output.ChunkedWriterTest" : [ "negative_chunksize_not_permitted", "write_four_chunks", "write_two_chunks_default_constructor" ],
            "org.apache.commons.io.output.CloseShieldOutputStreamTest" : [ "testClose" ],
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ ],
            "org.apache.commons.io.output.ProxyOutputStreamTest" : [ "testWrite", "testWriteNullBaSucceeds" ],
            "org.apache.commons.io.output.ProxyWriterTest" : [ "exceptions_in_append_char", "exceptions_in_append_charSequence", "exceptions_in_append_charSequence_offset", "exceptions_in_close", "exceptions_in_flush", "exceptions_in_write_char_array", "exceptions_in_write_int", "exceptions_in_write_offset_char_array", "exceptions_in_write_string", "exceptions_in_write_string_offset" ],
            "org.apache.commons.io.output.TaggedOutputStreamTest" : [ "testNormalStream" ],
            "org.apache.commons.io.output.ThresholdingOutputStreamTest" : [ "testSetByteCount" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream#<init>(int)" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testAboveThreshold", "testAtThreshold", "testBelowThreshold", "testTempFileAboveThreshold", "testTempFileAboveThresholdPrefixOnly", "testTempFileBelowThreshold", "testTempFileError", "testThresholdReached", "testWriteToLarge", "testWriteToSmall" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream#close" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testAtThreshold", "testBelowThreshold", "testTempFileBelowThreshold", "testWriteToSmall" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream#needNewBuffer(int)" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testAboveThreshold", "testAtThreshold", "testBelowThreshold", "testTempFileAboveThreshold", "testTempFileAboveThresholdPrefixOnly", "testTempFileBelowThreshold", "testTempFileError", "testThresholdReached", "testWriteToLarge", "testWriteToSmall" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream#toByteArray" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testAtThreshold", "testBelowThreshold", "testWriteToLarge", "testWriteToSmall" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream#write(byte[],int,int)" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testAtThreshold", "testBelowThreshold", "testTempFileBelowThreshold", "testThresholdReached", "testWriteToLarge", "testWriteToSmall" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream#writeTo(java.io.OutputStream)" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testAboveThreshold", "testTempFileAboveThreshold", "testTempFileAboveThresholdPrefixOnly", "testThresholdReached", "testWriteToLarge", "testWriteToSmall" ]
          }
        },
        "org.apache.commons.io.output.DeferredFileOutputStream" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ ]
          }
        },
        "org.apache.commons.io.output.DeferredFileOutputStream#<init>(int,int,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testTempFileError" ]
          }
        },
        "org.apache.commons.io.output.DeferredFileOutputStream#close" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testAboveThreshold", "testAtThreshold", "testBelowThreshold", "testTempFileAboveThreshold", "testTempFileAboveThresholdPrefixOnly", "testTempFileBelowThreshold", "testThresholdReached", "testWriteToLarge", "testWriteToSmall" ]
          }
        },
        "org.apache.commons.io.output.DeferredFileOutputStream#getData" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testAboveThreshold", "testAtThreshold", "testBelowThreshold", "testTempFileAboveThreshold", "testTempFileAboveThresholdPrefixOnly", "testThresholdReached" ]
          }
        },
        "org.apache.commons.io.output.DeferredFileOutputStream#getFile" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testTempFileAboveThreshold", "testTempFileAboveThresholdPrefixOnly", "testTempFileBelowThreshold" ]
          }
        },
        "org.apache.commons.io.output.DeferredFileOutputStream#getStream" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testAboveThreshold", "testAtThreshold", "testBelowThreshold", "testTempFileAboveThreshold", "testTempFileAboveThresholdPrefixOnly", "testTempFileBelowThreshold", "testThresholdReached", "testWriteToLarge", "testWriteToSmall" ]
          }
        },
        "org.apache.commons.io.output.DeferredFileOutputStream#isInMemory" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testAboveThreshold", "testAtThreshold", "testBelowThreshold", "testTempFileAboveThreshold", "testTempFileAboveThresholdPrefixOnly", "testTempFileBelowThreshold", "testThresholdReached", "testWriteToLarge", "testWriteToSmall" ]
          }
        },
        "org.apache.commons.io.output.DeferredFileOutputStream#thresholdReached" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testAboveThreshold", "testTempFileAboveThreshold", "testTempFileAboveThresholdPrefixOnly", "testThresholdReached", "testWriteToLarge" ]
          }
        },
        "org.apache.commons.io.output.DeferredFileOutputStream#writeTo(java.io.OutputStream)" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testWriteToLarge", "testWriteToSmall" ]
          }
        },
        "org.apache.commons.io.output.DeferredFileOutputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testAboveThreshold", "testAtThreshold", "testBelowThreshold", "testTempFileAboveThreshold", "testTempFileAboveThresholdPrefixOnly", "testTempFileBelowThreshold", "testTempFileError", "testThresholdReached", "testWriteToLarge", "testWriteToSmall" ]
          }
        },
        "org.apache.commons.io.output.DeferredFileOutputStreamTest#testAboveThreshold" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testAboveThreshold" ]
          }
        },
        "org.apache.commons.io.output.DeferredFileOutputStreamTest#testAtThreshold" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testAtThreshold" ]
          }
        },
        "org.apache.commons.io.output.DeferredFileOutputStreamTest#testBelowThreshold" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testBelowThreshold" ]
          }
        },
        "org.apache.commons.io.output.DeferredFileOutputStreamTest#testTempFileAboveThreshold" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testTempFileAboveThreshold" ]
          }
        },
        "org.apache.commons.io.output.DeferredFileOutputStreamTest#testTempFileAboveThresholdPrefixOnly" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testTempFileAboveThresholdPrefixOnly" ]
          }
        },
        "org.apache.commons.io.output.DeferredFileOutputStreamTest#testTempFileBelowThreshold" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testTempFileBelowThreshold" ]
          }
        },
        "org.apache.commons.io.output.DeferredFileOutputStreamTest#testTempFileError" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testTempFileError" ]
          }
        },
        "org.apache.commons.io.output.DeferredFileOutputStreamTest#testThresholdReached" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testThresholdReached" ]
          }
        },
        "org.apache.commons.io.output.DeferredFileOutputStreamTest#testWriteToLarge" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testWriteToLarge" ]
          }
        },
        "org.apache.commons.io.output.DeferredFileOutputStreamTest#testWriteToSmall" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testWriteToSmall" ]
          }
        },
        "org.apache.commons.io.output.DeferredFileOutputStreamTest#verifyResultFile(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testAboveThreshold", "testTempFileAboveThreshold", "testTempFileAboveThresholdPrefixOnly", "testThresholdReached", "testWriteToLarge" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#<init>(int)" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testWriteToLarge" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#close" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testWriteToLarge" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#toString" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testWriteToLarge" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#write(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testWriteToLarge" ]
          }
        },
        "org.apache.commons.io.output.ThresholdingOutputStream#<init>(int)" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testAboveThreshold", "testAtThreshold", "testBelowThreshold", "testTempFileAboveThreshold", "testTempFileAboveThresholdPrefixOnly", "testTempFileBelowThreshold", "testTempFileError", "testThresholdReached", "testWriteToLarge", "testWriteToSmall" ]
          }
        },
        "org.apache.commons.io.output.ThresholdingOutputStream#checkThreshold(int)" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testAboveThreshold", "testAtThreshold", "testBelowThreshold", "testTempFileAboveThreshold", "testTempFileAboveThresholdPrefixOnly", "testTempFileBelowThreshold", "testThresholdReached", "testWriteToLarge", "testWriteToSmall" ]
          }
        },
        "org.apache.commons.io.output.ThresholdingOutputStream#close" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testAboveThreshold", "testAtThreshold", "testBelowThreshold", "testTempFileAboveThreshold", "testTempFileAboveThresholdPrefixOnly", "testTempFileBelowThreshold", "testThresholdReached", "testWriteToLarge", "testWriteToSmall" ]
          }
        },
        "org.apache.commons.io.output.ThresholdingOutputStream#flush" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testAboveThreshold", "testAtThreshold", "testBelowThreshold", "testTempFileAboveThreshold", "testTempFileAboveThresholdPrefixOnly", "testTempFileBelowThreshold", "testThresholdReached", "testWriteToLarge", "testWriteToSmall" ]
          }
        },
        "org.apache.commons.io.output.ThresholdingOutputStream#isThresholdExceeded" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testAboveThreshold", "testAtThreshold", "testBelowThreshold", "testTempFileAboveThreshold", "testTempFileAboveThresholdPrefixOnly", "testTempFileBelowThreshold", "testThresholdReached", "testWriteToLarge", "testWriteToSmall" ]
          }
        },
        "org.apache.commons.io.output.ThresholdingOutputStream#write(byte[])" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testAboveThreshold", "testAtThreshold", "testBelowThreshold", "testTempFileAboveThreshold", "testTempFileAboveThresholdPrefixOnly", "testTempFileBelowThreshold", "testThresholdReached" ]
          }
        }
      }
    },
    "c8dadeedd7255814bb282968f2092a1aa71e4ea1" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "c5f2e40e7a8234fe48e08d451d3152ba58a03ac6",
      "changedClazzes" : { }
    },
    "96b43a3d6b731d38b4bc55456f12de7fcca7c3a1" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "c8dadeedd7255814bb282968f2092a1aa71e4ea1",
      "changedClazzes" : { }
    },
    "46696f44ed3628ff660ef7c12aaed256a4450d87" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "96b43a3d6b731d38b4bc55456f12de7fcca7c3a1",
      "changedClazzes" : { }
    },
    "3813270dcc2820f98872f061c26c75b36c569534" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "46696f44ed3628ff660ef7c12aaed256a4450d87",
      "changedClazzes" : { }
    },
    "97fdb4b3a174b011ec1fa45125bf46c2edf4d6df" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "3813270dcc2820f98872f061c26c75b36c569534",
      "changedClazzes" : { }
    },
    "0b3139a73e03b5a92f2370d9b086d3208fe0b5a0" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "97fdb4b3a174b011ec1fa45125bf46c2edf4d6df",
      "changedClazzes" : { }
    },
    "948e0271b96774552a0b0f69d0ae2d53b34e575e" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "0b3139a73e03b5a92f2370d9b086d3208fe0b5a0",
      "changedClazzes" : { }
    },
    "9d432121e1c60557da3e159252a88885944e5f00" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "948e0271b96774552a0b0f69d0ae2d53b34e575e",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerNull" ],
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce", "testDeleteNormal", "testDeleteNull", "testDeleteQuietlyNormal", "testToString" ],
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testCleanEmpty", "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile", "testThrowsOnNullList" ],
            "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" : [ "testCleanDirWithASymlinkDir", "testCleanDirWithParentSymlinks", "testCleanDirWithSymlinkFile", "testCorrectlyIdentifySymlinkWithParentSymLink", "testIdentifiesBrokenSymlinkFile", "testIdentifiesSymlinkDir", "testIdentifiesSymlinkFile", "testStillClearsIfGivenDirectoryIsASymlink" ],
            "org.apache.commons.io.FileUtilsDirectoryContainsTestCase" : [ "testCanonicalPath", "testDirectoryContainsDirectory", "testDirectoryContainsFile", "testDirectoryDoesNotContainFile", "testDirectoryDoesNotContainsDirectory", "testDirectoryDoesNotExist", "testFileDoesNotExist", "testFileDoesNotExistBug", "testIO466", "testSameFile", "testUnrealizedContainment" ],
            "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension", "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsWaitForTestCase" : [ "testWaitFor", "testWaitForInterrupted" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedError_IO_128", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetBaseName_with_nullByte", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetFullPathNoEndSeparator_IO_248", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPathNoEndSeparator_with_null_byte", "testGetPath_with_nullbyte", "testGetPrefix", "testGetPrefixLength", "testGetPrefix_with_nullbyte", "testIndexOfExtension", "testIndexOfLastSeparator", "testInjectionFailure", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testIsExtension_injection", "testNormalize", "testNormalizeNoEndSeparator", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin", "testNormalize_with_nullbytes", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testAsBufferedInputStream", "testAsBufferedInputStreamWithBufferSize", "testAsBufferedNull", "testAsBufferedOutputStream", "testAsBufferedOutputStreamWithBufferSize", "testAsBufferedReader", "testAsBufferedReaderWithBufferSize", "testAsBufferedWriter", "testAsBufferedWriterWithBufferSize", "testCloseQuietly_AllCloseableIOException", "testCloseQuietly_CloseableIOException", "testCloseQuietly_Selector", "testCloseQuietly_SelectorIOException", "testCloseQuietly_SelectorNull", "testCloseQuietly_SelectorTwice", "testCloseQuietly_ServerSocket", "testCloseQuietly_ServerSocketIOException", "testCloseQuietly_Socket", "testCloseQuietly_SocketIOException", "testConstants", "testContentEqualsIgnoreEOL", "testContentEquals_InputStream_InputStream", "testContentEquals_Reader_Reader", "testCopyLarge_CharExtraLength", "testCopyLarge_CharFullLength", "testCopyLarge_CharNoSkip", "testCopyLarge_CharSkip", "testCopyLarge_CharSkipInvalid", "testCopyLarge_ExtraLength", "testCopyLarge_FullLength", "testCopyLarge_NoSkip", "testCopyLarge_Skip", "testCopyLarge_SkipInvalid", "testCopy_ByteArray_OutputStream", "testCopy_ByteArray_Writer", "testCopy_String_Writer", "testReadFully_InputStream_ByteArray", "testReadFully_InputStream_Offset", "testReadFully_InputStream__ReturnByteArray", "testReadFully_ReadableByteChannel", "testReadFully_Reader", "testReadFully_Reader_Offset", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testRead_ReadableByteChannel", "testSkipFully_InputStream", "testSkipFully_ReadableByteChannel", "testSkipFully_Reader", "testSkip_FileReader", "testSkip_InputStream", "testSkip_ReadableByteChannel", "testStringToOutputStream", "testToBufferedInputStreamWithBufferSize_InputStream", "testToBufferedInputStream_InputStream", "testToByteArray_InputStream", "testToByteArray_InputStream_NegativeSize", "testToByteArray_InputStream_Size", "testToByteArray_InputStream_SizeIllegal", "testToByteArray_InputStream_SizeLong", "testToByteArray_InputStream_SizeZero", "testToByteArray_Reader", "testToByteArray_String", "testToByteArray_URI", "testToByteArray_URL", "testToByteArray_URLConnection", "testToCharArray_InputStream", "testToCharArray_InputStream_CharsetName", "testToCharArray_Reader", "testToInputStream_CharSequence", "testToInputStream_String", "testToString_ByteArray", "testToString_InputStream", "testToString_Reader", "testToString_URI", "testToString_URI_CharsetName", "testToString_URI_CharsetNameNull", "testToString_URL", "testToString_URL_CharsetName", "testToString_URL_CharsetNameNull" ],
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFilteringBufferedReader", "testFilteringFileReader", "testInvalidEncoding", "testMissingFile", "testNextLineOnlyDefaultEncoding", "testNextLineOnlyNullEncoding", "testNextLineOnlyUtf8Encoding", "testNextOnly", "testNextWithException", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "constructorArray_Null", "constructorIterable_Null", "constructorIterable_order" ],
            "org.apache.commons.io.comparator.DirectoryFileComparatorTest" : [ "testSortArray" ],
            "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.NameFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.PathFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testAnd", "testCanRead", "testCanWrite", "testDelegateFileFilter", "testDelegation", "testDeprecatedWildcard", "testDirectory", "testEmpty", "testEnsureTestCoverage", "testFalse", "testFileFilterUtils_and", "testFileFilterUtils_or", "testFiles", "testFilterArray", "testFilterArrayNullParameters", "testFilterArray_fromList", "testFilterList", "testFilterListNullParameters", "testFilterList_fromArray", "testFilterSet", "testFilterSetNullParameters", "testFilterSet_fromArray", "testHidden", "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset", "testMagicNumberFileFilterValidation", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNameFilterNullArrayArgument", "testNameFilterNullListArgument", "testNot", "testNullFilters", "testOr", "testPrefix", "testPrefixCaseInsensitive", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testTrue", "testWildcard" ],
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ],
            "org.apache.commons.io.input.TailerTest" : [ "testBufferBreak", "testIO335", "testInterrupt", "testLongFile", "testMultiByteBreak", "testStopWithNoFile", "testStopWithNoFileUsingExecutor", "testTailer", "testTailerEndOfFileReached", "testTailerEof" ],
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor", "testMonitor", "testThreadFactory" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile", "testToString" ],
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 1)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 1.024)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 128)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 16)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 2)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 2.048)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 256)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 32)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 4)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 4.096)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 512)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 64)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 8)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 1)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 1.024)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 128)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 16)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 2)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 2.048)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 256)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 32)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 4)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 4.096)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 512)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 64)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 8)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 1)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 1.024)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 128)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 16)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 2)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 2.048)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 256)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 32)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 4)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 4.096)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 512)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 64)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 8)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 1)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 1.024)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 128)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 16)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 2)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 2.048)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 256)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 32)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 4)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 4.096)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 512)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 64)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 8)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 1)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 1.024)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 128)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 16)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 2)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 2.048)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 256)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 32)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 4)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 4.096)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 512)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 64)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 8)" ],
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "constructor_File_directory", "constructor_File_encoding_badEncoding", "constructor_File_nullFile", "constructor_fileName_nullFile", "sameEncoding_CharsetEncoder_constructor", "sameEncoding_Charset_constructor", "sameEncoding_null_Charset_constructor", "sameEncoding_string_CharsetEncoder_constructor", "sameEncoding_string_Charset_constructor", "sameEncoding_string_constructor", "sameEncoding_string_string_constructor", "testDifferentEncoding" ],
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testConstructor_fileName_nullFile", "testFileLocked", "testFileNotLocked" ]
          }
        },
        "org.apache.commons.io.Java7Support" : {
          "testcases" : {
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerNull" ],
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce", "testDeleteNormal", "testDeleteNull", "testDeleteQuietlyNormal", "testToString" ],
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testCleanEmpty", "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile", "testThrowsOnNullList" ],
            "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" : [ "testCleanDirWithASymlinkDir", "testCleanDirWithParentSymlinks", "testCleanDirWithSymlinkFile", "testCorrectlyIdentifySymlinkWithParentSymLink", "testIdentifiesBrokenSymlinkFile", "testIdentifiesSymlinkDir", "testIdentifiesSymlinkFile", "testStillClearsIfGivenDirectoryIsASymlink" ],
            "org.apache.commons.io.FileUtilsDirectoryContainsTestCase" : [ "testCanonicalPath", "testDirectoryContainsDirectory", "testDirectoryContainsFile", "testDirectoryDoesNotContainFile", "testDirectoryDoesNotContainsDirectory", "testDirectoryDoesNotExist", "testFileDoesNotExist", "testFileDoesNotExistBug", "testIO466", "testSameFile", "testUnrealizedContainment" ],
            "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension", "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedError_IO_128", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetBaseName_with_nullByte", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetFullPathNoEndSeparator_IO_248", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPathNoEndSeparator_with_null_byte", "testGetPath_with_nullbyte", "testGetPrefix", "testGetPrefixLength", "testGetPrefix_with_nullbyte", "testIndexOfExtension", "testIndexOfLastSeparator", "testInjectionFailure", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testIsExtension_injection", "testNormalize", "testNormalizeNoEndSeparator", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin", "testNormalize_with_nullbytes", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testAsBufferedInputStream", "testAsBufferedInputStreamWithBufferSize", "testAsBufferedNull", "testAsBufferedOutputStream", "testAsBufferedOutputStreamWithBufferSize", "testAsBufferedReader", "testAsBufferedReaderWithBufferSize", "testAsBufferedWriter", "testAsBufferedWriterWithBufferSize", "testCloseQuietly_AllCloseableIOException", "testCloseQuietly_CloseableIOException", "testCloseQuietly_Selector", "testCloseQuietly_SelectorIOException", "testCloseQuietly_SelectorNull", "testCloseQuietly_SelectorTwice", "testCloseQuietly_ServerSocket", "testCloseQuietly_ServerSocketIOException", "testCloseQuietly_Socket", "testCloseQuietly_SocketIOException", "testConstants", "testContentEqualsIgnoreEOL", "testContentEquals_InputStream_InputStream", "testContentEquals_Reader_Reader", "testCopyLarge_CharExtraLength", "testCopyLarge_CharFullLength", "testCopyLarge_CharNoSkip", "testCopyLarge_CharSkip", "testCopyLarge_CharSkipInvalid", "testCopyLarge_ExtraLength", "testCopyLarge_FullLength", "testCopyLarge_NoSkip", "testCopyLarge_Skip", "testCopyLarge_SkipInvalid", "testCopy_ByteArray_OutputStream", "testCopy_ByteArray_Writer", "testCopy_String_Writer", "testReadFully_InputStream_ByteArray", "testReadFully_InputStream_Offset", "testReadFully_InputStream__ReturnByteArray", "testReadFully_ReadableByteChannel", "testReadFully_Reader", "testReadFully_Reader_Offset", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testRead_ReadableByteChannel", "testSkipFully_InputStream", "testSkipFully_ReadableByteChannel", "testSkipFully_Reader", "testSkip_FileReader", "testSkip_InputStream", "testSkip_ReadableByteChannel", "testStringToOutputStream", "testToBufferedInputStreamWithBufferSize_InputStream", "testToBufferedInputStream_InputStream", "testToByteArray_InputStream", "testToByteArray_InputStream_NegativeSize", "testToByteArray_InputStream_Size", "testToByteArray_InputStream_SizeIllegal", "testToByteArray_InputStream_SizeLong", "testToByteArray_InputStream_SizeZero", "testToByteArray_Reader", "testToByteArray_String", "testToByteArray_URI", "testToByteArray_URL", "testToByteArray_URLConnection", "testToCharArray_InputStream", "testToCharArray_InputStream_CharsetName", "testToCharArray_Reader", "testToInputStream_CharSequence", "testToInputStream_String", "testToString_ByteArray", "testToString_InputStream", "testToString_Reader", "testToString_URI", "testToString_URI_CharsetName", "testToString_URI_CharsetNameNull", "testToString_URL", "testToString_URL_CharsetName", "testToString_URL_CharsetNameNull" ],
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFilteringBufferedReader", "testFilteringFileReader", "testInvalidEncoding", "testMissingFile", "testNextLineOnlyDefaultEncoding", "testNextLineOnlyNullEncoding", "testNextLineOnlyUtf8Encoding", "testNextOnly", "testNextWithException", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "constructorArray_Null", "constructorIterable_Null", "constructorIterable_order" ],
            "org.apache.commons.io.comparator.DirectoryFileComparatorTest" : [ "testSortArray" ],
            "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.NameFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.PathFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testAnd", "testCanRead", "testCanWrite", "testDelegateFileFilter", "testDelegation", "testDeprecatedWildcard", "testDirectory", "testEmpty", "testEnsureTestCoverage", "testFalse", "testFileFilterUtils_and", "testFileFilterUtils_or", "testFiles", "testFilterArray", "testFilterArrayNullParameters", "testFilterArray_fromList", "testFilterList", "testFilterListNullParameters", "testFilterList_fromArray", "testFilterSet", "testFilterSetNullParameters", "testFilterSet_fromArray", "testHidden", "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset", "testMagicNumberFileFilterValidation", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNameFilterNullArrayArgument", "testNameFilterNullListArgument", "testNot", "testNullFilters", "testOr", "testPrefix", "testPrefixCaseInsensitive", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testTrue", "testWildcard" ],
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ],
            "org.apache.commons.io.input.TailerTest" : [ "testBufferBreak", "testIO335", "testInterrupt", "testLongFile", "testMultiByteBreak", "testStopWithNoFile", "testStopWithNoFileUsingExecutor", "testTailer", "testTailerEndOfFileReached", "testTailerEof" ],
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor", "testMonitor", "testThreadFactory" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile", "testToString" ],
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "constructor_File_directory", "constructor_File_encoding_badEncoding", "constructor_File_nullFile", "constructor_fileName_nullFile", "sameEncoding_CharsetEncoder_constructor", "sameEncoding_Charset_constructor", "sameEncoding_null_Charset_constructor", "sameEncoding_string_CharsetEncoder_constructor", "sameEncoding_string_Charset_constructor", "sameEncoding_string_constructor", "sameEncoding_string_string_constructor", "testDifferentEncoding" ],
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testConstructor_fileName_nullFile", "testFileLocked", "testFileNotLocked" ]
          }
        },
        "org.apache.commons.io.Java7SupportTest" : { }
      }
    },
    "0c838a799ace7673e721bd29f0570097eb8f2925" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "9d432121e1c60557da3e159252a88885944e5f00",
      "changedClazzes" : {
        "org.apache.commons.io.CharsetsTestCase" : {
          "testcases" : {
            "org.apache.commons.io.CharsetsTestCase" : [ "testIso8859_1", "testRequiredCharsets", "testToCharset", "testUsAscii", "testUtf16", "testUtf16Be", "testUtf16Le", "testUtf8" ]
          }
        },
        "org.apache.commons.io.DemuxTestCase" : {
          "testcases" : {
            "org.apache.commons.io.DemuxTestCase" : [ "testInputStream", "testOutputStream" ]
          }
        },
        "org.apache.commons.io.DemuxTestCase$ReaderThread" : {
          "testcases" : {
            "org.apache.commons.io.DemuxTestCase" : [ "testInputStream" ]
          }
        },
        "org.apache.commons.io.DemuxTestCase$WriterThread" : {
          "testcases" : {
            "org.apache.commons.io.DemuxTestCase" : [ "testOutputStream" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testAsBufferedInputStream", "testAsBufferedInputStreamWithBufferSize", "testAsBufferedNull", "testAsBufferedOutputStream", "testAsBufferedOutputStreamWithBufferSize", "testAsBufferedReader", "testAsBufferedReaderWithBufferSize", "testAsBufferedWriter", "testAsBufferedWriterWithBufferSize", "testCloseQuietly_AllCloseableIOException", "testCloseQuietly_CloseableIOException", "testCloseQuietly_Selector", "testCloseQuietly_SelectorIOException", "testCloseQuietly_SelectorNull", "testCloseQuietly_SelectorTwice", "testCloseQuietly_ServerSocket", "testCloseQuietly_ServerSocketIOException", "testCloseQuietly_Socket", "testCloseQuietly_SocketIOException", "testConstants", "testContentEqualsIgnoreEOL", "testContentEquals_InputStream_InputStream", "testContentEquals_Reader_Reader", "testCopyLarge_CharExtraLength", "testCopyLarge_CharFullLength", "testCopyLarge_CharNoSkip", "testCopyLarge_CharSkip", "testCopyLarge_CharSkipInvalid", "testCopyLarge_ExtraLength", "testCopyLarge_FullLength", "testCopyLarge_NoSkip", "testCopyLarge_Skip", "testCopyLarge_SkipInvalid", "testCopy_ByteArray_OutputStream", "testCopy_ByteArray_Writer", "testCopy_String_Writer", "testReadFully_InputStream_ByteArray", "testReadFully_InputStream_Offset", "testReadFully_InputStream__ReturnByteArray", "testReadFully_ReadableByteChannel", "testReadFully_Reader", "testReadFully_Reader_Offset", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testRead_ReadableByteChannel", "testSkipFully_InputStream", "testSkipFully_ReadableByteChannel", "testSkipFully_Reader", "testSkip_FileReader", "testSkip_InputStream", "testSkip_ReadableByteChannel", "testStringToOutputStream", "testToBufferedInputStreamWithBufferSize_InputStream", "testToBufferedInputStream_InputStream", "testToByteArray_InputStream", "testToByteArray_InputStream_NegativeSize", "testToByteArray_InputStream_Size", "testToByteArray_InputStream_SizeIllegal", "testToByteArray_InputStream_SizeLong", "testToByteArray_InputStream_SizeZero", "testToByteArray_Reader", "testToByteArray_String", "testToByteArray_URI", "testToByteArray_URL", "testToByteArray_URLConnection", "testToCharArray_InputStream", "testToCharArray_InputStream_CharsetName", "testToCharArray_Reader", "testToInputStream_CharSequence", "testToInputStream_String", "testToString_ByteArray", "testToString_InputStream", "testToString_Reader", "testToString_URI", "testToString_URI_CharsetName", "testToString_URI_CharsetNameNull", "testToString_URL", "testToString_URL_CharsetName", "testToString_URL_CharsetNameNull" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testAnd", "testCanRead", "testCanWrite", "testDelegateFileFilter", "testDelegation", "testDeprecatedWildcard", "testDirectory", "testEmpty", "testEnsureTestCoverage", "testFalse", "testFileFilterUtils_and", "testFileFilterUtils_or", "testFiles", "testFilterArray", "testFilterArrayNullParameters", "testFilterArray_fromList", "testFilterList", "testFilterListNullParameters", "testFilterList_fromArray", "testFilterSet", "testFilterSetNullParameters", "testFilterSet_fromArray", "testHidden", "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset", "testMagicNumberFileFilterValidation", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNameFilterNullArrayArgument", "testNameFilterNullListArgument", "testNot", "testNullFilters", "testOr", "testPrefix", "testPrefixCaseInsensitive", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testTrue", "testWildcard" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "skipReturnValueWithBom", "skipReturnValueWithoutBom", "testAvailableWithBOM", "testAvailableWithoutBOM", "testClose", "testEmptyBufferWithBOM", "testEmptyBufferWithoutBOM", "testGetBOMFirstThenRead", "testGetBOMFirstThenReadInclude", "testLargeBufferWithBOM", "testLargeBufferWithoutBOM", "testLeadingNonBOMBufferedRead", "testLeadingNonBOMSingleRead", "testMarkResetAfterReadWithBOM", "testMarkResetAfterReadWithoutBOM", "testMarkResetBeforeReadWithBOM", "testMarkResetBeforeReadWithoutBOM", "testNoBoms", "testReadEmpty", "testReadSmall", "testReadTwiceWithBOM", "testReadTwiceWithoutBOM", "testReadWithBOMInclude", "testReadWithBOMUtf16Be", "testReadWithBOMUtf16Le", "testReadWithBOMUtf32Be", "testReadWithBOMUtf32Le", "testReadWithBOMUtf8", "testReadWithMultipleBOM", "testReadWithoutBOM", "testReadXmlWithBOMUcs2", "testReadXmlWithBOMUcs4", "testReadXmlWithBOMUtf16Be", "testReadXmlWithBOMUtf16Le", "testReadXmlWithBOMUtf32Be", "testReadXmlWithBOMUtf32Le", "testReadXmlWithBOMUtf8", "testReadXmlWithoutBOMUtf32Be", "testReadXmlWithoutBOMUtf32Le", "testSkipWithBOM", "testSkipWithoutBOM", "testSmallBufferWithBOM", "testSmallBufferWithoutBOM", "testSupportCode" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest$ExpectCloseInputStream" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testClose" ]
          }
        },
        "org.apache.commons.io.input.ReversedLinesFileReader" : {
          "testcases" : {
            "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize" : [ "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=256)", "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=1)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=256)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=3)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=8)", "testGBK(JUNIT_PARAMETERIZED-BlockSize=1)", "testGBK(JUNIT_PARAMETERIZED-BlockSize=256)", "testGBK(JUNIT_PARAMETERIZED-BlockSize=3)", "testGBK(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testGBK(JUNIT_PARAMETERIZED-BlockSize=8)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=1)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=256)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=3)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=8)", "testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=1)", "testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=256)", "testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=3)", "testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=8)", "testShiftJISFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testShiftJISFile(JUNIT_PARAMETERIZED-BlockSize=256)", "testShiftJISFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testShiftJISFile(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testShiftJISFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=8)", "testUnsupportedEncodingBig5(JUNIT_PARAMETERIZED-BlockSize=1)", "testUnsupportedEncodingBig5(JUNIT_PARAMETERIZED-BlockSize=256)", "testUnsupportedEncodingBig5(JUNIT_PARAMETERIZED-BlockSize=3)", "testUnsupportedEncodingBig5(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUnsupportedEncodingBig5(JUNIT_PARAMETERIZED-BlockSize=8)", "testUnsupportedEncodingUTF16(JUNIT_PARAMETERIZED-BlockSize=1)", "testUnsupportedEncodingUTF16(JUNIT_PARAMETERIZED-BlockSize=256)", "testUnsupportedEncodingUTF16(JUNIT_PARAMETERIZED-BlockSize=3)", "testUnsupportedEncodingUTF16(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUnsupportedEncodingUTF16(JUNIT_PARAMETERIZED-BlockSize=8)", "testWindows31jFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testWindows31jFile(JUNIT_PARAMETERIZED-BlockSize=256)", "testWindows31jFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testWindows31jFile(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testWindows31jFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testxWindows949File(JUNIT_PARAMETERIZED-BlockSize=1)", "testxWindows949File(JUNIT_PARAMETERIZED-BlockSize=256)", "testxWindows949File(JUNIT_PARAMETERIZED-BlockSize=3)", "testxWindows949File(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testxWindows949File(JUNIT_PARAMETERIZED-BlockSize=8)", "testxWindows950File(JUNIT_PARAMETERIZED-BlockSize=1)", "testxWindows950File(JUNIT_PARAMETERIZED-BlockSize=256)", "testxWindows950File(JUNIT_PARAMETERIZED-BlockSize=3)", "testxWindows950File(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testxWindows950File(JUNIT_PARAMETERIZED-BlockSize=8)" ],
            "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile" : [ "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-20byteslength.bin, charset=ISO_8859_1)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-gbk.bin, charset=gbk)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-iso8859-1-shortlines-win-linebr.bin, charset=ISO_8859_1)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-iso8859-1.bin, charset=ISO_8859_1)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-shiftjis.bin, charset=Shift_JIS)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf16be.bin, charset=UTF-16BE)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf16le.bin, charset=UTF-16LE)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf8-cr-only.bin, charset=UTF-8)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf8-win-linebr.bin, charset=UTF-8)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf8.bin, charset=UTF-8)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-windows-31j.bin, charset=windows-31j)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-x-windows-949.bin, charset=x-windows-949)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-x-windows-950.bin, charset=x-windows-950)" ],
            "org.apache.commons.io.input.ReversedLinesFileReaderTestSimple" : [ "testFileSizeIsExactMultipleOfBlockSize", "testUnsupportedEncodingBig5", "testUnsupportedEncodingUTF16" ]
          }
        },
        "org.apache.commons.io.input.ReversedLinesFileReader$FilePart" : {
          "testcases" : {
            "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize" : [ "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=256)", "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=1)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=256)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=3)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=8)", "testGBK(JUNIT_PARAMETERIZED-BlockSize=1)", "testGBK(JUNIT_PARAMETERIZED-BlockSize=256)", "testGBK(JUNIT_PARAMETERIZED-BlockSize=3)", "testGBK(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testGBK(JUNIT_PARAMETERIZED-BlockSize=8)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=1)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=256)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=3)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=8)", "testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=1)", "testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=256)", "testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=3)", "testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=8)", "testShiftJISFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testShiftJISFile(JUNIT_PARAMETERIZED-BlockSize=256)", "testShiftJISFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testShiftJISFile(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testShiftJISFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=8)", "testWindows31jFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testWindows31jFile(JUNIT_PARAMETERIZED-BlockSize=256)", "testWindows31jFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testWindows31jFile(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testWindows31jFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testxWindows949File(JUNIT_PARAMETERIZED-BlockSize=1)", "testxWindows949File(JUNIT_PARAMETERIZED-BlockSize=256)", "testxWindows949File(JUNIT_PARAMETERIZED-BlockSize=3)", "testxWindows949File(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testxWindows949File(JUNIT_PARAMETERIZED-BlockSize=8)", "testxWindows950File(JUNIT_PARAMETERIZED-BlockSize=1)", "testxWindows950File(JUNIT_PARAMETERIZED-BlockSize=256)", "testxWindows950File(JUNIT_PARAMETERIZED-BlockSize=3)", "testxWindows950File(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testxWindows950File(JUNIT_PARAMETERIZED-BlockSize=8)" ],
            "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile" : [ "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-20byteslength.bin, charset=ISO_8859_1)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-gbk.bin, charset=gbk)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-iso8859-1-shortlines-win-linebr.bin, charset=ISO_8859_1)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-iso8859-1.bin, charset=ISO_8859_1)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-shiftjis.bin, charset=Shift_JIS)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf16be.bin, charset=UTF-16BE)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf16le.bin, charset=UTF-16LE)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf8-cr-only.bin, charset=UTF-8)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf8-win-linebr.bin, charset=UTF-8)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf8.bin, charset=UTF-8)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-windows-31j.bin, charset=windows-31j)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-x-windows-949.bin, charset=x-windows-949)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-x-windows-950.bin, charset=x-windows-950)" ],
            "org.apache.commons.io.input.ReversedLinesFileReaderTestSimple" : [ "testFileSizeIsExactMultipleOfBlockSize" ]
          }
        },
        "org.apache.commons.io.input.TailerTest" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testBufferBreak", "testIO335", "testInterrupt", "testLongFile", "testMultiByteBreak", "testStopWithNoFile", "testStopWithNoFileUsingExecutor", "testTailer", "testTailerEndOfFileReached", "testTailerEof" ]
          }
        },
        "org.apache.commons.io.input.TailerTest$TestTailerListener" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testBufferBreak", "testIO335", "testInterrupt", "testLongFile", "testMultiByteBreak", "testStopWithNoFile", "testStopWithNoFileUsingExecutor", "testTailer", "testTailerEndOfFileReached", "testTailerEof" ]
          }
        },
        "org.apache.commons.io.output.LockableFileWriterTest" : {
          "testcases" : {
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testConstructor_fileName_nullFile", "testFileLocked", "testFileNotLocked" ]
          }
        }
      }
    },
    "5ea5c9624eee945ba6bf41e181066343e48272ce" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "0c838a799ace7673e721bd29f0570097eb8f2925",
      "changedClazzes" : {
        "org.apache.commons.io.CopyUtilsTest" : {
          "testcases" : {
            "org.apache.commons.io.CopyUtilsTest" : [ "copy_byteArrayToOutputStream", "copy_byteArrayToWriter", "copy_inputStreamToWriter", "copy_inputStreamToWriterWithEncoding", "copy_readerToWriter", "copy_stringToOutputStream", "copy_stringToWriter", "testCopy_byteArrayToWriterWithEncoding", "testCopy_inputStreamToOutputStream", "testCopy_readerToOutputStream", "testCtor" ]
          }
        },
        "org.apache.commons.io.IOExceptionWithCauseTestCase" : {
          "testcases" : {
            "org.apache.commons.io.IOExceptionWithCauseTestCase" : [ "testIOExceptionStringThrowable", "testIOExceptionThrowable" ]
          }
        },
        "org.apache.commons.io.TaggedIOExceptionTest" : {
          "testcases" : {
            "org.apache.commons.io.TaggedIOExceptionTest" : [ "testTaggedIOException" ]
          }
        },
        "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase" : { },
        "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter" : { },
        "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter" : { },
        "org.apache.commons.io.input.BOMInputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "skipReturnValueWithBom", "skipReturnValueWithoutBom", "testAvailableWithBOM", "testAvailableWithoutBOM", "testClose", "testEmptyBufferWithBOM", "testEmptyBufferWithoutBOM", "testGetBOMFirstThenRead", "testGetBOMFirstThenReadInclude", "testLargeBufferWithBOM", "testLargeBufferWithoutBOM", "testLeadingNonBOMBufferedRead", "testLeadingNonBOMSingleRead", "testMarkResetAfterReadWithBOM", "testMarkResetAfterReadWithoutBOM", "testMarkResetBeforeReadWithBOM", "testMarkResetBeforeReadWithoutBOM", "testNoBoms", "testReadEmpty", "testReadSmall", "testReadTwiceWithBOM", "testReadTwiceWithoutBOM", "testReadWithBOMInclude", "testReadWithBOMUtf16Be", "testReadWithBOMUtf16Le", "testReadWithBOMUtf32Be", "testReadWithBOMUtf32Le", "testReadWithBOMUtf8", "testReadWithMultipleBOM", "testReadWithoutBOM", "testReadXmlWithBOMUcs2", "testReadXmlWithBOMUcs4", "testReadXmlWithBOMUtf16Be", "testReadXmlWithBOMUtf16Le", "testReadXmlWithBOMUtf32Be", "testReadXmlWithBOMUtf32Le", "testReadXmlWithBOMUtf8", "testReadXmlWithoutBOMUtf32Be", "testReadXmlWithoutBOMUtf32Le", "testSkipWithBOM", "testSkipWithoutBOM", "testSmallBufferWithBOM", "testSmallBufferWithoutBOM", "testSupportCode" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest$ExpectCloseInputStream" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testClose" ]
          }
        },
        "org.apache.commons.io.input.TaggedInputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.input.TaggedInputStreamTest" : [ "testBrokenStream", "testEmptyStream", "testNormalStream", "testOtherException" ]
          }
        },
        "org.apache.commons.io.input.TeeInputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.input.TeeInputStreamTest" : [ "testMarkReset", "testReadEverything", "testReadNothing", "testReadOneByte", "testReadToArray", "testReadToArrayWithOffset", "testSkip" ]
          }
        },
        "org.apache.commons.io.monitor.AbstractMonitorTestCase" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor", "testMonitor", "testThreadFactory" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile", "testToString" ]
          }
        },
        "org.apache.commons.io.output.ClosedOutputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.output.ClosedOutputStreamTest" : [ "testRead" ]
          }
        },
        "org.apache.commons.io.output.FileWriterWithEncodingTest" : {
          "testcases" : {
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "constructor_File_directory", "constructor_File_encoding_badEncoding", "constructor_File_nullFile", "constructor_fileName_nullFile", "sameEncoding_CharsetEncoder_constructor", "sameEncoding_Charset_constructor", "sameEncoding_null_Charset_constructor", "sameEncoding_string_CharsetEncoder_constructor", "sameEncoding_string_Charset_constructor", "sameEncoding_string_constructor", "sameEncoding_string_string_constructor", "testDifferentEncoding" ]
          }
        },
        "org.apache.commons.io.output.TaggedOutputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.output.TaggedOutputStreamTest" : [ "testBrokenStream", "testNormalStream", "testOtherException" ]
          }
        }
      }
    },
    "7479b372cd4291d2a51e51dd10690952d9fd7019" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "5ea5c9624eee945ba6bf41e181066343e48272ce",
      "changedClazzes" : { }
    },
    "30e5713a9b1cd210542aa574cf026c0417c202d9" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "7479b372cd4291d2a51e51dd10690952d9fd7019",
      "changedClazzes" : { }
    },
    "676401d298098a99f9262c26b8e084628b1e3009" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "30e5713a9b1cd210542aa574cf026c0417c202d9",
      "changedClazzes" : { }
    },
    "3867ddb393cadb8ecfe87509e922c0679c02947b" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "676401d298098a99f9262c26b8e084628b1e3009",
      "changedClazzes" : { }
    },
    "9b1882cf4a53c3d293d47a6e6bb6e0ba9b710529" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "3867ddb393cadb8ecfe87509e922c0679c02947b",
      "changedClazzes" : { }
    },
    "bb3334507c5c9e9d3fd0462cb9366e8ce93eb7ba" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "9b1882cf4a53c3d293d47a6e6bb6e0ba9b710529",
      "changedClazzes" : { }
    },
    "6e33d3df3233e66f98a8dd2ae470752b768fcd54" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "bb3334507c5c9e9d3fd0462cb9366e8ce93eb7ba",
      "changedClazzes" : { }
    },
    "6b57d2a14089735cf1c653a2717d05023a3be441" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "6e33d3df3233e66f98a8dd2ae470752b768fcd54",
      "changedClazzes" : {
        "org.apache.commons.io.IOUtilsTestCase" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testAsBufferedInputStream", "testAsBufferedInputStreamWithBufferSize", "testAsBufferedNull", "testAsBufferedOutputStream", "testAsBufferedOutputStreamWithBufferSize", "testAsBufferedReader", "testAsBufferedReaderWithBufferSize", "testAsBufferedWriter", "testAsBufferedWriterWithBufferSize", "testCloseQuietly_AllCloseableIOException", "testCloseQuietly_CloseableIOException", "testCloseQuietly_Selector", "testCloseQuietly_SelectorIOException", "testCloseQuietly_SelectorNull", "testCloseQuietly_SelectorTwice", "testCloseQuietly_ServerSocket", "testCloseQuietly_ServerSocketIOException", "testCloseQuietly_Socket", "testCloseQuietly_SocketIOException", "testConstants", "testContentEqualsIgnoreEOL", "testContentEquals_InputStream_InputStream", "testContentEquals_Reader_Reader", "testCopyLarge_CharExtraLength", "testCopyLarge_CharFullLength", "testCopyLarge_CharNoSkip", "testCopyLarge_CharSkip", "testCopyLarge_CharSkipInvalid", "testCopyLarge_ExtraLength", "testCopyLarge_FullLength", "testCopyLarge_NoSkip", "testCopyLarge_Skip", "testCopyLarge_SkipInvalid", "testCopy_ByteArray_OutputStream", "testCopy_ByteArray_Writer", "testCopy_String_Writer", "testReadFully_InputStream_ByteArray", "testReadFully_InputStream_Offset", "testReadFully_InputStream__ReturnByteArray", "testReadFully_ReadableByteChannel", "testReadFully_Reader", "testReadFully_Reader_Offset", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testRead_ReadableByteChannel", "testSkipFully_InputStream", "testSkipFully_ReadableByteChannel", "testSkipFully_Reader", "testSkip_FileReader", "testSkip_InputStream", "testSkip_ReadableByteChannel", "testStringToOutputStream", "testToBufferedInputStreamWithBufferSize_InputStream", "testToBufferedInputStream_InputStream", "testToByteArray_InputStream", "testToByteArray_InputStream_NegativeSize", "testToByteArray_InputStream_Size", "testToByteArray_InputStream_SizeIllegal", "testToByteArray_InputStream_SizeLong", "testToByteArray_InputStream_SizeZero", "testToByteArray_Reader", "testToByteArray_String", "testToByteArray_URI", "testToByteArray_URL", "testToByteArray_URLConnection", "testToCharArray_InputStream", "testToCharArray_InputStream_CharsetName", "testToCharArray_Reader", "testToInputStream_CharSequence", "testToInputStream_String", "testToString_ByteArray", "testToString_InputStream", "testToString_Reader", "testToString_URI", "testToString_URI_CharsetName", "testToString_URI_CharsetNameNull", "testToString_URL", "testToString_URL_CharsetName", "testToString_URL_CharsetNameNull" ]
          }
        },
        "org.apache.commons.io.comparator.ComparatorAbstractTestCase" : {
          "testcases" : {
            "org.apache.commons.io.comparator.ComparatorAbstractTestCase" : [ "testComparator", "testReverseComparator", "testSortArray", "testSortArrayNull", "testSortList", "testSortListNull", "testToString" ],
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "constructorArray_Null", "constructorIterable_Null", "constructorIterable_order" ],
            "org.apache.commons.io.comparator.DirectoryFileComparatorTest" : [ "testSortArray" ],
            "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.NameFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.PathFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ]
          }
        },
        "org.apache.commons.io.input.BoundedReaderTest#testReadBytesEOF" : {
          "testcases" : {
            "org.apache.commons.io.input.BoundedReaderTest" : [ "testReadBytesEOF" ]
          }
        },
        "org.apache.commons.io.input.MessageDigestCalculatingInputStreamTest#test" : {
          "testcases" : {
            "org.apache.commons.io.input.MessageDigestCalculatingInputStreamTest" : [ "test" ]
          }
        },
        "org.apache.commons.io.input.TailerTest#testLongFile" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testLongFile" ]
          }
        },
        "org.apache.commons.io.output.LockableFileWriterTest" : {
          "testcases" : {
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testConstructor_fileName_nullFile", "testFileLocked", "testFileNotLocked" ]
          }
        }
      }
    },
    "79b4df582d0035e196d4dc10894778fae58311ce" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "6b57d2a14089735cf1c653a2717d05023a3be441",
      "changedClazzes" : {
        "org.apache.commons.io.FileCleaningTrackerTestCase#testFileCleanerDirectory_ForceStrategy" : {
          "testcases" : {
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory_ForceStrategy" ]
          }
        },
        "org.apache.commons.io.FileDeleteStrategyTestCase#testDeleteForce" : {
          "testcases" : {
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce" ]
          }
        },
        "org.apache.commons.io.FileDeleteStrategyTestCase#testDeleteNormal" : {
          "testcases" : {
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteNormal" ]
          }
        },
        "org.apache.commons.io.FileDeleteStrategyTestCase#testDeleteQuietlyNormal" : {
          "testcases" : {
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteQuietlyNormal" ]
          }
        },
        "org.apache.commons.io.FileUtilsFileNewerTestCase#setUp" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ]
          }
        },
        "org.apache.commons.io.FilenameUtilsTestCase#setUp" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedError_IO_128", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetBaseName_with_nullByte", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetFullPathNoEndSeparator_IO_248", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPathNoEndSeparator_with_null_byte", "testGetPath_with_nullbyte", "testGetPrefix", "testGetPrefixLength", "testGetPrefix_with_nullbyte", "testIndexOfExtension", "testIndexOfLastSeparator", "testInjectionFailure", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testIsExtension_injection", "testNormalize", "testNormalizeNoEndSeparator", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin", "testNormalize_with_nullbytes", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ]
          }
        },
        "org.apache.commons.io.comparator.CompositeFileComparatorTest" : {
          "testcases" : {
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "constructorArray_Null", "constructorIterable_Null", "constructorIterable_order" ]
          }
        },
        "org.apache.commons.io.comparator.LastModifiedFileComparatorTest" : { },
        "org.apache.commons.io.comparator.SizeFileComparatorTest" : {
          "testcases" : {
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase#testAgeFilter" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase#testCanRead" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testCanRead" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase#testCanWrite" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testCanWrite" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase#testEmpty" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testEmpty" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase#testMagicNumberFileFilterBytesOffset" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testMagicNumberFileFilterBytesOffset" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase#testMagicNumberFileFilterStringOffset" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testMagicNumberFileFilterStringOffset" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase#testMakeCVSAware" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testMakeCVSAware" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase#testMakeDirectoryOnly" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testMakeDirectoryOnly" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase#testMakeFileOnly" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testMakeFileOnly" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase#testMakeSVNAware" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testMakeSVNAware" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase#testSizeFilter" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testSizeFilter" ]
          }
        },
        "org.apache.commons.io.testtools.TestUtils#createFile(org.apache.commons.io.testtools.File,long)" : {
          "testcases" : {
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_NullStrategy" ]
          }
        }
      }
    },
    "2bb4bec8391aa03f0e4d3a6f9292630243044726" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "79b4df582d0035e196d4dc10894778fae58311ce",
      "changedClazzes" : { }
    },
    "8fce0fa77cddae14af022b6aacc32eb861fde99b" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "2bb4bec8391aa03f0e4d3a6f9292630243044726",
      "changedClazzes" : { }
    },
    "933796e9330ed5043ad8e76d9fa2cb8b1d3a8e3a" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "8fce0fa77cddae14af022b6aacc32eb861fde99b",
      "changedClazzes" : {
        "org.apache.commons.io.FileSystemUtilsTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceOS_String_InitError", "testGetFreeSpaceOS_String_NullPath", "testGetFreeSpaceOS_String_Other", "testGetFreeSpaceOS_String_Unix", "testGetFreeSpaceOS_String_Windows", "testGetFreeSpaceUnix_String_EmptyPath", "testGetFreeSpaceUnix_String_EmptyResponse", "testGetFreeSpaceUnix_String_InvalidResponse1", "testGetFreeSpaceUnix_String_InvalidResponse2", "testGetFreeSpaceUnix_String_InvalidResponse3", "testGetFreeSpaceUnix_String_InvalidResponse4", "testGetFreeSpaceUnix_String_LongResponse", "testGetFreeSpaceUnix_String_LongResponseKb", "testGetFreeSpaceUnix_String_NormalResponseFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbLinux", "testGetFreeSpaceUnix_String_NormalResponseKbSolaris", "testGetFreeSpaceUnix_String_NormalResponseLinux", "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpaceWindows_String_quoted", "testGetFreeSpace_String" ]
          }
        },
        "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceUnix_String_EmptyPath", "testGetFreeSpaceUnix_String_EmptyResponse", "testGetFreeSpaceUnix_String_InvalidResponse1", "testGetFreeSpaceUnix_String_InvalidResponse2", "testGetFreeSpaceUnix_String_InvalidResponse3", "testGetFreeSpaceUnix_String_InvalidResponse4", "testGetFreeSpaceUnix_String_LongResponse", "testGetFreeSpaceUnix_String_LongResponseKb", "testGetFreeSpaceUnix_String_NormalResponseFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbLinux", "testGetFreeSpaceUnix_String_NormalResponseKbSolaris", "testGetFreeSpaceUnix_String_NormalResponseLinux", "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpaceWindows_String_quoted" ]
          }
        }
      }
    },
    "2a915f5872beca562a72a1ded95652f87b5daaa3" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "933796e9330ed5043ad8e76d9fa2cb8b1d3a8e3a",
      "changedClazzes" : {
        "org.apache.commons.io.IOUtilsTestCase#testCloseQuietly_AllCloseableIOException" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testCloseQuietly_AllCloseableIOException" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testCloseQuietly_CloseableIOException" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testCloseQuietly_CloseableIOException" ]
          }
        },
        "org.apache.commons.io.LineIterator" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFilteringBufferedReader", "testFilteringFileReader", "testInvalidEncoding", "testMissingFile", "testNextLineOnlyDefaultEncoding", "testNextLineOnlyNullEncoding", "testNextLineOnlyUtf8Encoding", "testNextOnly", "testNextWithException", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ]
          }
        },
        "org.apache.commons.io.ThreadMonitor" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceUnix_String_EmptyResponse", "testGetFreeSpaceUnix_String_InvalidResponse1", "testGetFreeSpaceUnix_String_InvalidResponse2", "testGetFreeSpaceUnix_String_InvalidResponse3", "testGetFreeSpaceUnix_String_InvalidResponse4", "testGetFreeSpaceUnix_String_LongResponse", "testGetFreeSpaceUnix_String_LongResponseKb", "testGetFreeSpaceUnix_String_NormalResponseFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbLinux", "testGetFreeSpaceUnix_String_NormalResponseKbSolaris", "testGetFreeSpaceUnix_String_NormalResponseLinux", "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpaceWindows_String_quoted", "testGetFreeSpace_String" ],
            "org.apache.commons.io.ThreadMonitorTestCase" : [ "testCompletedWithoutTimeout", "testNoTimeout", "testTimeout" ]
          }
        },
        "org.apache.commons.io.comparator.CompositeFileComparator" : {
          "testcases" : {
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "constructorArray_Null", "constructorIterable_Null", "constructorIterable_order" ]
          }
        },
        "org.apache.commons.io.comparator.DefaultFileComparator" : { },
        "org.apache.commons.io.comparator.DirectoryFileComparator" : {
          "testcases" : {
            "org.apache.commons.io.comparator.DirectoryFileComparatorTest" : [ "testSortArray" ]
          }
        },
        "org.apache.commons.io.comparator.DirectoryFileComparatorTest" : {
          "testcases" : {
            "org.apache.commons.io.comparator.DirectoryFileComparatorTest" : [ "testSortArray" ]
          }
        },
        "org.apache.commons.io.comparator.ExtensionFileComparator" : {
          "testcases" : {
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "constructorArray_Null", "constructorIterable_Null", "constructorIterable_order" ],
            "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : [ "testCaseSensitivity" ]
          }
        },
        "org.apache.commons.io.comparator.LastModifiedFileComparator" : { },
        "org.apache.commons.io.comparator.NameFileComparator" : {
          "testcases" : {
            "org.apache.commons.io.comparator.NameFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor", "testMonitor", "testThreadFactory" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile", "testToString" ]
          }
        },
        "org.apache.commons.io.comparator.PathFileComparator" : {
          "testcases" : {
            "org.apache.commons.io.comparator.PathFileComparatorTest" : [ "testCaseSensitivity" ]
          }
        },
        "org.apache.commons.io.comparator.ReverseComparator" : {
          "testcases" : {
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "constructorArray_Null", "constructorIterable_Null", "constructorIterable_order" ],
            "org.apache.commons.io.comparator.DirectoryFileComparatorTest" : [ "testSortArray" ],
            "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.NameFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.PathFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ],
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor", "testMonitor", "testThreadFactory" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile", "testToString" ]
          }
        },
        "org.apache.commons.io.comparator.SizeFileComparator" : {
          "testcases" : {
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "constructorArray_Null", "constructorIterable_Null", "constructorIterable_order" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ]
          }
        },
        "org.apache.commons.io.filefilter.AbstractFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ],
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension", "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testAnd", "testCanRead", "testCanWrite", "testDelegateFileFilter", "testDelegation", "testDeprecatedWildcard", "testDirectory", "testEmpty", "testEnsureTestCoverage", "testFalse", "testFileFilterUtils_and", "testFileFilterUtils_or", "testFiles", "testFilterArray", "testFilterArrayNullParameters", "testFilterArray_fromList", "testFilterList", "testFilterListNullParameters", "testFilterList_fromArray", "testFilterSet", "testFilterSetNullParameters", "testFilterSet_fromArray", "testHidden", "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset", "testMagicNumberFileFilterValidation", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNameFilterNullArrayArgument", "testNameFilterNullListArgument", "testNot", "testNullFilters", "testOr", "testPrefix", "testPrefixCaseInsensitive", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testTrue", "testWildcard" ],
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ],
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor", "testMonitor", "testThreadFactory" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile", "testToString" ]
          }
        },
        "org.apache.commons.io.filefilter.AndFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilterAndLimitB", "testFilterAndLimitC", "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ],
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testFilterAndLimitB", "testFilterAndLimitC", "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension", "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testAnd", "testCanRead", "testDelegation", "testEnsureTestCoverage", "testFalse", "testFileFilterUtils_and", "testFileFilterUtils_or", "testFilterArray", "testFilterArrayNullParameters", "testFilterArray_fromList", "testFilterList", "testFilterListNullParameters", "testFilterList_fromArray", "testFilterSet", "testFilterSetNullParameters", "testFilterSet_fromArray", "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNot", "testNullFilters", "testPrefix", "testPrefixCaseInsensitive", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testTrue" ],
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor", "testMonitor", "testThreadFactory" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile", "testToString" ]
          }
        },
        "org.apache.commons.io.filefilter.FalseFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension", "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAnd", "testDelegation", "testFalse", "testFileFilterUtils_and", "testFileFilterUtils_or", "testOr" ]
          }
        },
        "org.apache.commons.io.filefilter.IOFileFilter" : { },
        "org.apache.commons.io.filefilter.OrFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilter", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4", "testFilterString" ],
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testFilter", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension", "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testDelegateFileFilter", "testFileFilterUtils_or", "testOr", "testSuffix" ],
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor", "testMonitor", "testThreadFactory" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile", "testToString" ]
          }
        },
        "org.apache.commons.io.filefilter.TrueFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilterDirAndFile3", "testFilterDirAndFile4" ],
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testFilterDirAndFile3", "testFilterDirAndFile4" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension", "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAnd", "testFileFilterUtils_and", "testFileFilterUtils_or", "testFilterArrayNullParameters", "testFilterListNullParameters", "testFilterSetNullParameters", "testNot", "testOr", "testTrue" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStream" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "skipReturnValueWithBom", "skipReturnValueWithoutBom", "testAvailableWithBOM", "testAvailableWithoutBOM", "testClose", "testEmptyBufferWithBOM", "testEmptyBufferWithoutBOM", "testGetBOMFirstThenRead", "testGetBOMFirstThenReadInclude", "testLargeBufferWithBOM", "testLargeBufferWithoutBOM", "testLeadingNonBOMBufferedRead", "testLeadingNonBOMSingleRead", "testMarkResetAfterReadWithBOM", "testMarkResetAfterReadWithoutBOM", "testMarkResetBeforeReadWithBOM", "testMarkResetBeforeReadWithoutBOM", "testNoBoms", "testReadEmpty", "testReadSmall", "testReadTwiceWithBOM", "testReadTwiceWithoutBOM", "testReadWithBOMInclude", "testReadWithBOMUtf16Be", "testReadWithBOMUtf16Le", "testReadWithBOMUtf32Be", "testReadWithBOMUtf32Le", "testReadWithBOMUtf8", "testReadWithMultipleBOM", "testReadWithoutBOM", "testReadXmlWithBOMUcs2", "testReadXmlWithBOMUtf16Be", "testReadXmlWithBOMUtf16Le", "testReadXmlWithBOMUtf32Be", "testReadXmlWithBOMUtf32Le", "testReadXmlWithBOMUtf8", "testReadXmlWithoutBOMUtf32Be", "testReadXmlWithoutBOMUtf32Le", "testSkipWithBOM", "testSkipWithoutBOM", "testSmallBufferWithBOM", "testSmallBufferWithoutBOM" ],
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testEncodingAttributeXML", "testHttp", "testHttpContent", "testRawBomUtf16", "testRawBomUtf32", "testRawBomUtf8", "testRawContent", "testRawNoBomCp1047", "testRawNoBomIso8859_1", "testRawNoBomUsAscii", "testRawNoBomUtf16BE", "testRawNoBomUtf16LE", "testRawNoBomUtf32BE", "testRawNoBomUtf32LE", "testRawNoBomUtf8" ],
            "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testCalculateHttpEncoding", "testCalculateHttpEncodingUtf32", "testCalculateRawEncodingAdditonalUTF16", "testCalculateRawEncodingAdditonalUTF32", "testCalculateRawEncodingNoBOM", "testCalculateRawEncodingStandard", "testCalculateRawEncodingStandardUtf32" ]
          }
        },
        "org.apache.commons.io.input.ReversedLinesFileReader" : {
          "testcases" : {
            "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize" : [ "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=256)", "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=1)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=256)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=3)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=8)", "testGBK(JUNIT_PARAMETERIZED-BlockSize=1)", "testGBK(JUNIT_PARAMETERIZED-BlockSize=256)", "testGBK(JUNIT_PARAMETERIZED-BlockSize=3)", "testGBK(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testGBK(JUNIT_PARAMETERIZED-BlockSize=8)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=1)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=256)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=3)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=8)", "testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=1)", "testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=256)", "testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=3)", "testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=8)", "testShiftJISFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testShiftJISFile(JUNIT_PARAMETERIZED-BlockSize=256)", "testShiftJISFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testShiftJISFile(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testShiftJISFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=8)", "testUnsupportedEncodingBig5(JUNIT_PARAMETERIZED-BlockSize=1)", "testUnsupportedEncodingBig5(JUNIT_PARAMETERIZED-BlockSize=256)", "testUnsupportedEncodingBig5(JUNIT_PARAMETERIZED-BlockSize=3)", "testUnsupportedEncodingBig5(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUnsupportedEncodingBig5(JUNIT_PARAMETERIZED-BlockSize=8)", "testUnsupportedEncodingUTF16(JUNIT_PARAMETERIZED-BlockSize=1)", "testUnsupportedEncodingUTF16(JUNIT_PARAMETERIZED-BlockSize=256)", "testUnsupportedEncodingUTF16(JUNIT_PARAMETERIZED-BlockSize=3)", "testUnsupportedEncodingUTF16(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUnsupportedEncodingUTF16(JUNIT_PARAMETERIZED-BlockSize=8)", "testWindows31jFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testWindows31jFile(JUNIT_PARAMETERIZED-BlockSize=256)", "testWindows31jFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testWindows31jFile(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testWindows31jFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testxWindows949File(JUNIT_PARAMETERIZED-BlockSize=1)", "testxWindows949File(JUNIT_PARAMETERIZED-BlockSize=256)", "testxWindows949File(JUNIT_PARAMETERIZED-BlockSize=3)", "testxWindows949File(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testxWindows949File(JUNIT_PARAMETERIZED-BlockSize=8)", "testxWindows950File(JUNIT_PARAMETERIZED-BlockSize=1)", "testxWindows950File(JUNIT_PARAMETERIZED-BlockSize=256)", "testxWindows950File(JUNIT_PARAMETERIZED-BlockSize=3)", "testxWindows950File(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testxWindows950File(JUNIT_PARAMETERIZED-BlockSize=8)" ],
            "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile" : [ "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-20byteslength.bin, charset=ISO_8859_1)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-gbk.bin, charset=gbk)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-iso8859-1-shortlines-win-linebr.bin, charset=ISO_8859_1)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-iso8859-1.bin, charset=ISO_8859_1)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-shiftjis.bin, charset=Shift_JIS)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf16be.bin, charset=UTF-16BE)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf16le.bin, charset=UTF-16LE)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf8-cr-only.bin, charset=UTF-8)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf8-win-linebr.bin, charset=UTF-8)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf8.bin, charset=UTF-8)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-windows-31j.bin, charset=windows-31j)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-x-windows-949.bin, charset=x-windows-949)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-x-windows-950.bin, charset=x-windows-950)" ],
            "org.apache.commons.io.input.ReversedLinesFileReaderTestSimple" : [ "testFileSizeIsExactMultipleOfBlockSize", "testUnsupportedEncodingBig5", "testUnsupportedEncodingUTF16" ]
          }
        },
        "org.apache.commons.io.input.ReversedLinesFileReader$FilePart" : {
          "testcases" : {
            "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize" : [ "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=256)", "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=1)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=256)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=3)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=8)", "testGBK(JUNIT_PARAMETERIZED-BlockSize=1)", "testGBK(JUNIT_PARAMETERIZED-BlockSize=256)", "testGBK(JUNIT_PARAMETERIZED-BlockSize=3)", "testGBK(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testGBK(JUNIT_PARAMETERIZED-BlockSize=8)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=1)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=256)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=3)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=8)", "testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=1)", "testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=256)", "testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=3)", "testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=8)", "testShiftJISFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testShiftJISFile(JUNIT_PARAMETERIZED-BlockSize=256)", "testShiftJISFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testShiftJISFile(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testShiftJISFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=8)", "testWindows31jFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testWindows31jFile(JUNIT_PARAMETERIZED-BlockSize=256)", "testWindows31jFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testWindows31jFile(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testWindows31jFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testxWindows949File(JUNIT_PARAMETERIZED-BlockSize=1)", "testxWindows949File(JUNIT_PARAMETERIZED-BlockSize=256)", "testxWindows949File(JUNIT_PARAMETERIZED-BlockSize=3)", "testxWindows949File(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testxWindows949File(JUNIT_PARAMETERIZED-BlockSize=8)", "testxWindows950File(JUNIT_PARAMETERIZED-BlockSize=1)", "testxWindows950File(JUNIT_PARAMETERIZED-BlockSize=256)", "testxWindows950File(JUNIT_PARAMETERIZED-BlockSize=3)", "testxWindows950File(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testxWindows950File(JUNIT_PARAMETERIZED-BlockSize=8)" ],
            "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile" : [ "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-20byteslength.bin, charset=ISO_8859_1)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-gbk.bin, charset=gbk)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-iso8859-1-shortlines-win-linebr.bin, charset=ISO_8859_1)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-iso8859-1.bin, charset=ISO_8859_1)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-shiftjis.bin, charset=Shift_JIS)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf16be.bin, charset=UTF-16BE)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf16le.bin, charset=UTF-16LE)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf8-cr-only.bin, charset=UTF-8)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf8-win-linebr.bin, charset=UTF-8)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf8.bin, charset=UTF-8)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-windows-31j.bin, charset=windows-31j)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-x-windows-949.bin, charset=x-windows-949)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-x-windows-950.bin, charset=x-windows-950)" ],
            "org.apache.commons.io.input.ReversedLinesFileReaderTestSimple" : [ "testFileSizeIsExactMultipleOfBlockSize" ]
          }
        },
        "org.apache.commons.io.input.SwappedDataInputStream" : {
          "testcases" : {
            "org.apache.commons.io.input.SwappedDataInputStreamTest" : [ "testReadBoolean", "testReadByte", "testReadChar", "testReadDouble", "testReadFloat", "testReadFully", "testReadInt", "testReadLine", "testReadLong", "testReadShort", "testReadUTF", "testReadUnsignedByte", "testReadUnsignedShort", "testSkipBytes" ]
          }
        },
        "org.apache.commons.io.input.Tailer" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testBufferBreak", "testIO335", "testInterrupt", "testLongFile", "testMultiByteBreak", "testStopWithNoFile", "testStopWithNoFileUsingExecutor", "testTailer", "testTailerEndOfFileReached", "testTailerEof" ]
          }
        },
        "org.apache.commons.io.input.TailerListenerAdapter" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testBufferBreak", "testIO335", "testInterrupt", "testLongFile", "testMultiByteBreak", "testStopWithNoFile", "testStopWithNoFileUsingExecutor", "testTailer", "testTailerEndOfFileReached", "testTailerEof" ]
          }
        },
        "org.apache.commons.io.input.TailerTest" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testBufferBreak", "testIO335", "testInterrupt", "testLongFile", "testMultiByteBreak", "testStopWithNoFile", "testStopWithNoFileUsingExecutor", "testTailer", "testTailerEndOfFileReached", "testTailerEof" ]
          }
        },
        "org.apache.commons.io.input.TailerTest$TestTailerListener" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testBufferBreak", "testIO335", "testInterrupt", "testLongFile", "testMultiByteBreak", "testStopWithNoFile", "testStopWithNoFileUsingExecutor", "testTailer", "testTailerEndOfFileReached", "testTailerEof" ]
          }
        },
        "org.apache.commons.io.monitor.CollectionFileListener" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor", "testThreadFactory" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationListenerAdaptor" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor", "testMonitor", "testThreadFactory" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile", "testToString" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationMonitor" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor", "testMonitor", "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.serialization.MoreComplexObjectTest" : {
          "testcases" : {
            "org.apache.commons.io.serialization.MoreComplexObjectTest" : [ "trustJavaIncludingArrays", "trustJavaLang", "useBlacklist" ]
          }
        },
        "org.apache.commons.io.serialization.ValidatingObjectInputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.serialization.ValidatingObjectInputStreamTest" : [ "acceptCustomMatcher", "acceptPattern", "acceptWildcard", "customInvalidMethod", "exceptionIncludesClassName", "noAccept", "ourTestClassAcceptedFirst", "ourTestClassAcceptedFirstWildcard", "ourTestClassAcceptedSecond", "ourTestClassAcceptedSecondWildcard", "ourTestClassNotAccepted", "ourTestClassOnlyAccepted", "reject", "rejectCustomMatcher", "rejectOnly", "rejectPattern", "rejectPrecedence", "rejectWildcard" ]
          }
        },
        "org.apache.commons.io.serialization.ValidatingObjectInputStreamTest$CustomVOIS" : { }
      }
    },
    "b1ee00d701a7bb247bc8f24e226cb8ad7411cb0a" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "2a915f5872beca562a72a1ded95652f87b5daaa3",
      "changedClazzes" : { }
    },
    "31c0d3a8e94b1016843596acea17a63bed9d4558" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "b1ee00d701a7bb247bc8f24e226cb8ad7411cb0a",
      "changedClazzes" : {
        "org.apache.commons.io.Charsets#toCharset(java.nio.charset.Charset)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testResourceToString_ExistingResourceAtRootPackage", "testResourceToString_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToString_ExistingResourceAtSubPackage", "testResourceToString_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToString_NullCharset", "testResourceToString_NullCharset_WithClassLoader" ]
          }
        },
        "org.apache.commons.io.FileUtils#cleanDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testResourceToByteArray_ExistingResourceAtRootPackage", "testResourceToByteArray_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToByteArray_ExistingResourceAtSubPackage", "testResourceToByteArray_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToByteArray_NonExistingResource", "testResourceToByteArray_NonExistingResource_WithClassLoader", "testResourceToByteArray_Null", "testResourceToByteArray_Null_WithClassLoader", "testResourceToString_ExistingResourceAtRootPackage", "testResourceToString_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToString_ExistingResourceAtSubPackage", "testResourceToString_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToString_NonExistingResource", "testResourceToString_NonExistingResource_WithClassLoader", "testResourceToString_NullCharset", "testResourceToString_NullCharset_WithClassLoader", "testResourceToString_NullResource", "testResourceToString_NullResource_WithClassLoader", "testResourceToURL_ExistingResourceAtRootPackage", "testResourceToURL_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToURL_ExistingResourceAtSubPackage", "testResourceToURL_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToURL_NonExistingResource", "testResourceToURL_NonExistingResource_WithClassLoader", "testResourceToURL_Null", "testResourceToURL_Null_WithClassLoader" ]
          }
        },
        "org.apache.commons.io.FileUtils#deleteDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testResourceToByteArray_ExistingResourceAtRootPackage", "testResourceToByteArray_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToByteArray_ExistingResourceAtSubPackage", "testResourceToByteArray_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToByteArray_NonExistingResource", "testResourceToByteArray_NonExistingResource_WithClassLoader", "testResourceToByteArray_Null", "testResourceToByteArray_Null_WithClassLoader", "testResourceToString_ExistingResourceAtRootPackage", "testResourceToString_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToString_ExistingResourceAtSubPackage", "testResourceToString_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToString_NonExistingResource", "testResourceToString_NonExistingResource_WithClassLoader", "testResourceToString_NullCharset", "testResourceToString_NullCharset_WithClassLoader", "testResourceToString_NullResource", "testResourceToString_NullResource_WithClassLoader", "testResourceToURL_ExistingResourceAtRootPackage", "testResourceToURL_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToURL_ExistingResourceAtSubPackage", "testResourceToURL_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToURL_NonExistingResource", "testResourceToURL_NonExistingResource_WithClassLoader", "testResourceToURL_Null", "testResourceToURL_Null_WithClassLoader" ]
          }
        },
        "org.apache.commons.io.FileUtils#forceDelete(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testResourceToByteArray_ExistingResourceAtRootPackage", "testResourceToByteArray_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToByteArray_ExistingResourceAtSubPackage", "testResourceToByteArray_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToByteArray_NonExistingResource", "testResourceToByteArray_NonExistingResource_WithClassLoader", "testResourceToByteArray_Null", "testResourceToByteArray_Null_WithClassLoader", "testResourceToString_ExistingResourceAtRootPackage", "testResourceToString_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToString_ExistingResourceAtSubPackage", "testResourceToString_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToString_NonExistingResource", "testResourceToString_NonExistingResource_WithClassLoader", "testResourceToString_NullCharset", "testResourceToString_NullCharset_WithClassLoader", "testResourceToString_NullResource", "testResourceToString_NullResource_WithClassLoader", "testResourceToURL_ExistingResourceAtRootPackage", "testResourceToURL_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToURL_ExistingResourceAtSubPackage", "testResourceToURL_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToURL_NonExistingResource", "testResourceToURL_NonExistingResource_WithClassLoader", "testResourceToURL_Null", "testResourceToURL_Null_WithClassLoader" ]
          }
        },
        "org.apache.commons.io.FileUtils#isSymlink(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testResourceToByteArray_ExistingResourceAtRootPackage", "testResourceToByteArray_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToByteArray_ExistingResourceAtSubPackage", "testResourceToByteArray_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToByteArray_NonExistingResource", "testResourceToByteArray_NonExistingResource_WithClassLoader", "testResourceToByteArray_Null", "testResourceToByteArray_Null_WithClassLoader", "testResourceToString_ExistingResourceAtRootPackage", "testResourceToString_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToString_ExistingResourceAtSubPackage", "testResourceToString_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToString_NonExistingResource", "testResourceToString_NonExistingResource_WithClassLoader", "testResourceToString_NullCharset", "testResourceToString_NullCharset_WithClassLoader", "testResourceToString_NullResource", "testResourceToString_NullResource_WithClassLoader", "testResourceToURL_ExistingResourceAtRootPackage", "testResourceToURL_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToURL_ExistingResourceAtSubPackage", "testResourceToURL_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToURL_NonExistingResource", "testResourceToURL_NonExistingResource_WithClassLoader", "testResourceToURL_Null", "testResourceToURL_Null_WithClassLoader" ]
          }
        },
        "org.apache.commons.io.FileUtils#verifiedListFiles(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testResourceToByteArray_ExistingResourceAtRootPackage", "testResourceToByteArray_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToByteArray_ExistingResourceAtSubPackage", "testResourceToByteArray_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToByteArray_NonExistingResource", "testResourceToByteArray_NonExistingResource_WithClassLoader", "testResourceToByteArray_Null", "testResourceToByteArray_Null_WithClassLoader", "testResourceToString_ExistingResourceAtRootPackage", "testResourceToString_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToString_ExistingResourceAtSubPackage", "testResourceToString_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToString_NonExistingResource", "testResourceToString_NonExistingResource_WithClassLoader", "testResourceToString_NullCharset", "testResourceToString_NullCharset_WithClassLoader", "testResourceToString_NullResource", "testResourceToString_NullResource_WithClassLoader", "testResourceToURL_ExistingResourceAtRootPackage", "testResourceToURL_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToURL_ExistingResourceAtSubPackage", "testResourceToURL_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToURL_NonExistingResource", "testResourceToURL_NonExistingResource_WithClassLoader", "testResourceToURL_Null", "testResourceToURL_Null_WithClassLoader" ]
          }
        },
        "org.apache.commons.io.IOUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceUnix_String_EmptyResponse", "testGetFreeSpaceUnix_String_InvalidResponse1", "testGetFreeSpaceUnix_String_InvalidResponse2", "testGetFreeSpaceUnix_String_InvalidResponse3", "testGetFreeSpaceUnix_String_InvalidResponse4", "testGetFreeSpaceUnix_String_LongResponse", "testGetFreeSpaceUnix_String_LongResponseKb", "testGetFreeSpaceUnix_String_NormalResponseFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbLinux", "testGetFreeSpaceUnix_String_NormalResponseKbSolaris", "testGetFreeSpaceUnix_String_NormalResponseLinux", "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpaceWindows_String_quoted", "testGetFreeSpace_String" ],
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToOutputStreamWithBufferSize", "testCopy_inputStreamToOutputStream_nullIn", "testCopy_inputStreamToOutputStream_nullOut", "testCopy_inputStreamToWriter", "testCopy_inputStreamToWriter_Encoding", "testCopy_inputStreamToWriter_Encoding_nullEncoding", "testCopy_inputStreamToWriter_Encoding_nullIn", "testCopy_inputStreamToWriter_Encoding_nullOut", "testCopy_inputStreamToWriter_nullIn", "testCopy_inputStreamToWriter_nullOut", "testCopy_readerToOutputStream", "testCopy_readerToOutputStream_Encoding", "testCopy_readerToOutputStream_Encoding_nullEncoding", "testCopy_readerToOutputStream_Encoding_nullIn", "testCopy_readerToOutputStream_Encoding_nullOut", "testCopy_readerToOutputStream_nullIn", "testCopy_readerToOutputStream_nullOut", "testCopy_readerToWriter", "testCopy_readerToWriter_nullIn", "testCopy_readerToWriter_nullOut" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testAsBufferedInputStream", "testAsBufferedInputStreamWithBufferSize", "testAsBufferedNull", "testAsBufferedOutputStream", "testAsBufferedOutputStreamWithBufferSize", "testAsBufferedReader", "testAsBufferedReaderWithBufferSize", "testAsBufferedWriter", "testAsBufferedWriterWithBufferSize", "testCloseQuietly_AllCloseableIOException", "testCloseQuietly_CloseableIOException", "testCloseQuietly_Selector", "testCloseQuietly_SelectorIOException", "testCloseQuietly_SelectorNull", "testCloseQuietly_SelectorTwice", "testCloseQuietly_ServerSocket", "testCloseQuietly_ServerSocketIOException", "testCloseQuietly_Socket", "testCloseQuietly_SocketIOException", "testConstants", "testContentEqualsIgnoreEOL", "testContentEquals_InputStream_InputStream", "testContentEquals_Reader_Reader", "testCopyLarge_CharExtraLength", "testCopyLarge_CharFullLength", "testCopyLarge_CharNoSkip", "testCopyLarge_CharSkip", "testCopyLarge_CharSkipInvalid", "testCopyLarge_ExtraLength", "testCopyLarge_FullLength", "testCopyLarge_NoSkip", "testCopyLarge_Skip", "testCopyLarge_SkipInvalid", "testCopy_ByteArray_OutputStream", "testCopy_ByteArray_Writer", "testCopy_String_Writer", "testReadFully_InputStream_ByteArray", "testReadFully_InputStream_Offset", "testReadFully_InputStream__ReturnByteArray", "testReadFully_ReadableByteChannel", "testReadFully_Reader", "testReadFully_Reader_Offset", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testRead_ReadableByteChannel", "testSkipFully_InputStream", "testSkipFully_ReadableByteChannel", "testSkipFully_Reader", "testSkip_FileReader", "testSkip_InputStream", "testSkip_ReadableByteChannel", "testStringToOutputStream", "testToBufferedInputStreamWithBufferSize_InputStream", "testToBufferedInputStream_InputStream", "testToByteArray_InputStream", "testToByteArray_InputStream_NegativeSize", "testToByteArray_InputStream_Size", "testToByteArray_InputStream_SizeIllegal", "testToByteArray_InputStream_SizeLong", "testToByteArray_InputStream_SizeZero", "testToByteArray_Reader", "testToByteArray_String", "testToByteArray_URI", "testToByteArray_URL", "testToByteArray_URLConnection", "testToCharArray_InputStream", "testToCharArray_InputStream_CharsetName", "testToCharArray_Reader", "testToInputStream_CharSequence", "testToInputStream_String", "testToString_ByteArray", "testToString_InputStream", "testToString_Reader", "testToString_URI", "testToString_URI_CharsetName", "testToString_URI_CharsetNameNull", "testToString_URL", "testToString_URL_CharsetName", "testToString_URL_CharsetNameNull" ],
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWriteLines_OutputStream", "testWriteLines_OutputStream_Encoding", "testWriteLines_OutputStream_Encoding_nullData", "testWriteLines_OutputStream_Encoding_nullEncoding", "testWriteLines_OutputStream_Encoding_nullSeparator", "testWriteLines_OutputStream_Encoding_nullStream", "testWriteLines_OutputStream_nullData", "testWriteLines_OutputStream_nullSeparator", "testWriteLines_OutputStream_nullStream", "testWriteLines_Writer", "testWriteLines_Writer_nullData", "testWriteLines_Writer_nullSeparator", "testWriteLines_Writer_nullStream", "testWrite_byteArrayToOutputStream", "testWrite_byteArrayToOutputStream_nullData", "testWrite_byteArrayToOutputStream_nullStream", "testWrite_byteArrayToWriter", "testWrite_byteArrayToWriter_Encoding", "testWrite_byteArrayToWriter_Encoding_nullData", "testWrite_byteArrayToWriter_Encoding_nullEncoding", "testWrite_byteArrayToWriter_Encoding_nullWriter", "testWrite_byteArrayToWriter_nullData", "testWrite_byteArrayToWriter_nullWriter", "testWrite_charArrayToOutputStream", "testWrite_charArrayToOutputStream_Encoding", "testWrite_charArrayToOutputStream_Encoding_nullData", "testWrite_charArrayToOutputStream_Encoding_nullStream", "testWrite_charArrayToOutputStream_nullData", "testWrite_charArrayToOutputStream_nullEncoding", "testWrite_charArrayToOutputStream_nullStream", "testWrite_charArrayToWriter", "testWrite_charArrayToWriter_Encoding_nullData", "testWrite_charArrayToWriter_Encoding_nullStream", "testWrite_charSequenceToOutputStream", "testWrite_charSequenceToOutputStream_Encoding", "testWrite_charSequenceToOutputStream_Encoding_nullData", "testWrite_charSequenceToOutputStream_Encoding_nullStream", "testWrite_charSequenceToOutputStream_nullData", "testWrite_charSequenceToOutputStream_nullEncoding", "testWrite_charSequenceToOutputStream_nullStream", "testWrite_charSequenceToWriter", "testWrite_charSequenceToWriter_Encoding_nullData", "testWrite_charSequenceToWriter_Encoding_nullStream", "testWrite_stringToOutputStream", "testWrite_stringToOutputStream_Encoding", "testWrite_stringToOutputStream_Encoding_nullData", "testWrite_stringToOutputStream_Encoding_nullStream", "testWrite_stringToOutputStream_nullData", "testWrite_stringToOutputStream_nullEncoding", "testWrite_stringToOutputStream_nullStream", "testWrite_stringToWriter", "testWrite_stringToWriter_Encoding_nullData", "testWrite_stringToWriter_Encoding_nullStream" ],
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testFilteringBufferedReader", "testFilteringFileReader", "testInvalidEncoding", "testNextLineOnlyDefaultEncoding", "testNextLineOnlyNullEncoding", "testNextLineOnlyUtf8Encoding", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset" ],
            "org.apache.commons.io.input.BoundedInputStreamTest" : [ "testReadArray" ],
            "org.apache.commons.io.input.TailerTest" : [ "testBufferBreak", "testIO335", "testLongFile", "testMultiByteBreak", "testTailer", "testTailerEndOfFileReached", "testTailerEof" ],
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testHttpContent", "testRawContent" ],
            "org.apache.commons.io.output.ByteArrayOutputStreamTestCase" : [ "testToInputStream", "testToInputStreamWithReset" ],
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 1)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 1.024)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 128)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 16)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 2)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 2.048)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 256)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 32)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 4)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 4.096)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 512)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 64)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 8)" ],
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "constructor_File_directory", "constructor_File_encoding_badEncoding", "constructor_File_nullFile", "constructor_fileName_nullFile", "sameEncoding_CharsetEncoder_constructor", "sameEncoding_Charset_constructor", "sameEncoding_null_Charset_constructor", "sameEncoding_string_CharsetEncoder_constructor", "sameEncoding_string_Charset_constructor", "sameEncoding_string_constructor", "sameEncoding_string_string_constructor", "testDifferentEncoding" ]
          }
        },
        "org.apache.commons.io.IOUtils#close(java.net.URLConnection)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testResourceToByteArray_ExistingResourceAtRootPackage", "testResourceToByteArray_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToByteArray_ExistingResourceAtSubPackage", "testResourceToByteArray_ExistingResourceAtSubPackage_WithClassLoader" ]
          }
        },
        "org.apache.commons.io.IOUtils#closeQuietly(java.io.Closeable)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testResourceToByteArray_ExistingResourceAtRootPackage", "testResourceToByteArray_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToByteArray_ExistingResourceAtSubPackage", "testResourceToByteArray_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToByteArray_NonExistingResource", "testResourceToByteArray_NonExistingResource_WithClassLoader", "testResourceToByteArray_Null", "testResourceToByteArray_Null_WithClassLoader", "testResourceToString_ExistingResourceAtRootPackage", "testResourceToString_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToString_ExistingResourceAtSubPackage", "testResourceToString_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToString_NonExistingResource", "testResourceToString_NonExistingResource_WithClassLoader", "testResourceToString_NullCharset", "testResourceToString_NullCharset_WithClassLoader", "testResourceToString_NullResource", "testResourceToString_NullResource_WithClassLoader", "testResourceToURL_ExistingResourceAtRootPackage", "testResourceToURL_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToURL_ExistingResourceAtSubPackage", "testResourceToURL_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToURL_NonExistingResource", "testResourceToURL_NonExistingResource_WithClassLoader", "testResourceToURL_Null", "testResourceToURL_Null_WithClassLoader" ]
          }
        },
        "org.apache.commons.io.IOUtils#copy(java.io.InputStream,java.io.OutputStream)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testResourceToString_ExistingResourceAtRootPackage", "testResourceToString_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToString_ExistingResourceAtSubPackage", "testResourceToString_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToString_NullCharset", "testResourceToString_NullCharset_WithClassLoader" ]
          }
        },
        "org.apache.commons.io.IOUtils#copyLarge(java.io.InputStream,java.io.OutputStream)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testResourceToString_ExistingResourceAtRootPackage", "testResourceToString_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToString_ExistingResourceAtSubPackage", "testResourceToString_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToString_NullCharset", "testResourceToString_NullCharset_WithClassLoader" ]
          }
        },
        "org.apache.commons.io.IOUtils#resourceToByteArray(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testResourceToByteArray_ExistingResourceAtRootPackage", "testResourceToByteArray_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToByteArray_ExistingResourceAtSubPackage", "testResourceToByteArray_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToByteArray_NonExistingResource", "testResourceToByteArray_NonExistingResource_WithClassLoader", "testResourceToByteArray_Null", "testResourceToByteArray_Null_WithClassLoader" ]
          }
        },
        "org.apache.commons.io.IOUtils#resourceToString(java.lang.String,java.nio.charset.Charset)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testResourceToString_ExistingResourceAtRootPackage", "testResourceToString_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToString_ExistingResourceAtSubPackage", "testResourceToString_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToString_NonExistingResource", "testResourceToString_NonExistingResource_WithClassLoader", "testResourceToString_NullCharset", "testResourceToString_NullCharset_WithClassLoader", "testResourceToString_NullResource", "testResourceToString_NullResource_WithClassLoader" ]
          }
        },
        "org.apache.commons.io.IOUtils#resourceToURL(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testResourceToByteArray_ExistingResourceAtRootPackage", "testResourceToByteArray_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToByteArray_ExistingResourceAtSubPackage", "testResourceToByteArray_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToByteArray_NonExistingResource", "testResourceToByteArray_NonExistingResource_WithClassLoader", "testResourceToByteArray_Null", "testResourceToByteArray_Null_WithClassLoader", "testResourceToString_ExistingResourceAtRootPackage", "testResourceToString_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToString_ExistingResourceAtSubPackage", "testResourceToString_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToString_NonExistingResource", "testResourceToString_NonExistingResource_WithClassLoader", "testResourceToString_NullCharset", "testResourceToString_NullCharset_WithClassLoader", "testResourceToString_NullResource", "testResourceToString_NullResource_WithClassLoader", "testResourceToURL_ExistingResourceAtRootPackage", "testResourceToURL_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToURL_ExistingResourceAtSubPackage", "testResourceToURL_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToURL_NonExistingResource", "testResourceToURL_NonExistingResource_WithClassLoader", "testResourceToURL_Null", "testResourceToURL_Null_WithClassLoader" ]
          }
        },
        "org.apache.commons.io.IOUtils#toByteArray(java.io.InputStream)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testResourceToByteArray_ExistingResourceAtRootPackage", "testResourceToByteArray_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToByteArray_ExistingResourceAtSubPackage", "testResourceToByteArray_ExistingResourceAtSubPackage_WithClassLoader" ]
          }
        },
        "org.apache.commons.io.IOUtils#toString(java.io.InputStream,java.nio.charset.Charset)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testResourceToString_ExistingResourceAtRootPackage", "testResourceToString_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToString_ExistingResourceAtSubPackage", "testResourceToString_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToString_NullCharset", "testResourceToString_NullCharset_WithClassLoader" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testAsBufferedInputStream", "testAsBufferedInputStreamWithBufferSize", "testAsBufferedNull", "testAsBufferedOutputStream", "testAsBufferedOutputStreamWithBufferSize", "testAsBufferedReader", "testAsBufferedReaderWithBufferSize", "testAsBufferedWriter", "testAsBufferedWriterWithBufferSize", "testCloseQuietly_AllCloseableIOException", "testCloseQuietly_CloseableIOException", "testCloseQuietly_Selector", "testCloseQuietly_SelectorIOException", "testCloseQuietly_SelectorNull", "testCloseQuietly_SelectorTwice", "testCloseQuietly_ServerSocket", "testCloseQuietly_ServerSocketIOException", "testCloseQuietly_Socket", "testCloseQuietly_SocketIOException", "testConstants", "testContentEqualsIgnoreEOL", "testContentEquals_InputStream_InputStream", "testContentEquals_Reader_Reader", "testCopyLarge_CharExtraLength", "testCopyLarge_CharFullLength", "testCopyLarge_CharNoSkip", "testCopyLarge_CharSkip", "testCopyLarge_CharSkipInvalid", "testCopyLarge_ExtraLength", "testCopyLarge_FullLength", "testCopyLarge_NoSkip", "testCopyLarge_Skip", "testCopyLarge_SkipInvalid", "testCopy_ByteArray_OutputStream", "testCopy_ByteArray_Writer", "testCopy_String_Writer", "testReadFully_InputStream_ByteArray", "testReadFully_InputStream_Offset", "testReadFully_InputStream__ReturnByteArray", "testReadFully_ReadableByteChannel", "testReadFully_Reader", "testReadFully_Reader_Offset", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testRead_ReadableByteChannel", "testResourceToByteArray_ExistingResourceAtRootPackage", "testResourceToByteArray_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToByteArray_ExistingResourceAtSubPackage", "testResourceToByteArray_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToByteArray_NonExistingResource", "testResourceToByteArray_NonExistingResource_WithClassLoader", "testResourceToByteArray_Null", "testResourceToByteArray_Null_WithClassLoader", "testResourceToString_ExistingResourceAtRootPackage", "testResourceToString_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToString_ExistingResourceAtSubPackage", "testResourceToString_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToString_NonExistingResource", "testResourceToString_NonExistingResource_WithClassLoader", "testResourceToString_NullCharset", "testResourceToString_NullCharset_WithClassLoader", "testResourceToString_NullResource", "testResourceToString_NullResource_WithClassLoader", "testResourceToURL_ExistingResourceAtRootPackage", "testResourceToURL_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToURL_ExistingResourceAtSubPackage", "testResourceToURL_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToURL_NonExistingResource", "testResourceToURL_NonExistingResource_WithClassLoader", "testResourceToURL_Null", "testResourceToURL_Null_WithClassLoader", "testSkipFully_InputStream", "testSkipFully_ReadableByteChannel", "testSkipFully_Reader", "testSkip_FileReader", "testSkip_InputStream", "testSkip_ReadableByteChannel", "testStringToOutputStream", "testToBufferedInputStreamWithBufferSize_InputStream", "testToBufferedInputStream_InputStream", "testToByteArray_InputStream", "testToByteArray_InputStream_NegativeSize", "testToByteArray_InputStream_Size", "testToByteArray_InputStream_SizeIllegal", "testToByteArray_InputStream_SizeLong", "testToByteArray_InputStream_SizeZero", "testToByteArray_Reader", "testToByteArray_String", "testToByteArray_URI", "testToByteArray_URL", "testToByteArray_URLConnection", "testToCharArray_InputStream", "testToCharArray_InputStream_CharsetName", "testToCharArray_Reader", "testToInputStream_CharSequence", "testToInputStream_String", "testToString_ByteArray", "testToString_InputStream", "testToString_Reader", "testToString_URI", "testToString_URI_CharsetName", "testToString_URI_CharsetNameNull", "testToString_URL", "testToString_URL_CharsetName", "testToString_URL_CharsetNameNull" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#setUp" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testResourceToByteArray_ExistingResourceAtRootPackage", "testResourceToByteArray_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToByteArray_ExistingResourceAtSubPackage", "testResourceToByteArray_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToByteArray_NonExistingResource", "testResourceToByteArray_NonExistingResource_WithClassLoader", "testResourceToByteArray_Null", "testResourceToByteArray_Null_WithClassLoader", "testResourceToString_ExistingResourceAtRootPackage", "testResourceToString_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToString_ExistingResourceAtSubPackage", "testResourceToString_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToString_NonExistingResource", "testResourceToString_NonExistingResource_WithClassLoader", "testResourceToString_NullCharset", "testResourceToString_NullCharset_WithClassLoader", "testResourceToString_NullResource", "testResourceToString_NullResource_WithClassLoader", "testResourceToURL_ExistingResourceAtRootPackage", "testResourceToURL_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToURL_ExistingResourceAtSubPackage", "testResourceToURL_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToURL_NonExistingResource", "testResourceToURL_NonExistingResource_WithClassLoader", "testResourceToURL_Null", "testResourceToURL_Null_WithClassLoader" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#tearDown" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testResourceToByteArray_ExistingResourceAtRootPackage", "testResourceToByteArray_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToByteArray_ExistingResourceAtSubPackage", "testResourceToByteArray_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToByteArray_NonExistingResource", "testResourceToByteArray_NonExistingResource_WithClassLoader", "testResourceToByteArray_Null", "testResourceToByteArray_Null_WithClassLoader", "testResourceToString_ExistingResourceAtRootPackage", "testResourceToString_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToString_ExistingResourceAtSubPackage", "testResourceToString_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToString_NonExistingResource", "testResourceToString_NonExistingResource_WithClassLoader", "testResourceToString_NullCharset", "testResourceToString_NullCharset_WithClassLoader", "testResourceToString_NullResource", "testResourceToString_NullResource_WithClassLoader", "testResourceToURL_ExistingResourceAtRootPackage", "testResourceToURL_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToURL_ExistingResourceAtSubPackage", "testResourceToURL_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToURL_NonExistingResource", "testResourceToURL_NonExistingResource_WithClassLoader", "testResourceToURL_Null", "testResourceToURL_Null_WithClassLoader" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testResourceToByteArray_ExistingResourceAtRootPackage" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testResourceToByteArray_ExistingResourceAtRootPackage" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testResourceToByteArray_ExistingResourceAtRootPackage_WithClassLoader" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testResourceToByteArray_ExistingResourceAtRootPackage_WithClassLoader" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testResourceToByteArray_ExistingResourceAtSubPackage" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testResourceToByteArray_ExistingResourceAtSubPackage" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testResourceToByteArray_ExistingResourceAtSubPackage_WithClassLoader" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testResourceToByteArray_ExistingResourceAtSubPackage_WithClassLoader" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testResourceToByteArray_NonExistingResource" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testResourceToByteArray_NonExistingResource" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testResourceToByteArray_NonExistingResource_WithClassLoader" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testResourceToByteArray_NonExistingResource_WithClassLoader" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testResourceToByteArray_Null" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testResourceToByteArray_Null" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testResourceToByteArray_Null_WithClassLoader" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testResourceToByteArray_Null_WithClassLoader" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testResourceToString_ExistingResourceAtRootPackage" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testResourceToString_ExistingResourceAtRootPackage" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testResourceToString_ExistingResourceAtRootPackage_WithClassLoader" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testResourceToString_ExistingResourceAtRootPackage_WithClassLoader" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testResourceToString_ExistingResourceAtSubPackage" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testResourceToString_ExistingResourceAtSubPackage" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testResourceToString_ExistingResourceAtSubPackage_WithClassLoader" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testResourceToString_ExistingResourceAtSubPackage_WithClassLoader" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testResourceToString_NonExistingResource" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testResourceToString_NonExistingResource" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testResourceToString_NonExistingResource_WithClassLoader" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testResourceToString_NonExistingResource_WithClassLoader" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testResourceToString_NullCharset" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testResourceToString_NullCharset" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testResourceToString_NullCharset_WithClassLoader" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testResourceToString_NullCharset_WithClassLoader" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testResourceToString_NullResource" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testResourceToString_NullResource" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testResourceToString_NullResource_WithClassLoader" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testResourceToString_NullResource_WithClassLoader" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testResourceToURL_ExistingResourceAtRootPackage" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testResourceToURL_ExistingResourceAtRootPackage" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testResourceToURL_ExistingResourceAtRootPackage_WithClassLoader" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testResourceToURL_ExistingResourceAtRootPackage_WithClassLoader" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testResourceToURL_ExistingResourceAtSubPackage" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testResourceToURL_ExistingResourceAtSubPackage" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testResourceToURL_ExistingResourceAtSubPackage_WithClassLoader" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testResourceToURL_ExistingResourceAtSubPackage_WithClassLoader" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testResourceToURL_NonExistingResource" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testResourceToURL_NonExistingResource" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testResourceToURL_NonExistingResource_WithClassLoader" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testResourceToURL_NonExistingResource_WithClassLoader" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testResourceToURL_Null" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testResourceToURL_Null" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testResourceToURL_Null_WithClassLoader" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testResourceToURL_Null_WithClassLoader" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream#<init>" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testResourceToByteArray_ExistingResourceAtRootPackage", "testResourceToByteArray_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToByteArray_ExistingResourceAtSubPackage", "testResourceToByteArray_ExistingResourceAtSubPackage_WithClassLoader" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream#close" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testResourceToByteArray_ExistingResourceAtRootPackage", "testResourceToByteArray_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToByteArray_ExistingResourceAtSubPackage", "testResourceToByteArray_ExistingResourceAtSubPackage_WithClassLoader" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream#needNewBuffer(int)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testResourceToByteArray_ExistingResourceAtRootPackage", "testResourceToByteArray_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToByteArray_ExistingResourceAtSubPackage", "testResourceToByteArray_ExistingResourceAtSubPackage_WithClassLoader" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream#toByteArray" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testResourceToByteArray_ExistingResourceAtRootPackage", "testResourceToByteArray_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToByteArray_ExistingResourceAtSubPackage", "testResourceToByteArray_ExistingResourceAtSubPackage_WithClassLoader" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream#write(byte[],int,int)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testResourceToByteArray_ExistingResourceAtRootPackage", "testResourceToByteArray_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToByteArray_ExistingResourceAtSubPackage", "testResourceToByteArray_ExistingResourceAtSubPackage_WithClassLoader" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#<init>" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testResourceToByteArray_ExistingResourceAtRootPackage", "testResourceToByteArray_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToByteArray_ExistingResourceAtSubPackage", "testResourceToByteArray_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToByteArray_NonExistingResource", "testResourceToByteArray_NonExistingResource_WithClassLoader", "testResourceToByteArray_Null", "testResourceToByteArray_Null_WithClassLoader", "testResourceToString_ExistingResourceAtRootPackage", "testResourceToString_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToString_ExistingResourceAtSubPackage", "testResourceToString_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToString_NonExistingResource", "testResourceToString_NonExistingResource_WithClassLoader", "testResourceToString_NullCharset", "testResourceToString_NullCharset_WithClassLoader", "testResourceToString_NullResource", "testResourceToString_NullResource_WithClassLoader", "testResourceToURL_ExistingResourceAtRootPackage", "testResourceToURL_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToURL_ExistingResourceAtSubPackage", "testResourceToURL_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToURL_NonExistingResource", "testResourceToURL_NonExistingResource_WithClassLoader", "testResourceToURL_Null", "testResourceToURL_Null_WithClassLoader" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#close" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testResourceToByteArray_ExistingResourceAtRootPackage", "testResourceToByteArray_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToByteArray_ExistingResourceAtSubPackage", "testResourceToByteArray_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToByteArray_NonExistingResource", "testResourceToByteArray_NonExistingResource_WithClassLoader", "testResourceToByteArray_Null", "testResourceToByteArray_Null_WithClassLoader", "testResourceToString_ExistingResourceAtRootPackage", "testResourceToString_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToString_ExistingResourceAtSubPackage", "testResourceToString_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToString_NonExistingResource", "testResourceToString_NonExistingResource_WithClassLoader", "testResourceToString_NullCharset", "testResourceToString_NullCharset_WithClassLoader", "testResourceToString_NullResource", "testResourceToString_NullResource_WithClassLoader", "testResourceToURL_ExistingResourceAtRootPackage", "testResourceToURL_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToURL_ExistingResourceAtSubPackage", "testResourceToURL_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToURL_NonExistingResource", "testResourceToURL_NonExistingResource_WithClassLoader", "testResourceToURL_Null", "testResourceToURL_Null_WithClassLoader" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#toString" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testResourceToByteArray_ExistingResourceAtRootPackage", "testResourceToByteArray_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToByteArray_ExistingResourceAtSubPackage", "testResourceToByteArray_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToByteArray_NonExistingResource", "testResourceToByteArray_NonExistingResource_WithClassLoader", "testResourceToByteArray_Null", "testResourceToByteArray_Null_WithClassLoader", "testResourceToString_ExistingResourceAtRootPackage", "testResourceToString_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToString_ExistingResourceAtSubPackage", "testResourceToString_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToString_NonExistingResource", "testResourceToString_NonExistingResource_WithClassLoader", "testResourceToString_NullCharset", "testResourceToString_NullCharset_WithClassLoader", "testResourceToString_NullResource", "testResourceToString_NullResource_WithClassLoader", "testResourceToURL_ExistingResourceAtRootPackage", "testResourceToURL_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToURL_ExistingResourceAtSubPackage", "testResourceToURL_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToURL_NonExistingResource", "testResourceToURL_NonExistingResource_WithClassLoader", "testResourceToURL_Null", "testResourceToURL_Null_WithClassLoader" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#write(char[],int,int)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testResourceToByteArray_ExistingResourceAtRootPackage", "testResourceToByteArray_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToByteArray_ExistingResourceAtSubPackage", "testResourceToByteArray_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToByteArray_NonExistingResource", "testResourceToByteArray_NonExistingResource_WithClassLoader", "testResourceToByteArray_Null", "testResourceToByteArray_Null_WithClassLoader", "testResourceToString_ExistingResourceAtRootPackage", "testResourceToString_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToString_ExistingResourceAtSubPackage", "testResourceToString_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToString_NonExistingResource", "testResourceToString_NonExistingResource_WithClassLoader", "testResourceToString_NullCharset", "testResourceToString_NullCharset_WithClassLoader", "testResourceToString_NullResource", "testResourceToString_NullResource_WithClassLoader", "testResourceToURL_ExistingResourceAtRootPackage", "testResourceToURL_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToURL_ExistingResourceAtSubPackage", "testResourceToURL_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToURL_NonExistingResource", "testResourceToURL_NonExistingResource_WithClassLoader", "testResourceToURL_Null", "testResourceToURL_Null_WithClassLoader" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#getTestDirectory" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testResourceToByteArray_ExistingResourceAtRootPackage", "testResourceToByteArray_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToByteArray_ExistingResourceAtSubPackage", "testResourceToByteArray_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToByteArray_NonExistingResource", "testResourceToByteArray_NonExistingResource_WithClassLoader", "testResourceToByteArray_Null", "testResourceToByteArray_Null_WithClassLoader", "testResourceToString_ExistingResourceAtRootPackage", "testResourceToString_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToString_ExistingResourceAtSubPackage", "testResourceToString_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToString_NonExistingResource", "testResourceToString_NonExistingResource_WithClassLoader", "testResourceToString_NullCharset", "testResourceToString_NullCharset_WithClassLoader", "testResourceToString_NullResource", "testResourceToString_NullResource_WithClassLoader", "testResourceToURL_ExistingResourceAtRootPackage", "testResourceToURL_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToURL_ExistingResourceAtSubPackage", "testResourceToURL_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToURL_NonExistingResource", "testResourceToURL_NonExistingResource_WithClassLoader", "testResourceToURL_Null", "testResourceToURL_Null_WithClassLoader" ]
          }
        },
        "org.apache.commons.io.testtools.TestUtils#generateTestData(org.apache.commons.io.testtools.OutputStream,long)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testResourceToByteArray_ExistingResourceAtRootPackage", "testResourceToByteArray_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToByteArray_ExistingResourceAtSubPackage", "testResourceToByteArray_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToByteArray_NonExistingResource", "testResourceToByteArray_NonExistingResource_WithClassLoader", "testResourceToByteArray_Null", "testResourceToByteArray_Null_WithClassLoader", "testResourceToString_ExistingResourceAtRootPackage", "testResourceToString_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToString_ExistingResourceAtSubPackage", "testResourceToString_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToString_NonExistingResource", "testResourceToString_NonExistingResource_WithClassLoader", "testResourceToString_NullCharset", "testResourceToString_NullCharset_WithClassLoader", "testResourceToString_NullResource", "testResourceToString_NullResource_WithClassLoader", "testResourceToURL_ExistingResourceAtRootPackage", "testResourceToURL_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToURL_ExistingResourceAtSubPackage", "testResourceToURL_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToURL_NonExistingResource", "testResourceToURL_NonExistingResource_WithClassLoader", "testResourceToURL_Null", "testResourceToURL_Null_WithClassLoader" ]
          }
        }
      }
    },
    "e95134229b9066aa2f1d312a53f5a670d271dbfa" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "31c0d3a8e94b1016843596acea17a63bed9d4558",
      "changedClazzes" : {
        "org.apache.commons.io.testtools.TestUtils" : {
          "testcases" : {
            "org.apache.commons.io.DemuxTestCase" : [ "testInputStream", "testOutputStream" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerFile" ],
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce", "testDeleteNormal", "testDeleteQuietlyNormal" ],
            "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedError_IO_128", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetBaseName_with_nullByte", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetFullPathNoEndSeparator_IO_248", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPathNoEndSeparator_with_null_byte", "testGetPath_with_nullbyte", "testGetPrefix", "testGetPrefixLength", "testGetPrefix_with_nullbyte", "testIndexOfExtension", "testIndexOfLastSeparator", "testInjectionFailure", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testIsExtension_injection", "testNormalize", "testNormalizeNoEndSeparator", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin", "testNormalize_with_nullbytes", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testAsBufferedInputStream", "testAsBufferedInputStreamWithBufferSize", "testAsBufferedNull", "testAsBufferedOutputStream", "testAsBufferedOutputStreamWithBufferSize", "testAsBufferedReader", "testAsBufferedReaderWithBufferSize", "testAsBufferedWriter", "testAsBufferedWriterWithBufferSize", "testCloseQuietly_AllCloseableIOException", "testCloseQuietly_CloseableIOException", "testCloseQuietly_Selector", "testCloseQuietly_SelectorIOException", "testCloseQuietly_SelectorNull", "testCloseQuietly_SelectorTwice", "testCloseQuietly_ServerSocket", "testCloseQuietly_ServerSocketIOException", "testCloseQuietly_Socket", "testCloseQuietly_SocketIOException", "testConstants", "testContentEqualsIgnoreEOL", "testContentEquals_InputStream_InputStream", "testContentEquals_Reader_Reader", "testCopyLarge_CharExtraLength", "testCopyLarge_CharFullLength", "testCopyLarge_CharNoSkip", "testCopyLarge_CharSkip", "testCopyLarge_CharSkipInvalid", "testCopyLarge_ExtraLength", "testCopyLarge_FullLength", "testCopyLarge_NoSkip", "testCopyLarge_Skip", "testCopyLarge_SkipInvalid", "testCopy_ByteArray_OutputStream", "testCopy_ByteArray_Writer", "testCopy_String_Writer", "testReadFully_InputStream_ByteArray", "testReadFully_InputStream_Offset", "testReadFully_InputStream__ReturnByteArray", "testReadFully_ReadableByteChannel", "testReadFully_Reader", "testReadFully_Reader_Offset", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testRead_ReadableByteChannel", "testResourceToByteArray_ExistingResourceAtRootPackage", "testResourceToByteArray_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToByteArray_ExistingResourceAtSubPackage", "testResourceToByteArray_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToByteArray_NonExistingResource", "testResourceToByteArray_NonExistingResource_WithClassLoader", "testResourceToByteArray_Null", "testResourceToByteArray_Null_WithClassLoader", "testResourceToString_ExistingResourceAtRootPackage", "testResourceToString_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToString_ExistingResourceAtSubPackage", "testResourceToString_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToString_NonExistingResource", "testResourceToString_NonExistingResource_WithClassLoader", "testResourceToString_NullCharset", "testResourceToString_NullCharset_WithClassLoader", "testResourceToString_NullResource", "testResourceToString_NullResource_WithClassLoader", "testResourceToURL_ExistingResourceAtRootPackage", "testResourceToURL_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToURL_ExistingResourceAtSubPackage", "testResourceToURL_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToURL_NonExistingResource", "testResourceToURL_NonExistingResource_WithClassLoader", "testResourceToURL_Null", "testResourceToURL_Null_WithClassLoader", "testSkipFully_InputStream", "testSkipFully_ReadableByteChannel", "testSkipFully_Reader", "testSkip_FileReader", "testSkip_InputStream", "testSkip_ReadableByteChannel", "testStringToOutputStream", "testToBufferedInputStreamWithBufferSize_InputStream", "testToBufferedInputStream_InputStream", "testToByteArray_InputStream", "testToByteArray_InputStream_NegativeSize", "testToByteArray_InputStream_Size", "testToByteArray_InputStream_SizeIllegal", "testToByteArray_InputStream_SizeLong", "testToByteArray_InputStream_SizeZero", "testToByteArray_Reader", "testToByteArray_String", "testToByteArray_URI", "testToByteArray_URL", "testToByteArray_URLConnection", "testToCharArray_InputStream", "testToCharArray_InputStream_CharsetName", "testToCharArray_Reader", "testToInputStream_CharSequence", "testToInputStream_String", "testToString_ByteArray", "testToString_InputStream", "testToString_Reader", "testToString_URI", "testToString_URI_CharsetName", "testToString_URI_CharsetNameNull", "testToString_URL", "testToString_URL_CharsetName", "testToString_URL_CharsetNameNull" ],
            "org.apache.commons.io.ThreadMonitorTestCase" : [ "testCompletedWithoutTimeout", "testNoTimeout", "testTimeout" ],
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "constructorArray_Null", "constructorIterable_Null", "constructorIterable_order" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testCanRead", "testCanWrite", "testEmpty", "testFilterArray", "testFilterArrayNullParameters", "testFilterArray_fromList", "testFilterList", "testFilterList_fromArray", "testFilterSet", "testFilterSet_fromArray", "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testSizeFilter" ],
            "org.apache.commons.io.input.TailerTest" : [ "testBufferBreak", "testIO335", "testInterrupt", "testLongFile", "testMultiByteBreak", "testStopWithNoFile", "testStopWithNoFileUsingExecutor", "testTailer", "testTailerEndOfFileReached", "testTailerEof" ],
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor", "testThreadFactory" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ],
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "sameEncoding_CharsetEncoder_constructor", "sameEncoding_Charset_constructor", "sameEncoding_string_CharsetEncoder_constructor", "sameEncoding_string_Charset_constructor", "sameEncoding_string_constructor", "sameEncoding_string_string_constructor", "testDifferentEncoding" ]
          }
        }
      }
    },
    "699d6f0eca65837501d7ab7a92ae2c614f8e6cbf" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "e95134229b9066aa2f1d312a53f5a670d271dbfa",
      "changedClazzes" : {
        "org.apache.commons.io.input.InfiniteCircularInputStream" : { },
        "org.apache.commons.io.input.InfiniteCircularInputStream#<init>(byte[])" : {
          "testcases" : {
            "org.apache.commons.io.input.InfiniteCircularInputStreamTest" : [ "should_cycle_bytes", "should_handle_whole_range_of_bytes" ]
          }
        },
        "org.apache.commons.io.input.InfiniteCircularInputStream#read" : {
          "testcases" : {
            "org.apache.commons.io.input.InfiniteCircularInputStreamTest" : [ "should_cycle_bytes", "should_handle_whole_range_of_bytes" ]
          }
        },
        "org.apache.commons.io.input.InfiniteCircularInputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.input.InfiniteCircularInputStreamTest" : [ "should_cycle_bytes", "should_handle_whole_range_of_bytes" ]
          }
        },
        "org.apache.commons.io.input.InfiniteCircularInputStreamTest#assertStreamOutput(byte[],byte[])" : {
          "testcases" : {
            "org.apache.commons.io.input.InfiniteCircularInputStreamTest" : [ "should_cycle_bytes", "should_handle_whole_range_of_bytes" ]
          }
        },
        "org.apache.commons.io.input.InfiniteCircularInputStreamTest#should_cycle_bytes" : {
          "testcases" : {
            "org.apache.commons.io.input.InfiniteCircularInputStreamTest" : [ "should_cycle_bytes" ]
          }
        },
        "org.apache.commons.io.input.InfiniteCircularInputStreamTest#should_handle_whole_range_of_bytes" : {
          "testcases" : {
            "org.apache.commons.io.input.InfiniteCircularInputStreamTest" : [ "should_handle_whole_range_of_bytes" ]
          }
        }
      }
    },
    "fcc6361946b1809771e136af566518320006c01e" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "699d6f0eca65837501d7ab7a92ae2c614f8e6cbf",
      "changedClazzes" : { }
    },
    "703228a3d40881ea52faada723726b05f6d77b8a" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "fcc6361946b1809771e136af566518320006c01e",
      "changedClazzes" : {
        "org.apache.commons.io.FilenameUtils#getPrefixLength(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpaceWindows_String_quoted" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEqualsNormalized", "testEqualsNormalizedError_IO_128", "testEqualsNormalizedOnSystem", "testEquals_fullControl", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetFullPathNoEndSeparator_IO_248", "testGetPath", "testGetPathNoEndSeparator", "testGetPathNoEndSeparator_with_null_byte", "testGetPath_with_nullbyte", "testGetPrefix", "testGetPrefixLength", "testGetPrefix_with_nullbyte", "testNormalize", "testNormalizeNoEndSeparator", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin" ]
          }
        },
        "org.apache.commons.io.FilenameUtilsTestCase#testGetPrefixLength" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testGetPrefixLength" ]
          }
        }
      }
    },
    "593de775be9e5cb9c9a6cbcebe9a40ce80cc4bfd" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "703228a3d40881ea52faada723726b05f6d77b8a",
      "changedClazzes" : { }
    },
    "4aebb1129d397b20c8f911ccdf1e3595f020d127" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "593de775be9e5cb9c9a6cbcebe9a40ce80cc4bfd",
      "changedClazzes" : { }
    },
    "878133480c2854535a069084b86ef158d3027e81" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "4aebb1129d397b20c8f911ccdf1e3595f020d127",
      "changedClazzes" : { }
    },
    "54631643211e2dc29beaecc30e4eedf2928738d7" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "878133480c2854535a069084b86ef158d3027e81",
      "changedClazzes" : { }
    },
    "8b9fe1b01ce21003f6a6ff8391ad2a64f4d21030" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "54631643211e2dc29beaecc30e4eedf2928738d7",
      "changedClazzes" : { }
    },
    "4b5fa7d8d2d398a6eed0725ff4b2a8177da56896" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "8b9fe1b01ce21003f6a6ff8391ad2a64f4d21030",
      "changedClazzes" : { }
    },
    "45fbfb82fd1f5168a7183e78ece89da7a60e21fe" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "4b5fa7d8d2d398a6eed0725ff4b2a8177da56896",
      "changedClazzes" : {
        "org.apache.commons.io.input.Tailer#run" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testBufferBreak", "testIO335", "testInterrupt", "testLongFile", "testMultiByteBreak", "testStopWithNoFile", "testStopWithNoFileUsingExecutor", "testTailer", "testTailerEndOfFileReached", "testTailerEof" ]
          }
        }
      }
    },
    "f44180b972e3f881da8a3f981a1ca4f720e48125" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "45fbfb82fd1f5168a7183e78ece89da7a60e21fe",
      "changedClazzes" : { }
    },
    "d675cd1362d502de0a94e0ff4d10e9c4ada579e4" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "f44180b972e3f881da8a3f981a1ca4f720e48125",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtilsTestCase#openOutputStream_noParent(boolean)" : { },
        "org.apache.commons.io.FileUtilsTestCase#setUp" : { },
        "org.apache.commons.io.FileUtilsTestCase#test_openInputStream_exists" : { },
        "org.apache.commons.io.FileUtilsTestCase#test_openInputStream_existsButIsDirectory" : { },
        "org.apache.commons.io.FileUtilsTestCase#test_openInputStream_notExists" : { },
        "org.apache.commons.io.FileUtilsTestCase#test_openOutputStream_exists" : { },
        "org.apache.commons.io.FileUtilsTestCase#test_openOutputStream_existsButIsDirectory" : { },
        "org.apache.commons.io.FileUtilsTestCase#test_openOutputStream_notExists" : { },
        "org.apache.commons.io.FileUtilsTestCase#test_openOutputStream_notExistsCannotCreate" : { }
      }
    },
    "b5a2c343d52885dada56baa5c681b4c63533cf52" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "d675cd1362d502de0a94e0ff4d10e9c4ada579e4",
      "changedClazzes" : { }
    },
    "46fc59ff1d9df4939c178ad749487bb5f5e7ab15" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "b5a2c343d52885dada56baa5c681b4c63533cf52",
      "changedClazzes" : { }
    },
    "f5c46b9fc80754c601205e6ef13c5b7e9a5003e2" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "46fc59ff1d9df4939c178ad749487bb5f5e7ab15",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtilsTestCase#testForceMkdirParent" : { },
        "org.apache.commons.io.FileUtilsTestCase#testSizeOfDirectory" : { }
      }
    },
    "722a5af4f1786599f22e91a34af459883c7a6a8b" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "f5c46b9fc80754c601205e6ef13c5b7e9a5003e2",
      "changedClazzes" : {
        "org.apache.commons.io.input.TailerTest#createFile(org.apache.commons.io.input.File,long)" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testBufferBreak", "testIO335", "testLongFile", "testMultiByteBreak", "testTailer", "testTailerEndOfFileReached", "testTailerEof" ]
          }
        },
        "org.apache.commons.io.input.TailerTest#testMultiByteBreak" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testMultiByteBreak" ]
          }
        },
        "org.apache.commons.io.input.TailerTest#testTailerEof" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testTailerEof" ]
          }
        },
        "org.apache.commons.io.input.TailerTest#write(org.apache.commons.io.input.File,java.lang.String[])" : { },
        "org.apache.commons.io.input.TailerTest#writeString(org.apache.commons.io.input.File,java.lang.String[])" : { }
      }
    },
    "5411db017b093f0995a9b7807a6a4dabb0f1e0ea" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "722a5af4f1786599f22e91a34af459883c7a6a8b",
      "changedClazzes" : {
        "org.apache.commons.io.input.TailerTest#testIO335" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testIO335" ]
          }
        },
        "org.apache.commons.io.input.TailerTest#testInterrupt" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testInterrupt" ]
          }
        },
        "org.apache.commons.io.input.TailerTest#testMultiByteBreak" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testMultiByteBreak" ]
          }
        },
        "org.apache.commons.io.input.TailerTest#testStopWithNoFile" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testStopWithNoFile" ]
          }
        },
        "org.apache.commons.io.input.TailerTest#testStopWithNoFileUsingExecutor" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testStopWithNoFileUsingExecutor" ]
          }
        },
        "org.apache.commons.io.input.TailerTest#testTailer" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testTailer" ]
          }
        },
        "org.apache.commons.io.input.TailerTest#testTailerEof" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testTailerEof" ]
          }
        }
      }
    },
    "31e141019010d27dfb3c1a1fb712433268b520f0" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "5411db017b093f0995a9b7807a6a4dabb0f1e0ea",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtilsTestCase#testForceDeleteDir" : { }
      }
    },
    "419ad3e4aaeb2471c86eec1b6799675a70bc12cb" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "31e141019010d27dfb3c1a1fb712433268b520f0",
      "changedClazzes" : {
        "org.apache.commons.io.testtools.FileBasedTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerFile", "testFileCleanerNull" ],
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce", "testDeleteNormal", "testDeleteNull", "testDeleteQuietlyNormal", "testToString" ],
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testCleanEmpty", "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile", "testThrowsOnNullList" ],
            "org.apache.commons.io.FileUtilsDirectoryContainsTestCase" : [ "testCanonicalPath", "testDirectoryContainsDirectory", "testDirectoryContainsFile", "testDirectoryDoesNotContainFile", "testDirectoryDoesNotContainsDirectory", "testDirectoryDoesNotExist", "testFileDoesNotExist", "testFileDoesNotExistBug", "testIO466", "testSameFile", "testUnrealizedContainment" ],
            "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension", "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedError_IO_128", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetBaseName_with_nullByte", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetFullPathNoEndSeparator_IO_248", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPathNoEndSeparator_with_null_byte", "testGetPath_with_nullbyte", "testGetPrefix", "testGetPrefixLength", "testGetPrefix_with_nullbyte", "testIndexOfExtension", "testIndexOfLastSeparator", "testInjectionFailure", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testIsExtension_injection", "testNormalize", "testNormalizeNoEndSeparator", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin", "testNormalize_with_nullbytes", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testAsBufferedInputStream", "testAsBufferedInputStreamWithBufferSize", "testAsBufferedNull", "testAsBufferedOutputStream", "testAsBufferedOutputStreamWithBufferSize", "testAsBufferedReader", "testAsBufferedReaderWithBufferSize", "testAsBufferedWriter", "testAsBufferedWriterWithBufferSize", "testCloseQuietly_AllCloseableIOException", "testCloseQuietly_CloseableIOException", "testCloseQuietly_Selector", "testCloseQuietly_SelectorIOException", "testCloseQuietly_SelectorNull", "testCloseQuietly_SelectorTwice", "testCloseQuietly_ServerSocket", "testCloseQuietly_ServerSocketIOException", "testCloseQuietly_Socket", "testCloseQuietly_SocketIOException", "testConstants", "testContentEqualsIgnoreEOL", "testContentEquals_InputStream_InputStream", "testContentEquals_Reader_Reader", "testCopyLarge_CharExtraLength", "testCopyLarge_CharFullLength", "testCopyLarge_CharNoSkip", "testCopyLarge_CharSkip", "testCopyLarge_CharSkipInvalid", "testCopyLarge_ExtraLength", "testCopyLarge_FullLength", "testCopyLarge_NoSkip", "testCopyLarge_Skip", "testCopyLarge_SkipInvalid", "testCopy_ByteArray_OutputStream", "testCopy_ByteArray_Writer", "testCopy_String_Writer", "testReadFully_InputStream_ByteArray", "testReadFully_InputStream_Offset", "testReadFully_InputStream__ReturnByteArray", "testReadFully_ReadableByteChannel", "testReadFully_Reader", "testReadFully_Reader_Offset", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testRead_ReadableByteChannel", "testResourceToByteArray_ExistingResourceAtRootPackage", "testResourceToByteArray_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToByteArray_ExistingResourceAtSubPackage", "testResourceToByteArray_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToByteArray_NonExistingResource", "testResourceToByteArray_NonExistingResource_WithClassLoader", "testResourceToByteArray_Null", "testResourceToByteArray_Null_WithClassLoader", "testResourceToString_ExistingResourceAtRootPackage", "testResourceToString_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToString_ExistingResourceAtSubPackage", "testResourceToString_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToString_NonExistingResource", "testResourceToString_NonExistingResource_WithClassLoader", "testResourceToString_NullCharset", "testResourceToString_NullCharset_WithClassLoader", "testResourceToString_NullResource", "testResourceToString_NullResource_WithClassLoader", "testResourceToURL_ExistingResourceAtRootPackage", "testResourceToURL_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToURL_ExistingResourceAtSubPackage", "testResourceToURL_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToURL_NonExistingResource", "testResourceToURL_NonExistingResource_WithClassLoader", "testResourceToURL_Null", "testResourceToURL_Null_WithClassLoader", "testSkipFully_InputStream", "testSkipFully_ReadableByteChannel", "testSkipFully_Reader", "testSkip_FileReader", "testSkip_InputStream", "testSkip_ReadableByteChannel", "testStringToOutputStream", "testToBufferedInputStreamWithBufferSize_InputStream", "testToBufferedInputStream_InputStream", "testToByteArray_InputStream", "testToByteArray_InputStream_NegativeSize", "testToByteArray_InputStream_Size", "testToByteArray_InputStream_SizeIllegal", "testToByteArray_InputStream_SizeLong", "testToByteArray_InputStream_SizeZero", "testToByteArray_Reader", "testToByteArray_String", "testToByteArray_URI", "testToByteArray_URL", "testToByteArray_URLConnection", "testToCharArray_InputStream", "testToCharArray_InputStream_CharsetName", "testToCharArray_Reader", "testToInputStream_CharSequence", "testToInputStream_String", "testToString_ByteArray", "testToString_InputStream", "testToString_Reader", "testToString_URI", "testToString_URI_CharsetName", "testToString_URI_CharsetNameNull", "testToString_URL", "testToString_URL_CharsetName", "testToString_URL_CharsetNameNull" ],
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFilteringBufferedReader", "testFilteringFileReader", "testInvalidEncoding", "testMissingFile", "testNextLineOnlyDefaultEncoding", "testNextLineOnlyNullEncoding", "testNextLineOnlyUtf8Encoding", "testNextOnly", "testNextWithException", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "constructorArray_Null", "constructorIterable_Null", "constructorIterable_order" ],
            "org.apache.commons.io.comparator.DirectoryFileComparatorTest" : [ "testSortArray" ],
            "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.NameFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.PathFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testAnd", "testCanRead", "testCanWrite", "testDelegateFileFilter", "testDelegation", "testDeprecatedWildcard", "testDirectory", "testEmpty", "testEnsureTestCoverage", "testFalse", "testFileFilterUtils_and", "testFileFilterUtils_or", "testFiles", "testFilterArray", "testFilterArrayNullParameters", "testFilterArray_fromList", "testFilterList", "testFilterListNullParameters", "testFilterList_fromArray", "testFilterSet", "testFilterSetNullParameters", "testFilterSet_fromArray", "testHidden", "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset", "testMagicNumberFileFilterValidation", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNameFilterNullArrayArgument", "testNameFilterNullListArgument", "testNot", "testNullFilters", "testOr", "testPrefix", "testPrefixCaseInsensitive", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testTrue", "testWildcard" ],
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ],
            "org.apache.commons.io.input.TailerTest" : [ "testBufferBreak", "testIO335", "testInterrupt", "testLongFile", "testMultiByteBreak", "testStopWithNoFile", "testStopWithNoFileUsingExecutor", "testTailer", "testTailerEndOfFileReached", "testTailerEof" ],
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "constructor_File_directory", "constructor_File_encoding_badEncoding", "constructor_File_nullFile", "constructor_fileName_nullFile", "sameEncoding_CharsetEncoder_constructor", "sameEncoding_Charset_constructor", "sameEncoding_null_Charset_constructor", "sameEncoding_string_CharsetEncoder_constructor", "sameEncoding_string_Charset_constructor", "sameEncoding_string_constructor", "sameEncoding_string_string_constructor", "testDifferentEncoding" ],
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testConstructor_fileName_nullFile", "testFileLocked", "testFileNotLocked" ]
          }
        }
      }
    },
    "c295a589777a35730c90b26f28f7cc938d4053e3" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "419ad3e4aaeb2471c86eec1b6799675a70bc12cb",
      "changedClazzes" : {
        "org.apache.commons.io.monitor.FileAlterationMonitorTestCase#testMonitor" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor" ]
          }
        }
      }
    },
    "f00d97a6cea0a08c8112ffb8bd0b6847373899ae" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "c295a589777a35730c90b26f28f7cc938d4053e3",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerNull" ],
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce", "testDeleteNormal", "testDeleteNull", "testDeleteQuietlyNormal", "testToString" ],
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testCleanEmpty", "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile", "testThrowsOnNullList" ],
            "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" : [ "testCleanDirWithASymlinkDir", "testCleanDirWithParentSymlinks", "testCleanDirWithSymlinkFile", "testCorrectlyIdentifySymlinkWithParentSymLink", "testIdentifiesBrokenSymlinkFile", "testIdentifiesSymlinkDir", "testIdentifiesSymlinkFile", "testStillClearsIfGivenDirectoryIsASymlink" ],
            "org.apache.commons.io.FileUtilsDirectoryContainsTestCase" : [ "testCanonicalPath", "testDirectoryContainsDirectory", "testDirectoryContainsFile", "testDirectoryDoesNotContainFile", "testDirectoryDoesNotContainsDirectory", "testDirectoryDoesNotExist", "testFileDoesNotExist", "testFileDoesNotExistBug", "testIO466", "testSameFile", "testUnrealizedContainment" ],
            "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension", "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsWaitForTestCase" : [ "testWaitFor", "testWaitForInterrupted" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedError_IO_128", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetBaseName_with_nullByte", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetFullPathNoEndSeparator_IO_248", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPathNoEndSeparator_with_null_byte", "testGetPath_with_nullbyte", "testGetPrefix", "testGetPrefixLength", "testGetPrefix_with_nullbyte", "testIndexOfExtension", "testIndexOfLastSeparator", "testInjectionFailure", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testIsExtension_injection", "testNormalize", "testNormalizeNoEndSeparator", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin", "testNormalize_with_nullbytes", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testAsBufferedInputStream", "testAsBufferedInputStreamWithBufferSize", "testAsBufferedNull", "testAsBufferedOutputStream", "testAsBufferedOutputStreamWithBufferSize", "testAsBufferedReader", "testAsBufferedReaderWithBufferSize", "testAsBufferedWriter", "testAsBufferedWriterWithBufferSize", "testCloseQuietly_AllCloseableIOException", "testCloseQuietly_CloseableIOException", "testCloseQuietly_Selector", "testCloseQuietly_SelectorIOException", "testCloseQuietly_SelectorNull", "testCloseQuietly_SelectorTwice", "testCloseQuietly_ServerSocket", "testCloseQuietly_ServerSocketIOException", "testCloseQuietly_Socket", "testCloseQuietly_SocketIOException", "testConstants", "testContentEqualsIgnoreEOL", "testContentEquals_InputStream_InputStream", "testContentEquals_Reader_Reader", "testCopyLarge_CharExtraLength", "testCopyLarge_CharFullLength", "testCopyLarge_CharNoSkip", "testCopyLarge_CharSkip", "testCopyLarge_CharSkipInvalid", "testCopyLarge_ExtraLength", "testCopyLarge_FullLength", "testCopyLarge_NoSkip", "testCopyLarge_Skip", "testCopyLarge_SkipInvalid", "testCopy_ByteArray_OutputStream", "testCopy_ByteArray_Writer", "testCopy_String_Writer", "testReadFully_InputStream_ByteArray", "testReadFully_InputStream_Offset", "testReadFully_InputStream__ReturnByteArray", "testReadFully_ReadableByteChannel", "testReadFully_Reader", "testReadFully_Reader_Offset", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testRead_ReadableByteChannel", "testResourceToByteArray_ExistingResourceAtRootPackage", "testResourceToByteArray_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToByteArray_ExistingResourceAtSubPackage", "testResourceToByteArray_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToByteArray_NonExistingResource", "testResourceToByteArray_NonExistingResource_WithClassLoader", "testResourceToByteArray_Null", "testResourceToByteArray_Null_WithClassLoader", "testResourceToString_ExistingResourceAtRootPackage", "testResourceToString_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToString_ExistingResourceAtSubPackage", "testResourceToString_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToString_NonExistingResource", "testResourceToString_NonExistingResource_WithClassLoader", "testResourceToString_NullCharset", "testResourceToString_NullCharset_WithClassLoader", "testResourceToString_NullResource", "testResourceToString_NullResource_WithClassLoader", "testResourceToURL_ExistingResourceAtRootPackage", "testResourceToURL_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToURL_ExistingResourceAtSubPackage", "testResourceToURL_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToURL_NonExistingResource", "testResourceToURL_NonExistingResource_WithClassLoader", "testResourceToURL_Null", "testResourceToURL_Null_WithClassLoader", "testSkipFully_InputStream", "testSkipFully_ReadableByteChannel", "testSkipFully_Reader", "testSkip_FileReader", "testSkip_InputStream", "testSkip_ReadableByteChannel", "testStringToOutputStream", "testToBufferedInputStreamWithBufferSize_InputStream", "testToBufferedInputStream_InputStream", "testToByteArray_InputStream", "testToByteArray_InputStream_NegativeSize", "testToByteArray_InputStream_Size", "testToByteArray_InputStream_SizeIllegal", "testToByteArray_InputStream_SizeLong", "testToByteArray_InputStream_SizeZero", "testToByteArray_Reader", "testToByteArray_String", "testToByteArray_URI", "testToByteArray_URL", "testToByteArray_URLConnection", "testToCharArray_InputStream", "testToCharArray_InputStream_CharsetName", "testToCharArray_Reader", "testToInputStream_CharSequence", "testToInputStream_String", "testToString_ByteArray", "testToString_InputStream", "testToString_Reader", "testToString_URI", "testToString_URI_CharsetName", "testToString_URI_CharsetNameNull", "testToString_URL", "testToString_URL_CharsetName", "testToString_URL_CharsetNameNull" ],
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFilteringBufferedReader", "testFilteringFileReader", "testInvalidEncoding", "testMissingFile", "testNextLineOnlyDefaultEncoding", "testNextLineOnlyNullEncoding", "testNextLineOnlyUtf8Encoding", "testNextOnly", "testNextWithException", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "constructorArray_Null", "constructorIterable_Null", "constructorIterable_order" ],
            "org.apache.commons.io.comparator.DirectoryFileComparatorTest" : [ "testSortArray" ],
            "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.NameFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.PathFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testAnd", "testCanRead", "testCanWrite", "testDelegateFileFilter", "testDelegation", "testDeprecatedWildcard", "testDirectory", "testEmpty", "testEnsureTestCoverage", "testFalse", "testFileFilterUtils_and", "testFileFilterUtils_or", "testFiles", "testFilterArray", "testFilterArrayNullParameters", "testFilterArray_fromList", "testFilterList", "testFilterListNullParameters", "testFilterList_fromArray", "testFilterSet", "testFilterSetNullParameters", "testFilterSet_fromArray", "testHidden", "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset", "testMagicNumberFileFilterValidation", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNameFilterNullArrayArgument", "testNameFilterNullListArgument", "testNot", "testNullFilters", "testOr", "testPrefix", "testPrefixCaseInsensitive", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testTrue", "testWildcard" ],
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ],
            "org.apache.commons.io.input.TailerTest" : [ "testBufferBreak", "testIO335", "testInterrupt", "testLongFile", "testMultiByteBreak", "testStopWithNoFile", "testStopWithNoFileUsingExecutor", "testTailer", "testTailerEndOfFileReached", "testTailerEof" ],
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor", "testMonitor", "testThreadFactory" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile", "testToString" ],
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 1)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 1.024)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 128)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 16)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 2)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 2.048)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 256)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 32)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 4)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 4.096)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 512)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 64)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 8)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 1)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 1.024)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 128)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 16)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 2)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 2.048)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 256)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 32)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 4)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 4.096)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 512)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 64)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 8)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 1)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 1.024)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 128)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 16)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 2)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 2.048)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 256)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 32)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 4)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 4.096)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 512)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 64)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 8)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 1)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 1.024)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 128)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 16)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 2)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 2.048)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 256)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 32)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 4)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 4.096)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 512)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 64)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 8)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 1)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 1.024)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 128)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 16)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 2)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 2.048)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 256)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 32)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 4)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 4.096)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 512)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 64)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 8)" ],
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "constructor_File_directory", "constructor_File_encoding_badEncoding", "constructor_File_nullFile", "constructor_fileName_nullFile", "sameEncoding_CharsetEncoder_constructor", "sameEncoding_Charset_constructor", "sameEncoding_null_Charset_constructor", "sameEncoding_string_CharsetEncoder_constructor", "sameEncoding_string_Charset_constructor", "sameEncoding_string_constructor", "sameEncoding_string_string_constructor", "testDifferentEncoding" ],
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testConstructor_fileName_nullFile", "testFileLocked", "testFileNotLocked" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase" : { },
        "org.apache.commons.io.IOUtils#toByteArray(java.io.InputStream,int)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testToByteArray_InputStream_NegativeSize", "testToByteArray_InputStream_Size", "testToByteArray_InputStream_SizeIllegal", "testToByteArray_InputStream_SizeZero" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testToByteArray_InputStream_NegativeSize" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testToByteArray_InputStream_NegativeSize" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testToByteArray_InputStream_SizeIllegal" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testToByteArray_InputStream_SizeIllegal" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testToByteArray_InputStream_SizeLong" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testToByteArray_InputStream_SizeLong" ]
          }
        },
        "org.apache.commons.io.input.ObservableInputStream" : {
          "testcases" : {
            "org.apache.commons.io.input.MessageDigestCalculatingInputStreamTest" : [ "test" ],
            "org.apache.commons.io.input.ObservableInputStreamTest" : [ "testDataByteCalled", "testDataBytesCalled" ]
          }
        },
        "org.apache.commons.io.input.ObservableInputStream$Observer" : {
          "testcases" : {
            "org.apache.commons.io.input.MessageDigestCalculatingInputStreamTest" : [ "test" ],
            "org.apache.commons.io.input.ObservableInputStreamTest" : [ "testDataByteCalled", "testDataBytesCalled" ]
          }
        }
      }
    },
    "c29e08e98a4d1f12842375cb8fb259b8e5054b0f" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "f00d97a6cea0a08c8112ffb8bd0b6847373899ae",
      "changedClazzes" : {
        "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor", "testMonitor", "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile", "testToString" ]
          }
        }
      }
    },
    "70b9170cac5a47f6d55cdced51e94ac9a8fec28a" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "c29e08e98a4d1f12842375cb8fb259b8e5054b0f",
      "changedClazzes" : {
        "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testCancel", "testFilter", "testFilterAndLimitA", "testFilterAndLimitB", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile2", "testFilterDirAndFile3", "testFilterDirAndFile4", "testHandleStartDirectoryFalse", "testLimitToCurrent", "testMissingStartDirectory", "testMultiThreadCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestCancelWalker" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFalseFileFinder" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testHandleStartDirectoryFalse" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFileFinder" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testFilter", "testFilterAndLimitA", "testFilterAndLimitB", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile2", "testFilterDirAndFile3", "testFilterDirAndFile4", "testHandleStartDirectoryFalse", "testLimitToCurrent", "testMissingStartDirectory" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestMultiThreadCancelWalker" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testMultiThreadCancel" ]
          }
        },
        "org.apache.commons.io.input.ProxyReaderTest" : {
          "testcases" : {
            "org.apache.commons.io.input.ProxyReaderTest" : [ "testNullCharArray", "testNullCharBuffer" ]
          }
        },
        "org.apache.commons.io.input.ProxyReaderTest$CustomNullReader" : {
          "testcases" : {
            "org.apache.commons.io.input.ProxyReaderTest" : [ "testNullCharArray", "testNullCharBuffer" ]
          }
        },
        "org.apache.commons.io.input.ProxyReaderTest$ProxyReaderImpl" : {
          "testcases" : {
            "org.apache.commons.io.input.ProxyReaderTest" : [ "testNullCharArray", "testNullCharBuffer" ]
          }
        },
        "org.apache.commons.io.input.TaggedInputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.input.TaggedInputStreamTest" : [ "testBrokenStream", "testEmptyStream", "testNormalStream", "testOtherException" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile", "testToString" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriterTest" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "appendChar", "appendCharSequence", "appendCharSequence_with_offset", "exceptions_in_append_char", "exceptions_in_append_charSequence", "exceptions_in_append_charSequence_offset", "exceptions_in_close", "exceptions_in_flush", "exceptions_in_write_char_array", "exceptions_in_write_int", "exceptions_in_write_offset_char_array", "exceptions_in_write_string", "exceptions_in_write_string_offset", "nullCharArray", "nullCharSequencec", "nullString", "writeCharArray", "writeCharArrayPartial", "writeInt", "writeString", "writeStringPartial" ]
          }
        }
      }
    },
    "f7a11c99398a05d5bd251538242ac9b231dae7b3" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "70b9170cac5a47f6d55cdced51e94ac9a8fec28a",
      "changedClazzes" : { }
    },
    "d4f28d7ff397386b208823c577180938e15769d3" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "f7a11c99398a05d5bd251538242ac9b231dae7b3",
      "changedClazzes" : {
        "org.apache.commons.io.input.BOMInputStream" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "skipReturnValueWithBom", "skipReturnValueWithoutBom", "testAvailableWithBOM", "testAvailableWithoutBOM", "testClose", "testEmptyBufferWithBOM", "testEmptyBufferWithoutBOM", "testGetBOMFirstThenRead", "testGetBOMFirstThenReadInclude", "testLargeBufferWithBOM", "testLargeBufferWithoutBOM", "testLeadingNonBOMBufferedRead", "testLeadingNonBOMSingleRead", "testMarkResetAfterReadWithBOM", "testMarkResetAfterReadWithoutBOM", "testMarkResetBeforeReadWithBOM", "testMarkResetBeforeReadWithoutBOM", "testNoBoms", "testReadEmpty", "testReadSmall", "testReadTwiceWithBOM", "testReadTwiceWithoutBOM", "testReadWithBOMInclude", "testReadWithBOMUtf16Be", "testReadWithBOMUtf16Le", "testReadWithBOMUtf32Be", "testReadWithBOMUtf32Le", "testReadWithBOMUtf8", "testReadWithMultipleBOM", "testReadWithoutBOM", "testReadXmlWithBOMUcs2", "testReadXmlWithBOMUtf16Be", "testReadXmlWithBOMUtf16Le", "testReadXmlWithBOMUtf32Be", "testReadXmlWithBOMUtf32Le", "testReadXmlWithBOMUtf8", "testReadXmlWithoutBOMUtf32Be", "testReadXmlWithoutBOMUtf32Le", "testSkipWithBOM", "testSkipWithoutBOM", "testSmallBufferWithBOM", "testSmallBufferWithoutBOM" ],
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testEncodingAttributeXML", "testHttp", "testHttpContent", "testRawBomUtf16", "testRawBomUtf32", "testRawBomUtf8", "testRawContent", "testRawNoBomCp1047", "testRawNoBomIso8859_1", "testRawNoBomUsAscii", "testRawNoBomUtf16BE", "testRawNoBomUtf16LE", "testRawNoBomUtf32BE", "testRawNoBomUtf32LE", "testRawNoBomUtf8" ],
            "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testCalculateHttpEncoding", "testCalculateHttpEncodingUtf32", "testCalculateRawEncodingAdditonalUTF16", "testCalculateRawEncodingAdditonalUTF32", "testCalculateRawEncodingNoBOM", "testCalculateRawEncodingStandard", "testCalculateRawEncodingStandardUtf32" ]
          }
        }
      }
    },
    "936b820a4e9b9f96661c961bab87e4ec05ca0574" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "d4f28d7ff397386b208823c577180938e15769d3",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils#readFileToByteArray(java.io.File)" : { }
      }
    },
    "acceb62960971477744f6731bbbc06abbabfe4f3" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "936b820a4e9b9f96661c961bab87e4ec05ca0574",
      "changedClazzes" : { }
    },
    "9990c66690467cf6c08be921947532729b7ee91c" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "acceb62960971477744f6731bbbc06abbabfe4f3",
      "changedClazzes" : { }
    },
    "92a07f9aa109f0f55af963f86e466c80718f9466" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "9990c66690467cf6c08be921947532729b7ee91c",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils#cleanDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testCopyLarge_SkipWithInvalidOffset" ]
          }
        },
        "org.apache.commons.io.FileUtils#deleteDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testCopyLarge_SkipWithInvalidOffset" ]
          }
        },
        "org.apache.commons.io.FileUtils#forceDelete(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testCopyLarge_SkipWithInvalidOffset" ]
          }
        },
        "org.apache.commons.io.FileUtils#isSymlink(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testCopyLarge_SkipWithInvalidOffset" ]
          }
        },
        "org.apache.commons.io.FileUtils#verifiedListFiles(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testCopyLarge_SkipWithInvalidOffset" ]
          }
        },
        "org.apache.commons.io.IOUtils#closeQuietly(java.io.Closeable)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testCopyLarge_SkipWithInvalidOffset" ]
          }
        },
        "org.apache.commons.io.IOUtils#copyLarge(java.io.InputStream,java.io.OutputStream,long,long)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testCopyLarge_SkipWithInvalidOffset" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testAsBufferedInputStream", "testAsBufferedInputStreamWithBufferSize", "testAsBufferedNull", "testAsBufferedOutputStream", "testAsBufferedOutputStreamWithBufferSize", "testAsBufferedReader", "testAsBufferedReaderWithBufferSize", "testAsBufferedWriter", "testAsBufferedWriterWithBufferSize", "testCloseQuietly_AllCloseableIOException", "testCloseQuietly_CloseableIOException", "testCloseQuietly_Selector", "testCloseQuietly_SelectorIOException", "testCloseQuietly_SelectorNull", "testCloseQuietly_SelectorTwice", "testCloseQuietly_ServerSocket", "testCloseQuietly_ServerSocketIOException", "testCloseQuietly_Socket", "testCloseQuietly_SocketIOException", "testConstants", "testContentEqualsIgnoreEOL", "testContentEquals_InputStream_InputStream", "testContentEquals_Reader_Reader", "testCopyLarge_CharExtraLength", "testCopyLarge_CharFullLength", "testCopyLarge_CharNoSkip", "testCopyLarge_CharSkip", "testCopyLarge_CharSkipInvalid", "testCopyLarge_ExtraLength", "testCopyLarge_FullLength", "testCopyLarge_NoSkip", "testCopyLarge_Skip", "testCopyLarge_SkipInvalid", "testCopyLarge_SkipWithInvalidOffset", "testCopy_ByteArray_OutputStream", "testCopy_ByteArray_Writer", "testCopy_String_Writer", "testReadFully_InputStream_ByteArray", "testReadFully_InputStream_Offset", "testReadFully_InputStream__ReturnByteArray", "testReadFully_ReadableByteChannel", "testReadFully_Reader", "testReadFully_Reader_Offset", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testRead_ReadableByteChannel", "testResourceToByteArray_ExistingResourceAtRootPackage", "testResourceToByteArray_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToByteArray_ExistingResourceAtSubPackage", "testResourceToByteArray_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToByteArray_NonExistingResource", "testResourceToByteArray_NonExistingResource_WithClassLoader", "testResourceToByteArray_Null", "testResourceToByteArray_Null_WithClassLoader", "testResourceToString_ExistingResourceAtRootPackage", "testResourceToString_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToString_ExistingResourceAtSubPackage", "testResourceToString_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToString_NonExistingResource", "testResourceToString_NonExistingResource_WithClassLoader", "testResourceToString_NullCharset", "testResourceToString_NullCharset_WithClassLoader", "testResourceToString_NullResource", "testResourceToString_NullResource_WithClassLoader", "testResourceToURL_ExistingResourceAtRootPackage", "testResourceToURL_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToURL_ExistingResourceAtSubPackage", "testResourceToURL_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToURL_NonExistingResource", "testResourceToURL_NonExistingResource_WithClassLoader", "testResourceToURL_Null", "testResourceToURL_Null_WithClassLoader", "testSkipFully_InputStream", "testSkipFully_ReadableByteChannel", "testSkipFully_Reader", "testSkip_FileReader", "testSkip_InputStream", "testSkip_ReadableByteChannel", "testStringToOutputStream", "testToBufferedInputStreamWithBufferSize_InputStream", "testToBufferedInputStream_InputStream", "testToByteArray_InputStream", "testToByteArray_InputStream_NegativeSize", "testToByteArray_InputStream_Size", "testToByteArray_InputStream_SizeIllegal", "testToByteArray_InputStream_SizeLong", "testToByteArray_InputStream_SizeZero", "testToByteArray_Reader", "testToByteArray_String", "testToByteArray_URI", "testToByteArray_URL", "testToByteArray_URLConnection", "testToCharArray_InputStream", "testToCharArray_InputStream_CharsetName", "testToCharArray_Reader", "testToInputStream_CharSequence", "testToInputStream_String", "testToString_ByteArray", "testToString_InputStream", "testToString_Reader", "testToString_URI", "testToString_URI_CharsetName", "testToString_URI_CharsetNameNull", "testToString_URL", "testToString_URL_CharsetName", "testToString_URL_CharsetNameNull" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#setUp" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testCopyLarge_SkipWithInvalidOffset" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#tearDown" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testCopyLarge_SkipWithInvalidOffset" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testCopyLarge_SkipWithInvalidOffset" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testCopyLarge_SkipWithInvalidOffset" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#<init>(int)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testCopyLarge_SkipWithInvalidOffset" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#close" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testCopyLarge_SkipWithInvalidOffset" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#toString" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testCopyLarge_SkipWithInvalidOffset" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#write(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testCopyLarge_SkipWithInvalidOffset" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase#getTestDirectory" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testCopyLarge_SkipWithInvalidOffset" ]
          }
        },
        "org.apache.commons.io.testtools.TestUtils#generateTestData(org.apache.commons.io.testtools.OutputStream,long)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testCopyLarge_SkipWithInvalidOffset" ]
          }
        }
      }
    },
    "5899f1eb7239ea26291b9e38490f5922b86158d8" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "92a07f9aa109f0f55af963f86e466c80718f9466",
      "changedClazzes" : {
        "org.apache.commons.io.FileSystemUtils#freeSpaceWindows(java.lang.String,long)" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpaceWindows_String_quoted" ]
          }
        }
      }
    },
    "733dc26a281e235d52c965b6053a4e16bd4f85de" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "5899f1eb7239ea26291b9e38490f5922b86158d8",
      "changedClazzes" : { }
    },
    "46a2c6bebe30989d51d59e14def38a82e8edfd78" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "733dc26a281e235d52c965b6053a4e16bd4f85de",
      "changedClazzes" : {
        "org.apache.commons.io.input.BOMInputStream#hasBOM(org.apache.commons.io.ByteOrderMark)" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testGetBOMFirstThenRead", "testGetBOMFirstThenReadInclude", "testReadEmpty", "testReadSmall", "testReadWithBOMInclude", "testReadWithBOMUtf16Be", "testReadWithBOMUtf16Le", "testReadWithBOMUtf32Be", "testReadWithBOMUtf32Le", "testReadWithBOMUtf8", "testReadWithMultipleBOM", "testReadWithoutBOM" ]
          }
        }
      }
    },
    "9543f75f4601278abcfd0a16cfea977399b89052" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "46a2c6bebe30989d51d59e14def38a82e8edfd78",
      "changedClazzes" : { }
    },
    "5f88079956ba7fc4551a5fc51dc28d82e33dc65f" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "9543f75f4601278abcfd0a16cfea977399b89052",
      "changedClazzes" : {
        "org.apache.commons.io.ByteOrderMarkTestCase" : {
          "testcases" : {
            "org.apache.commons.io.ByteOrderMarkTestCase" : [ "charsetName", "constantCharsetNames", "errors", "get", "getBytes", "testEquals", "testHashCode", "testLength", "testToString" ]
          }
        },
        "org.apache.commons.io.ByteOrderParser" : { },
        "org.apache.commons.io.ByteOrderParser#parseByteOrder(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.ByteOrderParserTest" : [ "testParseBig", "testParseLittle", "testThrowsException" ]
          }
        },
        "org.apache.commons.io.ByteOrderParserTest" : {
          "testcases" : {
            "org.apache.commons.io.ByteOrderParserTest" : [ "testParseBig", "testParseLittle", "testThrowsException" ]
          }
        },
        "org.apache.commons.io.ByteOrderParserTest#parseByteOrder(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.ByteOrderParserTest" : [ "testParseBig", "testParseLittle", "testThrowsException" ]
          }
        },
        "org.apache.commons.io.ByteOrderParserTest#testParseBig" : {
          "testcases" : {
            "org.apache.commons.io.ByteOrderParserTest" : [ "testParseBig" ]
          }
        },
        "org.apache.commons.io.ByteOrderParserTest#testParseLittle" : {
          "testcases" : {
            "org.apache.commons.io.ByteOrderParserTest" : [ "testParseLittle" ]
          }
        },
        "org.apache.commons.io.ByteOrderParserTest#testThrowsException" : {
          "testcases" : {
            "org.apache.commons.io.ByteOrderParserTest" : [ "testThrowsException" ]
          }
        },
        "org.apache.commons.io.Charsets#toCharset(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnNullChecksum", "testContentEqualsIgnoreEOL", "testCopyDirectoryFiltered", "testCopyDirectoryPreserveDates", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testFileUtils", "testReadFileToStringWithDefaultEncoding", "testReadFileToStringWithEncoding", "testReadLines", "testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_3arg_nullSeparator", "testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_4arg", "testWriteLines_4arg_nullSeparator", "testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile1", "testWriteStringToFile2", "testWriteStringToFile3", "testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.CopyUtilsTest" : {
          "testcases" : {
            "org.apache.commons.io.CopyUtilsTest" : [ "copy_byteArrayToOutputStream", "copy_byteArrayToWriter", "copy_inputStreamToWriter", "copy_inputStreamToWriterWithEncoding", "copy_readerToWriter", "copy_stringToOutputStream", "copy_stringToWriter", "testCopy_byteArrayToWriterWithEncoding", "testCopy_inputStreamToOutputStream", "testCopy_readerToOutputStream", "testCtor" ]
          }
        },
        "org.apache.commons.io.DemuxTestCase#doJoin" : {
          "testcases" : {
            "org.apache.commons.io.DemuxTestCase" : [ "testInputStream", "testOutputStream" ]
          }
        },
        "org.apache.commons.io.DemuxTestCase#doStart" : {
          "testcases" : {
            "org.apache.commons.io.DemuxTestCase" : [ "testInputStream", "testOutputStream" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker#checkIfCancelled(java.io.File,int,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToGrandChild", "testCopyDirectoryToItself" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker#filterDirectoryContents(java.io.File,int,java.io.File[])" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToGrandChild", "testCopyDirectoryToItself" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker#handleDirectory(java.io.File,int,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToGrandChild", "testCopyDirectoryToItself" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker#handleDirectoryEnd(java.io.File,int,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToGrandChild", "testCopyDirectoryToItself" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker#handleEnd(java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToGrandChild", "testCopyDirectoryToItself" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker#handleIsCancelled(java.io.File,int,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToGrandChild", "testCopyDirectoryToItself" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker#handleStart(java.io.File,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToGrandChild", "testCopyDirectoryToItself" ]
          }
        },
        "org.apache.commons.io.DirectoryWalker#walk(java.io.File,int,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToGrandChild", "testCopyDirectoryToItself" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCase" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testCancel", "testFilter", "testFilterAndLimitA", "testFilterAndLimitB", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile2", "testFilterDirAndFile3", "testFilterDirAndFile4", "testFilterString", "testHandleStartDirectoryFalse", "testLimitToCurrent", "testMissingStartDirectory", "testMultiThreadCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCase$TestCancelWalker" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCase$TestFalseFileFinder" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testHandleStartDirectoryFalse" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilter", "testFilterAndLimitA", "testFilterAndLimitB", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile2", "testFilterDirAndFile3", "testFilterDirAndFile4", "testHandleStartDirectoryFalse", "testLimitToCurrent", "testMissingStartDirectory" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinderString" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilterString" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCase$TestMultiThreadCancelWalker" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testMultiThreadCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testCancel", "testFilter", "testFilterAndLimitA", "testFilterAndLimitB", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile2", "testFilterDirAndFile3", "testFilterDirAndFile4", "testHandleStartDirectoryFalse", "testLimitToCurrent", "testMissingStartDirectory", "testMultiThreadCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestCancelWalker" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testCancel" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFalseFileFinder" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testHandleStartDirectoryFalse" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFileFinder" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testFilter", "testFilterAndLimitA", "testFilterAndLimitB", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile2", "testFilterDirAndFile3", "testFilterDirAndFile4", "testHandleStartDirectoryFalse", "testLimitToCurrent", "testMissingStartDirectory" ]
          }
        },
        "org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestMultiThreadCancelWalker" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testMultiThreadCancel" ]
          }
        },
        "org.apache.commons.io.EndianUtilsTest" : {
          "testcases" : {
            "org.apache.commons.io.EndianUtilsTest" : [ "testCtor", "testEOFException", "testReadSwappedDouble", "testReadSwappedFloat", "testReadSwappedInteger", "testReadSwappedLong", "testReadSwappedShort", "testReadSwappedUnsignedInteger", "testReadSwappedUnsignedShort", "testSwapDouble", "testSwapFloat", "testSwapInteger", "testSwapLong", "testSwapShort", "testSymmetry", "testSymmetryOfLong", "testUnsignedOverrun", "testWriteSwappedDouble", "testWriteSwappedFloat", "testWriteSwappedInteger", "testWriteSwappedLong", "testWriteSwappedShort" ]
          }
        },
        "org.apache.commons.io.FileCleaningTrackerTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerFile", "testFileCleanerNull" ]
          }
        },
        "org.apache.commons.io.FileDeleteStrategyTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce", "testDeleteNormal", "testDeleteNull", "testDeleteQuietlyNormal", "testToString" ]
          }
        },
        "org.apache.commons.io.FileExistsException#<init>(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveDirectory_Errors", "testMoveFile_Errors" ]
          }
        },
        "org.apache.commons.io.FileSystemUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceOS_String_InitError", "testGetFreeSpaceOS_String_NullPath", "testGetFreeSpaceOS_String_Other", "testGetFreeSpaceOS_String_Unix", "testGetFreeSpaceOS_String_Windows", "testGetFreeSpaceUnix_String_EmptyPath", "testGetFreeSpaceUnix_String_EmptyResponse", "testGetFreeSpaceUnix_String_InvalidResponse1", "testGetFreeSpaceUnix_String_InvalidResponse2", "testGetFreeSpaceUnix_String_InvalidResponse3", "testGetFreeSpaceUnix_String_InvalidResponse4", "testGetFreeSpaceUnix_String_LongResponse", "testGetFreeSpaceUnix_String_LongResponseKb", "testGetFreeSpaceUnix_String_NormalResponseFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbLinux", "testGetFreeSpaceUnix_String_NormalResponseKbSolaris", "testGetFreeSpaceUnix_String_NormalResponseLinux", "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpaceWindows_String_quoted", "testGetFreeSpace_String" ]
          }
        },
        "org.apache.commons.io.FileSystemUtilsTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceOS_String_InitError", "testGetFreeSpaceOS_String_NullPath", "testGetFreeSpaceOS_String_Other", "testGetFreeSpaceOS_String_Unix", "testGetFreeSpaceOS_String_Windows", "testGetFreeSpaceUnix_String_EmptyPath", "testGetFreeSpaceUnix_String_EmptyResponse", "testGetFreeSpaceUnix_String_InvalidResponse1", "testGetFreeSpaceUnix_String_InvalidResponse2", "testGetFreeSpaceUnix_String_InvalidResponse3", "testGetFreeSpaceUnix_String_InvalidResponse4", "testGetFreeSpaceUnix_String_LongResponse", "testGetFreeSpaceUnix_String_LongResponseKb", "testGetFreeSpaceUnix_String_NormalResponseFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbLinux", "testGetFreeSpaceUnix_String_NormalResponseKbSolaris", "testGetFreeSpaceUnix_String_NormalResponseLinux", "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpaceWindows_String_quoted", "testGetFreeSpace_String" ]
          }
        },
        "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceUnix_String_EmptyPath", "testGetFreeSpaceUnix_String_EmptyResponse", "testGetFreeSpaceUnix_String_InvalidResponse1", "testGetFreeSpaceUnix_String_InvalidResponse2", "testGetFreeSpaceUnix_String_InvalidResponse3", "testGetFreeSpaceUnix_String_InvalidResponse4", "testGetFreeSpaceUnix_String_LongResponse", "testGetFreeSpaceUnix_String_LongResponseKb", "testGetFreeSpaceUnix_String_NormalResponseFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbLinux", "testGetFreeSpaceUnix_String_NormalResponseKbSolaris", "testGetFreeSpaceUnix_String_NormalResponseLinux", "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpaceWindows_String_quoted" ]
          }
        },
        "org.apache.commons.io.FileUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerNull" ],
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce", "testDeleteNormal", "testDeleteNull", "testDeleteQuietlyNormal", "testToString" ],
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testCleanEmpty", "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile", "testThrowsOnNullList" ],
            "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" : [ "testCleanDirWithASymlinkDir", "testCleanDirWithParentSymlinks", "testCleanDirWithSymlinkFile", "testCorrectlyIdentifySymlinkWithParentSymLink", "testIdentifiesBrokenSymlinkFile", "testIdentifiesSymlinkDir", "testIdentifiesSymlinkFile", "testStillClearsIfGivenDirectoryIsASymlink" ],
            "org.apache.commons.io.FileUtilsDirectoryContainsTestCase" : [ "testCanonicalPath", "testDirectoryContainsDirectory", "testDirectoryContainsFile", "testDirectoryDoesNotContainFile", "testDirectoryDoesNotContainsDirectory", "testDirectoryDoesNotExist", "testFileDoesNotExist", "testFileDoesNotExistBug", "testIO466", "testSameFile", "testUnrealizedContainment" ],
            "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension", "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsWaitForTestCase" : [ "testWaitFor", "testWaitForInterrupted" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedError_IO_128", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetBaseName_with_nullByte", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetFullPathNoEndSeparator_IO_248", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPathNoEndSeparator_with_null_byte", "testGetPath_with_nullbyte", "testGetPrefix", "testGetPrefixLength", "testGetPrefix_with_nullbyte", "testIndexOfExtension", "testIndexOfLastSeparator", "testInjectionFailure", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testIsExtension_injection", "testNormalize", "testNormalizeNoEndSeparator", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin", "testNormalize_with_nullbytes", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testAsBufferedInputStream", "testAsBufferedInputStreamWithBufferSize", "testAsBufferedNull", "testAsBufferedOutputStream", "testAsBufferedOutputStreamWithBufferSize", "testAsBufferedReader", "testAsBufferedReaderWithBufferSize", "testAsBufferedWriter", "testAsBufferedWriterWithBufferSize", "testCloseQuietly_AllCloseableIOException", "testCloseQuietly_CloseableIOException", "testCloseQuietly_Selector", "testCloseQuietly_SelectorIOException", "testCloseQuietly_SelectorNull", "testCloseQuietly_SelectorTwice", "testCloseQuietly_ServerSocket", "testCloseQuietly_ServerSocketIOException", "testCloseQuietly_Socket", "testCloseQuietly_SocketIOException", "testConstants", "testContentEqualsIgnoreEOL", "testContentEquals_InputStream_InputStream", "testContentEquals_Reader_Reader", "testCopyLarge_CharExtraLength", "testCopyLarge_CharFullLength", "testCopyLarge_CharNoSkip", "testCopyLarge_CharSkip", "testCopyLarge_CharSkipInvalid", "testCopyLarge_ExtraLength", "testCopyLarge_FullLength", "testCopyLarge_NoSkip", "testCopyLarge_Skip", "testCopyLarge_SkipInvalid", "testCopyLarge_SkipWithInvalidOffset", "testCopy_ByteArray_OutputStream", "testCopy_ByteArray_Writer", "testCopy_String_Writer", "testReadFully_InputStream_ByteArray", "testReadFully_InputStream_Offset", "testReadFully_InputStream__ReturnByteArray", "testReadFully_ReadableByteChannel", "testReadFully_Reader", "testReadFully_Reader_Offset", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testRead_ReadableByteChannel", "testResourceToByteArray_ExistingResourceAtRootPackage", "testResourceToByteArray_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToByteArray_ExistingResourceAtSubPackage", "testResourceToByteArray_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToByteArray_NonExistingResource", "testResourceToByteArray_NonExistingResource_WithClassLoader", "testResourceToByteArray_Null", "testResourceToByteArray_Null_WithClassLoader", "testResourceToString_ExistingResourceAtRootPackage", "testResourceToString_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToString_ExistingResourceAtSubPackage", "testResourceToString_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToString_NonExistingResource", "testResourceToString_NonExistingResource_WithClassLoader", "testResourceToString_NullCharset", "testResourceToString_NullCharset_WithClassLoader", "testResourceToString_NullResource", "testResourceToString_NullResource_WithClassLoader", "testResourceToURL_ExistingResourceAtRootPackage", "testResourceToURL_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToURL_ExistingResourceAtSubPackage", "testResourceToURL_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToURL_NonExistingResource", "testResourceToURL_NonExistingResource_WithClassLoader", "testResourceToURL_Null", "testResourceToURL_Null_WithClassLoader", "testSkipFully_InputStream", "testSkipFully_ReadableByteChannel", "testSkipFully_Reader", "testSkip_FileReader", "testSkip_InputStream", "testSkip_ReadableByteChannel", "testStringToOutputStream", "testToBufferedInputStreamWithBufferSize_InputStream", "testToBufferedInputStream_InputStream", "testToByteArray_InputStream", "testToByteArray_InputStream_NegativeSize", "testToByteArray_InputStream_Size", "testToByteArray_InputStream_SizeIllegal", "testToByteArray_InputStream_SizeLong", "testToByteArray_InputStream_SizeZero", "testToByteArray_Reader", "testToByteArray_String", "testToByteArray_URI", "testToByteArray_URL", "testToByteArray_URLConnection", "testToCharArray_InputStream", "testToCharArray_InputStream_CharsetName", "testToCharArray_Reader", "testToInputStream_CharSequence", "testToInputStream_String", "testToString_ByteArray", "testToString_InputStream", "testToString_Reader", "testToString_URI", "testToString_URI_CharsetName", "testToString_URI_CharsetNameNull", "testToString_URL", "testToString_URL_CharsetName", "testToString_URL_CharsetNameNull" ],
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFilteringBufferedReader", "testFilteringFileReader", "testInvalidEncoding", "testMissingFile", "testNextLineOnlyDefaultEncoding", "testNextLineOnlyNullEncoding", "testNextLineOnlyUtf8Encoding", "testNextOnly", "testNextWithException", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "constructorArray_Null", "constructorIterable_Null", "constructorIterable_order" ],
            "org.apache.commons.io.comparator.DirectoryFileComparatorTest" : [ "testSortArray" ],
            "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.NameFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.PathFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testAnd", "testCanRead", "testCanWrite", "testDelegateFileFilter", "testDelegation", "testDeprecatedWildcard", "testDirectory", "testEmpty", "testEnsureTestCoverage", "testFalse", "testFileFilterUtils_and", "testFileFilterUtils_or", "testFiles", "testFilterArray", "testFilterArrayNullParameters", "testFilterArray_fromList", "testFilterList", "testFilterListNullParameters", "testFilterList_fromArray", "testFilterSet", "testFilterSetNullParameters", "testFilterSet_fromArray", "testHidden", "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset", "testMagicNumberFileFilterValidation", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNameFilterNullArrayArgument", "testNameFilterNullListArgument", "testNot", "testNullFilters", "testOr", "testPrefix", "testPrefixCaseInsensitive", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testTrue", "testWildcard" ],
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ],
            "org.apache.commons.io.input.TailerTest" : [ "testBufferBreak", "testIO335", "testInterrupt", "testLongFile", "testMultiByteBreak", "testStopWithNoFile", "testStopWithNoFileUsingExecutor", "testTailer", "testTailerEndOfFileReached", "testTailerEof" ],
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor", "testMonitor", "testThreadFactory" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile", "testToString" ],
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 1)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 1.024)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 128)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 16)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 2)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 2.048)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 256)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 32)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 4)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 4.096)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 512)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 64)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 8)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 1)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 1.024)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 128)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 16)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 2)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 2.048)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 256)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 32)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 4)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 4.096)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 512)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 64)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 8)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 1)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 1.024)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 128)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 16)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 2)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 2.048)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 256)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 32)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 4)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 4.096)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 512)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 64)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 8)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 1)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 1.024)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 128)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 16)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 2)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 2.048)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 256)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 32)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 4)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 4.096)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 512)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 64)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 8)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 1)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 1.024)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 128)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 16)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 2)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 2.048)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 256)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 32)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 4)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 4.096)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 512)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 64)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 8)" ],
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "constructor_File_directory", "constructor_File_encoding_badEncoding", "constructor_File_nullFile", "constructor_fileName_nullFile", "sameEncoding_CharsetEncoder_constructor", "sameEncoding_Charset_constructor", "sameEncoding_null_Charset_constructor", "sameEncoding_string_CharsetEncoder_constructor", "sameEncoding_string_Charset_constructor", "sameEncoding_string_constructor", "sameEncoding_string_string_constructor", "testDifferentEncoding" ],
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testConstructor_fileName_nullFile", "testFileLocked", "testFileNotLocked" ]
          }
        },
        "org.apache.commons.io.FileUtils#byteCountToDisplaySize(java.math.BigInteger)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySizeBigInteger", "testByteCountToDisplaySizeLong" ]
          }
        },
        "org.apache.commons.io.FileUtils#checkDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testSizeOfDirectory", "testSizeOfDirectoryAsBigInteger" ]
          }
        },
        "org.apache.commons.io.FileUtils#checkFileRequirements(java.io.File,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryPreserveDates", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToItself", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToDirectoryWithDirectory", "testCopyToDirectoryWithFile", "testCopyToDirectoryWithIterable", "testCopyToDirectoryWithIterableSourceDoesNotExist", "testCopyToSelf", "testIncorrectOutputSize", "testMoveDirectory_CopyDelete", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed" ]
          }
        },
        "org.apache.commons.io.FileUtils#checksum(java.io.File,java.util.zip.Checksum)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile" ]
          }
        },
        "org.apache.commons.io.FileUtils#checksumCRC32(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testChecksumCRC32" ]
          }
        },
        "org.apache.commons.io.FileUtils#cleanDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySizeBigInteger", "testByteCountToDisplaySizeLong", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testCompareSizeOf", "testContentEquals", "testContentEqualsIgnoreEOL", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryPreserveDates", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToItself", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyFileToOutputStream", "testCopyToDirectoryWithDirectory", "testCopyToDirectoryWithFile", "testCopyToDirectoryWithFileSourceDoesNotExist", "testCopyToDirectoryWithFileSourceIsNull", "testCopyToDirectoryWithIterable", "testCopyToDirectoryWithIterableSourceDoesNotExist", "testCopyToDirectoryWithIterableSourceIsNull", "testCopyToSelf", "testCopyURLToFile", "testCopyURLToFileWithTimeout", "testDecodeUrl", "testDecodeUrlEncodingUtf8", "testDecodeUrlLenient", "testDecodeUrlNullSafe", "testDeleteDirectoryWithNonDirectory", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testForceMkdirParent", "testGetFile", "testGetFile_Parent", "testGetTempDirectory", "testGetTempDirectoryPath", "testGetUserDirectory", "testGetUserDirectoryPath", "testIO276", "testIO300", "testIncorrectOutputSize", "testIsFileNewerOlder", "testIterateFiles", "testIterateFilesAndDirs", "testListFiles", "testListFilesWithDirs", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToStringWithDefaultEncoding", "testReadFileToStringWithEncoding", "testReadLines", "testSizeOf", "testSizeOfAsBigInteger", "testSizeOfDirectory", "testSizeOfDirectoryAsBigInteger", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFile5", "testToFileUtf8", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles3a", "testToFiles4", "testToURLs1", "testToURLs3a", "testTouch", "testWriteByteArrayToFile", "testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteByteArrayToFile_WithOffsetAndLength", "testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_3arg_nullSeparator", "testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile1", "testWriteStringToFile2", "testWriteStringToFile3", "testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ]
          }
        },
        "org.apache.commons.io.FileUtils#cleanDirectoryOnExit(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIO276" ]
          }
        },
        "org.apache.commons.io.FileUtils#contentEquals(java.io.File,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testContentEquals", "testContentEqualsIgnoreEOL" ]
          }
        },
        "org.apache.commons.io.FileUtils#contentEqualsIgnoreEOL(java.io.File,java.io.File,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testContentEqualsIgnoreEOL" ]
          }
        },
        "org.apache.commons.io.FileUtils#copyDirectory(java.io.File,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryPreserveDates", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToItself", "testCopyDirectoryToNonExistingDest", "testCopyToDirectoryWithDirectory", "testMoveDirectory_CopyDelete" ]
          }
        },
        "org.apache.commons.io.FileUtils#copyDirectoryToDirectory(java.io.File,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToItself", "testCopyToDirectoryWithDirectory" ]
          }
        },
        "org.apache.commons.io.FileUtils#copyFile(java.io.File,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyFileToOutputStream" ]
          }
        },
        "org.apache.commons.io.FileUtils#copyFileToDirectory(java.io.File,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyFile1ToDir", "testCopyFile2ToDir", "testCopyToDirectoryWithDirectory", "testCopyToDirectoryWithFile", "testCopyToDirectoryWithIterable", "testCopyToDirectoryWithIterableSourceDoesNotExist" ]
          }
        },
        "org.apache.commons.io.FileUtils#copyInputStreamToFile(java.io.InputStream,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testContentEquals", "testCopyURLToFile", "testCopyURLToFileWithTimeout" ]
          }
        },
        "org.apache.commons.io.FileUtils#copyToDirectory(java.io.File,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyToDirectoryWithIterable", "testCopyToDirectoryWithIterableSourceDoesNotExist", "testCopyToDirectoryWithIterableSourceIsNull" ]
          }
        },
        "org.apache.commons.io.FileUtils#copyToFile(java.io.InputStream,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testContentEquals", "testCopyURLToFile", "testCopyURLToFileWithTimeout" ]
          }
        },
        "org.apache.commons.io.FileUtils#copyURLToFile(java.net.URL,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyURLToFileWithTimeout" ]
          }
        },
        "org.apache.commons.io.FileUtils#decodeUrl(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testDecodeUrl", "testDecodeUrlEncodingUtf8", "testDecodeUrlLenient", "testDecodeUrlNullSafe", "testToFile1", "testToFile2", "testToFile4", "testToFile5", "testToFileUtf8", "testToFiles1", "testToFiles2", "testToFiles4" ]
          }
        },
        "org.apache.commons.io.FileUtils#deleteDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySizeBigInteger", "testByteCountToDisplaySizeLong", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testCompareSizeOf", "testContentEquals", "testContentEqualsIgnoreEOL", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryPreserveDates", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToItself", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyFileToOutputStream", "testCopyToDirectoryWithDirectory", "testCopyToDirectoryWithFile", "testCopyToDirectoryWithFileSourceDoesNotExist", "testCopyToDirectoryWithFileSourceIsNull", "testCopyToDirectoryWithIterable", "testCopyToDirectoryWithIterableSourceDoesNotExist", "testCopyToDirectoryWithIterableSourceIsNull", "testCopyToSelf", "testCopyURLToFile", "testCopyURLToFileWithTimeout", "testDecodeUrl", "testDecodeUrlEncodingUtf8", "testDecodeUrlLenient", "testDecodeUrlNullSafe", "testDeleteDirectoryWithNonDirectory", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testForceMkdirParent", "testGetFile", "testGetFile_Parent", "testGetTempDirectory", "testGetTempDirectoryPath", "testGetUserDirectory", "testGetUserDirectoryPath", "testIO276", "testIO300", "testIncorrectOutputSize", "testIsFileNewerOlder", "testIterateFiles", "testIterateFilesAndDirs", "testListFiles", "testListFilesWithDirs", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToStringWithDefaultEncoding", "testReadFileToStringWithEncoding", "testReadLines", "testSizeOf", "testSizeOfAsBigInteger", "testSizeOfDirectory", "testSizeOfDirectoryAsBigInteger", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFile5", "testToFileUtf8", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles3a", "testToFiles4", "testToURLs1", "testToURLs3a", "testTouch", "testWriteByteArrayToFile", "testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteByteArrayToFile_WithOffsetAndLength", "testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_3arg_nullSeparator", "testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile1", "testWriteStringToFile2", "testWriteStringToFile3", "testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ]
          }
        },
        "org.apache.commons.io.FileUtils#deleteDirectoryOnExit(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIO276" ]
          }
        },
        "org.apache.commons.io.FileUtils#deleteQuietly(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testMoveFile_CopyDelete_Failed" ]
          }
        },
        "org.apache.commons.io.FileUtils#doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryPreserveDates", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToItself", "testCopyDirectoryToNonExistingDest", "testCopyToDirectoryWithDirectory", "testMoveDirectory_CopyDelete" ]
          }
        },
        "org.apache.commons.io.FileUtils#doCopyFile(java.io.File,java.io.File,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered", "testCopyDirectoryPreserveDates", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyToDirectoryWithDirectory", "testCopyToDirectoryWithFile", "testCopyToDirectoryWithIterable", "testCopyToSelf", "testIncorrectOutputSize", "testMoveDirectory_CopyDelete", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed" ]
          }
        },
        "org.apache.commons.io.FileUtils#forceDelete(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySizeBigInteger", "testByteCountToDisplaySizeLong", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testCompareSizeOf", "testContentEquals", "testContentEqualsIgnoreEOL", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryPreserveDates", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToItself", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyFileToOutputStream", "testCopyToDirectoryWithDirectory", "testCopyToDirectoryWithFile", "testCopyToDirectoryWithFileSourceDoesNotExist", "testCopyToDirectoryWithFileSourceIsNull", "testCopyToDirectoryWithIterable", "testCopyToDirectoryWithIterableSourceDoesNotExist", "testCopyToDirectoryWithIterableSourceIsNull", "testCopyToSelf", "testCopyURLToFile", "testCopyURLToFileWithTimeout", "testDecodeUrl", "testDecodeUrlEncodingUtf8", "testDecodeUrlLenient", "testDecodeUrlNullSafe", "testDeleteDirectoryWithNonDirectory", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testForceMkdirParent", "testGetFile", "testGetFile_Parent", "testGetTempDirectory", "testGetTempDirectoryPath", "testGetUserDirectory", "testGetUserDirectoryPath", "testIO276", "testIO300", "testIncorrectOutputSize", "testIsFileNewerOlder", "testIterateFiles", "testIterateFilesAndDirs", "testListFiles", "testListFilesWithDirs", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToStringWithDefaultEncoding", "testReadFileToStringWithEncoding", "testReadLines", "testSizeOf", "testSizeOfAsBigInteger", "testSizeOfDirectory", "testSizeOfDirectoryAsBigInteger", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFile5", "testToFileUtf8", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles3a", "testToFiles4", "testToURLs1", "testToURLs3a", "testTouch", "testWriteByteArrayToFile", "testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteByteArrayToFile_WithOffsetAndLength", "testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_3arg_nullSeparator", "testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile1", "testWriteStringToFile2", "testWriteStringToFile3", "testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ]
          }
        },
        "org.apache.commons.io.FileUtils#forceDeleteOnExit(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIO276" ]
          }
        },
        "org.apache.commons.io.FileUtils#forceMkdir(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testForceMkdir", "testForceMkdirParent" ]
          }
        },
        "org.apache.commons.io.FileUtils#forceMkdirParent(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testForceMkdirParent" ]
          }
        },
        "org.apache.commons.io.FileUtils#getFile(java.io.File,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testGetFile" ]
          }
        },
        "org.apache.commons.io.FileUtils#getTempDirectory" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testGetTempDirectory" ]
          }
        },
        "org.apache.commons.io.FileUtils#getTempDirectoryPath" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testGetTempDirectory", "testGetTempDirectoryPath" ]
          }
        },
        "org.apache.commons.io.FileUtils#getUserDirectory" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testGetUserDirectory" ]
          }
        },
        "org.apache.commons.io.FileUtils#getUserDirectoryPath" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testGetUserDirectory", "testGetUserDirectoryPath" ]
          }
        },
        "org.apache.commons.io.FileUtils#innerListFiles(java.util.Collection,java.io.File,org.apache.commons.io.filefilter.IOFileFilter,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testIterateFilesAndDirs", "testListFiles", "testListFilesWithDirs" ]
          }
        },
        "org.apache.commons.io.FileUtils#isFileNewer(java.io.File,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIsFileNewerOlder" ]
          }
        },
        "org.apache.commons.io.FileUtils#isFileOlder(java.io.File,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIsFileNewerOlder" ]
          }
        },
        "org.apache.commons.io.FileUtils#isSymlink(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySizeBigInteger", "testByteCountToDisplaySizeLong", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testCompareSizeOf", "testContentEquals", "testContentEqualsIgnoreEOL", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryPreserveDates", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToItself", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyFileToOutputStream", "testCopyToDirectoryWithDirectory", "testCopyToDirectoryWithFile", "testCopyToDirectoryWithFileSourceDoesNotExist", "testCopyToDirectoryWithFileSourceIsNull", "testCopyToDirectoryWithIterable", "testCopyToDirectoryWithIterableSourceDoesNotExist", "testCopyToDirectoryWithIterableSourceIsNull", "testCopyToSelf", "testCopyURLToFile", "testCopyURLToFileWithTimeout", "testDecodeUrl", "testDecodeUrlEncodingUtf8", "testDecodeUrlLenient", "testDecodeUrlNullSafe", "testDeleteDirectoryWithNonDirectory", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testForceMkdirParent", "testGetFile", "testGetFile_Parent", "testGetTempDirectory", "testGetTempDirectoryPath", "testGetUserDirectory", "testGetUserDirectoryPath", "testIO276", "testIO300", "testIncorrectOutputSize", "testIsFileNewerOlder", "testIterateFiles", "testIterateFilesAndDirs", "testListFiles", "testListFilesWithDirs", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToStringWithDefaultEncoding", "testReadFileToStringWithEncoding", "testReadLines", "testSizeOf", "testSizeOfAsBigInteger", "testSizeOfDirectory", "testSizeOfDirectoryAsBigInteger", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFile5", "testToFileUtf8", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles3a", "testToFiles4", "testToURLs1", "testToURLs3a", "testTouch", "testWriteByteArrayToFile", "testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteByteArrayToFile_WithOffsetAndLength", "testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_3arg_nullSeparator", "testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile1", "testWriteStringToFile2", "testWriteStringToFile3", "testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ]
          }
        },
        "org.apache.commons.io.FileUtils#iterateFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles" ]
          }
        },
        "org.apache.commons.io.FileUtils#iterateFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFilesAndDirs" ]
          }
        },
        "org.apache.commons.io.FileUtils#listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testListFiles" ]
          }
        },
        "org.apache.commons.io.FileUtils#listFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFilesAndDirs", "testListFilesWithDirs" ]
          }
        },
        "org.apache.commons.io.FileUtils#moveDirectory(java.io.File,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIO300", "testMoveDirectoryToDirectory", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveToDirectory" ]
          }
        },
        "org.apache.commons.io.FileUtils#moveDirectoryToDirectory(java.io.File,java.io.File,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIO300", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveToDirectory", "testMoveToDirectory_Errors" ]
          }
        },
        "org.apache.commons.io.FileUtils#moveFile(java.io.File,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveFileToDirectory", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory" ]
          }
        },
        "org.apache.commons.io.FileUtils#moveFileToDirectory(java.io.File,java.io.File,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveToDirectory" ]
          }
        },
        "org.apache.commons.io.FileUtils#moveToDirectory(java.io.File,java.io.File,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveToDirectory", "testMoveToDirectory_Errors" ]
          }
        },
        "org.apache.commons.io.FileUtils#openInputStream(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyFileToOutputStream", "testFileUtils", "testReadFileToByteArray", "testReadFileToStringWithDefaultEncoding", "testReadFileToStringWithEncoding", "testReadLines", "testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_3arg_nullSeparator", "testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_4arg", "testWriteLines_4arg_nullSeparator", "testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists" ]
          }
        },
        "org.apache.commons.io.FileUtils#openOutputStream(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnNullChecksum", "testContentEquals", "testContentEqualsIgnoreEOL", "testCopyDirectoryFiltered", "testCopyDirectoryPreserveDates", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testCopyURLToFile", "testCopyURLToFileWithTimeout", "testFileUtils", "testTouch", "testWriteByteArrayToFile", "testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteByteArrayToFile_WithOffsetAndLength", "testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_3arg_nullSeparator", "testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile1", "testWriteStringToFile2", "testWriteStringToFile3", "testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ]
          }
        },
        "org.apache.commons.io.FileUtils#readFileToByteArray(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyFileToOutputStream", "testReadFileToByteArray" ]
          }
        },
        "org.apache.commons.io.FileUtils#readFileToString(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testFileUtils", "testReadFileToStringWithDefaultEncoding", "testReadFileToStringWithEncoding", "testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_3arg_nullSeparator", "testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_4arg", "testWriteLines_4arg_nullSeparator", "testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.FileUtils#readLines(java.io.File,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testReadLines" ]
          }
        },
        "org.apache.commons.io.FileUtils#setUpEffectiveDirFilter(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testIterateFilesAndDirs", "testListFiles", "testListFilesWithDirs" ]
          }
        },
        "org.apache.commons.io.FileUtils#setUpEffectiveFileFilter(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testIterateFilesAndDirs", "testListFiles", "testListFilesWithDirs" ]
          }
        },
        "org.apache.commons.io.FileUtils#sizeOf(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCompareSizeOf", "testSizeOf" ]
          }
        },
        "org.apache.commons.io.FileUtils#sizeOf0(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCompareSizeOf", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testSizeOf" ]
          }
        },
        "org.apache.commons.io.FileUtils#sizeOfAsBigInteger(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCompareSizeOf", "testSizeOfAsBigInteger" ]
          }
        },
        "org.apache.commons.io.FileUtils#sizeOfBig0(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCompareSizeOf", "testSizeOfAsBigInteger", "testSizeOfDirectoryAsBigInteger" ]
          }
        },
        "org.apache.commons.io.FileUtils#sizeOfDirectory(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testSizeOfDirectory" ]
          }
        },
        "org.apache.commons.io.FileUtils#sizeOfDirectory0(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCompareSizeOf", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testSizeOf", "testSizeOfDirectory" ]
          }
        },
        "org.apache.commons.io.FileUtils#sizeOfDirectoryAsBigInteger(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testSizeOfDirectoryAsBigInteger" ]
          }
        },
        "org.apache.commons.io.FileUtils#sizeOfDirectoryBig0(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCompareSizeOf", "testSizeOfAsBigInteger", "testSizeOfDirectoryAsBigInteger" ]
          }
        },
        "org.apache.commons.io.FileUtils#toFile(java.net.URL)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFile5", "testToFileUtf8", "testToFiles1", "testToFiles2", "testToFiles4" ]
          }
        },
        "org.apache.commons.io.FileUtils#toFiles(java.net.URL[])" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles3a", "testToFiles4" ]
          }
        },
        "org.apache.commons.io.FileUtils#toURLs(java.io.File[])" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testToURLs1", "testToURLs3a" ]
          }
        },
        "org.apache.commons.io.FileUtils#touch(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testTouch" ]
          }
        },
        "org.apache.commons.io.FileUtils#validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testIterateFilesAndDirs", "testListFiles", "testListFilesWithDirs" ]
          }
        },
        "org.apache.commons.io.FileUtils#verifiedListFiles(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySizeBigInteger", "testByteCountToDisplaySizeLong", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testCompareSizeOf", "testContentEquals", "testContentEqualsIgnoreEOL", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryPreserveDates", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToItself", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyFileToOutputStream", "testCopyToDirectoryWithDirectory", "testCopyToDirectoryWithFile", "testCopyToDirectoryWithFileSourceDoesNotExist", "testCopyToDirectoryWithFileSourceIsNull", "testCopyToDirectoryWithIterable", "testCopyToDirectoryWithIterableSourceDoesNotExist", "testCopyToDirectoryWithIterableSourceIsNull", "testCopyToSelf", "testCopyURLToFile", "testCopyURLToFileWithTimeout", "testDecodeUrl", "testDecodeUrlEncodingUtf8", "testDecodeUrlLenient", "testDecodeUrlNullSafe", "testDeleteDirectoryWithNonDirectory", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testForceMkdirParent", "testGetFile", "testGetFile_Parent", "testGetTempDirectory", "testGetTempDirectoryPath", "testGetUserDirectory", "testGetUserDirectoryPath", "testIO276", "testIO300", "testIncorrectOutputSize", "testIsFileNewerOlder", "testIterateFiles", "testIterateFilesAndDirs", "testListFiles", "testListFilesWithDirs", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToStringWithDefaultEncoding", "testReadFileToStringWithEncoding", "testReadLines", "testSizeOf", "testSizeOfAsBigInteger", "testSizeOfDirectory", "testSizeOfDirectoryAsBigInteger", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFile5", "testToFileUtf8", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles3a", "testToFiles4", "testToURLs1", "testToURLs3a", "testTouch", "testWriteByteArrayToFile", "testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteByteArrayToFile_WithOffsetAndLength", "testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_3arg_nullSeparator", "testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile1", "testWriteStringToFile2", "testWriteStringToFile3", "testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ]
          }
        },
        "org.apache.commons.io.FileUtils#write(java.io.File,java.lang.CharSequence)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testContentEqualsIgnoreEOL", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.FileUtils#writeByteArrayToFile(java.io.File,byte[])" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteByteArrayToFile", "testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteByteArrayToFile_WithOffsetAndLength", "testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.FileUtils#writeLines(java.io.File,java.lang.String,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.FileUtils#writeStringToFile(java.io.File,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnNullChecksum", "testContentEqualsIgnoreEOL", "testCopyDirectoryFiltered", "testCopyDirectoryPreserveDates", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testFileUtils", "testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile1", "testWriteStringToFile2", "testWriteStringToFile3", "testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testCleanEmpty", "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile", "testThrowsOnNullList" ]
          }
        },
        "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" : [ "testCleanDirWithASymlinkDir", "testCleanDirWithParentSymlinks", "testCleanDirWithSymlinkFile", "testCorrectlyIdentifySymlinkWithParentSymLink", "testIdentifiesBrokenSymlinkFile", "testIdentifiesSymlinkDir", "testIdentifiesSymlinkFile", "testStillClearsIfGivenDirectoryIsASymlink" ]
          }
        },
        "org.apache.commons.io.FileUtilsDirectoryContainsTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsDirectoryContainsTestCase" : [ "testCanonicalPath", "testDirectoryContainsDirectory", "testDirectoryContainsFile", "testDirectoryDoesNotContainFile", "testDirectoryDoesNotContainsDirectory", "testDirectoryDoesNotExist", "testFileDoesNotExist", "testFileDoesNotExistBug", "testIO466", "testSameFile", "testUnrealizedContainment" ]
          }
        },
        "org.apache.commons.io.FileUtilsFileNewerTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ]
          }
        },
        "org.apache.commons.io.FileUtilsListFilesTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension", "testListFiles", "testListFilesByExtension" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySizeBigInteger", "testByteCountToDisplaySizeLong", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testCompareSizeOf", "testContentEquals", "testContentEqualsIgnoreEOL", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryPreserveDates", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToItself", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyFileToOutputStream", "testCopyToDirectoryWithDirectory", "testCopyToDirectoryWithFile", "testCopyToDirectoryWithFileSourceDoesNotExist", "testCopyToDirectoryWithFileSourceIsNull", "testCopyToDirectoryWithIterable", "testCopyToDirectoryWithIterableSourceDoesNotExist", "testCopyToDirectoryWithIterableSourceIsNull", "testCopyToSelf", "testCopyURLToFile", "testCopyURLToFileWithTimeout", "testDecodeUrl", "testDecodeUrlEncodingUtf8", "testDecodeUrlLenient", "testDecodeUrlNullSafe", "testDeleteDirectoryWithNonDirectory", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testForceMkdirParent", "testGetFile", "testGetFile_Parent", "testGetTempDirectory", "testGetTempDirectoryPath", "testGetUserDirectory", "testGetUserDirectoryPath", "testIO276", "testIO300", "testIncorrectOutputSize", "testIsFileNewerOlder", "testIterateFiles", "testIterateFilesAndDirs", "testListFiles", "testListFilesWithDirs", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToStringWithDefaultEncoding", "testReadFileToStringWithEncoding", "testReadLines", "testSizeOf", "testSizeOfAsBigInteger", "testSizeOfDirectory", "testSizeOfDirectoryAsBigInteger", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFile5", "testToFileUtf8", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles3a", "testToFiles4", "testToURLs1", "testToURLs3a", "testTouch", "testWriteByteArrayToFile", "testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteByteArrayToFile_WithOffsetAndLength", "testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_3arg_nullSeparator", "testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile1", "testWriteStringToFile2", "testWriteStringToFile3", "testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#createCircularSymLink(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testSizeOfDirectory", "testSizeOfDirectoryAsBigInteger" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#createFilesForTestCopyDirectory(java.io.File,java.io.File,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToGrandChild" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#getName" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testContentEquals", "testContentEqualsIgnoreEOL", "testCopyURLToFile", "testForceMkdir", "testSizeOf", "testSizeOfAsBigInteger", "testSizeOfDirectory", "testSizeOfDirectoryAsBigInteger" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#getTestDirectory" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySizeBigInteger", "testByteCountToDisplaySizeLong", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testCompareSizeOf", "testContentEquals", "testContentEqualsIgnoreEOL", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryPreserveDates", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToItself", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyFileToOutputStream", "testCopyToDirectoryWithDirectory", "testCopyToDirectoryWithFile", "testCopyToDirectoryWithFileSourceDoesNotExist", "testCopyToDirectoryWithFileSourceIsNull", "testCopyToDirectoryWithIterable", "testCopyToDirectoryWithIterableSourceDoesNotExist", "testCopyToDirectoryWithIterableSourceIsNull", "testCopyToSelf", "testCopyURLToFile", "testCopyURLToFileWithTimeout", "testDecodeUrl", "testDecodeUrlEncodingUtf8", "testDecodeUrlLenient", "testDecodeUrlNullSafe", "testDeleteDirectoryWithNonDirectory", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testForceMkdirParent", "testGetFile", "testGetFile_Parent", "testGetTempDirectory", "testGetTempDirectoryPath", "testGetUserDirectory", "testGetUserDirectoryPath", "testIO276", "testIO300", "testIncorrectOutputSize", "testIsFileNewerOlder", "testIterateFiles", "testIterateFilesAndDirs", "testListFiles", "testListFilesWithDirs", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToStringWithDefaultEncoding", "testReadFileToStringWithEncoding", "testReadLines", "testSizeOf", "testSizeOfAsBigInteger", "testSizeOfDirectory", "testSizeOfDirectoryAsBigInteger", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFile5", "testToFileUtf8", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles3a", "testToFiles4", "testToURLs1", "testToURLs3a", "testTouch", "testWriteByteArrayToFile", "testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteByteArrayToFile_WithOffsetAndLength", "testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_3arg_nullSeparator", "testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile1", "testWriteStringToFile2", "testWriteStringToFile3", "testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#openOutputStream_noParent(boolean)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#setUp" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySizeBigInteger", "testByteCountToDisplaySizeLong", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testCompareSizeOf", "testContentEquals", "testContentEqualsIgnoreEOL", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryPreserveDates", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToItself", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyFileToOutputStream", "testCopyToDirectoryWithDirectory", "testCopyToDirectoryWithFile", "testCopyToDirectoryWithFileSourceDoesNotExist", "testCopyToDirectoryWithFileSourceIsNull", "testCopyToDirectoryWithIterable", "testCopyToDirectoryWithIterableSourceDoesNotExist", "testCopyToDirectoryWithIterableSourceIsNull", "testCopyToSelf", "testCopyURLToFile", "testCopyURLToFileWithTimeout", "testDecodeUrl", "testDecodeUrlEncodingUtf8", "testDecodeUrlLenient", "testDecodeUrlNullSafe", "testDeleteDirectoryWithNonDirectory", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testForceMkdirParent", "testGetFile", "testGetFile_Parent", "testGetTempDirectory", "testGetTempDirectoryPath", "testGetUserDirectory", "testGetUserDirectoryPath", "testIO276", "testIO300", "testIncorrectOutputSize", "testIsFileNewerOlder", "testIterateFiles", "testIterateFilesAndDirs", "testListFiles", "testListFilesWithDirs", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToStringWithDefaultEncoding", "testReadFileToStringWithEncoding", "testReadLines", "testSizeOf", "testSizeOfAsBigInteger", "testSizeOfDirectory", "testSizeOfDirectoryAsBigInteger", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFile5", "testToFileUtf8", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles3a", "testToFiles4", "testToURLs1", "testToURLs3a", "testTouch", "testWriteByteArrayToFile", "testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteByteArrayToFile_WithOffsetAndLength", "testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_3arg_nullSeparator", "testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile1", "testWriteStringToFile2", "testWriteStringToFile3", "testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testByteCountToDisplaySizeBigInteger" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySizeBigInteger" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testByteCountToDisplaySizeLong" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySizeLong" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testChecksum" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testChecksum" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testChecksumCRC32" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testChecksumCRC32" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testChecksumDouble" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testChecksumDouble" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testChecksumOnDirectory" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testChecksumOnDirectory" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testChecksumOnNullChecksum" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testChecksumOnNullChecksum" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testChecksumOnNullFile" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testChecksumOnNullFile" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testCompareSizeOf" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCompareSizeOf" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testContentEquals" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testContentEquals" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testContentEqualsIgnoreEOL" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testContentEqualsIgnoreEOL" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testCopyDirectoryErrors" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryErrors" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testCopyDirectoryFiltered" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testCopyDirectoryPreserveDates" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryPreserveDates" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testCopyDirectoryToChild" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToChild" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testCopyDirectoryToDirectory_NonExistingDest" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToDirectory_NonExistingDest" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testCopyDirectoryToExistingDest" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToExistingDest" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testCopyDirectoryToGrandChild" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToGrandChild" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testCopyDirectoryToItself" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToItself" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testCopyDirectoryToNonExistingDest" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToNonExistingDest" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testCopyFile1" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyFile1" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testCopyFile1ToDir" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyFile1ToDir" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testCopyFile2" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyFile2" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testCopyFile2ToDir" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyFile2ToDir" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testCopyFile2WithoutFileDatePreservation" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyFile2WithoutFileDatePreservation" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testCopyFileToOutputStream" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyFileToOutputStream" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testCopyToDirectoryWithDirectory" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyToDirectoryWithDirectory" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testCopyToDirectoryWithFile" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyToDirectoryWithFile" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testCopyToDirectoryWithFileSourceDoesNotExist" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyToDirectoryWithFileSourceDoesNotExist" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testCopyToDirectoryWithFileSourceIsNull" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyToDirectoryWithFileSourceIsNull" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testCopyToDirectoryWithIterable" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyToDirectoryWithIterable" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testCopyToDirectoryWithIterableSourceDoesNotExist" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyToDirectoryWithIterableSourceDoesNotExist" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testCopyToDirectoryWithIterableSourceIsNull" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyToDirectoryWithIterableSourceIsNull" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testCopyToSelf" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyToSelf" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testCopyURLToFile" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyURLToFile" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testCopyURLToFileWithTimeout" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyURLToFileWithTimeout" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testDecodeUrl" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testDecodeUrl" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testDecodeUrlEncodingUtf8" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testDecodeUrlEncodingUtf8" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testDecodeUrlLenient" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testDecodeUrlLenient" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testDecodeUrlNullSafe" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testDecodeUrlNullSafe" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testDeleteDirectoryWithNonDirectory" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testDeleteDirectoryWithNonDirectory" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testDeleteQuietlyDir" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testDeleteQuietlyDir" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testDeleteQuietlyFile" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testDeleteQuietlyFile" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testDeleteQuietlyForNull" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testDeleteQuietlyForNull" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testDeleteQuietlyNonExistent" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testDeleteQuietlyNonExistent" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testFileUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testFileUtils" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testForceDeleteAFile1" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testForceDeleteAFile1" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testForceDeleteAFile2" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testForceDeleteAFile2" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testForceDeleteAFile3" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testForceDeleteAFile3" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testForceDeleteDir" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testForceDeleteDir" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testForceMkdir" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testForceMkdir" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testForceMkdirParent" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testForceMkdirParent" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testGetFile" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testGetFile" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testGetFile_Parent" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testGetFile_Parent" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testGetTempDirectory" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testGetTempDirectory" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testGetTempDirectoryPath" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testGetTempDirectoryPath" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testGetUserDirectory" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testGetUserDirectory" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testGetUserDirectoryPath" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testGetUserDirectoryPath" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testIO276" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIO276" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testIO300" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIO300" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testIncorrectOutputSize" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIncorrectOutputSize" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testIsFileNewerOlder" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIsFileNewerOlder" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testIterateFiles" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testIterateFilesAndDirs" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFilesAndDirs" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testListFiles" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testListFiles" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testListFilesWithDirs" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testListFilesWithDirs" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testMoveDirectoryToDirectory" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveDirectoryToDirectory" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testMoveDirectoryToDirectory_Errors" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveDirectoryToDirectory_Errors" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testMoveDirectory_CopyDelete" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveDirectory_CopyDelete" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testMoveDirectory_Errors" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveDirectory_Errors" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testMoveDirectory_Rename" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveDirectory_Rename" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testMoveFileToDirectory" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveFileToDirectory" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testMoveFileToDirectory_Errors" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveFileToDirectory_Errors" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testMoveFile_CopyDelete" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveFile_CopyDelete" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testMoveFile_CopyDelete_Failed" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveFile_CopyDelete_Failed" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testMoveFile_Errors" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveFile_Errors" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testMoveFile_Rename" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveFile_Rename" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testMoveToDirectory" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveToDirectory" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testMoveToDirectory_Errors" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testMoveToDirectory_Errors" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testReadFileToByteArray" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testReadFileToByteArray" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testReadFileToStringWithDefaultEncoding" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testReadFileToStringWithDefaultEncoding" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testReadFileToStringWithEncoding" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testReadFileToStringWithEncoding" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testReadLines" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testReadLines" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testSizeOf" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testSizeOf" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testSizeOfAsBigInteger" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testSizeOfAsBigInteger" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testSizeOfDirectory" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testSizeOfDirectory" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testSizeOfDirectoryAsBigInteger" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testSizeOfDirectoryAsBigInteger" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testToFile1" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testToFile1" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testToFile2" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testToFile2" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testToFile3" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testToFile3" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testToFile4" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testToFile4" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testToFile5" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testToFile5" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testToFileUtf8" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testToFileUtf8" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testToFiles1" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testToFiles1" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testToFiles2" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testToFiles2" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testToFiles3" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testToFiles3" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testToFiles3a" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testToFiles3a" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testToFiles4" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testToFiles4" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testToURLs1" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testToURLs1" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testToURLs3a" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testToURLs3a" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testTouch" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testTouch" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testWriteByteArrayToFile" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteByteArrayToFile" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testWriteByteArrayToFile_WithOffsetAndLength" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteByteArrayToFile_WithOffsetAndLength" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldDeletePreviousFileLines" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testWriteCharSequence1" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteCharSequence1" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testWriteCharSequence2" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteCharSequence2" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testWriteLines_3arg_nullSeparator" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteLines_3arg_nullSeparator" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testWriteLines_4arg" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteLines_4arg" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testWriteLines_4arg_Writer_nullData" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteLines_4arg_Writer_nullData" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testWriteLines_4arg_nullSeparator" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteLines_4arg_nullSeparator" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testWriteStringToFile1" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteStringToFile1" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testWriteStringToFile2" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteStringToFile2" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testWriteStringToFile3" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteStringToFile3" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#test_openInputStream_exists" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "test_openInputStream_exists" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#test_openInputStream_existsButIsDirectory" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "test_openInputStream_existsButIsDirectory" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#test_openInputStream_notExists" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "test_openInputStream_notExists" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#test_openOutputStream_exists" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "test_openOutputStream_exists" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#test_openOutputStream_existsButIsDirectory" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "test_openOutputStream_existsButIsDirectory" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#test_openOutputStream_noParentCreateFile" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "test_openOutputStream_noParentCreateFile" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#test_openOutputStream_noParentNoFile" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "test_openOutputStream_noParentNoFile" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#test_openOutputStream_notExists" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "test_openOutputStream_notExists" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase#test_openOutputStream_notExistsCannotCreate" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "test_openOutputStream_notExistsCannotCreate" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase$ListDirectoryWalker" : { },
        "org.apache.commons.io.FileUtilsTestCase$ListDirectoryWalker#handleDirectoryStart(java.io.File,int,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToGrandChild", "testCopyDirectoryToItself" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase$ListDirectoryWalker#handleFile(java.io.File,int,java.util.Collection)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToGrandChild" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase$ListDirectoryWalker#list(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered", "testCopyDirectoryToChild", "testCopyDirectoryToGrandChild", "testCopyDirectoryToItself" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase$ShorterFile" : { },
        "org.apache.commons.io.FileUtilsTestCase$ShorterFile#<init>(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIncorrectOutputSize" ]
          }
        },
        "org.apache.commons.io.FileUtilsTestCase$ShorterFile#length" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIncorrectOutputSize" ]
          }
        },
        "org.apache.commons.io.FileUtilsWaitForTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsWaitForTestCase" : [ "testWaitFor", "testWaitForInterrupted" ]
          }
        },
        "org.apache.commons.io.FilenameUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpaceWindows_String_quoted" ],
            "org.apache.commons.io.FileUtilsDirectoryContainsTestCase" : [ "testCanonicalPath", "testDirectoryContainsDirectory", "testDirectoryContainsFile", "testDirectoryDoesNotContainFile", "testDirectoryDoesNotContainsDirectory" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension", "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedError_IO_128", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetBaseName_with_nullByte", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetFullPathNoEndSeparator_IO_248", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPathNoEndSeparator_with_null_byte", "testGetPath_with_nullbyte", "testGetPrefix", "testGetPrefixLength", "testGetPrefix_with_nullbyte", "testIndexOfExtension", "testIndexOfLastSeparator", "testInjectionFailure", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testIsExtension_injection", "testNormalize", "testNormalizeNoEndSeparator", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin", "testNormalize_with_nullbytes", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.FilenameUtilsWildcardTestCase" : [ "testLocaleIndependence", "testMatch", "testMatch2", "testMatchCaseSpecified", "testMatchOnSystem", "testSplitOnTokens", "test_IO_246" ],
            "org.apache.commons.io.IOCaseTestCase" : [ "test_checkCompare_case", "test_checkCompare_functionality", "test_checkEndsWith_case", "test_checkEndsWith_functionality", "test_checkEquals_case", "test_checkEquals_functionality", "test_checkIndexOf_case", "test_checkIndexOf_functionality", "test_checkRegionMatches_case", "test_checkRegionMatches_functionality", "test_checkStartsWith_case", "test_checkStartsWith_functionality", "test_forName", "test_getName", "test_isCaseSensitive", "test_serialization", "test_toString" ],
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "constructorArray_Null", "constructorIterable_Null", "constructorIterable_order" ],
            "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.NameFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.PathFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testDelegation", "testDeprecatedWildcard", "testEnsureTestCoverage", "testFalse", "testFileFilterUtils_and", "testFileFilterUtils_or", "testFilterArray", "testFilterArrayNullParameters", "testFilterArray_fromList", "testFilterList", "testFilterListNullParameters", "testFilterList_fromArray", "testFilterSet", "testFilterSetNullParameters", "testFilterSet_fromArray", "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNot", "testNullFilters", "testPrefix", "testPrefixCaseInsensitive", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testTrue", "testWildcard" ],
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ],
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor", "testMonitor", "testThreadFactory" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile", "testToString" ],
            "org.apache.commons.io.serialization.MoreComplexObjectTest" : [ "trustJavaIncludingArrays", "trustJavaLang", "useBlacklist" ],
            "org.apache.commons.io.serialization.ValidatingObjectInputStreamTest" : [ "acceptWildcard", "ourTestClassAcceptedFirstWildcard", "ourTestClassAcceptedSecondWildcard", "rejectWildcard" ],
            "org.apache.commons.io.serialization.WildcardClassNameMatcherTest" : [ "noPattern", "star", "starAndQuestionMark" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#isSystemWindows" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered", "testIterateFiles", "testIterateFilesAndDirs", "testListFiles", "testListFilesWithDirs", "testSizeOfDirectory", "testSizeOfDirectoryAsBigInteger" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#splitOnTokens(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testIterateFilesAndDirs", "testListFiles", "testListFilesWithDirs" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#wildcardMatch(java.lang.String,java.lang.String,org.apache.commons.io.IOCase)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testIterateFilesAndDirs", "testListFiles", "testListFilesWithDirs" ]
          }
        },
        "org.apache.commons.io.FilenameUtilsTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedError_IO_128", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetBaseName_with_nullByte", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetFullPathNoEndSeparator_IO_248", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPathNoEndSeparator_with_null_byte", "testGetPath_with_nullbyte", "testGetPrefix", "testGetPrefixLength", "testGetPrefix_with_nullbyte", "testIndexOfExtension", "testIndexOfLastSeparator", "testInjectionFailure", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testIsExtension_injection", "testNormalize", "testNormalizeNoEndSeparator", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin", "testNormalize_with_nullbytes", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ]
          }
        },
        "org.apache.commons.io.FilenameUtilsWildcardTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsWildcardTestCase" : [ "testLocaleIndependence", "testMatch", "testMatch2", "testMatchCaseSpecified", "testMatchOnSystem", "testSplitOnTokens", "test_IO_246" ]
          }
        },
        "org.apache.commons.io.HexDumpTest" : {
          "testcases" : {
            "org.apache.commons.io.HexDumpTest" : [ "testDump" ]
          }
        },
        "org.apache.commons.io.IOCase" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilter", "testFilterAndLimitB", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4", "testFilterString" ],
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testFilter", "testFilterAndLimitB", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ],
            "org.apache.commons.io.FileUtilsDirectoryContainsTestCase" : [ "testCanonicalPath", "testDirectoryContainsDirectory", "testDirectoryContainsFile", "testDirectoryDoesNotContainFile", "testDirectoryDoesNotContainsDirectory" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension", "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testEquals", "testEqualsNormalized", "testEqualsNormalizedError_IO_128", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl" ],
            "org.apache.commons.io.FilenameUtilsWildcardTestCase" : [ "testLocaleIndependence", "testMatch", "testMatch2", "testMatchCaseSpecified", "testMatchOnSystem", "test_IO_246" ],
            "org.apache.commons.io.IOCaseTestCase" : [ "test_checkCompare_case", "test_checkCompare_functionality", "test_checkEndsWith_case", "test_checkEndsWith_functionality", "test_checkEquals_case", "test_checkEquals_functionality", "test_checkIndexOf_case", "test_checkIndexOf_functionality", "test_checkRegionMatches_case", "test_checkRegionMatches_functionality", "test_checkStartsWith_case", "test_checkStartsWith_functionality", "test_forName", "test_getName", "test_isCaseSensitive", "test_serialization", "test_toString" ],
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "constructorArray_Null", "constructorIterable_Null", "constructorIterable_order" ],
            "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.NameFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.PathFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testDelegation", "testDeprecatedWildcard", "testEnsureTestCoverage", "testFalse", "testFileFilterUtils_and", "testFileFilterUtils_or", "testFilterArray", "testFilterArrayNullParameters", "testFilterArray_fromList", "testFilterList", "testFilterListNullParameters", "testFilterList_fromArray", "testFilterSet", "testFilterSetNullParameters", "testFilterSet_fromArray", "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNot", "testNullFilters", "testPrefix", "testPrefixCaseInsensitive", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testTrue", "testWildcard" ],
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ],
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor", "testMonitor", "testThreadFactory" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile", "testToString" ],
            "org.apache.commons.io.serialization.MoreComplexObjectTest" : [ "trustJavaIncludingArrays", "trustJavaLang", "useBlacklist" ],
            "org.apache.commons.io.serialization.ValidatingObjectInputStreamTest" : [ "acceptWildcard", "ourTestClassAcceptedFirstWildcard", "ourTestClassAcceptedSecondWildcard", "rejectWildcard" ],
            "org.apache.commons.io.serialization.WildcardClassNameMatcherTest" : [ "noPattern", "star", "starAndQuestionMark" ]
          }
        },
        "org.apache.commons.io.IOCase#<init>(java.lang.String,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered", "testIterateFiles", "testIterateFilesAndDirs", "testListFiles", "testListFilesWithDirs" ]
          }
        },
        "org.apache.commons.io.IOCase#checkEquals(java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered" ]
          }
        },
        "org.apache.commons.io.IOCase#checkIndexOf(java.lang.String,int,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testIterateFilesAndDirs", "testListFiles", "testListFilesWithDirs" ]
          }
        },
        "org.apache.commons.io.IOCase#checkRegionMatches(java.lang.String,int,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testIterateFilesAndDirs", "testListFiles", "testListFilesWithDirs" ]
          }
        },
        "org.apache.commons.io.IOCaseTestCase" : {
          "testcases" : {
            "org.apache.commons.io.IOCaseTestCase" : [ "test_checkCompare_case", "test_checkCompare_functionality", "test_checkEndsWith_case", "test_checkEndsWith_functionality", "test_checkEquals_case", "test_checkEquals_functionality", "test_checkIndexOf_case", "test_checkIndexOf_functionality", "test_checkRegionMatches_case", "test_checkRegionMatches_functionality", "test_checkStartsWith_case", "test_checkStartsWith_functionality", "test_forName", "test_getName", "test_isCaseSensitive", "test_serialization", "test_toString" ]
          }
        },
        "org.apache.commons.io.IOExceptionWithCauseTestCase" : {
          "testcases" : {
            "org.apache.commons.io.IOExceptionWithCauseTestCase" : [ "testIOExceptionStringThrowable", "testIOExceptionThrowable" ]
          }
        },
        "org.apache.commons.io.IOUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceUnix_String_EmptyResponse", "testGetFreeSpaceUnix_String_InvalidResponse1", "testGetFreeSpaceUnix_String_InvalidResponse2", "testGetFreeSpaceUnix_String_InvalidResponse3", "testGetFreeSpaceUnix_String_InvalidResponse4", "testGetFreeSpaceUnix_String_LongResponse", "testGetFreeSpaceUnix_String_LongResponseKb", "testGetFreeSpaceUnix_String_NormalResponseFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbLinux", "testGetFreeSpaceUnix_String_NormalResponseKbSolaris", "testGetFreeSpaceUnix_String_NormalResponseLinux", "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpaceWindows_String_quoted", "testGetFreeSpace_String" ],
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToOutputStreamWithBufferSize", "testCopy_inputStreamToOutputStream_nullIn", "testCopy_inputStreamToOutputStream_nullOut", "testCopy_inputStreamToWriter", "testCopy_inputStreamToWriter_Encoding", "testCopy_inputStreamToWriter_Encoding_nullEncoding", "testCopy_inputStreamToWriter_Encoding_nullIn", "testCopy_inputStreamToWriter_Encoding_nullOut", "testCopy_inputStreamToWriter_nullIn", "testCopy_inputStreamToWriter_nullOut", "testCopy_readerToOutputStream", "testCopy_readerToOutputStream_Encoding", "testCopy_readerToOutputStream_Encoding_nullEncoding", "testCopy_readerToOutputStream_Encoding_nullIn", "testCopy_readerToOutputStream_Encoding_nullOut", "testCopy_readerToOutputStream_nullIn", "testCopy_readerToOutputStream_nullOut", "testCopy_readerToWriter", "testCopy_readerToWriter_nullIn", "testCopy_readerToWriter_nullOut" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testAsBufferedInputStream", "testAsBufferedInputStreamWithBufferSize", "testAsBufferedNull", "testAsBufferedOutputStream", "testAsBufferedOutputStreamWithBufferSize", "testAsBufferedReader", "testAsBufferedReaderWithBufferSize", "testAsBufferedWriter", "testAsBufferedWriterWithBufferSize", "testCloseQuietly_AllCloseableIOException", "testCloseQuietly_CloseableIOException", "testCloseQuietly_Selector", "testCloseQuietly_SelectorIOException", "testCloseQuietly_SelectorNull", "testCloseQuietly_SelectorTwice", "testCloseQuietly_ServerSocket", "testCloseQuietly_ServerSocketIOException", "testCloseQuietly_Socket", "testCloseQuietly_SocketIOException", "testConstants", "testContentEqualsIgnoreEOL", "testContentEquals_InputStream_InputStream", "testContentEquals_Reader_Reader", "testCopyLarge_CharExtraLength", "testCopyLarge_CharFullLength", "testCopyLarge_CharNoSkip", "testCopyLarge_CharSkip", "testCopyLarge_CharSkipInvalid", "testCopyLarge_ExtraLength", "testCopyLarge_FullLength", "testCopyLarge_NoSkip", "testCopyLarge_Skip", "testCopyLarge_SkipInvalid", "testCopyLarge_SkipWithInvalidOffset", "testCopy_ByteArray_OutputStream", "testCopy_ByteArray_Writer", "testCopy_String_Writer", "testReadFully_InputStream_ByteArray", "testReadFully_InputStream_Offset", "testReadFully_InputStream__ReturnByteArray", "testReadFully_ReadableByteChannel", "testReadFully_Reader", "testReadFully_Reader_Offset", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testRead_ReadableByteChannel", "testResourceToByteArray_ExistingResourceAtRootPackage", "testResourceToByteArray_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToByteArray_ExistingResourceAtSubPackage", "testResourceToByteArray_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToByteArray_NonExistingResource", "testResourceToByteArray_NonExistingResource_WithClassLoader", "testResourceToByteArray_Null", "testResourceToByteArray_Null_WithClassLoader", "testResourceToString_ExistingResourceAtRootPackage", "testResourceToString_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToString_ExistingResourceAtSubPackage", "testResourceToString_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToString_NonExistingResource", "testResourceToString_NonExistingResource_WithClassLoader", "testResourceToString_NullCharset", "testResourceToString_NullCharset_WithClassLoader", "testResourceToString_NullResource", "testResourceToString_NullResource_WithClassLoader", "testResourceToURL_ExistingResourceAtRootPackage", "testResourceToURL_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToURL_ExistingResourceAtSubPackage", "testResourceToURL_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToURL_NonExistingResource", "testResourceToURL_NonExistingResource_WithClassLoader", "testResourceToURL_Null", "testResourceToURL_Null_WithClassLoader", "testSkipFully_InputStream", "testSkipFully_ReadableByteChannel", "testSkipFully_Reader", "testSkip_FileReader", "testSkip_InputStream", "testSkip_ReadableByteChannel", "testStringToOutputStream", "testToBufferedInputStreamWithBufferSize_InputStream", "testToBufferedInputStream_InputStream", "testToByteArray_InputStream", "testToByteArray_InputStream_NegativeSize", "testToByteArray_InputStream_Size", "testToByteArray_InputStream_SizeIllegal", "testToByteArray_InputStream_SizeLong", "testToByteArray_InputStream_SizeZero", "testToByteArray_Reader", "testToByteArray_String", "testToByteArray_URI", "testToByteArray_URL", "testToByteArray_URLConnection", "testToCharArray_InputStream", "testToCharArray_InputStream_CharsetName", "testToCharArray_Reader", "testToInputStream_CharSequence", "testToInputStream_String", "testToString_ByteArray", "testToString_InputStream", "testToString_Reader", "testToString_URI", "testToString_URI_CharsetName", "testToString_URI_CharsetNameNull", "testToString_URL", "testToString_URL_CharsetName", "testToString_URL_CharsetNameNull" ],
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWriteLines_OutputStream", "testWriteLines_OutputStream_Encoding", "testWriteLines_OutputStream_Encoding_nullData", "testWriteLines_OutputStream_Encoding_nullEncoding", "testWriteLines_OutputStream_Encoding_nullSeparator", "testWriteLines_OutputStream_Encoding_nullStream", "testWriteLines_OutputStream_nullData", "testWriteLines_OutputStream_nullSeparator", "testWriteLines_OutputStream_nullStream", "testWriteLines_Writer", "testWriteLines_Writer_nullData", "testWriteLines_Writer_nullSeparator", "testWriteLines_Writer_nullStream", "testWrite_byteArrayToOutputStream", "testWrite_byteArrayToOutputStream_nullData", "testWrite_byteArrayToOutputStream_nullStream", "testWrite_byteArrayToWriter", "testWrite_byteArrayToWriter_Encoding", "testWrite_byteArrayToWriter_Encoding_nullData", "testWrite_byteArrayToWriter_Encoding_nullEncoding", "testWrite_byteArrayToWriter_Encoding_nullWriter", "testWrite_byteArrayToWriter_nullData", "testWrite_byteArrayToWriter_nullWriter", "testWrite_charArrayToOutputStream", "testWrite_charArrayToOutputStream_Encoding", "testWrite_charArrayToOutputStream_Encoding_nullData", "testWrite_charArrayToOutputStream_Encoding_nullStream", "testWrite_charArrayToOutputStream_nullData", "testWrite_charArrayToOutputStream_nullEncoding", "testWrite_charArrayToOutputStream_nullStream", "testWrite_charArrayToWriter", "testWrite_charArrayToWriter_Encoding_nullData", "testWrite_charArrayToWriter_Encoding_nullStream", "testWrite_charSequenceToOutputStream", "testWrite_charSequenceToOutputStream_Encoding", "testWrite_charSequenceToOutputStream_Encoding_nullData", "testWrite_charSequenceToOutputStream_Encoding_nullStream", "testWrite_charSequenceToOutputStream_nullData", "testWrite_charSequenceToOutputStream_nullEncoding", "testWrite_charSequenceToOutputStream_nullStream", "testWrite_charSequenceToWriter", "testWrite_charSequenceToWriter_Encoding_nullData", "testWrite_charSequenceToWriter_Encoding_nullStream", "testWrite_stringToOutputStream", "testWrite_stringToOutputStream_Encoding", "testWrite_stringToOutputStream_Encoding_nullData", "testWrite_stringToOutputStream_Encoding_nullStream", "testWrite_stringToOutputStream_nullData", "testWrite_stringToOutputStream_nullEncoding", "testWrite_stringToOutputStream_nullStream", "testWrite_stringToWriter", "testWrite_stringToWriter_Encoding_nullData", "testWrite_stringToWriter_Encoding_nullStream" ],
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testFilteringBufferedReader", "testFilteringFileReader", "testInvalidEncoding", "testNextLineOnlyDefaultEncoding", "testNextLineOnlyNullEncoding", "testNextLineOnlyUtf8Encoding", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset" ],
            "org.apache.commons.io.input.BoundedInputStreamTest" : [ "testReadArray" ],
            "org.apache.commons.io.input.TailerTest" : [ "testBufferBreak", "testIO335", "testLongFile", "testMultiByteBreak", "testTailer", "testTailerEndOfFileReached", "testTailerEof" ],
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testHttpContent", "testRawContent" ],
            "org.apache.commons.io.output.ByteArrayOutputStreamTestCase" : [ "testToInputStream", "testToInputStreamWithReset" ],
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 1)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 1.024)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 128)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 16)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 2)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 2.048)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 256)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 32)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 4)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 4.096)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 512)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 64)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 8)" ],
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "constructor_File_directory", "constructor_File_encoding_badEncoding", "constructor_File_nullFile", "constructor_fileName_nullFile", "sameEncoding_CharsetEncoder_constructor", "sameEncoding_Charset_constructor", "sameEncoding_null_Charset_constructor", "sameEncoding_string_CharsetEncoder_constructor", "sameEncoding_string_Charset_constructor", "sameEncoding_string_constructor", "sameEncoding_string_string_constructor", "testDifferentEncoding" ]
          }
        },
        "org.apache.commons.io.IOUtils#closeQuietly(java.io.Closeable)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToNonExistingDest", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testIsFileNewerOlder", "testIterateFiles", "testIterateFilesAndDirs", "testListFiles", "testListFilesWithDirs", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory_Errors", "testMoveFile_Errors", "testMoveToDirectory", "testSizeOfDirectoryAsBigInteger" ]
          }
        },
        "org.apache.commons.io.IOUtils#contentEquals(java.io.InputStream,java.io.InputStream)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testContentEquals", "testContentEqualsIgnoreEOL", "testCopyURLToFile", "testCopyURLToFileWithTimeout" ]
          }
        },
        "org.apache.commons.io.IOUtils#contentEqualsIgnoreEOL(java.io.Reader,java.io.Reader)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testContentEqualsIgnoreEOL" ]
          }
        },
        "org.apache.commons.io.IOUtils#copy(java.io.InputStream,java.io.OutputStream)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testFileUtils", "testReadFileToStringWithDefaultEncoding", "testReadFileToStringWithEncoding", "testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_3arg_nullSeparator", "testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_4arg", "testWriteLines_4arg_nullSeparator", "testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.IOUtils#copyLarge(java.io.InputStream,java.io.OutputStream)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testFileUtils", "testReadFileToStringWithDefaultEncoding", "testReadFileToStringWithEncoding", "testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_3arg_nullSeparator", "testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_4arg", "testWriteLines_4arg_nullSeparator", "testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.IOUtils#readLines(java.io.InputStream,java.nio.charset.Charset)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testReadLines" ]
          }
        },
        "org.apache.commons.io.IOUtils#toBufferedReader(java.io.Reader)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testContentEqualsIgnoreEOL", "testReadLines" ]
          }
        },
        "org.apache.commons.io.IOUtils#toByteArray(java.io.InputStream)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testReadFileToByteArray" ]
          }
        },
        "org.apache.commons.io.IOUtils#toString(java.io.InputStream,java.nio.charset.Charset)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testFileUtils", "testReadFileToStringWithDefaultEncoding", "testReadFileToStringWithEncoding", "testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_3arg_nullSeparator", "testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_4arg", "testWriteLines_4arg_nullSeparator", "testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.IOUtils#write(java.lang.String,java.io.OutputStream,java.nio.charset.Charset)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnNullChecksum", "testContentEqualsIgnoreEOL", "testCopyDirectoryFiltered", "testCopyDirectoryPreserveDates", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testFileUtils", "testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile1", "testWriteStringToFile2", "testWriteStringToFile3", "testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.IOUtils#writeLines(java.util.Collection,java.lang.String,java.io.OutputStream,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_3arg_nullSeparator", "testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.IOUtilsCopyTestCase" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToOutputStreamWithBufferSize", "testCopy_inputStreamToOutputStream_IO84", "testCopy_inputStreamToOutputStream_nullIn", "testCopy_inputStreamToOutputStream_nullOut", "testCopy_inputStreamToWriter", "testCopy_inputStreamToWriter_Encoding", "testCopy_inputStreamToWriter_Encoding_nullEncoding", "testCopy_inputStreamToWriter_Encoding_nullIn", "testCopy_inputStreamToWriter_Encoding_nullOut", "testCopy_inputStreamToWriter_nullIn", "testCopy_inputStreamToWriter_nullOut", "testCopy_readerToOutputStream", "testCopy_readerToOutputStream_Encoding", "testCopy_readerToOutputStream_Encoding_nullEncoding", "testCopy_readerToOutputStream_Encoding_nullIn", "testCopy_readerToOutputStream_Encoding_nullOut", "testCopy_readerToOutputStream_nullIn", "testCopy_readerToOutputStream_nullOut", "testCopy_readerToWriter", "testCopy_readerToWriter_IO84", "testCopy_readerToWriter_nullIn", "testCopy_readerToWriter_nullOut" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testAsBufferedInputStream", "testAsBufferedInputStreamWithBufferSize", "testAsBufferedNull", "testAsBufferedOutputStream", "testAsBufferedOutputStreamWithBufferSize", "testAsBufferedReader", "testAsBufferedReaderWithBufferSize", "testAsBufferedWriter", "testAsBufferedWriterWithBufferSize", "testCloseQuietly_AllCloseableIOException", "testCloseQuietly_CloseableIOException", "testCloseQuietly_Selector", "testCloseQuietly_SelectorIOException", "testCloseQuietly_SelectorNull", "testCloseQuietly_SelectorTwice", "testCloseQuietly_ServerSocket", "testCloseQuietly_ServerSocketIOException", "testCloseQuietly_Socket", "testCloseQuietly_SocketIOException", "testConstants", "testContentEqualsIgnoreEOL", "testContentEquals_InputStream_InputStream", "testContentEquals_Reader_Reader", "testCopyLarge_CharExtraLength", "testCopyLarge_CharFullLength", "testCopyLarge_CharNoSkip", "testCopyLarge_CharSkip", "testCopyLarge_CharSkipInvalid", "testCopyLarge_ExtraLength", "testCopyLarge_FullLength", "testCopyLarge_NoSkip", "testCopyLarge_Skip", "testCopyLarge_SkipInvalid", "testCopyLarge_SkipWithInvalidOffset", "testCopy_ByteArray_OutputStream", "testCopy_ByteArray_Writer", "testCopy_String_Writer", "testReadFully_InputStream_ByteArray", "testReadFully_InputStream_Offset", "testReadFully_InputStream__ReturnByteArray", "testReadFully_ReadableByteChannel", "testReadFully_Reader", "testReadFully_Reader_Offset", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testRead_ReadableByteChannel", "testResourceToByteArray_ExistingResourceAtRootPackage", "testResourceToByteArray_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToByteArray_ExistingResourceAtSubPackage", "testResourceToByteArray_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToByteArray_NonExistingResource", "testResourceToByteArray_NonExistingResource_WithClassLoader", "testResourceToByteArray_Null", "testResourceToByteArray_Null_WithClassLoader", "testResourceToString_ExistingResourceAtRootPackage", "testResourceToString_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToString_ExistingResourceAtSubPackage", "testResourceToString_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToString_NonExistingResource", "testResourceToString_NonExistingResource_WithClassLoader", "testResourceToString_NullCharset", "testResourceToString_NullCharset_WithClassLoader", "testResourceToString_NullResource", "testResourceToString_NullResource_WithClassLoader", "testResourceToURL_ExistingResourceAtRootPackage", "testResourceToURL_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToURL_ExistingResourceAtSubPackage", "testResourceToURL_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToURL_NonExistingResource", "testResourceToURL_NonExistingResource_WithClassLoader", "testResourceToURL_Null", "testResourceToURL_Null_WithClassLoader", "testSkipFully_InputStream", "testSkipFully_ReadableByteChannel", "testSkipFully_Reader", "testSkip_FileReader", "testSkip_InputStream", "testSkip_ReadableByteChannel", "testStringToOutputStream", "testToBufferedInputStreamWithBufferSize_InputStream", "testToBufferedInputStream_InputStream", "testToByteArray_InputStream", "testToByteArray_InputStream_NegativeSize", "testToByteArray_InputStream_Size", "testToByteArray_InputStream_SizeIllegal", "testToByteArray_InputStream_SizeLong", "testToByteArray_InputStream_SizeZero", "testToByteArray_Reader", "testToByteArray_String", "testToByteArray_URI", "testToByteArray_URL", "testToByteArray_URLConnection", "testToCharArray_InputStream", "testToCharArray_InputStream_CharsetName", "testToCharArray_Reader", "testToInputStream_CharSequence", "testToInputStream_String", "testToString_ByteArray", "testToString_InputStream", "testToString_Reader", "testToString_URI", "testToString_URI_CharsetName", "testToString_URI_CharsetNameNull", "testToString_URL", "testToString_URL_CharsetName", "testToString_URL_CharsetNameNull" ]
          }
        },
        "org.apache.commons.io.IOUtilsWriteTestCase" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWriteLines_OutputStream", "testWriteLines_OutputStream_Encoding", "testWriteLines_OutputStream_Encoding_nullData", "testWriteLines_OutputStream_Encoding_nullEncoding", "testWriteLines_OutputStream_Encoding_nullSeparator", "testWriteLines_OutputStream_Encoding_nullStream", "testWriteLines_OutputStream_nullData", "testWriteLines_OutputStream_nullSeparator", "testWriteLines_OutputStream_nullStream", "testWriteLines_Writer", "testWriteLines_Writer_nullData", "testWriteLines_Writer_nullSeparator", "testWriteLines_Writer_nullStream", "testWrite_byteArrayToOutputStream", "testWrite_byteArrayToOutputStream_nullData", "testWrite_byteArrayToOutputStream_nullStream", "testWrite_byteArrayToWriter", "testWrite_byteArrayToWriter_Encoding", "testWrite_byteArrayToWriter_Encoding_nullData", "testWrite_byteArrayToWriter_Encoding_nullEncoding", "testWrite_byteArrayToWriter_Encoding_nullWriter", "testWrite_byteArrayToWriter_nullData", "testWrite_byteArrayToWriter_nullWriter", "testWrite_charArrayToOutputStream", "testWrite_charArrayToOutputStream_Encoding", "testWrite_charArrayToOutputStream_Encoding_nullData", "testWrite_charArrayToOutputStream_Encoding_nullStream", "testWrite_charArrayToOutputStream_nullData", "testWrite_charArrayToOutputStream_nullEncoding", "testWrite_charArrayToOutputStream_nullStream", "testWrite_charArrayToWriter", "testWrite_charArrayToWriter_Encoding_nullData", "testWrite_charArrayToWriter_Encoding_nullStream", "testWrite_charSequenceToOutputStream", "testWrite_charSequenceToOutputStream_Encoding", "testWrite_charSequenceToOutputStream_Encoding_nullData", "testWrite_charSequenceToOutputStream_Encoding_nullStream", "testWrite_charSequenceToOutputStream_nullData", "testWrite_charSequenceToOutputStream_nullEncoding", "testWrite_charSequenceToOutputStream_nullStream", "testWrite_charSequenceToWriter", "testWrite_charSequenceToWriter_Encoding_nullData", "testWrite_charSequenceToWriter_Encoding_nullStream", "testWrite_stringToOutputStream", "testWrite_stringToOutputStream_Encoding", "testWrite_stringToOutputStream_Encoding_nullData", "testWrite_stringToOutputStream_Encoding_nullStream", "testWrite_stringToOutputStream_nullData", "testWrite_stringToOutputStream_nullEncoding", "testWrite_stringToOutputStream_nullStream", "testWrite_stringToWriter", "testWrite_stringToWriter_Encoding_nullData", "testWrite_stringToWriter_Encoding_nullStream" ]
          }
        },
        "org.apache.commons.io.LineIteratorTestCase" : {
          "testcases" : {
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFilteringBufferedReader", "testFilteringFileReader", "testInvalidEncoding", "testMissingFile", "testNextLineOnlyDefaultEncoding", "testNextLineOnlyNullEncoding", "testNextLineOnlyUtf8Encoding", "testNextOnly", "testNextWithException", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ]
          }
        },
        "org.apache.commons.io.TaggedIOExceptionTest" : {
          "testcases" : {
            "org.apache.commons.io.TaggedIOExceptionTest" : [ "testTaggedIOException" ]
          }
        },
        "org.apache.commons.io.ThreadMonitor" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceUnix_String_EmptyResponse", "testGetFreeSpaceUnix_String_InvalidResponse1", "testGetFreeSpaceUnix_String_InvalidResponse2", "testGetFreeSpaceUnix_String_InvalidResponse3", "testGetFreeSpaceUnix_String_InvalidResponse4", "testGetFreeSpaceUnix_String_LongResponse", "testGetFreeSpaceUnix_String_LongResponseKb", "testGetFreeSpaceUnix_String_NormalResponseFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbLinux", "testGetFreeSpaceUnix_String_NormalResponseKbSolaris", "testGetFreeSpaceUnix_String_NormalResponseLinux", "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpaceWindows_String_quoted", "testGetFreeSpace_String" ],
            "org.apache.commons.io.ThreadMonitorTestCase" : [ "testCompletedWithoutTimeout", "testNoTimeout", "testTimeout" ]
          }
        },
        "org.apache.commons.io.ThreadMonitorTestCase" : {
          "testcases" : {
            "org.apache.commons.io.ThreadMonitorTestCase" : [ "testCompletedWithoutTimeout", "testNoTimeout", "testTimeout" ]
          }
        },
        "org.apache.commons.io.comparator.ComparatorAbstractTestCase" : {
          "testcases" : {
            "org.apache.commons.io.comparator.ComparatorAbstractTestCase" : [ "testComparator", "testReverseComparator", "testSortArray", "testSortArrayNull", "testSortList", "testSortListNull", "testToString" ],
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "constructorArray_Null", "constructorIterable_Null", "constructorIterable_order" ],
            "org.apache.commons.io.comparator.DirectoryFileComparatorTest" : [ "testSortArray" ],
            "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.NameFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.PathFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ]
          }
        },
        "org.apache.commons.io.comparator.CompositeFileComparatorTest" : {
          "testcases" : {
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "constructorArray_Null", "constructorIterable_Null", "constructorIterable_order" ]
          }
        },
        "org.apache.commons.io.comparator.DefaultFileComparatorTest" : { },
        "org.apache.commons.io.comparator.DirectoryFileComparatorTest" : {
          "testcases" : {
            "org.apache.commons.io.comparator.DirectoryFileComparatorTest" : [ "testSortArray" ]
          }
        },
        "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : {
          "testcases" : {
            "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : [ "testCaseSensitivity" ]
          }
        },
        "org.apache.commons.io.comparator.LastModifiedFileComparatorTest" : { },
        "org.apache.commons.io.comparator.NameFileComparatorTest" : {
          "testcases" : {
            "org.apache.commons.io.comparator.NameFileComparatorTest" : [ "testCaseSensitivity" ]
          }
        },
        "org.apache.commons.io.comparator.PathFileComparatorTest" : {
          "testcases" : {
            "org.apache.commons.io.comparator.PathFileComparatorTest" : [ "testCaseSensitivity" ]
          }
        },
        "org.apache.commons.io.comparator.SizeFileComparatorTest" : {
          "testcases" : {
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ]
          }
        },
        "org.apache.commons.io.filefilter.AbstractFileFilter#<init>" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered", "testIterateFiles", "testIterateFilesAndDirs", "testListFiles", "testListFilesWithDirs" ]
          }
        },
        "org.apache.commons.io.filefilter.AndFileFilter#<init>(java.util.List)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testIterateFilesAndDirs", "testListFiles", "testListFilesWithDirs" ]
          }
        },
        "org.apache.commons.io.filefilter.AndFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testIterateFilesAndDirs", "testListFiles", "testListFilesWithDirs" ]
          }
        },
        "org.apache.commons.io.filefilter.AndFileFilterTestCase" : { },
        "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase" : { },
        "org.apache.commons.io.filefilter.DirectoryFileFilter#<init>" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testIterateFilesAndDirs", "testListFiles", "testListFilesWithDirs" ]
          }
        },
        "org.apache.commons.io.filefilter.DirectoryFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testIterateFilesAndDirs", "testListFiles", "testListFilesWithDirs" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testAnd", "testCanRead", "testCanWrite", "testDelegateFileFilter", "testDelegation", "testDeprecatedWildcard", "testDirectory", "testEmpty", "testEnsureTestCoverage", "testFalse", "testFileFilterUtils_and", "testFileFilterUtils_or", "testFiles", "testFilterArray", "testFilterArrayNullParameters", "testFilterArray_fromList", "testFilterList", "testFilterListNullParameters", "testFilterList_fromArray", "testFilterSet", "testFilterSetNullParameters", "testFilterSet_fromArray", "testHidden", "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset", "testMagicNumberFileFilterValidation", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNameFilterNullArrayArgument", "testNameFilterNullListArgument", "testNot", "testNullFilters", "testOr", "testPrefix", "testPrefixCaseInsensitive", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testTrue", "testWildcard" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#and(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testIterateFilesAndDirs", "testListFiles", "testListFilesWithDirs" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#directoryFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testIterateFilesAndDirs", "testListFiles", "testListFilesWithDirs" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#nameFileFilter(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testIterateFilesAndDirs", "testListFiles", "testListFilesWithDirs" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#notFileFilter(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testIterateFilesAndDirs", "testListFiles", "testListFilesWithDirs" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#or(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testIterateFilesAndDirs", "testListFiles", "testListFilesWithDirs" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#toList(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testIterateFilesAndDirs", "testListFiles", "testListFilesWithDirs" ]
          }
        },
        "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase" : { },
        "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter" : { },
        "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter" : { },
        "org.apache.commons.io.filefilter.NameFileFilter#<init>(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered" ]
          }
        },
        "org.apache.commons.io.filefilter.NameFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered" ]
          }
        },
        "org.apache.commons.io.filefilter.NotFileFilter#<init>(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testIterateFilesAndDirs", "testListFiles", "testListFilesWithDirs" ]
          }
        },
        "org.apache.commons.io.filefilter.NotFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testIterateFilesAndDirs", "testListFiles", "testListFilesWithDirs" ]
          }
        },
        "org.apache.commons.io.filefilter.OrFileFilter#<init>(java.util.List)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testIterateFilesAndDirs", "testListFiles", "testListFilesWithDirs" ]
          }
        },
        "org.apache.commons.io.filefilter.OrFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testIterateFilesAndDirs", "testListFiles", "testListFilesWithDirs" ]
          }
        },
        "org.apache.commons.io.filefilter.OrFileFilterTestCase" : { },
        "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ]
          }
        },
        "org.apache.commons.io.filefilter.WildcardFileFilter#<init>(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testIterateFilesAndDirs", "testListFiles", "testListFilesWithDirs" ]
          }
        },
        "org.apache.commons.io.filefilter.WildcardFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFiles", "testIterateFilesAndDirs", "testListFiles", "testListFilesWithDirs" ]
          }
        },
        "org.apache.commons.io.input.AutoCloseInputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.input.AutoCloseInputStreamTest" : [ "testClose", "testRead", "testReadBuffer", "testReadBufferOffsetLength" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStream" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "skipReturnValueWithBom", "skipReturnValueWithoutBom", "testAvailableWithBOM", "testAvailableWithoutBOM", "testClose", "testEmptyBufferWithBOM", "testEmptyBufferWithoutBOM", "testGetBOMFirstThenRead", "testGetBOMFirstThenReadInclude", "testLargeBufferWithBOM", "testLargeBufferWithoutBOM", "testLeadingNonBOMBufferedRead", "testLeadingNonBOMSingleRead", "testMarkResetAfterReadWithBOM", "testMarkResetAfterReadWithoutBOM", "testMarkResetBeforeReadWithBOM", "testMarkResetBeforeReadWithoutBOM", "testNoBoms", "testReadEmpty", "testReadSmall", "testReadTwiceWithBOM", "testReadTwiceWithoutBOM", "testReadWithBOMInclude", "testReadWithBOMUtf16Be", "testReadWithBOMUtf16Le", "testReadWithBOMUtf32Be", "testReadWithBOMUtf32Le", "testReadWithBOMUtf8", "testReadWithMultipleBOM", "testReadWithoutBOM", "testReadXmlWithBOMUcs2", "testReadXmlWithBOMUtf16Be", "testReadXmlWithBOMUtf16Le", "testReadXmlWithBOMUtf32Be", "testReadXmlWithBOMUtf32Le", "testReadXmlWithBOMUtf8", "testReadXmlWithoutBOMUtf32Be", "testReadXmlWithoutBOMUtf32Le", "testSkipWithBOM", "testSkipWithoutBOM", "testSmallBufferWithBOM", "testSmallBufferWithoutBOM" ],
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testEncodingAttributeXML", "testHttp", "testHttpContent", "testRawBomUtf16", "testRawBomUtf32", "testRawBomUtf8", "testRawContent", "testRawNoBomCp1047", "testRawNoBomIso8859_1", "testRawNoBomUsAscii", "testRawNoBomUtf16BE", "testRawNoBomUtf16LE", "testRawNoBomUtf32BE", "testRawNoBomUtf32LE", "testRawNoBomUtf8" ],
            "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testCalculateHttpEncoding", "testCalculateHttpEncodingUtf32", "testCalculateRawEncodingAdditonalUTF16", "testCalculateRawEncodingAdditonalUTF32", "testCalculateRawEncodingNoBOM", "testCalculateRawEncodingStandard", "testCalculateRawEncodingStandardUtf32" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "skipReturnValueWithBom", "skipReturnValueWithoutBom", "testAvailableWithBOM", "testAvailableWithoutBOM", "testClose", "testEmptyBufferWithBOM", "testEmptyBufferWithoutBOM", "testGetBOMFirstThenRead", "testGetBOMFirstThenReadInclude", "testLargeBufferWithBOM", "testLargeBufferWithoutBOM", "testLeadingNonBOMBufferedRead", "testLeadingNonBOMSingleRead", "testMarkResetAfterReadWithBOM", "testMarkResetAfterReadWithoutBOM", "testMarkResetBeforeReadWithBOM", "testMarkResetBeforeReadWithoutBOM", "testNoBoms", "testReadEmpty", "testReadSmall", "testReadTwiceWithBOM", "testReadTwiceWithoutBOM", "testReadWithBOMInclude", "testReadWithBOMUtf16Be", "testReadWithBOMUtf16Le", "testReadWithBOMUtf32Be", "testReadWithBOMUtf32Le", "testReadWithBOMUtf8", "testReadWithMultipleBOM", "testReadWithoutBOM", "testReadXmlWithBOMUcs2", "testReadXmlWithBOMUcs4", "testReadXmlWithBOMUtf16Be", "testReadXmlWithBOMUtf16Le", "testReadXmlWithBOMUtf32Be", "testReadXmlWithBOMUtf32Le", "testReadXmlWithBOMUtf8", "testReadXmlWithoutBOMUtf32Be", "testReadXmlWithoutBOMUtf32Le", "testSkipWithBOM", "testSkipWithoutBOM", "testSmallBufferWithBOM", "testSmallBufferWithoutBOM", "testSupportCode" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest$ExpectCloseInputStream" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testClose" ]
          }
        },
        "org.apache.commons.io.input.BoundedInputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.input.BoundedInputStreamTest" : [ "testReadArray", "testReadSingle" ]
          }
        },
        "org.apache.commons.io.input.BoundedReader" : {
          "testcases" : {
            "org.apache.commons.io.input.BoundedReaderTest" : [ "closeTest", "markReset", "markResetFromOffset1", "markResetMarkMore", "markResetWithMarkOutsideBoundedReaderMax", "markResetWithMarkOutsideBoundedReaderMaxAndInitialOffset", "readMulti", "readMultiWithOffset", "readTillEnd", "shortReader", "skipTest", "testReadBytesEOF" ]
          }
        },
        "org.apache.commons.io.input.BoundedReaderTest" : {
          "testcases" : {
            "org.apache.commons.io.input.BoundedReaderTest" : [ "closeTest", "markReset", "markResetFromOffset1", "markResetMarkMore", "markResetWithMarkOutsideBoundedReaderMax", "markResetWithMarkOutsideBoundedReaderMaxAndInitialOffset", "readMulti", "readMultiWithOffset", "readTillEnd", "shortReader", "skipTest", "testReadBytesEOF" ]
          }
        },
        "org.apache.commons.io.input.BrokenInputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.input.BrokenInputStreamTest" : [ "testAvailable", "testClose", "testRead", "testReset", "testSkip" ]
          }
        },
        "org.apache.commons.io.input.CharSequenceInputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.input.CharSequenceInputStreamTest" : [ "testAvailable", "testBufferedRead_AvailableCharset", "testBufferedRead_RequiredCharset", "testBufferedRead_UTF8", "testCharsetMismatchInfiniteLoop_RequiredCharsets", "testIO_356_B10_D10_S0_UTF16", "testIO_356_B10_D10_S0_UTF8", "testIO_356_B10_D10_S1_UTF8", "testIO_356_B10_D10_S2_UTF8", "testIO_356_B10_D13_S0_UTF8", "testIO_356_B10_D13_S1_UTF8", "testIO_356_B10_D20_S0_UTF8", "testIO_356_Loop_UTF16", "testIO_356_Loop_UTF8", "testLargeBufferedRead_RequiredCharsets", "testLargeBufferedRead_UTF8", "testLargeSingleByteRead_RequiredCharsets", "testLargeSingleByteRead_UTF8", "testMarkReset_USASCII", "testMarkReset_UTF8", "testMarkSupported", "testReadZero_EmptyString", "testReadZero_RequiredCharsets", "testSingleByteRead_RequiredCharsets", "testSingleByteRead_UTF16", "testSingleByteRead_UTF8", "testSkip_USASCII", "testSkip_UTF8" ]
          }
        },
        "org.apache.commons.io.input.ClassLoaderObjectInputStream#resolveClass(java.io.ObjectStreamClass)" : { },
        "org.apache.commons.io.input.ClassLoaderObjectInputStreamTest" : { },
        "org.apache.commons.io.input.ClassLoaderObjectInputStreamTest$E" : { },
        "org.apache.commons.io.input.ClassLoaderObjectInputStreamTest$Test" : { },
        "org.apache.commons.io.input.CloseShieldInputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.input.CloseShieldInputStreamTest" : [ "testClose" ]
          }
        },
        "org.apache.commons.io.input.ClosedInputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.input.ClosedInputStreamTest" : [ "testRead" ]
          }
        },
        "org.apache.commons.io.input.CountingInputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.input.CountingInputStreamTest" : [ "testCounting", "testEOF1", "testEOF2", "testEOF3", "testLargeFiles_IO84", "testResetting", "testSkipping", "testZeroLength1", "testZeroLength2", "testZeroLength3" ]
          }
        },
        "org.apache.commons.io.input.InfiniteCircularInputStream" : {
          "testcases" : {
            "org.apache.commons.io.input.InfiniteCircularInputStreamTest" : [ "should_cycle_bytes", "should_handle_whole_range_of_bytes" ]
          }
        },
        "org.apache.commons.io.input.InfiniteCircularInputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.input.InfiniteCircularInputStreamTest" : [ "should_cycle_bytes", "should_handle_whole_range_of_bytes" ]
          }
        },
        "org.apache.commons.io.input.MessageDigestCalculatingInputStream" : {
          "testcases" : {
            "org.apache.commons.io.input.MessageDigestCalculatingInputStreamTest" : [ "test" ]
          }
        },
        "org.apache.commons.io.input.MessageDigestCalculatingInputStream$MessageDigestMaintainingObserver" : {
          "testcases" : {
            "org.apache.commons.io.input.MessageDigestCalculatingInputStreamTest" : [ "test" ]
          }
        },
        "org.apache.commons.io.input.MessageDigestCalculatingInputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.input.MessageDigestCalculatingInputStreamTest" : [ "test" ],
            "org.apache.commons.io.input.ObservableInputStreamTest" : [ "testDataByteCalled", "testDataBytesCalled" ]
          }
        },
        "org.apache.commons.io.input.NullInputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.input.NullInputStreamTest" : [ "testEOFException", "testMarkAndReset", "testMarkNotSupported", "testRead", "testReadByteArray", "testSkip" ]
          }
        },
        "org.apache.commons.io.input.NullInputStreamTest$TestNullInputStream" : {
          "testcases" : {
            "org.apache.commons.io.input.NullInputStreamTest" : [ "testEOFException", "testMarkAndReset", "testMarkNotSupported", "testRead", "testReadByteArray", "testSkip" ]
          }
        },
        "org.apache.commons.io.input.NullReaderTest" : {
          "testcases" : {
            "org.apache.commons.io.input.NullReaderTest" : [ "testEOFException", "testMarkAndReset", "testMarkNotSupported", "testRead", "testReadCharArray", "testSkip" ]
          }
        },
        "org.apache.commons.io.input.NullReaderTest$TestNullReader" : {
          "testcases" : {
            "org.apache.commons.io.input.NullReaderTest" : [ "testEOFException", "testMarkAndReset", "testMarkNotSupported", "testRead", "testReadCharArray", "testSkip" ]
          }
        },
        "org.apache.commons.io.input.ObservableInputStream" : {
          "testcases" : {
            "org.apache.commons.io.input.MessageDigestCalculatingInputStreamTest" : [ "test" ],
            "org.apache.commons.io.input.ObservableInputStreamTest" : [ "testDataByteCalled", "testDataBytesCalled" ]
          }
        },
        "org.apache.commons.io.input.ObservableInputStream$Observer" : {
          "testcases" : {
            "org.apache.commons.io.input.MessageDigestCalculatingInputStreamTest" : [ "test" ],
            "org.apache.commons.io.input.ObservableInputStreamTest" : [ "testDataByteCalled", "testDataBytesCalled" ]
          }
        },
        "org.apache.commons.io.input.ObservableInputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.input.ObservableInputStreamTest" : [ "testDataByteCalled", "testDataBytesCalled" ]
          }
        },
        "org.apache.commons.io.input.ObservableInputStreamTest$LastByteKeepingObserver" : {
          "testcases" : {
            "org.apache.commons.io.input.ObservableInputStreamTest" : [ "testDataByteCalled" ]
          }
        },
        "org.apache.commons.io.input.ObservableInputStreamTest$LastBytesKeepingObserver" : {
          "testcases" : {
            "org.apache.commons.io.input.ObservableInputStreamTest" : [ "testDataBytesCalled" ]
          }
        },
        "org.apache.commons.io.input.ProxyReaderTest" : {
          "testcases" : {
            "org.apache.commons.io.input.ProxyReaderTest" : [ "testNullCharArray", "testNullCharBuffer" ]
          }
        },
        "org.apache.commons.io.input.ProxyReaderTest$CustomNullReader" : {
          "testcases" : {
            "org.apache.commons.io.input.ProxyReaderTest" : [ "testNullCharArray", "testNullCharBuffer" ]
          }
        },
        "org.apache.commons.io.input.ProxyReaderTest$ProxyReaderImpl" : {
          "testcases" : {
            "org.apache.commons.io.input.ProxyReaderTest" : [ "testNullCharArray", "testNullCharBuffer" ]
          }
        },
        "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize" : {
          "testcases" : {
            "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize" : [ "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=256)", "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=1)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=256)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=3)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=8)", "testGBK(JUNIT_PARAMETERIZED-BlockSize=1)", "testGBK(JUNIT_PARAMETERIZED-BlockSize=256)", "testGBK(JUNIT_PARAMETERIZED-BlockSize=3)", "testGBK(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testGBK(JUNIT_PARAMETERIZED-BlockSize=8)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=1)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=256)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=3)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=8)", "testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=1)", "testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=256)", "testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=3)", "testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=8)", "testShiftJISFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testShiftJISFile(JUNIT_PARAMETERIZED-BlockSize=256)", "testShiftJISFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testShiftJISFile(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testShiftJISFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=8)", "testUnsupportedEncodingBig5(JUNIT_PARAMETERIZED-BlockSize=1)", "testUnsupportedEncodingBig5(JUNIT_PARAMETERIZED-BlockSize=256)", "testUnsupportedEncodingBig5(JUNIT_PARAMETERIZED-BlockSize=3)", "testUnsupportedEncodingBig5(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUnsupportedEncodingBig5(JUNIT_PARAMETERIZED-BlockSize=8)", "testUnsupportedEncodingUTF16(JUNIT_PARAMETERIZED-BlockSize=1)", "testUnsupportedEncodingUTF16(JUNIT_PARAMETERIZED-BlockSize=256)", "testUnsupportedEncodingUTF16(JUNIT_PARAMETERIZED-BlockSize=3)", "testUnsupportedEncodingUTF16(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUnsupportedEncodingUTF16(JUNIT_PARAMETERIZED-BlockSize=8)", "testWindows31jFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testWindows31jFile(JUNIT_PARAMETERIZED-BlockSize=256)", "testWindows31jFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testWindows31jFile(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testWindows31jFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testxWindows949File(JUNIT_PARAMETERIZED-BlockSize=1)", "testxWindows949File(JUNIT_PARAMETERIZED-BlockSize=256)", "testxWindows949File(JUNIT_PARAMETERIZED-BlockSize=3)", "testxWindows949File(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testxWindows949File(JUNIT_PARAMETERIZED-BlockSize=8)", "testxWindows950File(JUNIT_PARAMETERIZED-BlockSize=1)", "testxWindows950File(JUNIT_PARAMETERIZED-BlockSize=256)", "testxWindows950File(JUNIT_PARAMETERIZED-BlockSize=3)", "testxWindows950File(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testxWindows950File(JUNIT_PARAMETERIZED-BlockSize=8)" ],
            "org.apache.commons.io.input.ReversedLinesFileReaderTestSimple" : [ "testFileSizeIsExactMultipleOfBlockSize" ]
          }
        },
        "org.apache.commons.io.input.SwappedDataInputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.input.SwappedDataInputStreamTest" : [ "testReadBoolean", "testReadByte", "testReadChar", "testReadDouble", "testReadFloat", "testReadFully", "testReadInt", "testReadLine", "testReadLong", "testReadShort", "testReadUTF", "testReadUnsignedByte", "testReadUnsignedShort", "testSkipBytes" ]
          }
        },
        "org.apache.commons.io.input.TaggedInputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.input.TaggedInputStreamTest" : [ "testBrokenStream", "testEmptyStream", "testNormalStream", "testOtherException" ]
          }
        },
        "org.apache.commons.io.input.Tailer#run" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testBufferBreak", "testIO335", "testInterrupt", "testLongFile", "testMultiByteBreak", "testStopWithNoFile", "testStopWithNoFileUsingExecutor", "testTailer", "testTailerEndOfFileReached", "testTailerEof" ]
          }
        },
        "org.apache.commons.io.input.TailerTest" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testBufferBreak", "testIO335", "testInterrupt", "testLongFile", "testMultiByteBreak", "testStopWithNoFile", "testStopWithNoFileUsingExecutor", "testTailer", "testTailerEndOfFileReached", "testTailerEof" ]
          }
        },
        "org.apache.commons.io.input.TailerTest$TestTailerListener" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testBufferBreak", "testIO335", "testInterrupt", "testLongFile", "testMultiByteBreak", "testStopWithNoFile", "testStopWithNoFileUsingExecutor", "testTailer", "testTailerEndOfFileReached", "testTailerEof" ]
          }
        },
        "org.apache.commons.io.input.TeeInputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.input.TeeInputStreamTest" : [ "testMarkReset", "testReadEverything", "testReadNothing", "testReadOneByte", "testReadToArray", "testReadToArrayWithOffset", "testSkip" ]
          }
        },
        "org.apache.commons.io.input.UnixLineEndingInputStream" : {
          "testcases" : {
            "org.apache.commons.io.input.UnixLineEndingInputStreamTest" : [ "crAtEnd", "crOnlyEnsureAtEof", "crOnlyNotAtEof", "inTheMiddleOfTheLine", "multipleBlankLines", "retainLineFeed", "simpleString", "twoLinesAtEnd" ]
          }
        },
        "org.apache.commons.io.input.UnixLineEndingInputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.input.UnixLineEndingInputStreamTest" : [ "crAtEnd", "crOnlyEnsureAtEof", "crOnlyNotAtEof", "inTheMiddleOfTheLine", "multipleBlankLines", "retainLineFeed", "simpleString", "twoLinesAtEnd" ]
          }
        },
        "org.apache.commons.io.input.WindowsLineEndingInputStream" : {
          "testcases" : {
            "org.apache.commons.io.input.WindowsLineEndingInputStreamTest" : [ "inTheMiddleOfTheLine", "linuxLinefeeds", "malformed", "multipleBlankLines", "retainLineFeed", "simpleString", "twoLinesAtEnd" ]
          }
        },
        "org.apache.commons.io.input.WindowsLineEndingInputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.input.WindowsLineEndingInputStreamTest" : [ "inTheMiddleOfTheLine", "linuxLinefeeds", "malformed", "multipleBlankLines", "retainLineFeed", "simpleString", "twoLinesAtEnd" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReaderTest" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testEncodingAttributeXML", "testHttp", "testHttpContent", "testRawBomUtf16", "testRawBomUtf32", "testRawBomUtf8", "testRawContent", "testRawNoBomCp1047", "testRawNoBomIso8859_1", "testRawNoBomUsAscii", "testRawNoBomUtf16BE", "testRawNoBomUtf16LE", "testRawNoBomUtf32BE", "testRawNoBomUtf32LE", "testRawNoBomUtf8" ]
          }
        },
        "org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest#calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)" : { },
        "org.apache.commons.io.monitor.AbstractMonitorTestCase" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor", "testMonitor", "testThreadFactory" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile", "testToString" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor", "testMonitor", "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationObserver" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor", "testMonitor", "testThreadFactory" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile", "testToString" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile", "testToString" ]
          }
        },
        "org.apache.commons.io.output.AppendableOutputStream" : {
          "testcases" : {
            "org.apache.commons.io.output.AppendableOutputStreamTest" : [ "testWriteInt", "testWriteStringBuilder" ]
          }
        },
        "org.apache.commons.io.output.AppendableOutputStreamTest#testWriteInt" : {
          "testcases" : {
            "org.apache.commons.io.output.AppendableOutputStreamTest" : [ "testWriteInt" ]
          }
        },
        "org.apache.commons.io.output.AppendableOutputStreamTest#testWriteStringBuilder" : {
          "testcases" : {
            "org.apache.commons.io.output.AppendableOutputStreamTest" : [ "testWriteStringBuilder" ]
          }
        },
        "org.apache.commons.io.output.BrokenOutputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.output.BrokenOutputStreamTest" : [ "testClose", "testFlush", "testWrite" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream" : {
          "testcases" : {
            "org.apache.commons.io.CopyUtilsTest" : [ "copy_byteArrayToOutputStream", "copy_byteArrayToWriter", "copy_inputStreamToWriter", "copy_readerToWriter", "copy_stringToOutputStream", "copy_stringToWriter", "testCopy_inputStreamToOutputStream", "testCopy_readerToOutputStream" ],
            "org.apache.commons.io.DemuxTestCase" : [ "testOutputStream" ],
            "org.apache.commons.io.HexDumpTest" : [ "testDump" ],
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToOutputStreamWithBufferSize", "testCopy_inputStreamToOutputStream_nullIn", "testCopy_inputStreamToWriter", "testCopy_inputStreamToWriter_Encoding", "testCopy_inputStreamToWriter_Encoding_nullEncoding", "testCopy_inputStreamToWriter_Encoding_nullIn", "testCopy_inputStreamToWriter_nullIn", "testCopy_readerToOutputStream", "testCopy_readerToOutputStream_Encoding", "testCopy_readerToOutputStream_Encoding_nullEncoding", "testCopy_readerToOutputStream_Encoding_nullIn", "testCopy_readerToOutputStream_nullIn", "testCopy_readerToWriter", "testCopy_readerToWriter_nullIn" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testCopy_ByteArray_OutputStream", "testCopy_ByteArray_Writer", "testResourceToByteArray_ExistingResourceAtRootPackage", "testResourceToByteArray_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToByteArray_ExistingResourceAtSubPackage", "testResourceToByteArray_ExistingResourceAtSubPackage_WithClassLoader", "testToBufferedInputStreamWithBufferSize_InputStream", "testToBufferedInputStream_InputStream", "testToByteArray_InputStream", "testToByteArray_Reader", "testToByteArray_URI", "testToByteArray_URL", "testToByteArray_URLConnection", "testToInputStream_CharSequence", "testToInputStream_String", "testToString_ByteArray" ],
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWriteLines_OutputStream", "testWriteLines_OutputStream_Encoding", "testWriteLines_OutputStream_Encoding_nullData", "testWriteLines_OutputStream_Encoding_nullEncoding", "testWriteLines_OutputStream_Encoding_nullSeparator", "testWriteLines_OutputStream_nullData", "testWriteLines_OutputStream_nullSeparator", "testWriteLines_Writer", "testWriteLines_Writer_nullData", "testWriteLines_Writer_nullSeparator", "testWrite_byteArrayToOutputStream", "testWrite_byteArrayToOutputStream_nullData", "testWrite_byteArrayToWriter", "testWrite_byteArrayToWriter_Encoding", "testWrite_byteArrayToWriter_Encoding_nullData", "testWrite_byteArrayToWriter_Encoding_nullEncoding", "testWrite_byteArrayToWriter_nullData", "testWrite_charArrayToOutputStream", "testWrite_charArrayToOutputStream_Encoding", "testWrite_charArrayToOutputStream_Encoding_nullData", "testWrite_charArrayToOutputStream_nullData", "testWrite_charArrayToOutputStream_nullEncoding", "testWrite_charArrayToWriter", "testWrite_charArrayToWriter_Encoding_nullData", "testWrite_charSequenceToOutputStream", "testWrite_charSequenceToOutputStream_Encoding", "testWrite_charSequenceToOutputStream_Encoding_nullData", "testWrite_charSequenceToOutputStream_nullData", "testWrite_charSequenceToOutputStream_nullEncoding", "testWrite_charSequenceToWriter", "testWrite_charSequenceToWriter_Encoding_nullData", "testWrite_stringToOutputStream", "testWrite_stringToOutputStream_Encoding", "testWrite_stringToOutputStream_Encoding_nullData", "testWrite_stringToOutputStream_nullData", "testWrite_stringToOutputStream_nullEncoding", "testWrite_stringToWriter", "testWrite_stringToWriter_Encoding_nullData" ],
            "org.apache.commons.io.input.BoundedInputStreamTest" : [ "testReadArray" ],
            "org.apache.commons.io.output.ByteArrayOutputStreamTestCase" : [ "testStream", "testToInputStream", "testToInputStreamWithReset" ],
            "org.apache.commons.io.output.ChunkedOutputStreamTest" : [ "defaultConstructor", "negative_chunksize_not_permitted", "write_four_chunks" ],
            "org.apache.commons.io.output.ChunkedWriterTest" : [ "negative_chunksize_not_permitted", "write_four_chunks", "write_two_chunks_default_constructor" ],
            "org.apache.commons.io.output.CloseShieldOutputStreamTest" : [ "testClose" ],
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 1)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 1.024)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 128)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 16)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 2)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 2.048)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 256)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 32)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 4)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 4.096)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 512)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 64)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 8)", "testAtThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 1)", "testAtThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 1.024)", "testAtThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 128)", "testAtThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 16)", "testAtThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 2)", "testAtThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 2.048)", "testAtThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 256)", "testAtThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 32)", "testAtThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 4)", "testAtThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 4.096)", "testAtThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 512)", "testAtThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 64)", "testAtThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 8)", "testBelowThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 1)", "testBelowThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 1.024)", "testBelowThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 128)", "testBelowThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 16)", "testBelowThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 2)", "testBelowThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 2.048)", "testBelowThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 256)", "testBelowThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 32)", "testBelowThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 4)", "testBelowThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 4.096)", "testBelowThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 512)", "testBelowThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 64)", "testBelowThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 8)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 1)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 1.024)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 128)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 16)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 2)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 2.048)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 256)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 32)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 4)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 4.096)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 512)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 64)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 8)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 1)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 1.024)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 128)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 16)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 2)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 2.048)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 256)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 32)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 4)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 4.096)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 512)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 64)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 8)", "testTempFileBelowThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 1)", "testTempFileBelowThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 1.024)", "testTempFileBelowThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 128)", "testTempFileBelowThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 16)", "testTempFileBelowThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 2)", "testTempFileBelowThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 2.048)", "testTempFileBelowThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 256)", "testTempFileBelowThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 32)", "testTempFileBelowThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 4)", "testTempFileBelowThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 4.096)", "testTempFileBelowThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 512)", "testTempFileBelowThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 64)", "testTempFileBelowThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 8)", "testTempFileError(JUNIT_PARAMETERIZED-initialBufferSize = 1)", "testTempFileError(JUNIT_PARAMETERIZED-initialBufferSize = 1.024)", "testTempFileError(JUNIT_PARAMETERIZED-initialBufferSize = 128)", "testTempFileError(JUNIT_PARAMETERIZED-initialBufferSize = 16)", "testTempFileError(JUNIT_PARAMETERIZED-initialBufferSize = 2)", "testTempFileError(JUNIT_PARAMETERIZED-initialBufferSize = 2.048)", "testTempFileError(JUNIT_PARAMETERIZED-initialBufferSize = 256)", "testTempFileError(JUNIT_PARAMETERIZED-initialBufferSize = 32)", "testTempFileError(JUNIT_PARAMETERIZED-initialBufferSize = 4)", "testTempFileError(JUNIT_PARAMETERIZED-initialBufferSize = 4.096)", "testTempFileError(JUNIT_PARAMETERIZED-initialBufferSize = 512)", "testTempFileError(JUNIT_PARAMETERIZED-initialBufferSize = 64)", "testTempFileError(JUNIT_PARAMETERIZED-initialBufferSize = 8)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 1)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 1.024)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 128)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 16)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 2)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 2.048)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 256)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 32)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 4)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 4.096)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 512)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 64)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 8)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 1)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 1.024)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 128)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 16)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 2)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 2.048)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 256)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 32)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 4)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 4.096)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 512)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 64)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 8)", "testWriteToSmall(JUNIT_PARAMETERIZED-initialBufferSize = 1)", "testWriteToSmall(JUNIT_PARAMETERIZED-initialBufferSize = 1.024)", "testWriteToSmall(JUNIT_PARAMETERIZED-initialBufferSize = 128)", "testWriteToSmall(JUNIT_PARAMETERIZED-initialBufferSize = 16)", "testWriteToSmall(JUNIT_PARAMETERIZED-initialBufferSize = 2)", "testWriteToSmall(JUNIT_PARAMETERIZED-initialBufferSize = 2.048)", "testWriteToSmall(JUNIT_PARAMETERIZED-initialBufferSize = 256)", "testWriteToSmall(JUNIT_PARAMETERIZED-initialBufferSize = 32)", "testWriteToSmall(JUNIT_PARAMETERIZED-initialBufferSize = 4)", "testWriteToSmall(JUNIT_PARAMETERIZED-initialBufferSize = 4.096)", "testWriteToSmall(JUNIT_PARAMETERIZED-initialBufferSize = 512)", "testWriteToSmall(JUNIT_PARAMETERIZED-initialBufferSize = 64)", "testWriteToSmall(JUNIT_PARAMETERIZED-initialBufferSize = 8)" ],
            "org.apache.commons.io.output.ProxyOutputStreamTest" : [ "testWrite", "testWriteNullBaSucceeds" ],
            "org.apache.commons.io.output.ProxyWriterTest" : [ "exceptions_in_append_char", "exceptions_in_append_charSequence", "exceptions_in_append_charSequence_offset", "exceptions_in_close", "exceptions_in_flush", "exceptions_in_write_char_array", "exceptions_in_write_int", "exceptions_in_write_offset_char_array", "exceptions_in_write_string", "exceptions_in_write_string_offset" ],
            "org.apache.commons.io.output.TaggedOutputStreamTest" : [ "testNormalStream" ],
            "org.apache.commons.io.output.ThresholdingOutputStreamTest" : [ "testSetByteCount" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream#<init>" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyFileToOutputStream" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream#close" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyFileToOutputStream" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream#needNewBuffer(int)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyFileToOutputStream" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream#toByteArray" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyFileToOutputStream" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStreamTestCase" : {
          "testcases" : {
            "org.apache.commons.io.output.ByteArrayOutputStreamTestCase" : [ "testStream", "testToInputStream", "testToInputStreamWithReset" ]
          }
        },
        "org.apache.commons.io.output.ChunkedOutputStream" : {
          "testcases" : {
            "org.apache.commons.io.output.ChunkedOutputStreamTest" : [ "defaultConstructor", "negative_chunksize_not_permitted", "write_four_chunks" ]
          }
        },
        "org.apache.commons.io.output.ChunkedOutputStreamTest#defaultConstructor" : {
          "testcases" : {
            "org.apache.commons.io.output.ChunkedOutputStreamTest" : [ "defaultConstructor" ]
          }
        },
        "org.apache.commons.io.output.ChunkedOutputStreamTest#getByteArrayOutputStream(java.util.concurrent.atomic.AtomicInteger)" : {
          "testcases" : {
            "org.apache.commons.io.output.ChunkedOutputStreamTest" : [ "defaultConstructor", "write_four_chunks" ]
          }
        },
        "org.apache.commons.io.output.ChunkedOutputStreamTest#negative_chunksize_not_permitted" : {
          "testcases" : {
            "org.apache.commons.io.output.ChunkedOutputStreamTest" : [ "negative_chunksize_not_permitted" ]
          }
        },
        "org.apache.commons.io.output.ChunkedOutputStreamTest#write_four_chunks" : {
          "testcases" : {
            "org.apache.commons.io.output.ChunkedOutputStreamTest" : [ "write_four_chunks" ]
          }
        },
        "org.apache.commons.io.output.ChunkedWriter" : {
          "testcases" : {
            "org.apache.commons.io.output.ChunkedWriterTest" : [ "negative_chunksize_not_permitted", "write_four_chunks", "write_two_chunks_default_constructor" ]
          }
        },
        "org.apache.commons.io.output.ChunkedWriterTest#getOutputStreamWriter(java.util.concurrent.atomic.AtomicInteger)" : {
          "testcases" : {
            "org.apache.commons.io.output.ChunkedWriterTest" : [ "write_four_chunks", "write_two_chunks_default_constructor" ]
          }
        },
        "org.apache.commons.io.output.ChunkedWriterTest#write_four_chunks" : {
          "testcases" : {
            "org.apache.commons.io.output.ChunkedWriterTest" : [ "write_four_chunks" ]
          }
        },
        "org.apache.commons.io.output.ChunkedWriterTest#write_two_chunks_default_constructor" : {
          "testcases" : {
            "org.apache.commons.io.output.ChunkedWriterTest" : [ "write_two_chunks_default_constructor" ]
          }
        },
        "org.apache.commons.io.output.CloseShieldOutputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.output.CloseShieldOutputStreamTest" : [ "testClose" ]
          }
        },
        "org.apache.commons.io.output.ClosedOutputStream" : {
          "testcases" : {
            "org.apache.commons.io.output.CloseShieldOutputStreamTest" : [ "testClose" ],
            "org.apache.commons.io.output.ClosedOutputStreamTest" : [ "testRead" ],
            "org.apache.commons.io.output.TaggedOutputStreamTest" : [ "testOtherException" ]
          }
        },
        "org.apache.commons.io.output.ClosedOutputStream#<init>" : {
          "testcases" : {
            "org.apache.commons.io.output.ClosedOutputStreamTest" : [ "testFlush" ]
          }
        },
        "org.apache.commons.io.output.ClosedOutputStream#flush" : {
          "testcases" : {
            "org.apache.commons.io.output.ClosedOutputStreamTest" : [ "testFlush" ]
          }
        },
        "org.apache.commons.io.output.ClosedOutputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.output.ClosedOutputStreamTest" : [ "testFlush", "testRead" ]
          }
        },
        "org.apache.commons.io.output.ClosedOutputStreamTest#testFlush" : {
          "testcases" : {
            "org.apache.commons.io.output.ClosedOutputStreamTest" : [ "testFlush" ]
          }
        },
        "org.apache.commons.io.output.CountingOutputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.output.CountingOutputStreamTest" : [ "testCounting", "testLargeFiles_IO84" ]
          }
        },
        "org.apache.commons.io.output.DeferredFileOutputStream#thresholdReached" : {
          "testcases" : {
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 1)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 1.024)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 128)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 16)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 2)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 2.048)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 256)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 32)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 4)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 4.096)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 512)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 64)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 8)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 1)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 1.024)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 128)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 16)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 2)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 2.048)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 256)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 32)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 4)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 4.096)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 512)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 64)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 8)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 1)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 1.024)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 128)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 16)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 2)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 2.048)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 256)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 32)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 4)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 4.096)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 512)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 64)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 8)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 1)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 1.024)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 128)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 16)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 2)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 2.048)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 256)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 32)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 4)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 4.096)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 512)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 64)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 8)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 1)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 1.024)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 128)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 16)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 2)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 2.048)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 256)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 32)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 4)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 4.096)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 512)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 64)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 8)" ]
          }
        },
        "org.apache.commons.io.output.FileWriterWithEncodingTest" : {
          "testcases" : {
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "constructor_File_directory", "constructor_File_encoding_badEncoding", "constructor_File_nullFile", "constructor_fileName_nullFile", "sameEncoding_CharsetEncoder_constructor", "sameEncoding_Charset_constructor", "sameEncoding_null_Charset_constructor", "sameEncoding_string_CharsetEncoder_constructor", "sameEncoding_string_Charset_constructor", "sameEncoding_string_constructor", "sameEncoding_string_string_constructor", "testDifferentEncoding" ]
          }
        },
        "org.apache.commons.io.output.LockableFileWriterTest" : {
          "testcases" : {
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testConstructor_fileName_nullFile", "testFileLocked", "testFileNotLocked" ]
          }
        },
        "org.apache.commons.io.output.NullOutputStream#<init>" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnNullChecksum" ]
          }
        },
        "org.apache.commons.io.output.NullOutputStream#write(byte[],int,int)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testChecksum", "testChecksumCRC32", "testChecksumDouble" ]
          }
        },
        "org.apache.commons.io.output.NullOutputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.output.NullOutputStreamTest" : [ "testNull" ]
          }
        },
        "org.apache.commons.io.output.ProxyOutputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyOutputStreamTest" : [ "testWrite", "testWriteNullBaSucceeds" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriterTest#exceptions_in_append_char" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "exceptions_in_append_char" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriterTest#exceptions_in_append_charSequence" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "exceptions_in_append_charSequence" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriterTest#exceptions_in_append_charSequence_offset" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "exceptions_in_append_charSequence_offset" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriterTest#exceptions_in_close" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "exceptions_in_close" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriterTest#exceptions_in_flush" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "exceptions_in_flush" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriterTest#exceptions_in_write_char_array" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "exceptions_in_write_char_array" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriterTest#exceptions_in_write_int" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "exceptions_in_write_int" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriterTest#exceptions_in_write_offset_char_array" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "exceptions_in_write_offset_char_array" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriterTest#exceptions_in_write_string" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "exceptions_in_write_string" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriterTest#exceptions_in_write_string_offset" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "exceptions_in_write_string_offset" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#<init>" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnNullChecksum", "testContentEquals", "testContentEqualsIgnoreEOL", "testCopyDirectoryFiltered", "testCopyDirectoryPreserveDates", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testCopyFileToOutputStream", "testCopyURLToFile", "testCopyURLToFileWithTimeout", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testFileUtils", "testIsFileNewerOlder", "testIterateFiles", "testIterateFilesAndDirs", "testListFiles", "testListFilesWithDirs", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory_Errors", "testMoveFile_Errors", "testMoveToDirectory", "testReadFileToByteArray", "testReadFileToStringWithDefaultEncoding", "testReadFileToStringWithEncoding", "testReadLines", "testSizeOfDirectoryAsBigInteger", "testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_3arg_nullSeparator", "testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile1", "testWriteStringToFile2", "testWriteStringToFile3", "testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#close" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnNullChecksum", "testContentEquals", "testContentEqualsIgnoreEOL", "testCopyDirectoryFiltered", "testCopyDirectoryPreserveDates", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testCopyFileToOutputStream", "testCopyURLToFile", "testCopyURLToFileWithTimeout", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testFileUtils", "testIsFileNewerOlder", "testIterateFiles", "testIterateFilesAndDirs", "testListFiles", "testListFilesWithDirs", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory_Errors", "testMoveFile_Errors", "testMoveToDirectory", "testReadFileToByteArray", "testReadFileToStringWithDefaultEncoding", "testReadFileToStringWithEncoding", "testReadLines", "testSizeOfDirectoryAsBigInteger", "testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_3arg_nullSeparator", "testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile1", "testWriteStringToFile2", "testWriteStringToFile3", "testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#toString" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnNullChecksum", "testContentEquals", "testContentEqualsIgnoreEOL", "testCopyDirectoryFiltered", "testCopyDirectoryPreserveDates", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testCopyFileToOutputStream", "testCopyURLToFile", "testCopyURLToFileWithTimeout", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testFileUtils", "testIsFileNewerOlder", "testIterateFiles", "testIterateFilesAndDirs", "testListFiles", "testListFilesWithDirs", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory_Errors", "testMoveFile_Errors", "testMoveToDirectory", "testReadFileToByteArray", "testReadFileToStringWithDefaultEncoding", "testReadFileToStringWithEncoding", "testReadLines", "testSizeOfDirectoryAsBigInteger", "testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_3arg_nullSeparator", "testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile1", "testWriteStringToFile2", "testWriteStringToFile3", "testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#write(char[],int,int)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnNullChecksum", "testContentEquals", "testContentEqualsIgnoreEOL", "testCopyDirectoryFiltered", "testCopyDirectoryPreserveDates", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testCopyFileToOutputStream", "testCopyURLToFile", "testCopyURLToFileWithTimeout", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testFileUtils", "testIsFileNewerOlder", "testIterateFiles", "testIterateFilesAndDirs", "testListFiles", "testListFilesWithDirs", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory_Errors", "testMoveFile_Errors", "testMoveToDirectory", "testReadFileToByteArray", "testReadFileToStringWithDefaultEncoding", "testReadFileToStringWithEncoding", "testReadLines", "testSizeOfDirectoryAsBigInteger", "testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_3arg_nullSeparator", "testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile1", "testWriteStringToFile2", "testWriteStringToFile3", "testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriterTest" : {
          "testcases" : {
            "org.apache.commons.io.output.StringBuilderWriterTest" : [ "testAppendChar", "testAppendCharSequence", "testAppendCharSequencePortion", "testAppendConstructCapacity", "testAppendConstructNull", "testAppendConstructStringBuilder", "testClose", "testWriteChar", "testWriteCharArray", "testWriteCharArrayPortion", "testWriteString", "testWriteStringPortion" ]
          }
        },
        "org.apache.commons.io.output.TaggedOutputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.output.TaggedOutputStreamTest" : [ "testBrokenStream", "testNormalStream", "testOtherException" ]
          }
        },
        "org.apache.commons.io.output.TeeOutputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.output.TeeOutputStreamTest" : [ "testCloseBranchIOException", "testCloseMainIOException", "testTee" ]
          }
        },
        "org.apache.commons.io.output.TeeOutputStreamTest$ExceptionOnCloseByteArrayOutputStream" : {
          "testcases" : {
            "org.apache.commons.io.output.TeeOutputStreamTest" : [ "testCloseBranchIOException", "testCloseMainIOException" ]
          }
        },
        "org.apache.commons.io.output.TeeOutputStreamTest$RecordCloseByteArrayOutputStream" : {
          "testcases" : {
            "org.apache.commons.io.output.TeeOutputStreamTest" : [ "testCloseBranchIOException", "testCloseMainIOException" ]
          }
        },
        "org.apache.commons.io.output.ThresholdingOutputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.output.ThresholdingOutputStreamTest" : [ "testSetByteCount" ]
          }
        },
        "org.apache.commons.io.output.WriterOutputStream" : {
          "testcases" : {
            "org.apache.commons.io.output.WriterOutputStreamTest" : [ "testFlush", "testLargeUTF8WithBufferedWrite", "testLargeUTF8WithSingleByteWrite", "testUTF16BEWithBufferedWrite", "testUTF16BEWithSingleByteWrite", "testUTF16LEWithBufferedWrite", "testUTF16LEWithSingleByteWrite", "testUTF16WithBufferedWrite", "testUTF16WithSingleByteWrite", "testUTF8WithBufferedWrite", "testUTF8WithSingleByteWrite", "testWriteImmediately" ]
          }
        },
        "org.apache.commons.io.output.WriterOutputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.output.WriterOutputStreamTest" : [ "testFlush", "testLargeUTF8WithBufferedWrite", "testLargeUTF8WithSingleByteWrite", "testUTF16BEWithBufferedWrite", "testUTF16BEWithSingleByteWrite", "testUTF16LEWithBufferedWrite", "testUTF16LEWithSingleByteWrite", "testUTF16WithBufferedWrite", "testUTF16WithSingleByteWrite", "testUTF8WithBufferedWrite", "testUTF8WithSingleByteWrite", "testWriteImmediately" ]
          }
        },
        "org.apache.commons.io.output.XmlStreamWriterTest" : {
          "testcases" : {
            "org.apache.commons.io.output.XmlStreamWriterTest" : [ "testDefaultEncoding", "testEBCDICEncoding", "testEUC_JPEncoding", "testEmpty", "testLatin15Encoding", "testLatin1Encoding", "testLatin7Encoding", "testNoXmlHeader", "testUTF16BEEncoding", "testUTF16Encoding", "testUTF16LEEncoding", "testUTF8Encoding" ]
          }
        },
        "org.apache.commons.io.serialization.ClosingBase" : {
          "testcases" : {
            "org.apache.commons.io.serialization.MoreComplexObjectTest" : [ "trustJavaIncludingArrays", "trustJavaLang", "useBlacklist" ],
            "org.apache.commons.io.serialization.ValidatingObjectInputStreamTest" : [ "acceptCustomMatcher", "acceptPattern", "acceptWildcard", "customInvalidMethod", "exceptionIncludesClassName", "noAccept", "ourTestClassAcceptedFirst", "ourTestClassAcceptedFirstWildcard", "ourTestClassAcceptedSecond", "ourTestClassAcceptedSecondWildcard", "ourTestClassNotAccepted", "ourTestClassOnlyAccepted", "reject", "rejectCustomMatcher", "rejectOnly", "rejectPattern", "rejectPrecedence", "rejectWildcard" ]
          }
        },
        "org.apache.commons.io.serialization.FullClassNameMatcher" : {
          "testcases" : {
            "org.apache.commons.io.serialization.FullClassNameMatcherTest" : [ "noNames", "withNames" ],
            "org.apache.commons.io.serialization.MoreComplexObjectTest" : [ "trustJavaIncludingArrays", "trustJavaLang" ],
            "org.apache.commons.io.serialization.ValidatingObjectInputStreamTest" : [ "customInvalidMethod", "ourTestClassAcceptedFirst", "ourTestClassAcceptedSecond", "ourTestClassNotAccepted", "ourTestClassOnlyAccepted", "reject", "rejectCustomMatcher", "rejectOnly", "rejectPattern", "rejectPrecedence", "rejectWildcard" ]
          }
        },
        "org.apache.commons.io.serialization.MockSerializedClass" : {
          "testcases" : {
            "org.apache.commons.io.serialization.ValidatingObjectInputStreamTest" : [ "acceptCustomMatcher", "acceptPattern", "acceptWildcard", "customInvalidMethod", "exceptionIncludesClassName", "noAccept", "ourTestClassAcceptedFirst", "ourTestClassAcceptedFirstWildcard", "ourTestClassAcceptedSecond", "ourTestClassAcceptedSecondWildcard", "ourTestClassNotAccepted", "ourTestClassOnlyAccepted", "reject", "rejectCustomMatcher", "rejectOnly", "rejectPattern", "rejectPrecedence", "rejectWildcard" ]
          }
        },
        "org.apache.commons.io.serialization.MoreComplexObjectTest" : {
          "testcases" : {
            "org.apache.commons.io.serialization.MoreComplexObjectTest" : [ "trustJavaIncludingArrays", "trustJavaLang", "useBlacklist" ]
          }
        },
        "org.apache.commons.io.serialization.RegexpClassNameMatcher" : {
          "testcases" : {
            "org.apache.commons.io.serialization.RegexpClassNameMatcherTest" : [ "testNullPatternPattern", "testOrPattern", "testSimplePatternFromPattern", "testSimplePatternFromString" ],
            "org.apache.commons.io.serialization.ValidatingObjectInputStreamTest" : [ "acceptPattern", "rejectPattern" ]
          }
        },
        "org.apache.commons.io.serialization.RegexpClassNameMatcherTest#testOrPattern" : {
          "testcases" : {
            "org.apache.commons.io.serialization.RegexpClassNameMatcherTest" : [ "testOrPattern" ]
          }
        },
        "org.apache.commons.io.serialization.RegexpClassNameMatcherTest#testSimplePatternFromPattern" : {
          "testcases" : {
            "org.apache.commons.io.serialization.RegexpClassNameMatcherTest" : [ "testSimplePatternFromPattern" ]
          }
        },
        "org.apache.commons.io.serialization.RegexpClassNameMatcherTest#testSimplePatternFromString" : {
          "testcases" : {
            "org.apache.commons.io.serialization.RegexpClassNameMatcherTest" : [ "testSimplePatternFromString" ]
          }
        },
        "org.apache.commons.io.serialization.ValidatingObjectInputStream" : {
          "testcases" : {
            "org.apache.commons.io.serialization.MoreComplexObjectTest" : [ "trustJavaIncludingArrays", "trustJavaLang", "useBlacklist" ],
            "org.apache.commons.io.serialization.ValidatingObjectInputStreamTest" : [ "acceptCustomMatcher", "acceptPattern", "acceptWildcard", "customInvalidMethod", "exceptionIncludesClassName", "noAccept", "ourTestClassAcceptedFirst", "ourTestClassAcceptedFirstWildcard", "ourTestClassAcceptedSecond", "ourTestClassAcceptedSecondWildcard", "ourTestClassNotAccepted", "ourTestClassOnlyAccepted", "reject", "rejectCustomMatcher", "rejectOnly", "rejectPattern", "rejectPrecedence", "rejectWildcard" ]
          }
        },
        "org.apache.commons.io.serialization.ValidatingObjectInputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.serialization.ValidatingObjectInputStreamTest" : [ "acceptCustomMatcher", "acceptPattern", "acceptWildcard", "customInvalidMethod", "exceptionIncludesClassName", "noAccept", "ourTestClassAcceptedFirst", "ourTestClassAcceptedFirstWildcard", "ourTestClassAcceptedSecond", "ourTestClassAcceptedSecondWildcard", "ourTestClassNotAccepted", "ourTestClassOnlyAccepted", "reject", "rejectCustomMatcher", "rejectOnly", "rejectPattern", "rejectPrecedence", "rejectWildcard" ]
          }
        },
        "org.apache.commons.io.serialization.ValidatingObjectInputStreamTest$CustomVOIS" : { },
        "org.apache.commons.io.serialization.WildcardClassNameMatcher" : {
          "testcases" : {
            "org.apache.commons.io.serialization.MoreComplexObjectTest" : [ "trustJavaIncludingArrays", "trustJavaLang", "useBlacklist" ],
            "org.apache.commons.io.serialization.ValidatingObjectInputStreamTest" : [ "acceptWildcard", "ourTestClassAcceptedFirstWildcard", "ourTestClassAcceptedSecondWildcard", "rejectWildcard" ],
            "org.apache.commons.io.serialization.WildcardClassNameMatcherTest" : [ "noPattern", "star", "starAndQuestionMark" ]
          }
        },
        "org.apache.commons.io.serialization.WildcardClassNameMatcherTest#noPattern" : {
          "testcases" : {
            "org.apache.commons.io.serialization.WildcardClassNameMatcherTest" : [ "noPattern" ]
          }
        },
        "org.apache.commons.io.serialization.WildcardClassNameMatcherTest#star" : {
          "testcases" : {
            "org.apache.commons.io.serialization.WildcardClassNameMatcherTest" : [ "star" ]
          }
        },
        "org.apache.commons.io.serialization.WildcardClassNameMatcherTest#starAndQuestionMark" : {
          "testcases" : {
            "org.apache.commons.io.serialization.WildcardClassNameMatcherTest" : [ "starAndQuestionMark" ]
          }
        },
        "org.apache.commons.io.testtools.FileBasedTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerExitWhenFinished_NoTrackAfter", "testFileCleanerFile", "testFileCleanerNull" ],
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce", "testDeleteNormal", "testDeleteNull", "testDeleteQuietlyNormal", "testToString" ],
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testCleanEmpty", "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile", "testThrowsOnNullList" ],
            "org.apache.commons.io.FileUtilsDirectoryContainsTestCase" : [ "testCanonicalPath", "testDirectoryContainsDirectory", "testDirectoryContainsFile", "testDirectoryDoesNotContainFile", "testDirectoryDoesNotContainsDirectory", "testDirectoryDoesNotExist", "testFileDoesNotExist", "testFileDoesNotExistBug", "testIO466", "testSameFile", "testUnrealizedContainment" ],
            "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension", "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedError_IO_128", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetBaseName_with_nullByte", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetFullPathNoEndSeparator_IO_248", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPathNoEndSeparator_with_null_byte", "testGetPath_with_nullbyte", "testGetPrefix", "testGetPrefixLength", "testGetPrefix_with_nullbyte", "testIndexOfExtension", "testIndexOfLastSeparator", "testInjectionFailure", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testIsExtension_injection", "testNormalize", "testNormalizeNoEndSeparator", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin", "testNormalize_with_nullbytes", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testAsBufferedInputStream", "testAsBufferedInputStreamWithBufferSize", "testAsBufferedNull", "testAsBufferedOutputStream", "testAsBufferedOutputStreamWithBufferSize", "testAsBufferedReader", "testAsBufferedReaderWithBufferSize", "testAsBufferedWriter", "testAsBufferedWriterWithBufferSize", "testCloseQuietly_AllCloseableIOException", "testCloseQuietly_CloseableIOException", "testCloseQuietly_Selector", "testCloseQuietly_SelectorIOException", "testCloseQuietly_SelectorNull", "testCloseQuietly_SelectorTwice", "testCloseQuietly_ServerSocket", "testCloseQuietly_ServerSocketIOException", "testCloseQuietly_Socket", "testCloseQuietly_SocketIOException", "testConstants", "testContentEqualsIgnoreEOL", "testContentEquals_InputStream_InputStream", "testContentEquals_Reader_Reader", "testCopyLarge_CharExtraLength", "testCopyLarge_CharFullLength", "testCopyLarge_CharNoSkip", "testCopyLarge_CharSkip", "testCopyLarge_CharSkipInvalid", "testCopyLarge_ExtraLength", "testCopyLarge_FullLength", "testCopyLarge_NoSkip", "testCopyLarge_Skip", "testCopyLarge_SkipInvalid", "testCopyLarge_SkipWithInvalidOffset", "testCopy_ByteArray_OutputStream", "testCopy_ByteArray_Writer", "testCopy_String_Writer", "testReadFully_InputStream_ByteArray", "testReadFully_InputStream_Offset", "testReadFully_InputStream__ReturnByteArray", "testReadFully_ReadableByteChannel", "testReadFully_Reader", "testReadFully_Reader_Offset", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testRead_ReadableByteChannel", "testResourceToByteArray_ExistingResourceAtRootPackage", "testResourceToByteArray_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToByteArray_ExistingResourceAtSubPackage", "testResourceToByteArray_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToByteArray_NonExistingResource", "testResourceToByteArray_NonExistingResource_WithClassLoader", "testResourceToByteArray_Null", "testResourceToByteArray_Null_WithClassLoader", "testResourceToString_ExistingResourceAtRootPackage", "testResourceToString_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToString_ExistingResourceAtSubPackage", "testResourceToString_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToString_NonExistingResource", "testResourceToString_NonExistingResource_WithClassLoader", "testResourceToString_NullCharset", "testResourceToString_NullCharset_WithClassLoader", "testResourceToString_NullResource", "testResourceToString_NullResource_WithClassLoader", "testResourceToURL_ExistingResourceAtRootPackage", "testResourceToURL_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToURL_ExistingResourceAtSubPackage", "testResourceToURL_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToURL_NonExistingResource", "testResourceToURL_NonExistingResource_WithClassLoader", "testResourceToURL_Null", "testResourceToURL_Null_WithClassLoader", "testSkipFully_InputStream", "testSkipFully_ReadableByteChannel", "testSkipFully_Reader", "testSkip_FileReader", "testSkip_InputStream", "testSkip_ReadableByteChannel", "testStringToOutputStream", "testToBufferedInputStreamWithBufferSize_InputStream", "testToBufferedInputStream_InputStream", "testToByteArray_InputStream", "testToByteArray_InputStream_NegativeSize", "testToByteArray_InputStream_Size", "testToByteArray_InputStream_SizeIllegal", "testToByteArray_InputStream_SizeLong", "testToByteArray_InputStream_SizeZero", "testToByteArray_Reader", "testToByteArray_String", "testToByteArray_URI", "testToByteArray_URL", "testToByteArray_URLConnection", "testToCharArray_InputStream", "testToCharArray_InputStream_CharsetName", "testToCharArray_Reader", "testToInputStream_CharSequence", "testToInputStream_String", "testToString_ByteArray", "testToString_InputStream", "testToString_Reader", "testToString_URI", "testToString_URI_CharsetName", "testToString_URI_CharsetNameNull", "testToString_URL", "testToString_URL_CharsetName", "testToString_URL_CharsetNameNull" ],
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFilteringBufferedReader", "testFilteringFileReader", "testInvalidEncoding", "testMissingFile", "testNextLineOnlyDefaultEncoding", "testNextLineOnlyNullEncoding", "testNextLineOnlyUtf8Encoding", "testNextOnly", "testNextWithException", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "constructorArray_Null", "constructorIterable_Null", "constructorIterable_order" ],
            "org.apache.commons.io.comparator.DirectoryFileComparatorTest" : [ "testSortArray" ],
            "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.NameFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.PathFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testAnd", "testCanRead", "testCanWrite", "testDelegateFileFilter", "testDelegation", "testDeprecatedWildcard", "testDirectory", "testEmpty", "testEnsureTestCoverage", "testFalse", "testFileFilterUtils_and", "testFileFilterUtils_or", "testFiles", "testFilterArray", "testFilterArrayNullParameters", "testFilterArray_fromList", "testFilterList", "testFilterListNullParameters", "testFilterList_fromArray", "testFilterSet", "testFilterSetNullParameters", "testFilterSet_fromArray", "testHidden", "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset", "testMagicNumberFileFilterValidation", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNameFilterNullArrayArgument", "testNameFilterNullListArgument", "testNot", "testNullFilters", "testOr", "testPrefix", "testPrefixCaseInsensitive", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testTrue", "testWildcard" ],
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ],
            "org.apache.commons.io.input.TailerTest" : [ "testBufferBreak", "testIO335", "testInterrupt", "testLongFile", "testMultiByteBreak", "testStopWithNoFile", "testStopWithNoFileUsingExecutor", "testTailer", "testTailerEndOfFileReached", "testTailerEof" ],
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "constructor_File_directory", "constructor_File_encoding_badEncoding", "constructor_File_nullFile", "constructor_fileName_nullFile", "sameEncoding_CharsetEncoder_constructor", "sameEncoding_Charset_constructor", "sameEncoding_null_Charset_constructor", "sameEncoding_string_CharsetEncoder_constructor", "sameEncoding_string_Charset_constructor", "sameEncoding_string_constructor", "sameEncoding_string_string_constructor", "testDifferentEncoding" ],
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testConstructor_File_encoding_badEncoding", "testConstructor_File_nullFile", "testConstructor_fileName_nullFile", "testFileLocked", "testFileNotLocked" ]
          }
        },
        "org.apache.commons.io.testtools.TestUtils" : {
          "testcases" : {
            "org.apache.commons.io.DemuxTestCase" : [ "testInputStream", "testOutputStream" ],
            "org.apache.commons.io.FileCleaningTrackerTestCase" : [ "testFileCleanerDirectory", "testFileCleanerDirectory_ForceStrategy", "testFileCleanerDirectory_NullStrategy", "testFileCleanerExitWhenFinished1", "testFileCleanerExitWhenFinished2", "testFileCleanerExitWhenFinishedFirst", "testFileCleanerFile" ],
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce", "testDeleteNormal", "testDeleteQuietlyNormal" ],
            "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedError_IO_128", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetBaseName_with_nullByte", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetFullPathNoEndSeparator_IO_248", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPathNoEndSeparator_with_null_byte", "testGetPath_with_nullbyte", "testGetPrefix", "testGetPrefixLength", "testGetPrefix_with_nullbyte", "testIndexOfExtension", "testIndexOfLastSeparator", "testInjectionFailure", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testIsExtension_injection", "testNormalize", "testNormalizeNoEndSeparator", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin", "testNormalize_with_nullbytes", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testAsBufferedInputStream", "testAsBufferedInputStreamWithBufferSize", "testAsBufferedNull", "testAsBufferedOutputStream", "testAsBufferedOutputStreamWithBufferSize", "testAsBufferedReader", "testAsBufferedReaderWithBufferSize", "testAsBufferedWriter", "testAsBufferedWriterWithBufferSize", "testCloseQuietly_AllCloseableIOException", "testCloseQuietly_CloseableIOException", "testCloseQuietly_Selector", "testCloseQuietly_SelectorIOException", "testCloseQuietly_SelectorNull", "testCloseQuietly_SelectorTwice", "testCloseQuietly_ServerSocket", "testCloseQuietly_ServerSocketIOException", "testCloseQuietly_Socket", "testCloseQuietly_SocketIOException", "testConstants", "testContentEqualsIgnoreEOL", "testContentEquals_InputStream_InputStream", "testContentEquals_Reader_Reader", "testCopyLarge_CharExtraLength", "testCopyLarge_CharFullLength", "testCopyLarge_CharNoSkip", "testCopyLarge_CharSkip", "testCopyLarge_CharSkipInvalid", "testCopyLarge_ExtraLength", "testCopyLarge_FullLength", "testCopyLarge_NoSkip", "testCopyLarge_Skip", "testCopyLarge_SkipInvalid", "testCopyLarge_SkipWithInvalidOffset", "testCopy_ByteArray_OutputStream", "testCopy_ByteArray_Writer", "testCopy_String_Writer", "testReadFully_InputStream_ByteArray", "testReadFully_InputStream_Offset", "testReadFully_InputStream__ReturnByteArray", "testReadFully_ReadableByteChannel", "testReadFully_Reader", "testReadFully_Reader_Offset", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testRead_ReadableByteChannel", "testResourceToByteArray_ExistingResourceAtRootPackage", "testResourceToByteArray_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToByteArray_ExistingResourceAtSubPackage", "testResourceToByteArray_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToByteArray_NonExistingResource", "testResourceToByteArray_NonExistingResource_WithClassLoader", "testResourceToByteArray_Null", "testResourceToByteArray_Null_WithClassLoader", "testResourceToString_ExistingResourceAtRootPackage", "testResourceToString_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToString_ExistingResourceAtSubPackage", "testResourceToString_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToString_NonExistingResource", "testResourceToString_NonExistingResource_WithClassLoader", "testResourceToString_NullCharset", "testResourceToString_NullCharset_WithClassLoader", "testResourceToString_NullResource", "testResourceToString_NullResource_WithClassLoader", "testResourceToURL_ExistingResourceAtRootPackage", "testResourceToURL_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToURL_ExistingResourceAtSubPackage", "testResourceToURL_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToURL_NonExistingResource", "testResourceToURL_NonExistingResource_WithClassLoader", "testResourceToURL_Null", "testResourceToURL_Null_WithClassLoader", "testSkipFully_InputStream", "testSkipFully_ReadableByteChannel", "testSkipFully_Reader", "testSkip_FileReader", "testSkip_InputStream", "testSkip_ReadableByteChannel", "testStringToOutputStream", "testToBufferedInputStreamWithBufferSize_InputStream", "testToBufferedInputStream_InputStream", "testToByteArray_InputStream", "testToByteArray_InputStream_NegativeSize", "testToByteArray_InputStream_Size", "testToByteArray_InputStream_SizeIllegal", "testToByteArray_InputStream_SizeLong", "testToByteArray_InputStream_SizeZero", "testToByteArray_Reader", "testToByteArray_String", "testToByteArray_URI", "testToByteArray_URL", "testToByteArray_URLConnection", "testToCharArray_InputStream", "testToCharArray_InputStream_CharsetName", "testToCharArray_Reader", "testToInputStream_CharSequence", "testToInputStream_String", "testToString_ByteArray", "testToString_InputStream", "testToString_Reader", "testToString_URI", "testToString_URI_CharsetName", "testToString_URI_CharsetNameNull", "testToString_URL", "testToString_URL_CharsetName", "testToString_URL_CharsetNameNull" ],
            "org.apache.commons.io.ThreadMonitorTestCase" : [ "testCompletedWithoutTimeout", "testNoTimeout", "testTimeout" ],
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "constructorArray_Null", "constructorIterable_Null", "constructorIterable_order" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes", "testNonexistantFile" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testCanRead", "testCanWrite", "testEmpty", "testFilterArray", "testFilterArrayNullParameters", "testFilterArray_fromList", "testFilterList", "testFilterList_fromArray", "testFilterSet", "testFilterSet_fromArray", "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testSizeFilter" ],
            "org.apache.commons.io.input.TailerTest" : [ "testBufferBreak", "testIO335", "testInterrupt", "testLongFile", "testMultiByteBreak", "testStopWithNoFile", "testStopWithNoFileUsingExecutor", "testTailer", "testTailerEndOfFileReached", "testTailerEof" ],
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor", "testThreadFactory" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ],
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "sameEncoding_CharsetEncoder_constructor", "sameEncoding_Charset_constructor", "sameEncoding_string_CharsetEncoder_constructor", "sameEncoding_string_Charset_constructor", "sameEncoding_string_constructor", "sameEncoding_string_string_constructor", "testDifferentEncoding" ]
          }
        },
        "org.apache.commons.io.testtools.TestUtils#assertEqualContent(byte[],java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testWriteByteArrayToFile", "testWriteByteArrayToFile_WithOffsetAndLength", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteStringToFile1", "testWriteStringToFile2", "testWriteStringToFile3" ]
          }
        },
        "org.apache.commons.io.testtools.TestUtils#createLineBasedFile(java.io.File,java.lang.String[])" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testReadLines", "test_openInputStream_exists", "test_openOutputStream_exists", "test_openOutputStream_noParentCreateFile" ]
          }
        },
        "org.apache.commons.io.testtools.TestUtils#deleteFile(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testReadLines" ]
          }
        },
        "org.apache.commons.io.testtools.TestUtils#generateTestData(java.io.OutputStream,long)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySizeBigInteger", "testByteCountToDisplaySizeLong", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testCompareSizeOf", "testContentEquals", "testContentEqualsIgnoreEOL", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryPreserveDates", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToItself", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyFileToOutputStream", "testCopyToDirectoryWithDirectory", "testCopyToDirectoryWithFile", "testCopyToDirectoryWithFileSourceDoesNotExist", "testCopyToDirectoryWithFileSourceIsNull", "testCopyToDirectoryWithIterable", "testCopyToDirectoryWithIterableSourceDoesNotExist", "testCopyToDirectoryWithIterableSourceIsNull", "testCopyToSelf", "testCopyURLToFile", "testCopyURLToFileWithTimeout", "testDecodeUrl", "testDecodeUrlEncodingUtf8", "testDecodeUrlLenient", "testDecodeUrlNullSafe", "testDeleteDirectoryWithNonDirectory", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testForceMkdirParent", "testGetFile", "testGetFile_Parent", "testGetTempDirectory", "testGetTempDirectoryPath", "testGetUserDirectory", "testGetUserDirectoryPath", "testIO276", "testIO300", "testIncorrectOutputSize", "testIsFileNewerOlder", "testIterateFiles", "testIterateFilesAndDirs", "testListFiles", "testListFilesWithDirs", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToStringWithDefaultEncoding", "testReadFileToStringWithEncoding", "testReadLines", "testSizeOf", "testSizeOfAsBigInteger", "testSizeOfDirectory", "testSizeOfDirectoryAsBigInteger", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFile5", "testToFileUtf8", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles3a", "testToFiles4", "testToURLs1", "testToURLs3a", "testTouch", "testWriteByteArrayToFile", "testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteByteArrayToFile_WithOffsetAndLength", "testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_3arg_nullSeparator", "testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile1", "testWriteStringToFile2", "testWriteStringToFile3", "testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ]
          }
        },
        "org.apache.commons.io.testtools.TestUtils#newFile(java.io.File,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testReadLines", "testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_3arg_nullSeparator", "testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" ]
          }
        },
        "org.apache.commons.io.testtools.TestUtils#sleep(long)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIsFileNewerOlder" ]
          }
        },
        "org.apache.commons.io.testtools.YellOnCloseInputStream" : {
          "testcases" : {
            "org.apache.commons.io.CopyUtilsTest" : [ "copy_inputStreamToWriter", "copy_readerToWriter", "testCopy_inputStreamToOutputStream", "testCopy_readerToOutputStream" ],
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToOutputStreamWithBufferSize", "testCopy_inputStreamToWriter", "testCopy_inputStreamToWriter_Encoding", "testCopy_inputStreamToWriter_Encoding_nullEncoding", "testCopy_readerToOutputStream", "testCopy_readerToOutputStream_Encoding", "testCopy_readerToOutputStream_Encoding_nullEncoding", "testCopy_readerToOutputStream_Encoding_nullOut", "testCopy_readerToOutputStream_nullOut", "testCopy_readerToWriter", "testCopy_readerToWriter_nullOut" ]
          }
        },
        "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream" : {
          "testcases" : {
            "org.apache.commons.io.CopyUtilsTest" : [ "copy_byteArrayToOutputStream", "copy_byteArrayToWriter", "copy_inputStreamToWriter", "copy_readerToWriter", "copy_stringToOutputStream", "copy_stringToWriter", "testCopy_inputStreamToOutputStream", "testCopy_readerToOutputStream" ],
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToOutputStreamWithBufferSize", "testCopy_inputStreamToWriter", "testCopy_inputStreamToWriter_Encoding", "testCopy_inputStreamToWriter_Encoding_nullEncoding", "testCopy_inputStreamToWriter_Encoding_nullIn", "testCopy_inputStreamToWriter_nullIn", "testCopy_readerToOutputStream", "testCopy_readerToOutputStream_Encoding", "testCopy_readerToOutputStream_Encoding_nullEncoding", "testCopy_readerToOutputStream_Encoding_nullIn", "testCopy_readerToOutputStream_nullIn", "testCopy_readerToWriter", "testCopy_readerToWriter_nullIn" ],
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWriteLines_OutputStream", "testWriteLines_OutputStream_Encoding", "testWriteLines_OutputStream_Encoding_nullData", "testWriteLines_OutputStream_Encoding_nullEncoding", "testWriteLines_OutputStream_Encoding_nullSeparator", "testWriteLines_OutputStream_nullData", "testWriteLines_OutputStream_nullSeparator", "testWriteLines_Writer", "testWriteLines_Writer_nullData", "testWriteLines_Writer_nullSeparator", "testWrite_byteArrayToOutputStream", "testWrite_byteArrayToOutputStream_nullData", "testWrite_byteArrayToWriter", "testWrite_byteArrayToWriter_Encoding", "testWrite_byteArrayToWriter_Encoding_nullData", "testWrite_byteArrayToWriter_Encoding_nullEncoding", "testWrite_byteArrayToWriter_nullData", "testWrite_charArrayToOutputStream", "testWrite_charArrayToOutputStream_Encoding", "testWrite_charArrayToOutputStream_Encoding_nullData", "testWrite_charArrayToOutputStream_nullData", "testWrite_charArrayToOutputStream_nullEncoding", "testWrite_charArrayToWriter", "testWrite_charArrayToWriter_Encoding_nullData", "testWrite_charSequenceToOutputStream", "testWrite_charSequenceToOutputStream_Encoding", "testWrite_charSequenceToOutputStream_Encoding_nullData", "testWrite_charSequenceToOutputStream_nullData", "testWrite_charSequenceToOutputStream_nullEncoding", "testWrite_charSequenceToWriter", "testWrite_charSequenceToWriter_Encoding_nullData", "testWrite_stringToOutputStream", "testWrite_stringToOutputStream_Encoding", "testWrite_stringToOutputStream_Encoding_nullData", "testWrite_stringToOutputStream_nullData", "testWrite_stringToOutputStream_nullEncoding", "testWrite_stringToWriter", "testWrite_stringToWriter_Encoding_nullData" ]
          }
        }
      },
      "ignoredAffectedTests" : {
        "testcases" : {
          "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyFileLarge" ],
          "org.apache.commons.io.input.CharSequenceInputStreamTest" : [ "testMarkReset_RequiredCharsets", "testSkip_RequiredCharsets" ]
        }
      }
    },
    "a246ac809581b422fd18b4de086ebf120dd6ae8f" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "5f88079956ba7fc4551a5fc51dc28d82e33dc65f",
      "changedClazzes" : { }
    },
    "84a5fcfb48254e1e97a3fc22d30830387476f79c" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "a246ac809581b422fd18b4de086ebf120dd6ae8f",
      "changedClazzes" : { }
    },
    "78fc6c76d47aebb97ca625eb8f3f71be9176111d" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "84a5fcfb48254e1e97a3fc22d30830387476f79c",
      "changedClazzes" : { }
    },
    "651ad03ac546303af3ecb884af7f005d7b1598a4" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "78fc6c76d47aebb97ca625eb8f3f71be9176111d",
      "changedClazzes" : { }
    },
    "2ae025fe5c4a7d2046c53072b0898e37a079fe62" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "651ad03ac546303af3ecb884af7f005d7b1598a4",
      "changedClazzes" : { }
    },
    "14a80bc4daa3f6f2d63dbc36ffc0b3e526febe69" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "2ae025fe5c4a7d2046c53072b0898e37a079fe62",
      "changedClazzes" : { }
    },
    "fdcc71dcd26491cecf22b369e2d580968f4515ab" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "14a80bc4daa3f6f2d63dbc36ffc0b3e526febe69",
      "changedClazzes" : { }
    },
    "d8e8908db227ec91608b386a65b5f8559d92d8c9" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "fdcc71dcd26491cecf22b369e2d580968f4515ab",
      "changedClazzes" : {
        "org.apache.commons.io.FilenameUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpaceWindows_String_quoted" ],
            "org.apache.commons.io.FileUtilsDirectoryContainsTestCase" : [ "testCanonicalPath", "testDirectoryContainsDirectory", "testDirectoryContainsFile", "testDirectoryDoesNotContainFile", "testDirectoryDoesNotContainsDirectory" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension", "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered", "testIterateFiles", "testIterateFilesAndDirs", "testListFiles", "testListFilesWithDirs", "testSizeOfDirectory", "testSizeOfDirectoryAsBigInteger" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedError_IO_128", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetBaseName_with_nullByte", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetFullPathNoEndSeparator_IO_248", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPathNoEndSeparator_with_null_byte", "testGetPath_with_nullbyte", "testGetPrefix", "testGetPrefixLength", "testGetPrefix_with_nullbyte", "testIndexOfExtension", "testIndexOfLastSeparator", "testInjectionFailure", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testIsExtension_injection", "testNormalize", "testNormalizeNoEndSeparator", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin", "testNormalize_with_nullbytes", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.FilenameUtilsWildcardTestCase" : [ "testLocaleIndependence", "testMatch", "testMatch2", "testMatchCaseSpecified", "testMatchOnSystem", "testSplitOnTokens", "test_IO_246" ],
            "org.apache.commons.io.IOCaseTestCase" : [ "test_checkCompare_case", "test_checkCompare_functionality", "test_checkEndsWith_case", "test_checkEndsWith_functionality", "test_checkEquals_case", "test_checkEquals_functionality", "test_checkIndexOf_case", "test_checkIndexOf_functionality", "test_checkRegionMatches_case", "test_checkRegionMatches_functionality", "test_checkStartsWith_case", "test_checkStartsWith_functionality", "test_forName", "test_getName", "test_isCaseSensitive", "test_serialization", "test_toString" ],
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "constructorArray_Null", "constructorIterable_Null", "constructorIterable_order" ],
            "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.NameFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.PathFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testDelegation", "testDeprecatedWildcard", "testEnsureTestCoverage", "testFalse", "testFileFilterUtils_and", "testFileFilterUtils_or", "testFilterArray", "testFilterArrayNullParameters", "testFilterArray_fromList", "testFilterList", "testFilterListNullParameters", "testFilterList_fromArray", "testFilterSet", "testFilterSetNullParameters", "testFilterSet_fromArray", "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNot", "testNullFilters", "testPrefix", "testPrefixCaseInsensitive", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testTrue", "testWildcard" ],
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ],
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor", "testMonitor", "testThreadFactory" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile", "testToString" ],
            "org.apache.commons.io.serialization.MoreComplexObjectTest" : [ "trustJavaIncludingArrays", "trustJavaLang", "useBlacklist" ],
            "org.apache.commons.io.serialization.ValidatingObjectInputStreamTest" : [ "acceptWildcard", "ourTestClassAcceptedFirstWildcard", "ourTestClassAcceptedSecondWildcard", "rejectWildcard" ],
            "org.apache.commons.io.serialization.WildcardClassNameMatcherTest" : [ "noPattern", "star", "starAndQuestionMark" ]
          }
        }
      },
      "ignoredAffectedTests" : {
        "testcases" : {
          "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyFileLarge" ]
        }
      }
    },
    "06033035f09c662020ffe0300983697c78d3039a" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "d8e8908db227ec91608b386a65b5f8559d92d8c9",
      "changedClazzes" : {
        "org.apache.commons.io.FilenameUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpaceWindows_String_quoted" ],
            "org.apache.commons.io.FileUtilsDirectoryContainsTestCase" : [ "testCanonicalPath", "testDirectoryContainsDirectory", "testDirectoryContainsFile", "testDirectoryDoesNotContainFile", "testDirectoryDoesNotContainsDirectory" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension", "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered", "testIterateFiles", "testIterateFilesAndDirs", "testListFiles", "testListFilesWithDirs", "testSizeOfDirectory", "testSizeOfDirectoryAsBigInteger" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedError_IO_128", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetBaseName_with_nullByte", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetFullPathNoEndSeparator_IO_248", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPathNoEndSeparator_with_null_byte", "testGetPath_with_nullbyte", "testGetPrefix", "testGetPrefixLength", "testGetPrefix_with_nullbyte", "testIndexOfExtension", "testIndexOfLastSeparator", "testInjectionFailure", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testIsExtension_injection", "testNormalize", "testNormalizeNoEndSeparator", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin", "testNormalize_with_nullbytes", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.FilenameUtilsWildcardTestCase" : [ "testLocaleIndependence", "testMatch", "testMatch2", "testMatchCaseSpecified", "testMatchOnSystem", "testSplitOnTokens", "test_IO_246" ],
            "org.apache.commons.io.IOCaseTestCase" : [ "test_checkCompare_case", "test_checkCompare_functionality", "test_checkEndsWith_case", "test_checkEndsWith_functionality", "test_checkEquals_case", "test_checkEquals_functionality", "test_checkIndexOf_case", "test_checkIndexOf_functionality", "test_checkRegionMatches_case", "test_checkRegionMatches_functionality", "test_checkStartsWith_case", "test_checkStartsWith_functionality", "test_forName", "test_getName", "test_isCaseSensitive", "test_serialization", "test_toString" ],
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "constructorArray_Null", "constructorIterable_Null", "constructorIterable_order" ],
            "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.NameFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.PathFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testDelegation", "testDeprecatedWildcard", "testEnsureTestCoverage", "testFalse", "testFileFilterUtils_and", "testFileFilterUtils_or", "testFilterArray", "testFilterArrayNullParameters", "testFilterArray_fromList", "testFilterList", "testFilterListNullParameters", "testFilterList_fromArray", "testFilterSet", "testFilterSetNullParameters", "testFilterSet_fromArray", "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNot", "testNullFilters", "testPrefix", "testPrefixCaseInsensitive", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testTrue", "testWildcard" ],
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ],
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor", "testMonitor", "testThreadFactory" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile", "testToString" ],
            "org.apache.commons.io.serialization.MoreComplexObjectTest" : [ "trustJavaIncludingArrays", "trustJavaLang", "useBlacklist" ],
            "org.apache.commons.io.serialization.ValidatingObjectInputStreamTest" : [ "acceptWildcard", "ourTestClassAcceptedFirstWildcard", "ourTestClassAcceptedSecondWildcard", "rejectWildcard" ],
            "org.apache.commons.io.serialization.WildcardClassNameMatcherTest" : [ "noPattern", "star", "starAndQuestionMark" ]
          }
        },
        "org.apache.commons.io.FilenameUtilsTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedError_IO_128", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetBaseName_with_nullByte", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetFullPathNoEndSeparator_IO_248", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPathNoEndSeparator_with_null_byte", "testGetPath_with_nullbyte", "testGetPrefix", "testGetPrefixLength", "testGetPrefix_with_nullbyte", "testIndexOfExtension", "testIndexOfLastSeparator", "testInjectionFailure", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testIsExtension_injection", "testNormalize", "testNormalizeNoEndSeparator", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin", "testNormalize_with_nullbytes", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ]
          }
        }
      },
      "ignoredAffectedTests" : {
        "testcases" : {
          "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyFileLarge" ]
        }
      }
    },
    "2196ff68d3f53213f3d07e38928805920089a03b" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "06033035f09c662020ffe0300983697c78d3039a",
      "changedClazzes" : { }
    },
    "65657b874c03a1b6fee23653b01a9baad6a518e8" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "2196ff68d3f53213f3d07e38928805920089a03b",
      "changedClazzes" : { }
    },
    "5e2ace28efe0476feb6a32794fe6b5e90e71eb7e" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "65657b874c03a1b6fee23653b01a9baad6a518e8",
      "changedClazzes" : { }
    },
    "6e2ac190ce379fb19acb8b5cf06c0a1b25d19059" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "5e2ace28efe0476feb6a32794fe6b5e90e71eb7e",
      "changedClazzes" : {
        "org.apache.commons.io.FileSystem" : { },
        "org.apache.commons.io.FileSystem#<init>(int,int,char[])" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemTestCase" : [ "testToLegalFileNameWindows" ]
          }
        },
        "org.apache.commons.io.FileSystem#getOsMatchesName(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemTestCase" : [ "testToLegalFileNameWindows" ]
          }
        },
        "org.apache.commons.io.FileSystem#getSystemProperty(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemTestCase" : [ "testToLegalFileNameWindows" ]
          }
        },
        "org.apache.commons.io.FileSystem#isIllegalFileNameChar(char)" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemTestCase" : [ "testToLegalFileNameWindows" ]
          }
        },
        "org.apache.commons.io.FileSystem#isOsNameMatch(java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemTestCase" : [ "testToLegalFileNameWindows" ]
          }
        },
        "org.apache.commons.io.FileSystem#toLegalFileName(java.lang.String,char)" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemTestCase" : [ "testToLegalFileNameWindows" ]
          }
        },
        "org.apache.commons.io.FileSystemTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemTestCase" : [ "testToLegalFileNameWindows" ]
          }
        },
        "org.apache.commons.io.FileSystemTestCase#testToLegalFileNameWindows" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemTestCase" : [ "testToLegalFileNameWindows" ]
          }
        },
        "org.apache.commons.io.FilenameUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpaceWindows_String_quoted" ],
            "org.apache.commons.io.FileUtilsDirectoryContainsTestCase" : [ "testCanonicalPath", "testDirectoryContainsDirectory", "testDirectoryContainsFile", "testDirectoryDoesNotContainFile", "testDirectoryDoesNotContainsDirectory" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension", "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered", "testIterateFiles", "testIterateFilesAndDirs", "testListFiles", "testListFilesWithDirs", "testSizeOfDirectory", "testSizeOfDirectoryAsBigInteger" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedError_IO_128", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetBaseName_with_nullByte", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetFullPathNoEndSeparator_IO_248", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPathNoEndSeparator_with_null_byte", "testGetPath_with_nullbyte", "testGetPrefix", "testGetPrefixLength", "testGetPrefix_with_nullbyte", "testIndexOfExtension", "testIndexOfLastSeparator", "testInjectionFailure", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testIsExtension_injection", "testNormalize", "testNormalizeNoEndSeparator", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin", "testNormalize_with_nullbytes", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.FilenameUtilsWildcardTestCase" : [ "testLocaleIndependence", "testMatch", "testMatch2", "testMatchCaseSpecified", "testMatchOnSystem", "testSplitOnTokens", "test_IO_246" ],
            "org.apache.commons.io.IOCaseTestCase" : [ "test_checkCompare_case", "test_checkCompare_functionality", "test_checkEndsWith_case", "test_checkEndsWith_functionality", "test_checkEquals_case", "test_checkEquals_functionality", "test_checkIndexOf_case", "test_checkIndexOf_functionality", "test_checkRegionMatches_case", "test_checkRegionMatches_functionality", "test_checkStartsWith_case", "test_checkStartsWith_functionality", "test_forName", "test_getName", "test_isCaseSensitive", "test_serialization", "test_toString" ],
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "constructorArray_Null", "constructorIterable_Null", "constructorIterable_order" ],
            "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.NameFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.PathFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testDelegation", "testDeprecatedWildcard", "testEnsureTestCoverage", "testFalse", "testFileFilterUtils_and", "testFileFilterUtils_or", "testFilterArray", "testFilterArrayNullParameters", "testFilterArray_fromList", "testFilterList", "testFilterListNullParameters", "testFilterList_fromArray", "testFilterSet", "testFilterSetNullParameters", "testFilterSet_fromArray", "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNot", "testNullFilters", "testPrefix", "testPrefixCaseInsensitive", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testTrue", "testWildcard" ],
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ],
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor", "testMonitor", "testThreadFactory" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile", "testToString" ],
            "org.apache.commons.io.serialization.MoreComplexObjectTest" : [ "trustJavaIncludingArrays", "trustJavaLang", "useBlacklist" ],
            "org.apache.commons.io.serialization.ValidatingObjectInputStreamTest" : [ "acceptWildcard", "ourTestClassAcceptedFirstWildcard", "ourTestClassAcceptedSecondWildcard", "rejectWildcard" ],
            "org.apache.commons.io.serialization.WildcardClassNameMatcherTest" : [ "noPattern", "star", "starAndQuestionMark" ]
          }
        },
        "org.apache.commons.io.FilenameUtilsTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedError_IO_128", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetBaseName_with_nullByte", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetFullPathNoEndSeparator_IO_248", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPathNoEndSeparator_with_null_byte", "testGetPath_with_nullbyte", "testGetPrefix", "testGetPrefixLength", "testGetPrefix_with_nullbyte", "testIndexOfExtension", "testIndexOfLastSeparator", "testInjectionFailure", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testIsExtension_injection", "testNormalize", "testNormalizeNoEndSeparator", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin", "testNormalize_with_nullbytes", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ]
          }
        }
      },
      "ignoredAffectedTests" : {
        "testcases" : {
          "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyFileLarge" ]
        }
      }
    },
    "b014a06d5b333a6fa30fbfde065d95bc0374d4a9" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "6e2ac190ce379fb19acb8b5cf06c0a1b25d19059",
      "changedClazzes" : { }
    },
    "dcf6e82f8610b89075e00711e186792053928c7e" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "b014a06d5b333a6fa30fbfde065d95bc0374d4a9",
      "changedClazzes" : {
        "org.apache.commons.io.FileSystem#<init>(int,int,char[])" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemTestCase" : [ "testSorted" ]
          }
        },
        "org.apache.commons.io.FileSystem#getIllegalFileNameChars" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemTestCase" : [ "testSorted" ]
          }
        },
        "org.apache.commons.io.FileSystem#getOsMatchesName(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemTestCase" : [ "testSorted" ]
          }
        },
        "org.apache.commons.io.FileSystem#getSystemProperty(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemTestCase" : [ "testSorted" ]
          }
        },
        "org.apache.commons.io.FileSystem#isOsNameMatch(java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemTestCase" : [ "testSorted" ]
          }
        },
        "org.apache.commons.io.FileSystemTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemTestCase" : [ "testSorted", "testToLegalFileNameWindows" ]
          }
        },
        "org.apache.commons.io.FileSystemTestCase#testSorted" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemTestCase" : [ "testSorted" ]
          }
        }
      }
    },
    "84a0d90783b095775b5d14b2a807497862d80db5" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "dcf6e82f8610b89075e00711e186792053928c7e",
      "changedClazzes" : {
        "org.apache.commons.io.FileSystem" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemTestCase" : [ "testSorted", "testToLegalFileNameWindows" ]
          }
        },
        "org.apache.commons.io.FileSystem#<init>(int,int,char[])" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemTestCase" : [ "testIsLegalName" ]
          }
        },
        "org.apache.commons.io.FileSystem#getOsMatchesName(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemTestCase" : [ "testIsLegalName" ]
          }
        },
        "org.apache.commons.io.FileSystem#getSystemProperty(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemTestCase" : [ "testIsLegalName" ]
          }
        },
        "org.apache.commons.io.FileSystem#isIllegalFileNameChar(char)" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemTestCase" : [ "testIsLegalName" ]
          }
        },
        "org.apache.commons.io.FileSystem#isLegalFileName(java.lang.CharSequence)" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemTestCase" : [ "testIsLegalName" ]
          }
        },
        "org.apache.commons.io.FileSystem#isOsNameMatch(java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemTestCase" : [ "testIsLegalName" ]
          }
        },
        "org.apache.commons.io.FileSystemTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemTestCase" : [ "testIsLegalName", "testSorted", "testToLegalFileNameWindows" ]
          }
        },
        "org.apache.commons.io.FileSystemTestCase#testIsLegalName" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemTestCase" : [ "testIsLegalName" ]
          }
        }
      }
    },
    "10c8db1b1ae0fd9be8b661dbf24643c0a9012d68" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "84a0d90783b095775b5d14b2a807497862d80db5",
      "changedClazzes" : {
        "org.apache.commons.io.FileSystem" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemTestCase" : [ "testIsLegalName", "testSorted", "testToLegalFileNameWindows" ]
          }
        },
        "org.apache.commons.io.FileSystem#<init>(int,int,char[])" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemTestCase" : [ "testReplacementWithNUL" ]
          }
        },
        "org.apache.commons.io.FileSystem#getOsMatchesName(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemTestCase" : [ "testReplacementWithNUL" ]
          }
        },
        "org.apache.commons.io.FileSystem#getSystemProperty(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemTestCase" : [ "testReplacementWithNUL" ]
          }
        },
        "org.apache.commons.io.FileSystem#isIllegalFileNameChar(char)" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemTestCase" : [ "testReplacementWithNUL" ]
          }
        },
        "org.apache.commons.io.FileSystem#isOsNameMatch(java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemTestCase" : [ "testReplacementWithNUL" ]
          }
        },
        "org.apache.commons.io.FileSystem#toLegalFileName(java.lang.String,char)" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemTestCase" : [ "testReplacementWithNUL" ]
          }
        },
        "org.apache.commons.io.FileSystemTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemTestCase" : [ "testIsLegalName", "testReplacementWithNUL", "testSorted", "testToLegalFileNameWindows" ]
          }
        },
        "org.apache.commons.io.FileSystemTestCase#testReplacementWithNUL" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemTestCase" : [ "testReplacementWithNUL" ]
          }
        }
      }
    },
    "2bacf63927effbe494ea8888191b950037d4606f" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "10c8db1b1ae0fd9be8b661dbf24643c0a9012d68",
      "changedClazzes" : { }
    },
    "4f50c37506de036bb34094095aaa6d4d831bfbb7" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "2bacf63927effbe494ea8888191b950037d4606f",
      "changedClazzes" : {
        "org.apache.commons.io.FileSystem" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemTestCase" : [ "testIsLegalName", "testReplacementWithNUL", "testSorted", "testToLegalFileNameWindows" ]
          }
        },
        "org.apache.commons.io.FileSystem#<init>(int,int,char[],java.lang.String[])" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemTestCase" : [ "testIsReservedFileName" ]
          }
        },
        "org.apache.commons.io.FileSystem#getOsMatchesName(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemTestCase" : [ "testIsReservedFileName" ]
          }
        },
        "org.apache.commons.io.FileSystem#getReservedFileNames" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemTestCase" : [ "testIsReservedFileName" ]
          }
        },
        "org.apache.commons.io.FileSystem#getSystemProperty(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemTestCase" : [ "testIsReservedFileName" ]
          }
        },
        "org.apache.commons.io.FileSystem#isOsNameMatch(java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemTestCase" : [ "testIsReservedFileName" ]
          }
        },
        "org.apache.commons.io.FileSystem#isReservedFileName(java.lang.CharSequence)" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemTestCase" : [ "testIsReservedFileName" ]
          }
        },
        "org.apache.commons.io.FileSystemTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemTestCase" : [ "testIsLegalName", "testIsReservedFileName", "testReplacementWithNUL", "testSorted", "testToLegalFileNameWindows" ]
          }
        },
        "org.apache.commons.io.FileSystemTestCase#testIsReservedFileName" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemTestCase" : [ "testIsReservedFileName" ]
          }
        }
      }
    },
    "38b0ff19101496d89345213866e0940eb682a8bf" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "4f50c37506de036bb34094095aaa6d4d831bfbb7",
      "changedClazzes" : { }
    },
    "30280a9ba706b330cbf6b18e6f2f6660743c0f16" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "38b0ff19101496d89345213866e0940eb682a8bf",
      "changedClazzes" : {
        "org.apache.commons.io.FileSystem" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemTestCase" : [ "testIsLegalName", "testIsReservedFileName", "testReplacementWithNUL", "testSorted", "testToLegalFileNameWindows" ]
          }
        }
      }
    },
    "9cd31226588fa303886b9daac162d5aa753e8e15" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "30280a9ba706b330cbf6b18e6f2f6660743c0f16",
      "changedClazzes" : {
        "org.apache.commons.io.FileSystem#getReservedFileNames" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemTestCase" : [ "testIsLegalName", "testIsReservedFileName" ]
          }
        }
      }
    },
    "c1b64e9d70875339f0f76bcc295cc0a735c1d4f3" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "9cd31226588fa303886b9daac162d5aa753e8e15",
      "changedClazzes" : { }
    },
    "65c4a9c0ec651dd99f28b9fae40378728d071985" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "c1b64e9d70875339f0f76bcc295cc0a735c1d4f3",
      "changedClazzes" : { }
    },
    "f42a7b9cba328a538df1152cffcee70ea2501841" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "65c4a9c0ec651dd99f28b9fae40378728d071985",
      "changedClazzes" : { }
    },
    "9310cd69b9b79add598b02b0b19066ec90bde64b" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "f42a7b9cba328a538df1152cffcee70ea2501841",
      "changedClazzes" : { }
    },
    "86cc77e21e15d1750d051598296c081809d15652" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "9310cd69b9b79add598b02b0b19066ec90bde64b",
      "changedClazzes" : {
        "org.apache.commons.io.FileSystem" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemTestCase" : [ "testIsLegalName", "testIsReservedFileName", "testReplacementWithNUL", "testSorted", "testToLegalFileNameWindows" ]
          }
        }
      }
    },
    "d3fc1a2877c165a57949414f5737ef00ffcd867d" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "86cc77e21e15d1750d051598296c081809d15652",
      "changedClazzes" : {
        "org.apache.commons.io.FileSystem" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemTestCase" : [ "testIsLegalName", "testIsReservedFileName", "testReplacementWithNUL", "testSorted", "testToLegalFileNameWindows" ]
          }
        },
        "org.apache.commons.io.IOCase" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilter", "testFilterAndLimitB", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4", "testFilterString" ],
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testFilter", "testFilterAndLimitB", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ],
            "org.apache.commons.io.FileUtilsDirectoryContainsTestCase" : [ "testCanonicalPath", "testDirectoryContainsDirectory", "testDirectoryContainsFile", "testDirectoryDoesNotContainFile", "testDirectoryDoesNotContainsDirectory" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension", "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered", "testIterateFiles", "testIterateFilesAndDirs", "testListFiles", "testListFilesWithDirs" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testEquals", "testEqualsNormalized", "testEqualsNormalizedError_IO_128", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl" ],
            "org.apache.commons.io.FilenameUtilsWildcardTestCase" : [ "testLocaleIndependence", "testMatch", "testMatch2", "testMatchCaseSpecified", "testMatchOnSystem", "test_IO_246" ],
            "org.apache.commons.io.IOCaseTestCase" : [ "test_checkCompare_case", "test_checkCompare_functionality", "test_checkEndsWith_case", "test_checkEndsWith_functionality", "test_checkEquals_case", "test_checkEquals_functionality", "test_checkIndexOf_case", "test_checkIndexOf_functionality", "test_checkRegionMatches_case", "test_checkRegionMatches_functionality", "test_checkStartsWith_case", "test_checkStartsWith_functionality", "test_forName", "test_getName", "test_isCaseSensitive", "test_serialization", "test_toString" ],
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "constructorArray_Null", "constructorIterable_Null", "constructorIterable_order" ],
            "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.NameFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.PathFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testDelegation", "testDeprecatedWildcard", "testEnsureTestCoverage", "testFalse", "testFileFilterUtils_and", "testFileFilterUtils_or", "testFilterArray", "testFilterArrayNullParameters", "testFilterArray_fromList", "testFilterList", "testFilterListNullParameters", "testFilterList_fromArray", "testFilterSet", "testFilterSetNullParameters", "testFilterSet_fromArray", "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNot", "testNullFilters", "testPrefix", "testPrefixCaseInsensitive", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testTrue", "testWildcard" ],
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ],
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor", "testMonitor", "testThreadFactory" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile", "testToString" ],
            "org.apache.commons.io.serialization.MoreComplexObjectTest" : [ "trustJavaIncludingArrays", "trustJavaLang", "useBlacklist" ],
            "org.apache.commons.io.serialization.ValidatingObjectInputStreamTest" : [ "acceptWildcard", "ourTestClassAcceptedFirstWildcard", "ourTestClassAcceptedSecondWildcard", "rejectWildcard" ],
            "org.apache.commons.io.serialization.WildcardClassNameMatcherTest" : [ "noPattern", "star", "starAndQuestionMark" ]
          }
        }
      },
      "ignoredAffectedTests" : {
        "testcases" : {
          "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyFileLarge" ]
        }
      }
    },
    "d19259a7774e23ebdaac4af5ee4def8602fe2969" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "d3fc1a2877c165a57949414f5737ef00ffcd867d",
      "changedClazzes" : {
        "org.apache.commons.io.ByteOrderMark" : {
          "testcases" : {
            "org.apache.commons.io.ByteOrderMarkTestCase" : [ "charsetName", "constantCharsetNames", "errors", "get", "getBytes", "testEquals", "testHashCode", "testLength", "testToString" ],
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "skipReturnValueWithBom", "skipReturnValueWithoutBom", "testAvailableWithBOM", "testAvailableWithoutBOM", "testClose", "testEmptyBufferWithBOM", "testEmptyBufferWithoutBOM", "testGetBOMFirstThenRead", "testGetBOMFirstThenReadInclude", "testLargeBufferWithBOM", "testLargeBufferWithoutBOM", "testLeadingNonBOMBufferedRead", "testLeadingNonBOMSingleRead", "testMarkResetAfterReadWithBOM", "testMarkResetAfterReadWithoutBOM", "testMarkResetBeforeReadWithBOM", "testMarkResetBeforeReadWithoutBOM", "testReadEmpty", "testReadSmall", "testReadTwiceWithBOM", "testReadTwiceWithoutBOM", "testReadWithBOMInclude", "testReadWithBOMUtf16Be", "testReadWithBOMUtf16Le", "testReadWithBOMUtf32Be", "testReadWithBOMUtf32Le", "testReadWithBOMUtf8", "testReadWithMultipleBOM", "testReadWithoutBOM", "testReadXmlWithBOMUcs2", "testReadXmlWithBOMUtf16Be", "testReadXmlWithBOMUtf16Le", "testReadXmlWithBOMUtf32Be", "testReadXmlWithBOMUtf32Le", "testReadXmlWithBOMUtf8", "testReadXmlWithoutBOMUtf32Be", "testReadXmlWithoutBOMUtf32Le", "testSkipWithBOM", "testSkipWithoutBOM", "testSmallBufferWithBOM", "testSmallBufferWithoutBOM" ],
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testEncodingAttributeXML", "testHttp", "testHttpContent", "testRawBomUtf16", "testRawBomUtf32", "testRawBomUtf8", "testRawContent", "testRawNoBomCp1047", "testRawNoBomIso8859_1", "testRawNoBomUsAscii", "testRawNoBomUtf16BE", "testRawNoBomUtf16LE", "testRawNoBomUtf32BE", "testRawNoBomUtf32LE", "testRawNoBomUtf8" ],
            "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testAppXml", "testCalculateHttpEncoding", "testCalculateHttpEncodingUtf32", "testCalculateRawEncodingAdditonalUTF16", "testCalculateRawEncodingAdditonalUTF32", "testCalculateRawEncodingNoBOM", "testCalculateRawEncodingStandard", "testCalculateRawEncodingStandardUtf32", "testContentTypeEncoding", "testContentTypeMime", "testTextXml" ],
            "org.apache.commons.io.output.XmlStreamWriterTest" : [ "testDefaultEncoding", "testEBCDICEncoding", "testEUC_JPEncoding", "testEmpty", "testLatin15Encoding", "testLatin1Encoding", "testLatin7Encoding", "testNoXmlHeader", "testUTF16BEEncoding", "testUTF16Encoding", "testUTF16LEEncoding", "testUTF8Encoding" ]
          }
        },
        "org.apache.commons.io.ByteOrderMark#<init>(java.lang.String,int)" : {
          "testcases" : {
            "org.apache.commons.io.output.XmlStreamWriterTest" : [ "testLowerCaseEncoding" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReader#getContentTypeEncoding(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testEncodingAttributeXML", "testHttp" ],
            "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testCalculateHttpEncoding", "testCalculateHttpEncodingUtf32", "testCalculateRawEncodingAdditonalUTF16", "testCalculateRawEncodingAdditonalUTF32", "testCalculateRawEncodingNoBOM", "testCalculateRawEncodingStandard", "testCalculateRawEncodingStandardUtf32", "testContentTypeEncoding" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReader#getXmlProlog(java.io.InputStream,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testReadXmlWithBOMUtf32Be", "testReadXmlWithBOMUtf32Le" ],
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testEncodingAttributeXML", "testHttp", "testHttpContent", "testRawBomUtf16", "testRawBomUtf32", "testRawBomUtf8", "testRawContent", "testRawNoBomCp1047", "testRawNoBomIso8859_1", "testRawNoBomUsAscii", "testRawNoBomUtf16BE", "testRawNoBomUtf16LE", "testRawNoBomUtf32BE", "testRawNoBomUtf32LE", "testRawNoBomUtf8" ],
            "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testCalculateHttpEncoding", "testCalculateHttpEncodingUtf32", "testCalculateRawEncodingAdditonalUTF16", "testCalculateRawEncodingAdditonalUTF32", "testCalculateRawEncodingNoBOM", "testCalculateRawEncodingStandard", "testCalculateRawEncodingStandardUtf32" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReaderTest" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testEncodingAttributeXML", "testHttp", "testHttpContent", "testRawBomUtf16", "testRawBomUtf32", "testRawBomUtf8", "testRawContent", "testRawNoBomCp1047", "testRawNoBomIso8859_1", "testRawNoBomUsAscii", "testRawNoBomUtf16BE", "testRawNoBomUtf16LE", "testRawNoBomUtf32BE", "testRawNoBomUtf32LE", "testRawNoBomUtf8" ]
          }
        },
        "org.apache.commons.io.input.compatibility.XmlStreamReader" : { },
        "org.apache.commons.io.output.XmlStreamWriter" : {
          "testcases" : {
            "org.apache.commons.io.output.XmlStreamWriterTest" : [ "testDefaultEncoding", "testEBCDICEncoding", "testEUC_JPEncoding", "testEmpty", "testLatin15Encoding", "testLatin1Encoding", "testLatin7Encoding", "testNoXmlHeader", "testUTF16BEEncoding", "testUTF16Encoding", "testUTF16LEEncoding", "testUTF8Encoding" ]
          }
        },
        "org.apache.commons.io.output.XmlStreamWriter#<init>(java.io.OutputStream,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.output.XmlStreamWriterTest" : [ "testLowerCaseEncoding" ]
          }
        },
        "org.apache.commons.io.output.XmlStreamWriter#close" : {
          "testcases" : {
            "org.apache.commons.io.output.XmlStreamWriterTest" : [ "testLowerCaseEncoding" ]
          }
        },
        "org.apache.commons.io.output.XmlStreamWriter#detectEncoding(char[],int,int)" : {
          "testcases" : {
            "org.apache.commons.io.output.XmlStreamWriterTest" : [ "testLowerCaseEncoding" ]
          }
        },
        "org.apache.commons.io.output.XmlStreamWriter#getEncoding" : {
          "testcases" : {
            "org.apache.commons.io.output.XmlStreamWriterTest" : [ "testLowerCaseEncoding" ]
          }
        },
        "org.apache.commons.io.output.XmlStreamWriter#write(char[],int,int)" : {
          "testcases" : {
            "org.apache.commons.io.output.XmlStreamWriterTest" : [ "testLowerCaseEncoding" ]
          }
        },
        "org.apache.commons.io.output.XmlStreamWriterTest" : {
          "testcases" : {
            "org.apache.commons.io.output.XmlStreamWriterTest" : [ "testDefaultEncoding", "testEBCDICEncoding", "testEUC_JPEncoding", "testEmpty", "testLatin15Encoding", "testLatin1Encoding", "testLatin7Encoding", "testLowerCaseEncoding", "testNoXmlHeader", "testUTF16BEEncoding", "testUTF16Encoding", "testUTF16LEEncoding", "testUTF8Encoding" ]
          }
        },
        "org.apache.commons.io.output.XmlStreamWriterTest#checkXmlContent(java.lang.String,java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.output.XmlStreamWriterTest" : [ "testLowerCaseEncoding" ]
          }
        },
        "org.apache.commons.io.output.XmlStreamWriterTest#checkXmlWriter(java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.output.XmlStreamWriterTest" : [ "testLowerCaseEncoding" ]
          }
        },
        "org.apache.commons.io.output.XmlStreamWriterTest#createXmlContent(java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.output.XmlStreamWriterTest" : [ "testLowerCaseEncoding" ]
          }
        },
        "org.apache.commons.io.output.XmlStreamWriterTest#testLowerCaseEncoding" : {
          "testcases" : {
            "org.apache.commons.io.output.XmlStreamWriterTest" : [ "testLowerCaseEncoding" ]
          }
        }
      }
    },
    "ed15b09985a073d0b17769bb9a28d3e41419a43b" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "d19259a7774e23ebdaac4af5ee4def8602fe2969",
      "changedClazzes" : {
        "org.apache.commons.io.ByteOrderMark#<init>(java.lang.String,int)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testLowerCaseEncodingWithTurkishLocale_IO_557" ],
            "org.apache.commons.io.output.XmlStreamWriterTest" : [ "testLowerCaseEncoding_IO_557" ]
          }
        },
        "org.apache.commons.io.ByteOrderMark#get(int)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testLowerCaseEncodingWithTurkishLocale_IO_557" ]
          }
        },
        "org.apache.commons.io.ByteOrderMark#getCharsetName" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testLowerCaseEncodingWithTurkishLocale_IO_557" ]
          }
        },
        "org.apache.commons.io.ByteOrderMark#length" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testLowerCaseEncodingWithTurkishLocale_IO_557" ]
          }
        },
        "org.apache.commons.io.IOUtils#copy(java.io.Reader,java.io.Writer)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testLowerCaseEncodingWithTurkishLocale_IO_557" ]
          }
        },
        "org.apache.commons.io.IOUtils#copyLarge(java.io.Reader,java.io.Writer)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testLowerCaseEncodingWithTurkishLocale_IO_557" ]
          }
        },
        "org.apache.commons.io.IOUtils#toString(java.io.Reader)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testLowerCaseEncodingWithTurkishLocale_IO_557" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStream#<init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testLowerCaseEncodingWithTurkishLocale_IO_557" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStream#find" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testLowerCaseEncodingWithTurkishLocale_IO_557" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStream#getBOM" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testLowerCaseEncodingWithTurkishLocale_IO_557" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStream#getBOMCharsetName" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testLowerCaseEncodingWithTurkishLocale_IO_557" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStream#mark(int)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testLowerCaseEncodingWithTurkishLocale_IO_557" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStream#matches(org.apache.commons.io.ByteOrderMark)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testLowerCaseEncodingWithTurkishLocale_IO_557" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStream#read" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testLowerCaseEncodingWithTurkishLocale_IO_557" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStream#readFirstBytes" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testLowerCaseEncodingWithTurkishLocale_IO_557" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStream#reset" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testLowerCaseEncodingWithTurkishLocale_IO_557" ]
          }
        },
        "org.apache.commons.io.input.ProxyInputStream#<init>(java.io.InputStream)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testLowerCaseEncodingWithTurkishLocale_IO_557" ]
          }
        },
        "org.apache.commons.io.input.ProxyInputStream#available" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testLowerCaseEncodingWithTurkishLocale_IO_557" ]
          }
        },
        "org.apache.commons.io.input.ProxyInputStream#close" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testLowerCaseEncodingWithTurkishLocale_IO_557" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReader#<init>(java.io.InputStream)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testLowerCaseEncodingWithTurkishLocale_IO_557" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReader#calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testLowerCaseEncodingWithTurkishLocale_IO_557" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReader#close" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testLowerCaseEncodingWithTurkishLocale_IO_557" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReader#doRawStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testLowerCaseEncodingWithTurkishLocale_IO_557" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReader#getEncoding" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testLowerCaseEncodingWithTurkishLocale_IO_557" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReader#getXmlProlog(java.io.InputStream,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testLowerCaseEncodingWithTurkishLocale_IO_557" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReader#read(char[],int,int)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testLowerCaseEncodingWithTurkishLocale_IO_557" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReaderTest" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testEncodingAttributeXML", "testHttp", "testHttpContent", "testLowerCaseEncodingWithTurkishLocale_IO_557", "testRawBomUtf16", "testRawBomUtf32", "testRawBomUtf8", "testRawContent", "testRawNoBomCp1047", "testRawNoBomIso8859_1", "testRawNoBomUsAscii", "testRawNoBomUtf16BE", "testRawNoBomUtf16LE", "testRawNoBomUtf32BE", "testRawNoBomUtf32LE", "testRawNoBomUtf8" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReaderTest#getXML(java.lang.String,java.lang.String,java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testLowerCaseEncodingWithTurkishLocale_IO_557" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReaderTest#testLowerCaseEncodingWithTurkishLocale_IO_557" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testLowerCaseEncodingWithTurkishLocale_IO_557" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#<init>" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testLowerCaseEncodingWithTurkishLocale_IO_557" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#close" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testLowerCaseEncodingWithTurkishLocale_IO_557" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#toString" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testLowerCaseEncodingWithTurkishLocale_IO_557" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#write(char[],int,int)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testLowerCaseEncodingWithTurkishLocale_IO_557" ]
          }
        },
        "org.apache.commons.io.output.XmlStreamWriter#<init>(java.io.OutputStream,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.output.XmlStreamWriterTest" : [ "testLowerCaseEncoding_IO_557" ]
          }
        },
        "org.apache.commons.io.output.XmlStreamWriter#close" : {
          "testcases" : {
            "org.apache.commons.io.output.XmlStreamWriterTest" : [ "testLowerCaseEncoding_IO_557" ]
          }
        },
        "org.apache.commons.io.output.XmlStreamWriter#detectEncoding(char[],int,int)" : {
          "testcases" : {
            "org.apache.commons.io.output.XmlStreamWriterTest" : [ "testLowerCaseEncoding_IO_557" ]
          }
        },
        "org.apache.commons.io.output.XmlStreamWriter#getEncoding" : {
          "testcases" : {
            "org.apache.commons.io.output.XmlStreamWriterTest" : [ "testLowerCaseEncoding_IO_557" ]
          }
        },
        "org.apache.commons.io.output.XmlStreamWriter#write(char[],int,int)" : {
          "testcases" : {
            "org.apache.commons.io.output.XmlStreamWriterTest" : [ "testLowerCaseEncoding_IO_557" ]
          }
        },
        "org.apache.commons.io.output.XmlStreamWriterTest" : {
          "testcases" : {
            "org.apache.commons.io.output.XmlStreamWriterTest" : [ "testDefaultEncoding", "testEBCDICEncoding", "testEUC_JPEncoding", "testEmpty", "testLatin15Encoding", "testLatin1Encoding", "testLatin7Encoding", "testLowerCaseEncoding_IO_557", "testNoXmlHeader", "testUTF16BEEncoding", "testUTF16Encoding", "testUTF16LEEncoding", "testUTF8Encoding" ]
          }
        },
        "org.apache.commons.io.output.XmlStreamWriterTest#checkXmlContent(java.lang.String,java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.output.XmlStreamWriterTest" : [ "testLowerCaseEncoding_IO_557" ]
          }
        },
        "org.apache.commons.io.output.XmlStreamWriterTest#checkXmlWriter(java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.output.XmlStreamWriterTest" : [ "testLowerCaseEncoding_IO_557" ]
          }
        },
        "org.apache.commons.io.output.XmlStreamWriterTest#createXmlContent(java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.output.XmlStreamWriterTest" : [ "testLowerCaseEncoding_IO_557" ]
          }
        },
        "org.apache.commons.io.output.XmlStreamWriterTest#testLowerCaseEncoding_IO_557" : {
          "testcases" : {
            "org.apache.commons.io.output.XmlStreamWriterTest" : [ "testLowerCaseEncoding_IO_557" ]
          }
        },
        "org.apache.commons.io.testtools.SystemDefaults" : { },
        "org.apache.commons.io.testtools.SystemDefaultsSwitch" : { },
        "org.apache.commons.io.testtools.SystemDefaultsSwitch#apply(org.junit.runners.model.Statement,org.junit.runner.Description)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testLowerCaseEncodingWithTurkishLocale_IO_557" ],
            "org.apache.commons.io.output.XmlStreamWriterTest" : [ "testLowerCaseEncoding_IO_557" ]
          }
        },
        "org.apache.commons.io.testtools.SystemDefaultsSwitch#applyLocale(org.apache.commons.io.testtools.SystemDefaults,org.junit.runners.model.Statement)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testLowerCaseEncodingWithTurkishLocale_IO_557" ],
            "org.apache.commons.io.output.XmlStreamWriterTest" : [ "testLowerCaseEncoding_IO_557" ]
          }
        }
      }
    },
    "459cebc515b11fef06464b711b3b33cbc1dd8c26" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "ed15b09985a073d0b17769bb9a28d3e41419a43b",
      "changedClazzes" : { }
    },
    "947c01f6d8000122a174da3d668208eec877a799" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "459cebc515b11fef06464b711b3b33cbc1dd8c26",
      "changedClazzes" : {
        "org.apache.commons.io.FilenameUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpaceWindows_String_quoted" ],
            "org.apache.commons.io.FileUtilsDirectoryContainsTestCase" : [ "testCanonicalPath", "testDirectoryContainsDirectory", "testDirectoryContainsFile", "testDirectoryDoesNotContainFile", "testDirectoryDoesNotContainsDirectory" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension", "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered", "testIterateFiles", "testIterateFilesAndDirs", "testListFiles", "testListFilesWithDirs", "testSizeOfDirectory", "testSizeOfDirectoryAsBigInteger" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedError_IO_128", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetBaseName_with_nullByte", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetFullPathNoEndSeparator_IO_248", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPathNoEndSeparator_with_null_byte", "testGetPath_with_nullbyte", "testGetPrefix", "testGetPrefixLength", "testGetPrefix_with_nullbyte", "testIndexOfExtension", "testIndexOfLastSeparator", "testInjectionFailure", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testIsExtension_injection", "testNormalize", "testNormalizeNoEndSeparator", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin", "testNormalize_with_nullbytes", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.FilenameUtilsWildcardTestCase" : [ "testLocaleIndependence", "testMatch", "testMatch2", "testMatchCaseSpecified", "testMatchOnSystem", "testSplitOnTokens", "test_IO_246" ],
            "org.apache.commons.io.IOCaseTestCase" : [ "test_checkCompare_case", "test_checkCompare_functionality", "test_checkEndsWith_case", "test_checkEndsWith_functionality", "test_checkEquals_case", "test_checkEquals_functionality", "test_checkIndexOf_case", "test_checkIndexOf_functionality", "test_checkRegionMatches_case", "test_checkRegionMatches_functionality", "test_checkStartsWith_case", "test_checkStartsWith_functionality", "test_forName", "test_getName", "test_isCaseSensitive", "test_serialization", "test_toString" ],
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "constructorArray_Null", "constructorIterable_Null", "constructorIterable_order" ],
            "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.NameFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.PathFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testDelegation", "testDeprecatedWildcard", "testEnsureTestCoverage", "testFalse", "testFileFilterUtils_and", "testFileFilterUtils_or", "testFilterArray", "testFilterArrayNullParameters", "testFilterArray_fromList", "testFilterList", "testFilterListNullParameters", "testFilterList_fromArray", "testFilterSet", "testFilterSetNullParameters", "testFilterSet_fromArray", "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNot", "testNullFilters", "testPrefix", "testPrefixCaseInsensitive", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testTrue", "testWildcard" ],
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ],
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor", "testMonitor", "testThreadFactory" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile", "testToString" ],
            "org.apache.commons.io.serialization.MoreComplexObjectTest" : [ "trustJavaIncludingArrays", "trustJavaLang", "useBlacklist" ],
            "org.apache.commons.io.serialization.ValidatingObjectInputStreamTest" : [ "acceptWildcard", "ourTestClassAcceptedFirstWildcard", "ourTestClassAcceptedSecondWildcard", "rejectWildcard" ],
            "org.apache.commons.io.serialization.WildcardClassNameMatcherTest" : [ "noPattern", "star", "starAndQuestionMark" ]
          }
        },
        "org.apache.commons.io.FilenameUtilsTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedError_IO_128", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetBaseName_with_nullByte", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetFullPathNoEndSeparator_IO_248", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPathNoEndSeparator_with_null_byte", "testGetPath_with_nullbyte", "testGetPrefix", "testGetPrefixLength", "testGetPrefix_with_nullbyte", "testIndexOfExtension", "testIndexOfLastSeparator", "testInjectionFailure", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testIsExtension_injection", "testNormalize", "testNormalizeNoEndSeparator", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin", "testNormalize_with_nullbytes", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ]
          }
        },
        "org.apache.commons.io.NtfsAdsNameException" : { }
      },
      "ignoredAffectedTests" : {
        "testcases" : {
          "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyFileLarge" ]
        }
      }
    },
    "748eef8b96068cadc45894967f58f015860afb1b" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "947c01f6d8000122a174da3d668208eec877a799",
      "changedClazzes" : {
        "org.apache.commons.io.FilenameUtils#indexOfExtension(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testGetBaseName", "testGetExtension", "testIndexOfExtension", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testRemoveExtension" ],
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "constructorIterable_order" ],
            "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : [ "testCaseSensitivity" ]
          }
        },
        "org.apache.commons.io.NtfsAdsNameException" : { }
      }
    },
    "cfb682e9da63f308d26e547bb7d0b350ef3eda42" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "748eef8b96068cadc45894967f58f015860afb1b",
      "changedClazzes" : { }
    },
    "27fb1044f1f244a9f8841f059392bd7e595797a3" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "cfb682e9da63f308d26e547bb7d0b350ef3eda42",
      "changedClazzes" : { }
    },
    "467386105ad855e793a09632142c00cd01c5dd10" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "27fb1044f1f244a9f8841f059392bd7e595797a3",
      "changedClazzes" : {
        "org.apache.commons.io.input.Tailer#run" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testBufferBreak", "testIO335", "testInterrupt", "testLongFile", "testMultiByteBreak", "testStopWithNoFile", "testStopWithNoFileUsingExecutor", "testTailer", "testTailerEndOfFileReached", "testTailerEof" ]
          }
        }
      }
    },
    "9e405ca54138b63a4daff58d14d0527fef1e8e66" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "467386105ad855e793a09632142c00cd01c5dd10",
      "changedClazzes" : {
        "org.apache.commons.io.input.Tailer#<init>(java.io.File,java.nio.charset.Charset,org.apache.commons.io.input.TailerListener,long,boolean,boolean,int)" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testBufferBreak", "testIO335", "testInterrupt", "testLongFile", "testMultiByteBreak", "testStopWithNoFile", "testStopWithNoFileUsingExecutor", "testTailer", "testTailerEndOfFileReached", "testTailerEof" ]
          }
        },
        "org.apache.commons.io.input.Tailer#readLines(java.io.RandomAccessFile)" : {
          "testcases" : {
            "org.apache.commons.io.input.TailerTest" : [ "testBufferBreak", "testIO335", "testLongFile", "testMultiByteBreak", "testTailer", "testTailerEndOfFileReached", "testTailerEof" ]
          }
        }
      }
    },
    "a653a4487774f57a7aff2c9dc1fe40b9b221cb6b" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "9e405ca54138b63a4daff58d14d0527fef1e8e66",
      "changedClazzes" : { }
    },
    "0f98e790a43b17ae1bb60d264931fb4f13300762" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "a653a4487774f57a7aff2c9dc1fe40b9b221cb6b",
      "changedClazzes" : {
        "org.apache.commons.io.FilenameUtils#concat(java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#doGetFullPath(java.lang.String,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetFullPathNoEndSeparator_IO_248" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#getAdsCriticalOffset(java.lang.String)" : { },
        "org.apache.commons.io.FilenameUtils#getExtension(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testGetExtension", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection" ],
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "constructorIterable_order" ],
            "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : [ "testCaseSensitivity" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#getPrefixLength(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpaceWindows_String_quoted" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEqualsNormalized", "testEqualsNormalizedError_IO_128", "testEqualsNormalizedOnSystem", "testEquals_fullControl", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetFullPathNoEndSeparator_IO_248", "testGetPath", "testGetPathNoEndSeparator", "testGetPathNoEndSeparator_with_null_byte", "testGetPath_with_nullbyte", "testGetPrefix", "testGetPrefixLength", "testGetPrefix_with_nullbyte", "testNormalize", "testNormalizeNoEndSeparator", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#removeExtension(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testGetBaseName", "testRemoveExtension" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#separatorsToSystem(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testSeparatorsToSystem" ]
          }
        }
      }
    },
    "8f957f527b9048f51aad91b544bed35c48bcf3a9" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "0f98e790a43b17ae1bb60d264931fb4f13300762",
      "changedClazzes" : {
        "org.apache.commons.io.FilenameUtils#separatorsToSystem(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testSeparatorsToSystem" ]
          }
        }
      }
    },
    "f03149e07dee90b23369d1cdb7f15c142df5e31d" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "8f957f527b9048f51aad91b544bed35c48bcf3a9",
      "changedClazzes" : {
        "org.apache.commons.io.FilenameUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpaceWindows_String_quoted" ],
            "org.apache.commons.io.FileUtilsDirectoryContainsTestCase" : [ "testCanonicalPath", "testDirectoryContainsDirectory", "testDirectoryContainsFile", "testDirectoryDoesNotContainFile", "testDirectoryDoesNotContainsDirectory" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension", "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered", "testIterateFiles", "testIterateFilesAndDirs", "testListFiles", "testListFilesWithDirs", "testSizeOfDirectory", "testSizeOfDirectoryAsBigInteger" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedError_IO_128", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetBaseName_with_nullByte", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetFullPathNoEndSeparator_IO_248", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPathNoEndSeparator_with_null_byte", "testGetPath_with_nullbyte", "testGetPrefix", "testGetPrefixLength", "testGetPrefix_with_nullbyte", "testIndexOfExtension", "testIndexOfLastSeparator", "testInjectionFailure", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testIsExtension_injection", "testNormalize", "testNormalizeNoEndSeparator", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin", "testNormalize_with_nullbytes", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.FilenameUtilsWildcardTestCase" : [ "testLocaleIndependence", "testMatch", "testMatch2", "testMatchCaseSpecified", "testMatchOnSystem", "testSplitOnTokens", "test_IO_246" ],
            "org.apache.commons.io.IOCaseTestCase" : [ "test_checkCompare_case", "test_checkCompare_functionality", "test_checkEndsWith_case", "test_checkEndsWith_functionality", "test_checkEquals_case", "test_checkEquals_functionality", "test_checkIndexOf_case", "test_checkIndexOf_functionality", "test_checkRegionMatches_case", "test_checkRegionMatches_functionality", "test_checkStartsWith_case", "test_checkStartsWith_functionality", "test_forName", "test_getName", "test_isCaseSensitive", "test_serialization", "test_toString" ],
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "constructorArray_Null", "constructorIterable_Null", "constructorIterable_order" ],
            "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.NameFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.PathFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testDelegation", "testDeprecatedWildcard", "testEnsureTestCoverage", "testFalse", "testFileFilterUtils_and", "testFileFilterUtils_or", "testFilterArray", "testFilterArrayNullParameters", "testFilterArray_fromList", "testFilterList", "testFilterListNullParameters", "testFilterList_fromArray", "testFilterSet", "testFilterSetNullParameters", "testFilterSet_fromArray", "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNot", "testNullFilters", "testPrefix", "testPrefixCaseInsensitive", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testTrue", "testWildcard" ],
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ],
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor", "testMonitor", "testThreadFactory" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile", "testToString" ],
            "org.apache.commons.io.serialization.MoreComplexObjectTest" : [ "trustJavaIncludingArrays", "trustJavaLang", "useBlacklist" ],
            "org.apache.commons.io.serialization.ValidatingObjectInputStreamTest" : [ "acceptWildcard", "ourTestClassAcceptedFirstWildcard", "ourTestClassAcceptedSecondWildcard", "rejectWildcard" ],
            "org.apache.commons.io.serialization.WildcardClassNameMatcherTest" : [ "noPattern", "star", "starAndQuestionMark" ]
          }
        }
      },
      "ignoredAffectedTests" : {
        "testcases" : {
          "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyFileLarge" ]
        }
      }
    },
    "8993c0060e4eb2d5bca20e3529a829a9dd90efdf" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "f03149e07dee90b23369d1cdb7f15c142df5e31d",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils#sizeOf(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCompareSizeOf", "testSizeOf" ]
          }
        },
        "org.apache.commons.io.FileUtils#sizeOf0(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCompareSizeOf", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testSizeOf" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes" ]
          }
        },
        "org.apache.commons.io.FileUtils#sizeOfAsBigInteger(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCompareSizeOf", "testSizeOfAsBigInteger" ]
          }
        },
        "org.apache.commons.io.FileUtils#sizeOfBig0(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCompareSizeOf", "testSizeOfAsBigInteger", "testSizeOfDirectoryAsBigInteger" ]
          }
        },
        "org.apache.commons.io.FileUtils#toFile(java.net.URL)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFile5", "testToFileUtf8", "testToFiles1", "testToFiles2", "testToFiles4" ]
          }
        },
        "org.apache.commons.io.comparator.DirectoryFileComparator" : {
          "testcases" : {
            "org.apache.commons.io.comparator.DirectoryFileComparatorTest" : [ "testSortArray" ]
          }
        },
        "org.apache.commons.io.filefilter.DelegateFileFilter#accept(java.io.File,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testDelegateFileFilter" ]
          }
        },
        "org.apache.commons.io.filefilter.EmptyFileFilter#accept(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testEmpty" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#makeCVSAware(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testListFiles" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testMakeCVSAware" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#makeSVNAware(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testMakeSVNAware" ]
          }
        },
        "org.apache.commons.io.input.CharSequenceReader#read" : {
          "testcases" : {
            "org.apache.commons.io.input.CharSequenceReaderTest" : [ "testClose", "testMark", "testRead", "testReadCharArray", "testReadCharArrayPortion", "testSkip" ]
          }
        },
        "org.apache.commons.io.input.DemuxInputStream#read" : {
          "testcases" : {
            "org.apache.commons.io.DemuxTestCase" : [ "testInputStream" ]
          }
        },
        "org.apache.commons.io.input.ReversedLinesFileReader$FilePart#rollOver" : {
          "testcases" : {
            "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize" : [ "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=256)", "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=1)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=256)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=3)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=8)", "testGBK(JUNIT_PARAMETERIZED-BlockSize=1)", "testGBK(JUNIT_PARAMETERIZED-BlockSize=3)", "testGBK(JUNIT_PARAMETERIZED-BlockSize=8)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=1)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=256)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=3)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=8)", "testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=1)", "testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=3)", "testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=8)", "testShiftJISFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testShiftJISFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testShiftJISFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=8)", "testWindows31jFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testWindows31jFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testWindows31jFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testxWindows949File(JUNIT_PARAMETERIZED-BlockSize=1)", "testxWindows949File(JUNIT_PARAMETERIZED-BlockSize=3)", "testxWindows949File(JUNIT_PARAMETERIZED-BlockSize=8)", "testxWindows950File(JUNIT_PARAMETERIZED-BlockSize=1)", "testxWindows950File(JUNIT_PARAMETERIZED-BlockSize=3)", "testxWindows950File(JUNIT_PARAMETERIZED-BlockSize=8)" ],
            "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile" : [ "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-20byteslength.bin, charset=ISO_8859_1)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-gbk.bin, charset=gbk)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-iso8859-1-shortlines-win-linebr.bin, charset=ISO_8859_1)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-iso8859-1.bin, charset=ISO_8859_1)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-shiftjis.bin, charset=Shift_JIS)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf16be.bin, charset=UTF-16BE)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf16le.bin, charset=UTF-16LE)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf8-cr-only.bin, charset=UTF-8)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf8-win-linebr.bin, charset=UTF-8)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf8.bin, charset=UTF-8)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-windows-31j.bin, charset=windows-31j)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-x-windows-949.bin, charset=x-windows-949)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-x-windows-950.bin, charset=x-windows-950)" ],
            "org.apache.commons.io.input.ReversedLinesFileReaderTestSimple" : [ "testFileSizeIsExactMultipleOfBlockSize" ]
          }
        },
        "org.apache.commons.io.input.UnixLineEndingInputStream#eofGame(boolean)" : {
          "testcases" : {
            "org.apache.commons.io.input.UnixLineEndingInputStreamTest" : [ "crAtEnd", "crOnlyEnsureAtEof", "crOnlyNotAtEof", "inTheMiddleOfTheLine", "multipleBlankLines", "retainLineFeed", "simpleString", "twoLinesAtEnd" ]
          }
        },
        "org.apache.commons.io.input.UnixLineEndingInputStream#read" : {
          "testcases" : {
            "org.apache.commons.io.input.UnixLineEndingInputStreamTest" : [ "crAtEnd", "crOnlyEnsureAtEof", "crOnlyNotAtEof", "inTheMiddleOfTheLine", "multipleBlankLines", "retainLineFeed", "simpleString", "twoLinesAtEnd" ]
          }
        },
        "org.apache.commons.io.input.WindowsLineEndingInputStream#eofGame" : {
          "testcases" : {
            "org.apache.commons.io.input.WindowsLineEndingInputStreamTest" : [ "inTheMiddleOfTheLine", "linuxLinefeeds", "malformed", "multipleBlankLines", "retainLineFeed", "simpleString", "twoLinesAtEnd" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReader#calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testEncodingAttributeXML", "testHttp", "testHttpContent" ],
            "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testCalculateHttpEncoding", "testCalculateHttpEncodingUtf32", "testCalculateRawEncodingAdditonalUTF16", "testCalculateRawEncodingAdditonalUTF32", "testCalculateRawEncodingNoBOM", "testCalculateRawEncodingStandard", "testCalculateRawEncodingStandardUtf32" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReader#doHttpStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,java.lang.String,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testEncodingAttributeXML", "testHttp", "testHttpContent" ],
            "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testCalculateHttpEncoding", "testCalculateHttpEncodingUtf32", "testCalculateRawEncodingAdditonalUTF16", "testCalculateRawEncodingAdditonalUTF32", "testCalculateRawEncodingNoBOM", "testCalculateRawEncodingStandard", "testCalculateRawEncodingStandardUtf32" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReader#doRawStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testReadXmlWithBOMUtf32Be", "testReadXmlWithBOMUtf32Le" ],
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testLowerCaseEncodingWithTurkishLocale_IO_557", "testRawBomUtf16", "testRawBomUtf32", "testRawBomUtf8", "testRawContent", "testRawNoBomCp1047", "testRawNoBomIso8859_1", "testRawNoBomUsAscii", "testRawNoBomUtf16BE", "testRawNoBomUtf16LE", "testRawNoBomUtf32BE", "testRawNoBomUtf32LE", "testRawNoBomUtf8" ]
          }
        },
        "org.apache.commons.io.input.XmlStreamReader#getXmlProlog(java.io.InputStream,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testReadXmlWithBOMUtf32Be", "testReadXmlWithBOMUtf32Le" ],
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testEncodingAttributeXML", "testHttp", "testHttpContent", "testLowerCaseEncodingWithTurkishLocale_IO_557", "testRawBomUtf16", "testRawBomUtf32", "testRawBomUtf8", "testRawContent", "testRawNoBomCp1047", "testRawNoBomIso8859_1", "testRawNoBomUsAscii", "testRawNoBomUtf16BE", "testRawNoBomUtf16LE", "testRawNoBomUtf32BE", "testRawNoBomUtf32LE", "testRawNoBomUtf8" ],
            "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" : [ "testCalculateHttpEncoding", "testCalculateHttpEncodingUtf32", "testCalculateRawEncodingAdditonalUTF16", "testCalculateRawEncodingAdditonalUTF32", "testCalculateRawEncodingNoBOM", "testCalculateRawEncodingStandard", "testCalculateRawEncodingStandardUtf32" ]
          }
        }
      },
      "ignoredAffectedTests" : {
        "testcases" : {
          "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyFileLarge" ]
        }
      }
    },
    "48f7e179e4c5f4e59afdf0bfb4ec5228692e00ec" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "8993c0060e4eb2d5bca20e3529a829a9dd90efdf",
      "changedClazzes" : {
        "org.apache.commons.io.IOCase" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilter", "testFilterAndLimitB", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4", "testFilterString" ],
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testFilter", "testFilterAndLimitB", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ],
            "org.apache.commons.io.FileUtilsDirectoryContainsTestCase" : [ "testCanonicalPath", "testDirectoryContainsDirectory", "testDirectoryContainsFile", "testDirectoryDoesNotContainFile", "testDirectoryDoesNotContainsDirectory" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension", "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered", "testIterateFiles", "testIterateFilesAndDirs", "testListFiles", "testListFilesWithDirs" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testEquals", "testEqualsNormalized", "testEqualsNormalizedError_IO_128", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl" ],
            "org.apache.commons.io.FilenameUtilsWildcardTestCase" : [ "testLocaleIndependence", "testMatch", "testMatch2", "testMatchCaseSpecified", "testMatchOnSystem", "test_IO_246" ],
            "org.apache.commons.io.IOCaseTestCase" : [ "test_checkCompare_case", "test_checkCompare_functionality", "test_checkEndsWith_case", "test_checkEndsWith_functionality", "test_checkEquals_case", "test_checkEquals_functionality", "test_checkIndexOf_case", "test_checkIndexOf_functionality", "test_checkRegionMatches_case", "test_checkRegionMatches_functionality", "test_checkStartsWith_case", "test_checkStartsWith_functionality", "test_forName", "test_getName", "test_isCaseSensitive", "test_serialization", "test_toString" ],
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "constructorArray_Null", "constructorIterable_Null", "constructorIterable_order" ],
            "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.NameFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.PathFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testDelegation", "testDeprecatedWildcard", "testEnsureTestCoverage", "testFalse", "testFileFilterUtils_and", "testFileFilterUtils_or", "testFilterArray", "testFilterArrayNullParameters", "testFilterArray_fromList", "testFilterList", "testFilterListNullParameters", "testFilterList_fromArray", "testFilterSet", "testFilterSetNullParameters", "testFilterSet_fromArray", "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNot", "testNullFilters", "testPrefix", "testPrefixCaseInsensitive", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testTrue", "testWildcard" ],
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ],
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor", "testMonitor", "testThreadFactory" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile", "testToString" ],
            "org.apache.commons.io.serialization.MoreComplexObjectTest" : [ "trustJavaIncludingArrays", "trustJavaLang", "useBlacklist" ],
            "org.apache.commons.io.serialization.ValidatingObjectInputStreamTest" : [ "acceptWildcard", "ourTestClassAcceptedFirstWildcard", "ourTestClassAcceptedSecondWildcard", "rejectWildcard" ],
            "org.apache.commons.io.serialization.WildcardClassNameMatcherTest" : [ "noPattern", "star", "starAndQuestionMark" ]
          }
        }
      },
      "ignoredAffectedTests" : {
        "testcases" : {
          "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyFileLarge" ]
        }
      }
    },
    "c329443d7d50b4d891bc8229988b838642a132cf" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "48f7e179e4c5f4e59afdf0bfb4ec5228692e00ec",
      "changedClazzes" : { }
    },
    "91a94d9f47b2bc928eaaf83d7c9dd06c235a2824" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "c329443d7d50b4d891bc8229988b838642a132cf",
      "changedClazzes" : {
        "org.apache.commons.io.output.WriterOutputStream#checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)" : {
          "testcases" : {
            "org.apache.commons.io.output.WriterOutputStreamTest" : [ "testFlush", "testLargeUTF8WithBufferedWrite", "testLargeUTF8WithSingleByteWrite", "testUTF16BEWithBufferedWrite", "testUTF16BEWithSingleByteWrite", "testUTF16LEWithBufferedWrite", "testUTF16LEWithSingleByteWrite", "testUTF16WithBufferedWrite", "testUTF16WithSingleByteWrite", "testUTF8WithBufferedWrite", "testUTF8WithSingleByteWrite", "testWriteImmediately" ]
          }
        }
      }
    },
    "68a73b54d6fd08ea2951ea1911e035a2390119bc" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "91a94d9f47b2bc928eaaf83d7c9dd06c235a2824",
      "changedClazzes" : {
        "org.apache.commons.io.IOCase" : {
          "testcases" : {
            "org.apache.commons.io.DirectoryWalkerTestCase" : [ "testFilter", "testFilterAndLimitB", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4", "testFilterString" ],
            "org.apache.commons.io.DirectoryWalkerTestCaseJava4" : [ "testFilter", "testFilterAndLimitB", "testFilterAndLimitC", "testFilterAndLimitD", "testFilterDirAndFile1", "testFilterDirAndFile3", "testFilterDirAndFile4" ],
            "org.apache.commons.io.FileUtilsDirectoryContainsTestCase" : [ "testCanonicalPath", "testDirectoryContainsDirectory", "testDirectoryContainsFile", "testDirectoryDoesNotContainFile", "testDirectoryDoesNotContainsDirectory" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension", "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered", "testIterateFiles", "testIterateFilesAndDirs", "testListFiles", "testListFilesWithDirs" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testEquals", "testEqualsNormalized", "testEqualsNormalizedError_IO_128", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl" ],
            "org.apache.commons.io.FilenameUtilsWildcardTestCase" : [ "testLocaleIndependence", "testMatch", "testMatch2", "testMatchCaseSpecified", "testMatchOnSystem", "test_IO_246" ],
            "org.apache.commons.io.IOCaseTestCase" : [ "test_checkCompare_case", "test_checkCompare_functionality", "test_checkEndsWith_case", "test_checkEndsWith_functionality", "test_checkEquals_case", "test_checkEquals_functionality", "test_checkIndexOf_case", "test_checkIndexOf_functionality", "test_checkRegionMatches_case", "test_checkRegionMatches_functionality", "test_checkStartsWith_case", "test_checkStartsWith_functionality", "test_forName", "test_getName", "test_isCaseSensitive", "test_serialization", "test_toString" ],
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "constructorArray_Null", "constructorIterable_Null", "constructorIterable_order" ],
            "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.NameFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.PathFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testDelegation", "testDeprecatedWildcard", "testEnsureTestCoverage", "testFalse", "testFileFilterUtils_and", "testFileFilterUtils_or", "testFilterArray", "testFilterArrayNullParameters", "testFilterArray_fromList", "testFilterList", "testFilterListNullParameters", "testFilterList_fromArray", "testFilterSet", "testFilterSetNullParameters", "testFilterSet_fromArray", "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNot", "testNullFilters", "testPrefix", "testPrefixCaseInsensitive", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testTrue", "testWildcard" ],
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ],
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor", "testMonitor", "testThreadFactory" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile", "testToString" ],
            "org.apache.commons.io.serialization.MoreComplexObjectTest" : [ "trustJavaIncludingArrays", "trustJavaLang", "useBlacklist" ],
            "org.apache.commons.io.serialization.ValidatingObjectInputStreamTest" : [ "acceptWildcard", "ourTestClassAcceptedFirstWildcard", "ourTestClassAcceptedSecondWildcard", "rejectWildcard" ],
            "org.apache.commons.io.serialization.WildcardClassNameMatcherTest" : [ "noPattern", "star", "starAndQuestionMark" ]
          }
        }
      },
      "ignoredAffectedTests" : {
        "testcases" : {
          "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyFileLarge" ]
        }
      }
    },
    "b498cda5bc8d834ab311a6a3415e990100d8a81a" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "68a73b54d6fd08ea2951ea1911e035a2390119bc",
      "changedClazzes" : {
        "org.apache.commons.io.input.ReversedLinesFileReader" : {
          "testcases" : {
            "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize" : [ "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=256)", "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=1)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=256)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=3)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=8)", "testGBK(JUNIT_PARAMETERIZED-BlockSize=1)", "testGBK(JUNIT_PARAMETERIZED-BlockSize=256)", "testGBK(JUNIT_PARAMETERIZED-BlockSize=3)", "testGBK(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testGBK(JUNIT_PARAMETERIZED-BlockSize=8)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=1)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=256)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=3)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=8)", "testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=1)", "testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=256)", "testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=3)", "testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=8)", "testShiftJISFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testShiftJISFile(JUNIT_PARAMETERIZED-BlockSize=256)", "testShiftJISFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testShiftJISFile(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testShiftJISFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=8)", "testUnsupportedEncodingBig5(JUNIT_PARAMETERIZED-BlockSize=1)", "testUnsupportedEncodingBig5(JUNIT_PARAMETERIZED-BlockSize=256)", "testUnsupportedEncodingBig5(JUNIT_PARAMETERIZED-BlockSize=3)", "testUnsupportedEncodingBig5(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUnsupportedEncodingBig5(JUNIT_PARAMETERIZED-BlockSize=8)", "testUnsupportedEncodingUTF16(JUNIT_PARAMETERIZED-BlockSize=1)", "testUnsupportedEncodingUTF16(JUNIT_PARAMETERIZED-BlockSize=256)", "testUnsupportedEncodingUTF16(JUNIT_PARAMETERIZED-BlockSize=3)", "testUnsupportedEncodingUTF16(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUnsupportedEncodingUTF16(JUNIT_PARAMETERIZED-BlockSize=8)", "testWindows31jFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testWindows31jFile(JUNIT_PARAMETERIZED-BlockSize=256)", "testWindows31jFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testWindows31jFile(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testWindows31jFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testxWindows949File(JUNIT_PARAMETERIZED-BlockSize=1)", "testxWindows949File(JUNIT_PARAMETERIZED-BlockSize=256)", "testxWindows949File(JUNIT_PARAMETERIZED-BlockSize=3)", "testxWindows949File(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testxWindows949File(JUNIT_PARAMETERIZED-BlockSize=8)", "testxWindows950File(JUNIT_PARAMETERIZED-BlockSize=1)", "testxWindows950File(JUNIT_PARAMETERIZED-BlockSize=256)", "testxWindows950File(JUNIT_PARAMETERIZED-BlockSize=3)", "testxWindows950File(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testxWindows950File(JUNIT_PARAMETERIZED-BlockSize=8)" ],
            "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile" : [ "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-20byteslength.bin, charset=ISO_8859_1)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-gbk.bin, charset=gbk)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-iso8859-1-shortlines-win-linebr.bin, charset=ISO_8859_1)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-iso8859-1.bin, charset=ISO_8859_1)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-shiftjis.bin, charset=Shift_JIS)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf16be.bin, charset=UTF-16BE)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf16le.bin, charset=UTF-16LE)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf8-cr-only.bin, charset=UTF-8)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf8-win-linebr.bin, charset=UTF-8)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf8.bin, charset=UTF-8)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-windows-31j.bin, charset=windows-31j)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-x-windows-949.bin, charset=x-windows-949)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-x-windows-950.bin, charset=x-windows-950)" ],
            "org.apache.commons.io.input.ReversedLinesFileReaderTestSimple" : [ "testFileSizeIsExactMultipleOfBlockSize", "testUnsupportedEncodingBig5", "testUnsupportedEncodingUTF16" ]
          }
        }
      }
    },
    "276b2825778c0f6286ead1dac0dfe5fca307e77a" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "b498cda5bc8d834ab311a6a3415e990100d8a81a",
      "changedClazzes" : {
        "org.apache.commons.io.input.ReversedLinesFileReader" : {
          "testcases" : {
            "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize" : [ "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=256)", "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testEmptyFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=1)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=256)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=3)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testFileSizeIsExactMultipleOfBlockSize(JUNIT_PARAMETERIZED-BlockSize=8)", "testGBK(JUNIT_PARAMETERIZED-BlockSize=1)", "testGBK(JUNIT_PARAMETERIZED-BlockSize=256)", "testGBK(JUNIT_PARAMETERIZED-BlockSize=3)", "testGBK(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testGBK(JUNIT_PARAMETERIZED-BlockSize=8)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=1)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=256)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=3)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testIsoFileDefaults(JUNIT_PARAMETERIZED-BlockSize=8)", "testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=1)", "testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=256)", "testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=3)", "testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=8)", "testShiftJISFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testShiftJISFile(JUNIT_PARAMETERIZED-BlockSize=256)", "testShiftJISFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testShiftJISFile(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testShiftJISFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF16BEFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF16LEFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF8File(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF8FileCRBreaks(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF8FileWindowsBreaks(JUNIT_PARAMETERIZED-BlockSize=8)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=1)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=256)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=3)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(JUNIT_PARAMETERIZED-BlockSize=8)", "testUnsupportedEncodingBig5(JUNIT_PARAMETERIZED-BlockSize=1)", "testUnsupportedEncodingBig5(JUNIT_PARAMETERIZED-BlockSize=256)", "testUnsupportedEncodingBig5(JUNIT_PARAMETERIZED-BlockSize=3)", "testUnsupportedEncodingBig5(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUnsupportedEncodingBig5(JUNIT_PARAMETERIZED-BlockSize=8)", "testUnsupportedEncodingUTF16(JUNIT_PARAMETERIZED-BlockSize=1)", "testUnsupportedEncodingUTF16(JUNIT_PARAMETERIZED-BlockSize=256)", "testUnsupportedEncodingUTF16(JUNIT_PARAMETERIZED-BlockSize=3)", "testUnsupportedEncodingUTF16(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testUnsupportedEncodingUTF16(JUNIT_PARAMETERIZED-BlockSize=8)", "testWindows31jFile(JUNIT_PARAMETERIZED-BlockSize=1)", "testWindows31jFile(JUNIT_PARAMETERIZED-BlockSize=256)", "testWindows31jFile(JUNIT_PARAMETERIZED-BlockSize=3)", "testWindows31jFile(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testWindows31jFile(JUNIT_PARAMETERIZED-BlockSize=8)", "testxWindows949File(JUNIT_PARAMETERIZED-BlockSize=1)", "testxWindows949File(JUNIT_PARAMETERIZED-BlockSize=256)", "testxWindows949File(JUNIT_PARAMETERIZED-BlockSize=3)", "testxWindows949File(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testxWindows949File(JUNIT_PARAMETERIZED-BlockSize=8)", "testxWindows950File(JUNIT_PARAMETERIZED-BlockSize=1)", "testxWindows950File(JUNIT_PARAMETERIZED-BlockSize=256)", "testxWindows950File(JUNIT_PARAMETERIZED-BlockSize=3)", "testxWindows950File(JUNIT_PARAMETERIZED-BlockSize=4.096)", "testxWindows950File(JUNIT_PARAMETERIZED-BlockSize=8)" ],
            "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile" : [ "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-20byteslength.bin, charset=ISO_8859_1)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-gbk.bin, charset=gbk)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-iso8859-1-shortlines-win-linebr.bin, charset=ISO_8859_1)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-iso8859-1.bin, charset=ISO_8859_1)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-shiftjis.bin, charset=Shift_JIS)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf16be.bin, charset=UTF-16BE)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf16le.bin, charset=UTF-16LE)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf8-cr-only.bin, charset=UTF-8)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf8-win-linebr.bin, charset=UTF-8)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-utf8.bin, charset=UTF-8)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-windows-31j.bin, charset=windows-31j)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-x-windows-949.bin, charset=x-windows-949)", "testDataIntegrityWithBufferedReader(JUNIT_PARAMETERIZED-test-file-x-windows-950.bin, charset=x-windows-950)" ],
            "org.apache.commons.io.input.ReversedLinesFileReaderTestSimple" : [ "testFileSizeIsExactMultipleOfBlockSize", "testUnsupportedEncodingBig5", "testUnsupportedEncodingUTF16" ]
          }
        }
      }
    },
    "90b2e46494eea8461523c55fd9cf3fe3d1bf00ce" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "276b2825778c0f6286ead1dac0dfe5fca307e77a",
      "changedClazzes" : { }
    },
    "9cd45f468cbb87eba7b667172d6c6a21ad914872" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "90b2e46494eea8461523c55fd9cf3fe3d1bf00ce",
      "changedClazzes" : { }
    },
    "e4e03ef4c091f5a35da0d97a6a35224197b8be02" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "9cd45f468cbb87eba7b667172d6c6a21ad914872",
      "changedClazzes" : {
        "org.apache.commons.io.FilenameUtils#doGetFullPath(java.lang.String,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetFullPathNoEndSeparator_IO_248" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#doGetPath(java.lang.String,int)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testGetPath", "testGetPathNoEndSeparator", "testGetPathNoEndSeparator_with_null_byte", "testGetPath_with_nullbyte" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#doNormalize(java.lang.String,char,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpaceWindows_String_quoted" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEqualsNormalized", "testEqualsNormalizedError_IO_128", "testEqualsNormalizedOnSystem", "testEquals_fullControl", "testNormalize", "testNormalizeNoEndSeparator", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin", "testNormalize_with_nullbytes" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testEquals", "testEqualsNormalized", "testEqualsNormalizedError_IO_128", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#equalsNormalized(java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testEqualsNormalized" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#equalsNormalizedOnSystem(java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testEqualsNormalizedError_IO_128", "testEqualsNormalizedOnSystem" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#equalsOnSystem(java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testEqualsOnSystem" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#getAdsCriticalOffset(java.lang.String)" : { },
        "org.apache.commons.io.FilenameUtils#getBaseName(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testGetBaseName", "testGetBaseName_with_nullByte" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#getExtension(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testGetExtension", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection" ],
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "constructorIterable_order" ],
            "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : [ "testCaseSensitivity" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#getFullPath(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testGetFullPath" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#getFullPathNoEndSeparator(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testGetFullPathNoEndSeparator", "testGetFullPathNoEndSeparator_IO_248" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#getName(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testGetBaseName", "testGetBaseName_with_nullByte", "testGetName", "testInjectionFailure" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#getPath(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testGetPath", "testGetPathNoEndSeparator", "testGetPath_with_nullbyte" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#getPathNoEndSeparator(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testGetPathNoEndSeparator", "testGetPathNoEndSeparator_with_null_byte" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#getPrefix(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testGetFullPath", "testGetPrefix", "testGetPrefix_with_nullbyte" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#getPrefixLength(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpaceWindows_String_quoted" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEqualsNormalized", "testEqualsNormalizedError_IO_128", "testEqualsNormalizedOnSystem", "testEquals_fullControl", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetFullPathNoEndSeparator_IO_248", "testGetPath", "testGetPathNoEndSeparator", "testGetPathNoEndSeparator_with_null_byte", "testGetPath_with_nullbyte", "testGetPrefix", "testGetPrefixLength", "testGetPrefix_with_nullbyte", "testNormalize", "testNormalizeNoEndSeparator", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#indexOfExtension(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testGetBaseName", "testGetExtension", "testIndexOfExtension", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testRemoveExtension" ],
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "constructorIterable_order" ],
            "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : [ "testCaseSensitivity" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#indexOfLastSeparator(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testGetBaseName", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetFullPathNoEndSeparator_IO_248", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPathNoEndSeparator_with_null_byte", "testGetPath_with_nullbyte", "testIndexOfExtension", "testIndexOfLastSeparator", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testRemoveExtension" ],
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "constructorIterable_order" ],
            "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : [ "testCaseSensitivity" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#isExtension(java.lang.String,org.apache.commons.io.String[])" : { },
        "org.apache.commons.io.FilenameUtils#normalize(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEqualsNormalized", "testEqualsNormalizedError_IO_128", "testEqualsNormalizedOnSystem", "testEquals_fullControl", "testNormalize", "testNormalize_with_nullbytes" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#normalizeNoEndSeparator(java.lang.String,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testNormalizeNoEndSeparatorUnixWin" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#removeExtension(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testGetBaseName", "testRemoveExtension" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#wildcardMatch(java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsWildcardTestCase" : [ "testMatch", "testMatch2", "test_IO_246" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testDeprecatedWildcard" ],
            "org.apache.commons.io.serialization.MoreComplexObjectTest" : [ "trustJavaIncludingArrays", "trustJavaLang", "useBlacklist" ],
            "org.apache.commons.io.serialization.ValidatingObjectInputStreamTest" : [ "acceptWildcard", "ourTestClassAcceptedFirstWildcard", "ourTestClassAcceptedSecondWildcard", "rejectWildcard" ],
            "org.apache.commons.io.serialization.WildcardClassNameMatcherTest" : [ "noPattern", "star", "starAndQuestionMark" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#wildcardMatchOnSystem(java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsWildcardTestCase" : [ "testMatchOnSystem" ]
          }
        },
        "org.apache.commons.io.FilenameUtilsTestCase#testGetExtension" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testGetExtension" ]
          }
        },
        "org.apache.commons.io.FilenameUtilsTestCase#testIndexOfExtension" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testIndexOfExtension" ]
          }
        }
      }
    },
    "d24dd1a3abc4624be55c0772ae4432686ee18792" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "e4e03ef4c091f5a35da0d97a6a35224197b8be02",
      "changedClazzes" : {
        "org.apache.commons.io.FilenameUtils#concat(java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat" ]
          }
        }
      }
    },
    "71fc2c4c817a8c9bb41650d5b27a89e207a68c39" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "d24dd1a3abc4624be55c0772ae4432686ee18792",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils#listFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testIterateFilesAndDirs", "testListFilesWithDirs" ]
          }
        }
      },
      "ignoredAffectedTests" : {
        "testcases" : {
          "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyFileLarge" ]
        }
      }
    },
    "f0751b65cf680456557aa1bf5c56b12f5c1a0fe0" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "71fc2c4c817a8c9bb41650d5b27a89e207a68c39",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce" ],
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testCleanEmpty", "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile", "testThrowsOnNullList" ],
            "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" : [ "testCleanDirWithASymlinkDir", "testCleanDirWithParentSymlinks", "testCleanDirWithSymlinkFile", "testCorrectlyIdentifySymlinkWithParentSymLink", "testIdentifiesBrokenSymlinkFile", "testIdentifiesSymlinkDir", "testIdentifiesSymlinkFile", "testStillClearsIfGivenDirectoryIsASymlink" ],
            "org.apache.commons.io.FileUtilsDirectoryContainsTestCase" : [ "testCanonicalPath", "testDirectoryContainsDirectory", "testDirectoryContainsFile", "testDirectoryDoesNotContainFile", "testDirectoryDoesNotContainsDirectory", "testDirectoryDoesNotExist", "testFileDoesNotExist", "testFileDoesNotExistBug", "testIO466", "testSameFile", "testUnrealizedContainment" ],
            "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension", "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySizeBigInteger", "testByteCountToDisplaySizeLong", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testCompareSizeOf", "testContentEquals", "testContentEqualsIgnoreEOL", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryPreserveDates", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToItself", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyFileToOutputStream", "testCopyToDirectoryWithDirectory", "testCopyToDirectoryWithFile", "testCopyToDirectoryWithFileSourceDoesNotExist", "testCopyToDirectoryWithFileSourceIsNull", "testCopyToDirectoryWithIterable", "testCopyToDirectoryWithIterableSourceDoesNotExist", "testCopyToDirectoryWithIterableSourceIsNull", "testCopyToSelf", "testCopyURLToFile", "testCopyURLToFileWithTimeout", "testDecodeUrl", "testDecodeUrlEncodingUtf8", "testDecodeUrlLenient", "testDecodeUrlNullSafe", "testDeleteDirectoryWithNonDirectory", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testForceMkdirParent", "testGetFile", "testGetFile_Parent", "testGetTempDirectory", "testGetTempDirectoryPath", "testGetUserDirectory", "testGetUserDirectoryPath", "testIO276", "testIO300", "testIncorrectOutputSize", "testIsFileNewerOlder", "testIterateFiles", "testIterateFilesAndDirs", "testListFiles", "testListFilesWithDirs", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToStringWithDefaultEncoding", "testReadFileToStringWithEncoding", "testReadLines", "testSizeOf", "testSizeOfAsBigInteger", "testSizeOfDirectory", "testSizeOfDirectoryAsBigInteger", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFile5", "testToFileUtf8", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles3a", "testToFiles4", "testToURLs1", "testToURLs3a", "testTouch", "testWriteByteArrayToFile", "testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteByteArrayToFile_WithOffsetAndLength", "testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_3arg_nullSeparator", "testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile1", "testWriteStringToFile2", "testWriteStringToFile3", "testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ],
            "org.apache.commons.io.FileUtilsWaitForTestCase" : [ "testWaitFor", "testWaitForInterrupted" ],
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFilteringBufferedReader", "testFilteringFileReader", "testInvalidEncoding", "testMissingFile", "testNextLineOnlyDefaultEncoding", "testNextLineOnlyNullEncoding", "testNextLineOnlyUtf8Encoding", "testNextOnly", "testNextWithException", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testEmpty", "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware" ],
            "org.apache.commons.io.input.TailerTest" : [ "testBufferBreak", "testIO335", "testLongFile", "testMultiByteBreak", "testTailer", "testTailerEndOfFileReached", "testTailerEof" ],
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor", "testThreadFactory" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ],
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 1)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 1.024)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 128)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 16)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 2)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 2.048)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 256)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 32)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 4)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 4.096)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 512)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 64)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 8)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 1)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 1.024)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 128)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 16)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 2)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 2.048)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 256)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 32)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 4)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 4.096)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 512)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 64)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 8)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 1)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 1.024)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 128)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 16)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 2)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 2.048)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 256)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 32)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 4)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 4.096)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 512)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 64)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 8)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 1)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 1.024)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 128)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 16)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 2)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 2.048)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 256)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 32)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 4)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 4.096)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 512)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 64)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 8)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 1)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 1.024)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 128)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 16)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 2)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 2.048)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 256)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 32)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 4)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 4.096)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 512)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 64)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 8)" ],
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "constructor_File_encoding_badEncoding" ],
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testFileLocked", "testFileNotLocked" ]
          }
        }
      },
      "ignoredAffectedTests" : {
        "testcases" : {
          "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyFileLarge" ]
        }
      }
    },
    "d08dbbfdbc41cfafa122abf06d39ed543b473464" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "f0751b65cf680456557aa1bf5c56b12f5c1a0fe0",
      "changedClazzes" : {
        "org.apache.commons.io.FileSystem" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemTestCase" : [ "testIsLegalName", "testIsReservedFileName", "testReplacementWithNUL", "testSorted", "testToLegalFileNameWindows" ]
          }
        }
      }
    },
    "e9eb2d8b5a858bb6810c941ee7891c3adcf9949d" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "d08dbbfdbc41cfafa122abf06d39ed543b473464",
      "changedClazzes" : { }
    },
    "a4705cc3c310ffb422336b319891f63eef021f1c" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "e9eb2d8b5a858bb6810c941ee7891c3adcf9949d",
      "changedClazzes" : {
        "org.apache.commons.io.FilenameUtils#isSystemWindows" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testStopWhileWaitingForNextInterval" ]
          }
        },
        "org.apache.commons.io.IOCase#<init>(java.lang.String,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testStopWhileWaitingForNextInterval" ]
          }
        },
        "org.apache.commons.io.comparator.AbstractFileComparator#<init>" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testStopWhileWaitingForNextInterval" ]
          }
        },
        "org.apache.commons.io.comparator.NameFileComparator#<init>" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testStopWhileWaitingForNextInterval" ]
          }
        },
        "org.apache.commons.io.comparator.ReverseComparator#<init>(java.util.Comparator)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testStopWhileWaitingForNextInterval" ]
          }
        },
        "org.apache.commons.io.filefilter.AbstractFileFilter#<init>" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testStopWhileWaitingForNextInterval" ]
          }
        },
        "org.apache.commons.io.filefilter.AndFileFilter#<init>(java.util.List)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testStopWhileWaitingForNextInterval" ]
          }
        },
        "org.apache.commons.io.filefilter.DirectoryFileFilter#<init>" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testStopWhileWaitingForNextInterval" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFileFilter#<init>" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testStopWhileWaitingForNextInterval" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#and(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testStopWhileWaitingForNextInterval" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#directoryFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testStopWhileWaitingForNextInterval" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#fileFileFilter" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testStopWhileWaitingForNextInterval" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#nameFileFilter(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testStopWhileWaitingForNextInterval" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#notFileFilter(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testStopWhileWaitingForNextInterval" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#or(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testStopWhileWaitingForNextInterval" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#suffixFileFilter(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testStopWhileWaitingForNextInterval" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterUtils#toList(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testStopWhileWaitingForNextInterval" ]
          }
        },
        "org.apache.commons.io.filefilter.HiddenFileFilter#<init>" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testStopWhileWaitingForNextInterval" ]
          }
        },
        "org.apache.commons.io.filefilter.NameFileFilter#<init>(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testStopWhileWaitingForNextInterval" ]
          }
        },
        "org.apache.commons.io.filefilter.NotFileFilter#<init>(org.apache.commons.io.filefilter.IOFileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testStopWhileWaitingForNextInterval" ]
          }
        },
        "org.apache.commons.io.filefilter.OrFileFilter#<init>(java.util.List)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testStopWhileWaitingForNextInterval" ]
          }
        },
        "org.apache.commons.io.filefilter.SuffixFileFilter#<init>(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testStopWhileWaitingForNextInterval" ]
          }
        },
        "org.apache.commons.io.monitor.AbstractMonitorTestCase#createObserver(java.io.File,java.io.FileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testStopWhileWaitingForNextInterval" ]
          }
        },
        "org.apache.commons.io.monitor.AbstractMonitorTestCase#setUp" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testStopWhileWaitingForNextInterval" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationListenerAdaptor#<init>" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testStopWhileWaitingForNextInterval" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationMonitor#<init>(long)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testStopWhileWaitingForNextInterval" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationMonitor#run" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testStopWhileWaitingForNextInterval" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationMonitor#setThreadFactory(java.util.concurrent.ThreadFactory)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testStopWhileWaitingForNextInterval" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationMonitor#start" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testStopWhileWaitingForNextInterval" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationMonitor#stop(long)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testStopWhileWaitingForNextInterval" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor", "testMonitor", "testStopWhileWaitingForNextInterval", "testThreadFactory" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationMonitorTestCase#testStopWhileWaitingForNextInterval" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testStopWhileWaitingForNextInterval" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationObserver#<init>(java.io.File,java.io.FileFilter)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testStopWhileWaitingForNextInterval" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationObserver#addListener(org.apache.commons.io.monitor.FileAlterationListener)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testStopWhileWaitingForNextInterval" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationObserver#doListFiles(java.io.File,org.apache.commons.io.monitor.FileEntry)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testStopWhileWaitingForNextInterval" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationObserver#initialize" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testStopWhileWaitingForNextInterval" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationObserver#listFiles(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testStopWhileWaitingForNextInterval" ]
          }
        },
        "org.apache.commons.io.monitor.FileEntry#<init>(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testStopWhileWaitingForNextInterval" ]
          }
        },
        "org.apache.commons.io.monitor.FileEntry#getFile" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testStopWhileWaitingForNextInterval" ]
          }
        },
        "org.apache.commons.io.monitor.FileEntry#refresh(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testStopWhileWaitingForNextInterval" ]
          }
        },
        "org.apache.commons.io.monitor.FileEntry#setChildren(org.apache.commons.io.monitor.FileEntry[])" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testStopWhileWaitingForNextInterval" ]
          }
        }
      }
    },
    "8bb1788ae75318bd5cca0c64893f616c82402399" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "a4705cc3c310ffb422336b319891f63eef021f1c",
      "changedClazzes" : { }
    },
    "98f8e1a4334084c900bec1f62bdfe190dce8d5df" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "8bb1788ae75318bd5cca0c64893f616c82402399",
      "changedClazzes" : { }
    },
    "bc10af423f2eaef8cfffe1c3ff06956afa3dd371" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "98f8e1a4334084c900bec1f62bdfe190dce8d5df",
      "changedClazzes" : { }
    },
    "7791a851c4a303f47743b156007fb19c6ed8ed81" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "bc10af423f2eaef8cfffe1c3ff06956afa3dd371",
      "changedClazzes" : {
        "org.apache.commons.io.input.AbstractCharacterFilterReader" : { },
        "org.apache.commons.io.input.AbstractCharacterFilterReader#<init>(java.io.Reader)" : {
          "testcases" : {
            "org.apache.commons.io.input.CharacterFilterReaderTest" : [ "testInputSize0FilterSize1", "testInputSize1FilterSize1", "testInputSize2FilterSize1FilterAll", "testInputSize2FilterSize1FilterFirst", "testInputSize2FilterSize1FilterLast" ],
            "org.apache.commons.io.input.CharacterSetFilterReaderTest" : [ "testInputSize0FilterSize0", "testInputSize0FilterSize1", "testInputSize0NullFilter", "testInputSize1FilterSize1", "testInputSize2FilterSize1FilterAll", "testInputSize2FilterSize1FilterFirst", "testInputSize2FilterSize1FilterLast", "testInputSize2FilterSize2FilterFirst", "testInputSize2FilterSize2FilterLast", "testInputSize2FilterSize2FilterNone" ]
          }
        },
        "org.apache.commons.io.input.AbstractCharacterFilterReader#read" : {
          "testcases" : {
            "org.apache.commons.io.input.CharacterFilterReaderTest" : [ "testInputSize0FilterSize1", "testInputSize1FilterSize1", "testInputSize2FilterSize1FilterAll", "testInputSize2FilterSize1FilterFirst", "testInputSize2FilterSize1FilterLast" ],
            "org.apache.commons.io.input.CharacterSetFilterReaderTest" : [ "testInputSize0FilterSize0", "testInputSize0FilterSize1", "testInputSize0NullFilter", "testInputSize1FilterSize1", "testInputSize2FilterSize1FilterAll", "testInputSize2FilterSize1FilterFirst", "testInputSize2FilterSize1FilterLast", "testInputSize2FilterSize2FilterFirst", "testInputSize2FilterSize2FilterLast", "testInputSize2FilterSize2FilterNone" ]
          }
        },
        "org.apache.commons.io.input.CharacterFilterReader" : { },
        "org.apache.commons.io.input.CharacterFilterReader#<init>(java.io.Reader,int)" : {
          "testcases" : {
            "org.apache.commons.io.input.CharacterFilterReaderTest" : [ "testInputSize0FilterSize1", "testInputSize1FilterSize1", "testInputSize2FilterSize1FilterAll", "testInputSize2FilterSize1FilterFirst", "testInputSize2FilterSize1FilterLast" ]
          }
        },
        "org.apache.commons.io.input.CharacterFilterReader#filter(int)" : {
          "testcases" : {
            "org.apache.commons.io.input.CharacterFilterReaderTest" : [ "testInputSize0FilterSize1", "testInputSize1FilterSize1", "testInputSize2FilterSize1FilterAll", "testInputSize2FilterSize1FilterFirst", "testInputSize2FilterSize1FilterLast" ]
          }
        },
        "org.apache.commons.io.input.CharacterFilterReaderTest" : {
          "testcases" : {
            "org.apache.commons.io.input.CharacterFilterReaderTest" : [ "testInputSize0FilterSize1", "testInputSize1FilterSize1", "testInputSize2FilterSize1FilterAll", "testInputSize2FilterSize1FilterFirst", "testInputSize2FilterSize1FilterLast" ]
          }
        },
        "org.apache.commons.io.input.CharacterFilterReaderTest#testInputSize0FilterSize1" : {
          "testcases" : {
            "org.apache.commons.io.input.CharacterFilterReaderTest" : [ "testInputSize0FilterSize1" ]
          }
        },
        "org.apache.commons.io.input.CharacterFilterReaderTest#testInputSize1FilterSize1" : {
          "testcases" : {
            "org.apache.commons.io.input.CharacterFilterReaderTest" : [ "testInputSize1FilterSize1" ]
          }
        },
        "org.apache.commons.io.input.CharacterFilterReaderTest#testInputSize2FilterSize1FilterAll" : {
          "testcases" : {
            "org.apache.commons.io.input.CharacterFilterReaderTest" : [ "testInputSize2FilterSize1FilterAll" ]
          }
        },
        "org.apache.commons.io.input.CharacterFilterReaderTest#testInputSize2FilterSize1FilterFirst" : {
          "testcases" : {
            "org.apache.commons.io.input.CharacterFilterReaderTest" : [ "testInputSize2FilterSize1FilterFirst" ]
          }
        },
        "org.apache.commons.io.input.CharacterFilterReaderTest#testInputSize2FilterSize1FilterLast" : {
          "testcases" : {
            "org.apache.commons.io.input.CharacterFilterReaderTest" : [ "testInputSize2FilterSize1FilterLast" ]
          }
        },
        "org.apache.commons.io.input.CharacterSetFilterReader" : { },
        "org.apache.commons.io.input.CharacterSetFilterReader#<init>(java.io.Reader,java.util.Set)" : {
          "testcases" : {
            "org.apache.commons.io.input.CharacterSetFilterReaderTest" : [ "testInputSize0FilterSize0", "testInputSize0FilterSize1", "testInputSize0NullFilter", "testInputSize1FilterSize1", "testInputSize2FilterSize1FilterAll", "testInputSize2FilterSize1FilterFirst", "testInputSize2FilterSize1FilterLast", "testInputSize2FilterSize2FilterFirst", "testInputSize2FilterSize2FilterLast", "testInputSize2FilterSize2FilterNone" ]
          }
        },
        "org.apache.commons.io.input.CharacterSetFilterReader#filter(int)" : {
          "testcases" : {
            "org.apache.commons.io.input.CharacterSetFilterReaderTest" : [ "testInputSize0FilterSize0", "testInputSize0FilterSize1", "testInputSize0NullFilter", "testInputSize1FilterSize1", "testInputSize2FilterSize1FilterAll", "testInputSize2FilterSize1FilterFirst", "testInputSize2FilterSize1FilterLast", "testInputSize2FilterSize2FilterFirst", "testInputSize2FilterSize2FilterLast", "testInputSize2FilterSize2FilterNone" ]
          }
        },
        "org.apache.commons.io.input.CharacterSetFilterReaderTest" : {
          "testcases" : {
            "org.apache.commons.io.input.CharacterSetFilterReaderTest" : [ "testInputSize0FilterSize0", "testInputSize0FilterSize1", "testInputSize0NullFilter", "testInputSize1FilterSize1", "testInputSize2FilterSize1FilterAll", "testInputSize2FilterSize1FilterFirst", "testInputSize2FilterSize1FilterLast", "testInputSize2FilterSize2FilterFirst", "testInputSize2FilterSize2FilterLast", "testInputSize2FilterSize2FilterNone" ]
          }
        },
        "org.apache.commons.io.input.CharacterSetFilterReaderTest#testInputSize0FilterSize0" : {
          "testcases" : {
            "org.apache.commons.io.input.CharacterSetFilterReaderTest" : [ "testInputSize0FilterSize0" ]
          }
        },
        "org.apache.commons.io.input.CharacterSetFilterReaderTest#testInputSize0FilterSize1" : {
          "testcases" : {
            "org.apache.commons.io.input.CharacterSetFilterReaderTest" : [ "testInputSize0FilterSize1" ]
          }
        },
        "org.apache.commons.io.input.CharacterSetFilterReaderTest#testInputSize0NullFilter" : {
          "testcases" : {
            "org.apache.commons.io.input.CharacterSetFilterReaderTest" : [ "testInputSize0NullFilter" ]
          }
        },
        "org.apache.commons.io.input.CharacterSetFilterReaderTest#testInputSize1FilterSize1" : {
          "testcases" : {
            "org.apache.commons.io.input.CharacterSetFilterReaderTest" : [ "testInputSize1FilterSize1" ]
          }
        },
        "org.apache.commons.io.input.CharacterSetFilterReaderTest#testInputSize2FilterSize1FilterAll" : {
          "testcases" : {
            "org.apache.commons.io.input.CharacterSetFilterReaderTest" : [ "testInputSize2FilterSize1FilterAll" ]
          }
        },
        "org.apache.commons.io.input.CharacterSetFilterReaderTest#testInputSize2FilterSize1FilterFirst" : {
          "testcases" : {
            "org.apache.commons.io.input.CharacterSetFilterReaderTest" : [ "testInputSize2FilterSize1FilterFirst" ]
          }
        },
        "org.apache.commons.io.input.CharacterSetFilterReaderTest#testInputSize2FilterSize1FilterLast" : {
          "testcases" : {
            "org.apache.commons.io.input.CharacterSetFilterReaderTest" : [ "testInputSize2FilterSize1FilterLast" ]
          }
        },
        "org.apache.commons.io.input.CharacterSetFilterReaderTest#testInputSize2FilterSize2FilterFirst" : {
          "testcases" : {
            "org.apache.commons.io.input.CharacterSetFilterReaderTest" : [ "testInputSize2FilterSize2FilterFirst" ]
          }
        },
        "org.apache.commons.io.input.CharacterSetFilterReaderTest#testInputSize2FilterSize2FilterLast" : {
          "testcases" : {
            "org.apache.commons.io.input.CharacterSetFilterReaderTest" : [ "testInputSize2FilterSize2FilterLast" ]
          }
        },
        "org.apache.commons.io.input.CharacterSetFilterReaderTest#testInputSize2FilterSize2FilterNone" : {
          "testcases" : {
            "org.apache.commons.io.input.CharacterSetFilterReaderTest" : [ "testInputSize2FilterSize2FilterNone" ]
          }
        }
      }
    },
    "2736b6fe0b3fa22ec8e2b4184897ecadb021fc78" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "7791a851c4a303f47743b156007fb19c6ed8ed81",
      "changedClazzes" : {
        "org.apache.commons.io.FilenameUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpaceWindows_String_quoted" ],
            "org.apache.commons.io.FileUtilsDirectoryContainsTestCase" : [ "testCanonicalPath", "testDirectoryContainsDirectory", "testDirectoryContainsFile", "testDirectoryDoesNotContainFile", "testDirectoryDoesNotContainsDirectory" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension", "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered", "testIterateFiles", "testIterateFilesAndDirs", "testListFiles", "testListFilesWithDirs", "testSizeOfDirectory", "testSizeOfDirectoryAsBigInteger" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedError_IO_128", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetBaseName_with_nullByte", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetFullPathNoEndSeparator_IO_248", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPathNoEndSeparator_with_null_byte", "testGetPath_with_nullbyte", "testGetPrefix", "testGetPrefixLength", "testGetPrefix_with_nullbyte", "testIndexOfExtension", "testIndexOfLastSeparator", "testInjectionFailure", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testIsExtension_injection", "testNormalize", "testNormalizeNoEndSeparator", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin", "testNormalize_with_nullbytes", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.FilenameUtilsWildcardTestCase" : [ "testLocaleIndependence", "testMatch", "testMatch2", "testMatchCaseSpecified", "testMatchOnSystem", "testSplitOnTokens", "test_IO_246" ],
            "org.apache.commons.io.IOCaseTestCase" : [ "test_checkCompare_case", "test_checkCompare_functionality", "test_checkEndsWith_case", "test_checkEndsWith_functionality", "test_checkEquals_case", "test_checkEquals_functionality", "test_checkIndexOf_case", "test_checkIndexOf_functionality", "test_checkRegionMatches_case", "test_checkRegionMatches_functionality", "test_checkStartsWith_case", "test_checkStartsWith_functionality", "test_forName", "test_getName", "test_isCaseSensitive", "test_serialization", "test_toString" ],
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "constructorArray_Null", "constructorIterable_Null", "constructorIterable_order" ],
            "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.NameFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.PathFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testDelegation", "testDeprecatedWildcard", "testEnsureTestCoverage", "testFalse", "testFileFilterUtils_and", "testFileFilterUtils_or", "testFilterArray", "testFilterArrayNullParameters", "testFilterArray_fromList", "testFilterList", "testFilterListNullParameters", "testFilterList_fromArray", "testFilterSet", "testFilterSetNullParameters", "testFilterSet_fromArray", "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNot", "testNullFilters", "testPrefix", "testPrefixCaseInsensitive", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testTrue", "testWildcard" ],
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ],
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor", "testMonitor", "testStopWhileWaitingForNextInterval", "testThreadFactory" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile", "testToString" ],
            "org.apache.commons.io.serialization.MoreComplexObjectTest" : [ "trustJavaIncludingArrays", "trustJavaLang", "useBlacklist" ],
            "org.apache.commons.io.serialization.ValidatingObjectInputStreamTest" : [ "acceptWildcard", "ourTestClassAcceptedFirstWildcard", "ourTestClassAcceptedSecondWildcard", "rejectWildcard" ],
            "org.apache.commons.io.serialization.WildcardClassNameMatcherTest" : [ "noPattern", "star", "starAndQuestionMark" ]
          }
        },
        "org.apache.commons.io.FilenameUtilsTestCase#testGetPrefixLength" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testGetPrefixLength" ]
          }
        },
        "org.apache.commons.io.FilenameUtilsTestCase#testNormalize" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testNormalize" ]
          }
        }
      },
      "ignoredAffectedTests" : {
        "testcases" : {
          "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyFileLarge" ]
        }
      }
    },
    "71639e041876e4dca28785ac3e61d80ecc33db44" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "2736b6fe0b3fa22ec8e2b4184897ecadb021fc78",
      "changedClazzes" : { }
    },
    "e996235aeb7908c74e85fdcdf1369a5e46672169" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "71639e041876e4dca28785ac3e61d80ecc33db44",
      "changedClazzes" : {
        "org.apache.commons.io.FilenameUtilsTestCase#testNormalize" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testNormalize" ]
          }
        }
      }
    },
    "0aeeb46737c5e4a5d8c21c26e6793956b0296cda" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "e996235aeb7908c74e85fdcdf1369a5e46672169",
      "changedClazzes" : {
        "org.apache.commons.io.FilenameUtils#isValidHostName(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetPath", "testGetPathNoEndSeparator", "testGetPrefix", "testGetPrefixLength", "testNormalize", "testNormalizeNoEndSeparator" ]
          }
        }
      }
    },
    "fe38f8892a2e99cfb6b941c48a57e1415d7ab223" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "0aeeb46737c5e4a5d8c21c26e6793956b0296cda",
      "changedClazzes" : {
        "org.apache.commons.io.FilenameUtils#isIPv4Address(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testGetPrefixLength", "testNormalize" ]
          }
        }
      }
    },
    "81694016b4ba3d20767a2de9808fcc358477ddc8" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "fe38f8892a2e99cfb6b941c48a57e1415d7ab223",
      "changedClazzes" : { }
    },
    "9e801d916c3d163a4cfcc822e50dd75ac7cefcc5" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "81694016b4ba3d20767a2de9808fcc358477ddc8",
      "changedClazzes" : {
        "org.apache.commons.io.output.TeeOutputStreamTest#testTee" : {
          "testcases" : {
            "org.apache.commons.io.output.TeeOutputStreamTest" : [ "testTee" ]
          }
        }
      }
    },
    "ef0fb794d49e9184913581f561c87ba8c62d5e4e" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "9e801d916c3d163a4cfcc822e50dd75ac7cefcc5",
      "changedClazzes" : {
        "org.apache.commons.io.FileSystem" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemTestCase" : [ "testIsLegalName", "testIsReservedFileName", "testReplacementWithNUL", "testSorted", "testToLegalFileNameWindows" ]
          }
        }
      }
    },
    "e5f5eac9e65620e4697b922e0f49b7bbdb90695e" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "ef0fb794d49e9184913581f561c87ba8c62d5e4e",
      "changedClazzes" : {
        "org.apache.commons.io.FileSystemUtils#<init>" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceWindows_String_ParseCommaFormatBytes_Big", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes_Small" ]
          }
        },
        "org.apache.commons.io.FileSystemUtils#freeSpaceWindows(java.lang.String,long)" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceWindows_String_ParseCommaFormatBytes_Big", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes_Small" ]
          }
        },
        "org.apache.commons.io.FileSystemUtils#parseBytes(java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceWindows_String_ParseCommaFormatBytes_Big", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes_Small" ]
          }
        },
        "org.apache.commons.io.FileSystemUtils#parseDir(java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceWindows_String_ParseCommaFormatBytes_Big", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes_Small" ]
          }
        },
        "org.apache.commons.io.FileSystemUtils#performCommand(java.lang.String[],int,long)" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceWindows_String_ParseCommaFormatBytes_Big", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes_Small" ]
          }
        },
        "org.apache.commons.io.FileSystemUtilsTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceOS_String_InitError", "testGetFreeSpaceOS_String_NullPath", "testGetFreeSpaceOS_String_Other", "testGetFreeSpaceOS_String_Unix", "testGetFreeSpaceOS_String_Windows", "testGetFreeSpaceUnix_String_EmptyPath", "testGetFreeSpaceUnix_String_EmptyResponse", "testGetFreeSpaceUnix_String_InvalidResponse1", "testGetFreeSpaceUnix_String_InvalidResponse2", "testGetFreeSpaceUnix_String_InvalidResponse3", "testGetFreeSpaceUnix_String_InvalidResponse4", "testGetFreeSpaceUnix_String_LongResponse", "testGetFreeSpaceUnix_String_LongResponseKb", "testGetFreeSpaceUnix_String_NormalResponseFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbLinux", "testGetFreeSpaceUnix_String_NormalResponseKbSolaris", "testGetFreeSpaceUnix_String_NormalResponseLinux", "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes_Big", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes_Small", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpaceWindows_String_quoted", "testGetFreeSpace_String" ]
          }
        },
        "org.apache.commons.io.FileSystemUtilsTestCase#testGetFreeSpaceWindows_String_ParseCommaFormatBytes_Big" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceWindows_String_ParseCommaFormatBytes_Big" ]
          }
        },
        "org.apache.commons.io.FileSystemUtilsTestCase#testGetFreeSpaceWindows_String_ParseCommaFormatBytes_Small" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceWindows_String_ParseCommaFormatBytes_Small" ]
          }
        },
        "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils#<init>(int,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceWindows_String_ParseCommaFormatBytes_Big", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes_Small" ]
          }
        },
        "org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils#openProcess(java.lang.String[])" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceWindows_String_ParseCommaFormatBytes_Big", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes_Small" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#doNormalize(java.lang.String,char,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceWindows_String_ParseCommaFormatBytes_Big", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes_Small" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#failIfNullBytePresent(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceWindows_String_ParseCommaFormatBytes_Big", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes_Small" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#isSystemWindows" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceWindows_String_ParseCommaFormatBytes_Big", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes_Small" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#normalize(java.lang.String,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceWindows_String_ParseCommaFormatBytes_Big", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes_Small" ]
          }
        },
        "org.apache.commons.io.IOUtils#closeQuietly(java.io.Closeable)" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceWindows_String_ParseCommaFormatBytes_Big", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes_Small" ]
          }
        },
        "org.apache.commons.io.ThreadMonitor#start(java.lang.Thread,long)" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceWindows_String_ParseCommaFormatBytes_Big", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes_Small" ]
          }
        },
        "org.apache.commons.io.ThreadMonitor#stop(java.lang.Thread)" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceWindows_String_ParseCommaFormatBytes_Big", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes_Small" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#<init>(int)" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceWindows_String_ParseCommaFormatBytes_Big", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes_Small" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#close" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceWindows_String_ParseCommaFormatBytes_Big", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes_Small" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#toString" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceWindows_String_ParseCommaFormatBytes_Big", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes_Small" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#write(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceWindows_String_ParseCommaFormatBytes_Big", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes_Small" ]
          }
        }
      }
    },
    "0298305934801cf65136ce20c59dd133d8ee4d17" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "e5f5eac9e65620e4697b922e0f49b7bbdb90695e",
      "changedClazzes" : {
        "org.apache.commons.io.FilenameUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes_Big", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes_Small", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpaceWindows_String_quoted" ],
            "org.apache.commons.io.FileUtilsDirectoryContainsTestCase" : [ "testCanonicalPath", "testDirectoryContainsDirectory", "testDirectoryContainsFile", "testDirectoryDoesNotContainFile", "testDirectoryDoesNotContainsDirectory" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension", "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered", "testIterateFiles", "testIterateFilesAndDirs", "testListFiles", "testListFilesWithDirs", "testSizeOfDirectory", "testSizeOfDirectoryAsBigInteger" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedError_IO_128", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetBaseName_with_nullByte", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetFullPathNoEndSeparator_IO_248", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPathNoEndSeparator_with_null_byte", "testGetPath_with_nullbyte", "testGetPrefix", "testGetPrefixLength", "testGetPrefix_with_nullbyte", "testIndexOfExtension", "testIndexOfLastSeparator", "testInjectionFailure", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testIsExtension_injection", "testNormalize", "testNormalizeNoEndSeparator", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin", "testNormalize_with_nullbytes", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.FilenameUtilsWildcardTestCase" : [ "testLocaleIndependence", "testMatch", "testMatch2", "testMatchCaseSpecified", "testMatchOnSystem", "testSplitOnTokens", "test_IO_246" ],
            "org.apache.commons.io.IOCaseTestCase" : [ "test_checkCompare_case", "test_checkCompare_functionality", "test_checkEndsWith_case", "test_checkEndsWith_functionality", "test_checkEquals_case", "test_checkEquals_functionality", "test_checkIndexOf_case", "test_checkIndexOf_functionality", "test_checkRegionMatches_case", "test_checkRegionMatches_functionality", "test_checkStartsWith_case", "test_checkStartsWith_functionality", "test_forName", "test_getName", "test_isCaseSensitive", "test_serialization", "test_toString" ],
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "constructorArray_Null", "constructorIterable_Null", "constructorIterable_order" ],
            "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.NameFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.PathFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testDelegation", "testDeprecatedWildcard", "testEnsureTestCoverage", "testFalse", "testFileFilterUtils_and", "testFileFilterUtils_or", "testFilterArray", "testFilterArrayNullParameters", "testFilterArray_fromList", "testFilterList", "testFilterListNullParameters", "testFilterList_fromArray", "testFilterSet", "testFilterSetNullParameters", "testFilterSet_fromArray", "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNot", "testNullFilters", "testPrefix", "testPrefixCaseInsensitive", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testTrue", "testWildcard" ],
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ],
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor", "testMonitor", "testStopWhileWaitingForNextInterval", "testThreadFactory" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile", "testToString" ],
            "org.apache.commons.io.serialization.MoreComplexObjectTest" : [ "trustJavaIncludingArrays", "trustJavaLang", "useBlacklist" ],
            "org.apache.commons.io.serialization.ValidatingObjectInputStreamTest" : [ "acceptWildcard", "ourTestClassAcceptedFirstWildcard", "ourTestClassAcceptedSecondWildcard", "rejectWildcard" ],
            "org.apache.commons.io.serialization.WildcardClassNameMatcherTest" : [ "noPattern", "star", "starAndQuestionMark" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#failIfNullBytePresent(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testIsExtensionVarArgs" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#getExtension(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testIsExtensionVarArgs" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#indexOfExtension(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testIsExtensionVarArgs" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#indexOfLastSeparator(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testIsExtensionVarArgs" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#isExtension(java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testIsExtensionVarArgs" ]
          }
        },
        "org.apache.commons.io.FilenameUtils#isSystemWindows" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testIsExtensionVarArgs" ]
          }
        },
        "org.apache.commons.io.FilenameUtilsTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedError_IO_128", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetBaseName_with_nullByte", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetFullPathNoEndSeparator_IO_248", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPathNoEndSeparator_with_null_byte", "testGetPath_with_nullbyte", "testGetPrefix", "testGetPrefixLength", "testGetPrefix_with_nullbyte", "testIndexOfExtension", "testIndexOfLastSeparator", "testInjectionFailure", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testIsExtensionVarArgs", "testIsExtension_injection", "testNormalize", "testNormalizeNoEndSeparator", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin", "testNormalize_with_nullbytes", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ]
          }
        },
        "org.apache.commons.io.FilenameUtilsTestCase#setUp" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testIsExtensionVarArgs" ]
          }
        },
        "org.apache.commons.io.FilenameUtilsTestCase#testIsExtensionVarArgs" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testIsExtensionVarArgs" ]
          }
        },
        "org.apache.commons.io.testtools.TestUtils#generateTestData(java.io.OutputStream,long)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testIsExtensionVarArgs" ]
          }
        }
      },
      "ignoredAffectedTests" : {
        "testcases" : {
          "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyFileLarge" ]
        }
      }
    },
    "9ba69d7b9af1ab71e0ca2d0044f464261ae6a199" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "0298305934801cf65136ce20c59dd133d8ee4d17",
      "changedClazzes" : {
        "org.apache.commons.io.FilenameUtils#isIPv6Address(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetPath", "testGetPathNoEndSeparator", "testGetPrefix", "testGetPrefixLength", "testNormalize", "testNormalizeNoEndSeparator" ]
          }
        }
      }
    },
    "6aeb140ebd5fb087a881cfadde2b00c2c987ab92" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "9ba69d7b9af1ab71e0ca2d0044f464261ae6a199",
      "changedClazzes" : { }
    },
    "0775abc22a32baa8fbd99d86c393d5d85e32529e" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "6aeb140ebd5fb087a881cfadde2b00c2c987ab92",
      "changedClazzes" : { }
    },
    "04ab6d94e77c09a097aaf87b56d3fbebe31ebe51" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "0775abc22a32baa8fbd99d86c393d5d85e32529e",
      "changedClazzes" : { }
    },
    "4597f38c3608cfe8ef872144ed4bfe393a05dc84" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "04ab6d94e77c09a097aaf87b56d3fbebe31ebe51",
      "changedClazzes" : { }
    },
    "c6b8a383de96cd0a8e94037a04510f162e4bbc68" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "4597f38c3608cfe8ef872144ed4bfe393a05dc84",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils#copyInputStreamToFile(java.io.InputStream,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsCopyToFileTestCase" : [ "testCopyInputStreamToFile" ]
          }
        },
        "org.apache.commons.io.FileUtils#copyToFile(java.io.InputStream,java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsCopyToFileTestCase" : [ "testCopyInputStreamToFile", "testCopyToFile" ]
          }
        },
        "org.apache.commons.io.FileUtils#openOutputStream(java.io.File)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsCopyToFileTestCase" : [ "testCopyInputStreamToFile", "testCopyToFile" ]
          }
        },
        "org.apache.commons.io.FileUtilsCopyToFileTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsCopyToFileTestCase" : [ "testCopyInputStreamToFile", "testCopyToFile" ]
          }
        },
        "org.apache.commons.io.FileUtilsCopyToFileTestCase#getTestDirectory" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsCopyToFileTestCase" : [ "testCopyInputStreamToFile", "testCopyToFile" ]
          }
        },
        "org.apache.commons.io.FileUtilsCopyToFileTestCase#setUp" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsCopyToFileTestCase" : [ "testCopyInputStreamToFile", "testCopyToFile" ]
          }
        },
        "org.apache.commons.io.FileUtilsCopyToFileTestCase#testCopyInputStreamToFile" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsCopyToFileTestCase" : [ "testCopyInputStreamToFile" ]
          }
        },
        "org.apache.commons.io.FileUtilsCopyToFileTestCase#testCopyToFile" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsCopyToFileTestCase" : [ "testCopyToFile" ]
          }
        },
        "org.apache.commons.io.FileUtilsCopyToFileTestCase$CheckingInputStream#<init>(org.apache.commons.io.FileUtilsCopyToFileTestCase,byte[])" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsCopyToFileTestCase" : [ "testCopyInputStreamToFile", "testCopyToFile" ]
          }
        },
        "org.apache.commons.io.FileUtilsCopyToFileTestCase$CheckingInputStream#close" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsCopyToFileTestCase" : [ "testCopyInputStreamToFile", "testCopyToFile" ]
          }
        },
        "org.apache.commons.io.FileUtilsCopyToFileTestCase$CheckingInputStream#isClosed" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsCopyToFileTestCase" : [ "testCopyInputStreamToFile", "testCopyToFile" ]
          }
        },
        "org.apache.commons.io.IOUtils#copy(java.io.InputStream,java.io.OutputStream)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsCopyToFileTestCase" : [ "testCopyInputStreamToFile", "testCopyToFile" ]
          }
        },
        "org.apache.commons.io.IOUtils#copyLarge(java.io.InputStream,java.io.OutputStream)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsCopyToFileTestCase" : [ "testCopyInputStreamToFile", "testCopyToFile" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream#<init>" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsCopyToFileTestCase" : [ "testCopyInputStreamToFile", "testCopyToFile" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream#needNewBuffer(int)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsCopyToFileTestCase" : [ "testCopyInputStreamToFile", "testCopyToFile" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream#toByteArray" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsCopyToFileTestCase" : [ "testCopyInputStreamToFile", "testCopyToFile" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream#write(int)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsCopyToFileTestCase" : [ "testCopyInputStreamToFile", "testCopyToFile" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#<init>(int)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsCopyToFileTestCase" : [ "testCopyInputStreamToFile", "testCopyToFile" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#close" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsCopyToFileTestCase" : [ "testCopyInputStreamToFile", "testCopyToFile" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#toString" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsCopyToFileTestCase" : [ "testCopyInputStreamToFile", "testCopyToFile" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#write(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsCopyToFileTestCase" : [ "testCopyInputStreamToFile", "testCopyToFile" ]
          }
        },
        "org.apache.commons.io.testtools.TestUtils#generateTestData(java.io.OutputStream,long)" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsCopyToFileTestCase" : [ "testCopyInputStreamToFile", "testCopyToFile" ]
          }
        }
      },
      "ignoredAffectedTests" : {
        "testcases" : {
          "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyFileLarge" ]
        }
      }
    },
    "23cc15832cdb86f856cf656b3bc2720258b8849c" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "c6b8a383de96cd0a8e94037a04510f162e4bbc68",
      "changedClazzes" : { }
    },
    "44c5c5618d924a06fb9adae7856f31e75228d987" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "23cc15832cdb86f856cf656b3bc2720258b8849c",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce" ],
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testCleanEmpty", "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile", "testThrowsOnNullList" ],
            "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" : [ "testCleanDirWithASymlinkDir", "testCleanDirWithParentSymlinks", "testCleanDirWithSymlinkFile", "testCorrectlyIdentifySymlinkWithParentSymLink", "testIdentifiesBrokenSymlinkFile", "testIdentifiesSymlinkDir", "testIdentifiesSymlinkFile", "testStillClearsIfGivenDirectoryIsASymlink" ],
            "org.apache.commons.io.FileUtilsCopyToFileTestCase" : [ "testCopyInputStreamToFile", "testCopyToFile" ],
            "org.apache.commons.io.FileUtilsDirectoryContainsTestCase" : [ "testCanonicalPath", "testDirectoryContainsDirectory", "testDirectoryContainsFile", "testDirectoryDoesNotContainFile", "testDirectoryDoesNotContainsDirectory", "testDirectoryDoesNotExist", "testFileDoesNotExist", "testFileDoesNotExistBug", "testIO466", "testSameFile", "testUnrealizedContainment" ],
            "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension", "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySizeBigInteger", "testByteCountToDisplaySizeLong", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testCompareSizeOf", "testContentEquals", "testContentEqualsIgnoreEOL", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryPreserveDates", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToItself", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyFileToOutputStream", "testCopyToDirectoryWithDirectory", "testCopyToDirectoryWithFile", "testCopyToDirectoryWithFileSourceDoesNotExist", "testCopyToDirectoryWithFileSourceIsNull", "testCopyToDirectoryWithIterable", "testCopyToDirectoryWithIterableSourceDoesNotExist", "testCopyToDirectoryWithIterableSourceIsNull", "testCopyToSelf", "testCopyURLToFile", "testCopyURLToFileWithTimeout", "testDecodeUrl", "testDecodeUrlEncodingUtf8", "testDecodeUrlLenient", "testDecodeUrlNullSafe", "testDeleteDirectoryWithNonDirectory", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testForceMkdirParent", "testGetFile", "testGetFile_Parent", "testGetTempDirectory", "testGetTempDirectoryPath", "testGetUserDirectory", "testGetUserDirectoryPath", "testIO276", "testIO300", "testIncorrectOutputSize", "testIsFileNewerOlder", "testIterateFiles", "testIterateFilesAndDirs", "testListFiles", "testListFilesWithDirs", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToStringWithDefaultEncoding", "testReadFileToStringWithEncoding", "testReadLines", "testSizeOf", "testSizeOfAsBigInteger", "testSizeOfDirectory", "testSizeOfDirectoryAsBigInteger", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFile5", "testToFileUtf8", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles3a", "testToFiles4", "testToURLs1", "testToURLs3a", "testTouch", "testWriteByteArrayToFile", "testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteByteArrayToFile_WithOffsetAndLength", "testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_3arg_nullSeparator", "testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile1", "testWriteStringToFile2", "testWriteStringToFile3", "testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ],
            "org.apache.commons.io.FileUtilsWaitForTestCase" : [ "testWaitFor", "testWaitForInterrupted" ],
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFilteringBufferedReader", "testFilteringFileReader", "testInvalidEncoding", "testMissingFile", "testNextLineOnlyDefaultEncoding", "testNextLineOnlyNullEncoding", "testNextLineOnlyUtf8Encoding", "testNextOnly", "testNextWithException", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testEmpty", "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware" ],
            "org.apache.commons.io.input.TailerTest" : [ "testBufferBreak", "testIO335", "testLongFile", "testMultiByteBreak", "testTailer", "testTailerEndOfFileReached", "testTailerEof" ],
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor", "testThreadFactory" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ],
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 1)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 1.024)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 128)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 16)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 2)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 2.048)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 256)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 32)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 4)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 4.096)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 512)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 64)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 8)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 1)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 1.024)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 128)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 16)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 2)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 2.048)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 256)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 32)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 4)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 4.096)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 512)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 64)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 8)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 1)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 1.024)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 128)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 16)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 2)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 2.048)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 256)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 32)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 4)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 4.096)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 512)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 64)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 8)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 1)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 1.024)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 128)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 16)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 2)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 2.048)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 256)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 32)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 4)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 4.096)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 512)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 64)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 8)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 1)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 1.024)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 128)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 16)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 2)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 2.048)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 256)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 32)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 4)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 4.096)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 512)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 64)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 8)" ],
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "constructor_File_encoding_badEncoding" ],
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testFileLocked", "testFileNotLocked" ]
          }
        },
        "org.apache.commons.io.FileUtilsCopyToFileTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsCopyToFileTestCase" : [ "testCopyInputStreamToFile", "testCopyToFile" ]
          }
        },
        "org.apache.commons.io.FileUtilsCopyToFileTestCase$CheckingInputStream" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsCopyToFileTestCase" : [ "testCopyInputStreamToFile", "testCopyToFile" ]
          }
        },
        "org.apache.commons.io.FilenameUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes_Big", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes_Small", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpaceWindows_String_quoted" ],
            "org.apache.commons.io.FileUtilsDirectoryContainsTestCase" : [ "testCanonicalPath", "testDirectoryContainsDirectory", "testDirectoryContainsFile", "testDirectoryDoesNotContainFile", "testDirectoryDoesNotContainsDirectory" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension", "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyDirectoryFiltered", "testIterateFiles", "testIterateFilesAndDirs", "testListFiles", "testListFilesWithDirs", "testSizeOfDirectory", "testSizeOfDirectoryAsBigInteger" ],
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedError_IO_128", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetBaseName_with_nullByte", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetFullPathNoEndSeparator_IO_248", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPathNoEndSeparator_with_null_byte", "testGetPath_with_nullbyte", "testGetPrefix", "testGetPrefixLength", "testGetPrefix_with_nullbyte", "testIndexOfExtension", "testIndexOfLastSeparator", "testInjectionFailure", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testIsExtensionVarArgs", "testIsExtension_injection", "testNormalize", "testNormalizeNoEndSeparator", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin", "testNormalize_with_nullbytes", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ],
            "org.apache.commons.io.FilenameUtilsWildcardTestCase" : [ "testLocaleIndependence", "testMatch", "testMatch2", "testMatchCaseSpecified", "testMatchOnSystem", "testSplitOnTokens", "test_IO_246" ],
            "org.apache.commons.io.IOCaseTestCase" : [ "test_checkCompare_case", "test_checkCompare_functionality", "test_checkEndsWith_case", "test_checkEndsWith_functionality", "test_checkEquals_case", "test_checkEquals_functionality", "test_checkIndexOf_case", "test_checkIndexOf_functionality", "test_checkRegionMatches_case", "test_checkRegionMatches_functionality", "test_checkStartsWith_case", "test_checkStartsWith_functionality", "test_forName", "test_getName", "test_isCaseSensitive", "test_serialization", "test_toString" ],
            "org.apache.commons.io.comparator.CompositeFileComparatorTest" : [ "constructorArray_Null", "constructorIterable_Null", "constructorIterable_order" ],
            "org.apache.commons.io.comparator.ExtensionFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.NameFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.comparator.PathFileComparatorTest" : [ "testCaseSensitivity" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testDelegation", "testDeprecatedWildcard", "testEnsureTestCoverage", "testFalse", "testFileFilterUtils_and", "testFileFilterUtils_or", "testFilterArray", "testFilterArrayNullParameters", "testFilterArray_fromList", "testFilterList", "testFilterListNullParameters", "testFilterList_fromArray", "testFilterSet", "testFilterSetNullParameters", "testFilterSet_fromArray", "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNot", "testNullFilters", "testPrefix", "testPrefixCaseInsensitive", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testTrue", "testWildcard" ],
            "org.apache.commons.io.filefilter.RegexFileFilterTestCase" : [ "testRegex" ],
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testAddRemoveObservers", "testDefaultConstructor", "testMonitor", "testStopWhileWaitingForNextInterval", "testThreadFactory" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testAddRemoveListeners", "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile", "testToString" ],
            "org.apache.commons.io.serialization.MoreComplexObjectTest" : [ "trustJavaIncludingArrays", "trustJavaLang", "useBlacklist" ],
            "org.apache.commons.io.serialization.ValidatingObjectInputStreamTest" : [ "acceptWildcard", "ourTestClassAcceptedFirstWildcard", "ourTestClassAcceptedSecondWildcard", "rejectWildcard" ],
            "org.apache.commons.io.serialization.WildcardClassNameMatcherTest" : [ "noPattern", "star", "starAndQuestionMark" ]
          }
        },
        "org.apache.commons.io.FilenameUtilsTestCase#testGetExtension" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testGetExtension" ]
          }
        },
        "org.apache.commons.io.FilenameUtilsTestCase#testIndexOfExtension" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testIndexOfExtension" ]
          }
        },
        "org.apache.commons.io.monitor.FileAlterationMonitorTestCase#testStopWhileWaitingForNextInterval" : {
          "testcases" : {
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testStopWhileWaitingForNextInterval" ]
          }
        }
      },
      "ignoredAffectedTests" : {
        "testcases" : {
          "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyFileLarge" ]
        }
      }
    },
    "c97e637951ba8bedf74725a62644d7578ce1aaa6" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "44c5c5618d924a06fb9adae7856f31e75228d987",
      "changedClazzes" : { }
    },
    "41059e4a4827e882b7c77667ff62c9b0567e5e21" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "c97e637951ba8bedf74725a62644d7578ce1aaa6",
      "changedClazzes" : { }
    },
    "078af456fd74c3726438bfe853492286d7006c06" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "41059e4a4827e882b7c77667ff62c9b0567e5e21",
      "changedClazzes" : { }
    },
    "7b813b674adc6c94a6c9a19524913c07b7d8bc9c" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "078af456fd74c3726438bfe853492286d7006c06",
      "changedClazzes" : {
        "org.apache.commons.io.input.MessageDigestCalculatingInputStream" : {
          "testcases" : {
            "org.apache.commons.io.input.MessageDigestCalculatingInputStreamTest" : [ "test" ]
          }
        },
        "org.apache.commons.io.input.MessageDigestCalculatingInputStream$MessageDigestMaintainingObserver" : {
          "testcases" : {
            "org.apache.commons.io.input.MessageDigestCalculatingInputStreamTest" : [ "test" ]
          }
        },
        "org.apache.commons.io.input.ObservableInputStream" : {
          "testcases" : {
            "org.apache.commons.io.input.MessageDigestCalculatingInputStreamTest" : [ "test" ],
            "org.apache.commons.io.input.ObservableInputStreamTest" : [ "testDataByteCalled", "testDataBytesCalled" ]
          }
        },
        "org.apache.commons.io.input.ObservableInputStream$Observer" : {
          "testcases" : {
            "org.apache.commons.io.input.MessageDigestCalculatingInputStreamTest" : [ "test" ],
            "org.apache.commons.io.input.ObservableInputStreamTest" : [ "testDataByteCalled", "testDataBytesCalled" ]
          }
        },
        "org.apache.commons.io.input.ObservableInputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.input.ObservableInputStreamTest" : [ "testDataByteCalled", "testDataBytesCalled" ]
          }
        },
        "org.apache.commons.io.input.ObservableInputStreamTest$LastByteKeepingObserver" : {
          "testcases" : {
            "org.apache.commons.io.input.ObservableInputStreamTest" : [ "testDataByteCalled" ]
          }
        },
        "org.apache.commons.io.input.ObservableInputStreamTest$LastBytesKeepingObserver" : {
          "testcases" : {
            "org.apache.commons.io.input.ObservableInputStreamTest" : [ "testDataBytesCalled" ]
          }
        }
      }
    },
    "559de2c461e94ab636c959149c775bb27111fb48" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "7b813b674adc6c94a6c9a19524913c07b7d8bc9c",
      "changedClazzes" : {
        "org.apache.commons.io.input.buffer.CircularBufferInputStream" : { },
        "org.apache.commons.io.input.buffer.CircularBufferInputStream#<init>(java.io.InputStream,int)" : {
          "testcases" : {
            "org.apache.commons.io.input.buffer.CircularBufferInputStreamTest" : [ "testRandomRead" ]
          }
        },
        "org.apache.commons.io.input.buffer.CircularBufferInputStream#fillBuffer" : {
          "testcases" : {
            "org.apache.commons.io.input.buffer.CircularBufferInputStreamTest" : [ "testRandomRead" ]
          }
        },
        "org.apache.commons.io.input.buffer.CircularBufferInputStream#haveBytes(int)" : {
          "testcases" : {
            "org.apache.commons.io.input.buffer.CircularBufferInputStreamTest" : [ "testRandomRead" ]
          }
        },
        "org.apache.commons.io.input.buffer.CircularBufferInputStream#read" : {
          "testcases" : {
            "org.apache.commons.io.input.buffer.CircularBufferInputStreamTest" : [ "testRandomRead" ]
          }
        },
        "org.apache.commons.io.input.buffer.CircularBufferInputStreamTest" : {
          "testcases" : {
            "org.apache.commons.io.input.buffer.CircularBufferInputStreamTest" : [ "testRandomRead" ]
          }
        },
        "org.apache.commons.io.input.buffer.CircularBufferInputStreamTest#newInputBuffer" : {
          "testcases" : {
            "org.apache.commons.io.input.buffer.CircularBufferInputStreamTest" : [ "testRandomRead" ]
          }
        },
        "org.apache.commons.io.input.buffer.CircularBufferInputStreamTest#testRandomRead" : {
          "testcases" : {
            "org.apache.commons.io.input.buffer.CircularBufferInputStreamTest" : [ "testRandomRead" ]
          }
        },
        "org.apache.commons.io.input.buffer.CircularByteBuffer" : { },
        "org.apache.commons.io.input.buffer.CircularByteBuffer#<init>(int)" : {
          "testcases" : {
            "org.apache.commons.io.input.buffer.CircularBufferInputStreamTest" : [ "testRandomRead" ]
          }
        },
        "org.apache.commons.io.input.buffer.CircularByteBuffer#add(byte[],int,int)" : {
          "testcases" : {
            "org.apache.commons.io.input.buffer.CircularBufferInputStreamTest" : [ "testRandomRead" ]
          }
        },
        "org.apache.commons.io.input.buffer.CircularByteBuffer#getCurrentNumberOfBytes" : {
          "testcases" : {
            "org.apache.commons.io.input.buffer.CircularBufferInputStreamTest" : [ "testRandomRead" ]
          }
        },
        "org.apache.commons.io.input.buffer.CircularByteBuffer#getSpace" : {
          "testcases" : {
            "org.apache.commons.io.input.buffer.CircularBufferInputStreamTest" : [ "testRandomRead" ]
          }
        },
        "org.apache.commons.io.input.buffer.CircularByteBuffer#hasBytes" : {
          "testcases" : {
            "org.apache.commons.io.input.buffer.CircularBufferInputStreamTest" : [ "testRandomRead" ]
          }
        },
        "org.apache.commons.io.input.buffer.CircularByteBuffer#read" : {
          "testcases" : {
            "org.apache.commons.io.input.buffer.CircularBufferInputStreamTest" : [ "testRandomRead" ]
          }
        },
        "org.apache.commons.io.input.buffer.PeekableInputStream" : { }
      }
    },
    "58b0f795b31482daa6bb5473a8b2c398e029f5fb" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "559de2c461e94ab636c959149c775bb27111fb48",
      "changedClazzes" : { }
    },
    "cc1a99482b14b38bd2ab2319f0b1096c0db225ff" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "58b0f795b31482daa6bb5473a8b2c398e029f5fb",
      "changedClazzes" : {
        "org.apache.commons.io.FilenameUtilsTestCase" : {
          "testcases" : {
            "org.apache.commons.io.FilenameUtilsTestCase" : [ "testConcat", "testEquals", "testEqualsNormalized", "testEqualsNormalizedError_IO_128", "testEqualsNormalizedOnSystem", "testEqualsOnSystem", "testEquals_fullControl", "testGetBaseName", "testGetBaseName_with_nullByte", "testGetExtension", "testGetFullPath", "testGetFullPathNoEndSeparator", "testGetFullPathNoEndSeparator_IO_248", "testGetName", "testGetPath", "testGetPathNoEndSeparator", "testGetPathNoEndSeparator_with_null_byte", "testGetPath_with_nullbyte", "testGetPrefix", "testGetPrefixLength", "testGetPrefix_with_nullbyte", "testIndexOfExtension", "testIndexOfLastSeparator", "testInjectionFailure", "testIsExtension", "testIsExtensionArray", "testIsExtensionCollection", "testIsExtensionVarArgs", "testIsExtension_injection", "testNormalize", "testNormalizeNoEndSeparator", "testNormalizeNoEndSeparatorUnixWin", "testNormalizeUnixWin", "testNormalize_with_nullbytes", "testRemoveExtension", "testSeparatorsToSystem", "testSeparatorsToUnix", "testSeparatorsToWindows" ]
          }
        }
      }
    },
    "1f925d7ad6d9da7ec75ba29e8668dd3267f104c1" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "cc1a99482b14b38bd2ab2319f0b1096c0db225ff",
      "changedClazzes" : { }
    },
    "16c983693a235bdc45c6286a1e7b01d8ef58907e" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "1f925d7ad6d9da7ec75ba29e8668dd3267f104c1",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtilsTestCase#testContentEqualsIgnoreEOL" : {
          "testcases" : {
            "org.apache.commons.io.FileUtilsTestCase" : [ "testContentEqualsIgnoreEOL" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testResourceToByteArray_ExistingResourceAtRootPackage" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testResourceToByteArray_ExistingResourceAtRootPackage" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testResourceToByteArray_ExistingResourceAtRootPackage_WithClassLoader" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testResourceToByteArray_ExistingResourceAtRootPackage_WithClassLoader" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testResourceToByteArray_ExistingResourceAtSubPackage" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testResourceToByteArray_ExistingResourceAtSubPackage" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testResourceToByteArray_ExistingResourceAtSubPackage_WithClassLoader" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testResourceToByteArray_ExistingResourceAtSubPackage_WithClassLoader" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testResourceToString_ExistingResourceAtRootPackage" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testResourceToString_ExistingResourceAtRootPackage" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testResourceToString_ExistingResourceAtRootPackage_WithClassLoader" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testResourceToString_ExistingResourceAtRootPackage_WithClassLoader" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testResourceToString_ExistingResourceAtSubPackage" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testResourceToString_ExistingResourceAtSubPackage" ]
          }
        },
        "org.apache.commons.io.IOUtilsTestCase#testResourceToString_ExistingResourceAtSubPackage_WithClassLoader" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsTestCase" : [ "testResourceToString_ExistingResourceAtSubPackage_WithClassLoader" ]
          }
        }
      },
      "ignoredAffectedTests" : {
        "testcases" : {
          "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyFileLarge" ]
        }
      }
    },
    "769842a214286accf02cc40711e1a5e2f97da504" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "16c983693a235bdc45c6286a1e7b01d8ef58907e",
      "changedClazzes" : { }
    },
    "3ad22fe3d689781a76a92908d0bbc119b2c68892" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "769842a214286accf02cc40711e1a5e2f97da504",
      "changedClazzes" : {
        "org.apache.commons.io.input.compatibility.XmlStreamReader#calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.io.InputStream,boolean)" : { }
      }
    },
    "b487c9e8bc8410c7c0ca94f9494bcff90613946a" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "3ad22fe3d689781a76a92908d0bbc119b2c68892",
      "changedClazzes" : { }
    },
    "a265435033b6df7f204c58776e0fc8be997ac54a" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "b487c9e8bc8410c7c0ca94f9494bcff90613946a",
      "changedClazzes" : { }
    },
    "b3f320fe5a91eeb42b330621c19e1c8046658ea7" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "a265435033b6df7f204c58776e0fc8be997ac54a",
      "changedClazzes" : { }
    },
    "5392c441786322b6358b42bab0f0bc7018e06aad" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "b3f320fe5a91eeb42b330621c19e1c8046658ea7",
      "changedClazzes" : {
        "org.apache.commons.io.IOUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceUnix_String_EmptyResponse", "testGetFreeSpaceUnix_String_InvalidResponse1", "testGetFreeSpaceUnix_String_InvalidResponse2", "testGetFreeSpaceUnix_String_InvalidResponse3", "testGetFreeSpaceUnix_String_InvalidResponse4", "testGetFreeSpaceUnix_String_LongResponse", "testGetFreeSpaceUnix_String_LongResponseKb", "testGetFreeSpaceUnix_String_NormalResponseFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbLinux", "testGetFreeSpaceUnix_String_NormalResponseKbSolaris", "testGetFreeSpaceUnix_String_NormalResponseLinux", "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes_Big", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes_Small", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpaceWindows_String_quoted", "testGetFreeSpace_String" ],
            "org.apache.commons.io.FileUtilsCopyToFileTestCase" : [ "testCopyInputStreamToFile", "testCopyToFile" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnNullChecksum", "testContentEquals", "testContentEqualsIgnoreEOL", "testCopyDirectoryFiltered", "testCopyDirectoryPreserveDates", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testCopyFileToOutputStream", "testCopyURLToFile", "testCopyURLToFileWithTimeout", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testFileUtils", "testIsFileNewerOlder", "testIterateFiles", "testIterateFilesAndDirs", "testListFiles", "testListFilesWithDirs", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory_Errors", "testMoveFile_Errors", "testMoveToDirectory", "testReadFileToByteArray", "testReadFileToStringWithDefaultEncoding", "testReadFileToStringWithEncoding", "testReadLines", "testSizeOfDirectoryAsBigInteger", "testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_3arg_nullSeparator", "testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile1", "testWriteStringToFile2", "testWriteStringToFile3", "testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" ],
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToOutputStreamWithBufferSize", "testCopy_inputStreamToOutputStream_nullIn", "testCopy_inputStreamToOutputStream_nullOut", "testCopy_inputStreamToWriter", "testCopy_inputStreamToWriter_Encoding", "testCopy_inputStreamToWriter_Encoding_nullEncoding", "testCopy_inputStreamToWriter_Encoding_nullIn", "testCopy_inputStreamToWriter_Encoding_nullOut", "testCopy_inputStreamToWriter_nullIn", "testCopy_inputStreamToWriter_nullOut", "testCopy_readerToOutputStream", "testCopy_readerToOutputStream_Encoding", "testCopy_readerToOutputStream_Encoding_nullEncoding", "testCopy_readerToOutputStream_Encoding_nullIn", "testCopy_readerToOutputStream_Encoding_nullOut", "testCopy_readerToOutputStream_nullIn", "testCopy_readerToOutputStream_nullOut", "testCopy_readerToWriter", "testCopy_readerToWriter_nullIn", "testCopy_readerToWriter_nullOut" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testAsBufferedInputStream", "testAsBufferedInputStreamWithBufferSize", "testAsBufferedNull", "testAsBufferedOutputStream", "testAsBufferedOutputStreamWithBufferSize", "testAsBufferedReader", "testAsBufferedReaderWithBufferSize", "testAsBufferedWriter", "testAsBufferedWriterWithBufferSize", "testCloseQuietly_AllCloseableIOException", "testCloseQuietly_CloseableIOException", "testCloseQuietly_Selector", "testCloseQuietly_SelectorIOException", "testCloseQuietly_SelectorNull", "testCloseQuietly_SelectorTwice", "testCloseQuietly_ServerSocket", "testCloseQuietly_ServerSocketIOException", "testCloseQuietly_Socket", "testCloseQuietly_SocketIOException", "testConstants", "testContentEqualsIgnoreEOL", "testContentEquals_InputStream_InputStream", "testContentEquals_Reader_Reader", "testCopyLarge_CharExtraLength", "testCopyLarge_CharFullLength", "testCopyLarge_CharNoSkip", "testCopyLarge_CharSkip", "testCopyLarge_CharSkipInvalid", "testCopyLarge_ExtraLength", "testCopyLarge_FullLength", "testCopyLarge_NoSkip", "testCopyLarge_Skip", "testCopyLarge_SkipInvalid", "testCopyLarge_SkipWithInvalidOffset", "testCopy_ByteArray_OutputStream", "testCopy_ByteArray_Writer", "testCopy_String_Writer", "testReadFully_InputStream_ByteArray", "testReadFully_InputStream_Offset", "testReadFully_InputStream__ReturnByteArray", "testReadFully_ReadableByteChannel", "testReadFully_Reader", "testReadFully_Reader_Offset", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testRead_ReadableByteChannel", "testResourceToByteArray_ExistingResourceAtRootPackage", "testResourceToByteArray_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToByteArray_ExistingResourceAtSubPackage", "testResourceToByteArray_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToByteArray_NonExistingResource", "testResourceToByteArray_NonExistingResource_WithClassLoader", "testResourceToByteArray_Null", "testResourceToByteArray_Null_WithClassLoader", "testResourceToString_ExistingResourceAtRootPackage", "testResourceToString_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToString_ExistingResourceAtSubPackage", "testResourceToString_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToString_NonExistingResource", "testResourceToString_NonExistingResource_WithClassLoader", "testResourceToString_NullCharset", "testResourceToString_NullCharset_WithClassLoader", "testResourceToString_NullResource", "testResourceToString_NullResource_WithClassLoader", "testResourceToURL_ExistingResourceAtRootPackage", "testResourceToURL_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToURL_ExistingResourceAtSubPackage", "testResourceToURL_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToURL_NonExistingResource", "testResourceToURL_NonExistingResource_WithClassLoader", "testResourceToURL_Null", "testResourceToURL_Null_WithClassLoader", "testSkipFully_InputStream", "testSkipFully_ReadableByteChannel", "testSkipFully_Reader", "testSkip_FileReader", "testSkip_InputStream", "testSkip_ReadableByteChannel", "testStringToOutputStream", "testToBufferedInputStreamWithBufferSize_InputStream", "testToBufferedInputStream_InputStream", "testToByteArray_InputStream", "testToByteArray_InputStream_NegativeSize", "testToByteArray_InputStream_Size", "testToByteArray_InputStream_SizeIllegal", "testToByteArray_InputStream_SizeLong", "testToByteArray_InputStream_SizeZero", "testToByteArray_Reader", "testToByteArray_String", "testToByteArray_URI", "testToByteArray_URL", "testToByteArray_URLConnection", "testToCharArray_InputStream", "testToCharArray_InputStream_CharsetName", "testToCharArray_Reader", "testToInputStream_CharSequence", "testToInputStream_String", "testToString_ByteArray", "testToString_InputStream", "testToString_Reader", "testToString_URI", "testToString_URI_CharsetName", "testToString_URI_CharsetNameNull", "testToString_URL", "testToString_URL_CharsetName", "testToString_URL_CharsetNameNull" ],
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWriteLines_OutputStream", "testWriteLines_OutputStream_Encoding", "testWriteLines_OutputStream_Encoding_nullData", "testWriteLines_OutputStream_Encoding_nullEncoding", "testWriteLines_OutputStream_Encoding_nullSeparator", "testWriteLines_OutputStream_Encoding_nullStream", "testWriteLines_OutputStream_nullData", "testWriteLines_OutputStream_nullSeparator", "testWriteLines_OutputStream_nullStream", "testWriteLines_Writer", "testWriteLines_Writer_nullData", "testWriteLines_Writer_nullSeparator", "testWriteLines_Writer_nullStream", "testWrite_byteArrayToOutputStream", "testWrite_byteArrayToOutputStream_nullData", "testWrite_byteArrayToOutputStream_nullStream", "testWrite_byteArrayToWriter", "testWrite_byteArrayToWriter_Encoding", "testWrite_byteArrayToWriter_Encoding_nullData", "testWrite_byteArrayToWriter_Encoding_nullEncoding", "testWrite_byteArrayToWriter_Encoding_nullWriter", "testWrite_byteArrayToWriter_nullData", "testWrite_byteArrayToWriter_nullWriter", "testWrite_charArrayToOutputStream", "testWrite_charArrayToOutputStream_Encoding", "testWrite_charArrayToOutputStream_Encoding_nullData", "testWrite_charArrayToOutputStream_Encoding_nullStream", "testWrite_charArrayToOutputStream_nullData", "testWrite_charArrayToOutputStream_nullEncoding", "testWrite_charArrayToOutputStream_nullStream", "testWrite_charArrayToWriter", "testWrite_charArrayToWriter_Encoding_nullData", "testWrite_charArrayToWriter_Encoding_nullStream", "testWrite_charSequenceToOutputStream", "testWrite_charSequenceToOutputStream_Encoding", "testWrite_charSequenceToOutputStream_Encoding_nullData", "testWrite_charSequenceToOutputStream_Encoding_nullStream", "testWrite_charSequenceToOutputStream_nullData", "testWrite_charSequenceToOutputStream_nullEncoding", "testWrite_charSequenceToOutputStream_nullStream", "testWrite_charSequenceToWriter", "testWrite_charSequenceToWriter_Encoding_nullData", "testWrite_charSequenceToWriter_Encoding_nullStream", "testWrite_stringToOutputStream", "testWrite_stringToOutputStream_Encoding", "testWrite_stringToOutputStream_Encoding_nullData", "testWrite_stringToOutputStream_Encoding_nullStream", "testWrite_stringToOutputStream_nullData", "testWrite_stringToOutputStream_nullEncoding", "testWrite_stringToOutputStream_nullStream", "testWrite_stringToWriter", "testWrite_stringToWriter_Encoding_nullData", "testWrite_stringToWriter_Encoding_nullStream" ],
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testFilteringBufferedReader", "testFilteringFileReader", "testInvalidEncoding", "testNextLineOnlyDefaultEncoding", "testNextLineOnlyNullEncoding", "testNextLineOnlyUtf8Encoding", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset" ],
            "org.apache.commons.io.input.BoundedInputStreamTest" : [ "testReadArray" ],
            "org.apache.commons.io.input.TailerTest" : [ "testBufferBreak", "testIO335", "testLongFile", "testMultiByteBreak", "testTailer", "testTailerEndOfFileReached", "testTailerEof" ],
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testHttpContent", "testLowerCaseEncodingWithTurkishLocale_IO_557", "testRawContent" ],
            "org.apache.commons.io.output.ByteArrayOutputStreamTestCase" : [ "testToInputStream", "testToInputStreamWithReset" ],
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 1)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 1.024)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 128)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 16)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 2)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 2.048)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 256)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 32)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 4)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 4.096)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 512)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 64)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 8)" ],
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "constructor_File_directory", "constructor_File_encoding_badEncoding", "constructor_File_nullFile", "constructor_fileName_nullFile", "sameEncoding_CharsetEncoder_constructor", "sameEncoding_Charset_constructor", "sameEncoding_string_CharsetEncoder_constructor", "sameEncoding_string_Charset_constructor", "sameEncoding_string_constructor", "sameEncoding_string_string_constructor", "testDifferentEncoding" ]
          }
        }
      },
      "ignoredAffectedTests" : {
        "testcases" : {
          "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyFileLarge" ]
        }
      }
    },
    "d403c703ab8b8c015febdb887e9756caf67eb8b9" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "5392c441786322b6358b42bab0f0bc7018e06aad",
      "changedClazzes" : {
        "org.apache.commons.io.IOUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceUnix_String_EmptyResponse", "testGetFreeSpaceUnix_String_InvalidResponse1", "testGetFreeSpaceUnix_String_InvalidResponse2", "testGetFreeSpaceUnix_String_InvalidResponse3", "testGetFreeSpaceUnix_String_InvalidResponse4", "testGetFreeSpaceUnix_String_LongResponse", "testGetFreeSpaceUnix_String_LongResponseKb", "testGetFreeSpaceUnix_String_NormalResponseFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbLinux", "testGetFreeSpaceUnix_String_NormalResponseKbSolaris", "testGetFreeSpaceUnix_String_NormalResponseLinux", "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes_Big", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes_Small", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpaceWindows_String_quoted", "testGetFreeSpace_String" ],
            "org.apache.commons.io.FileUtilsCopyToFileTestCase" : [ "testCopyInputStreamToFile", "testCopyToFile" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnNullChecksum", "testContentEquals", "testContentEqualsIgnoreEOL", "testCopyDirectoryFiltered", "testCopyDirectoryPreserveDates", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testCopyFileToOutputStream", "testCopyURLToFile", "testCopyURLToFileWithTimeout", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testFileUtils", "testIsFileNewerOlder", "testIterateFiles", "testIterateFilesAndDirs", "testListFiles", "testListFilesWithDirs", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory_Errors", "testMoveFile_Errors", "testMoveToDirectory", "testReadFileToByteArray", "testReadFileToStringWithDefaultEncoding", "testReadFileToStringWithEncoding", "testReadLines", "testSizeOfDirectoryAsBigInteger", "testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_3arg_nullSeparator", "testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile1", "testWriteStringToFile2", "testWriteStringToFile3", "testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" ],
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToOutputStreamWithBufferSize", "testCopy_inputStreamToOutputStream_nullIn", "testCopy_inputStreamToOutputStream_nullOut", "testCopy_inputStreamToWriter", "testCopy_inputStreamToWriter_Encoding", "testCopy_inputStreamToWriter_Encoding_nullEncoding", "testCopy_inputStreamToWriter_Encoding_nullIn", "testCopy_inputStreamToWriter_Encoding_nullOut", "testCopy_inputStreamToWriter_nullIn", "testCopy_inputStreamToWriter_nullOut", "testCopy_readerToOutputStream", "testCopy_readerToOutputStream_Encoding", "testCopy_readerToOutputStream_Encoding_nullEncoding", "testCopy_readerToOutputStream_Encoding_nullIn", "testCopy_readerToOutputStream_Encoding_nullOut", "testCopy_readerToOutputStream_nullIn", "testCopy_readerToOutputStream_nullOut", "testCopy_readerToWriter", "testCopy_readerToWriter_nullIn", "testCopy_readerToWriter_nullOut" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testAsBufferedInputStream", "testAsBufferedInputStreamWithBufferSize", "testAsBufferedNull", "testAsBufferedOutputStream", "testAsBufferedOutputStreamWithBufferSize", "testAsBufferedReader", "testAsBufferedReaderWithBufferSize", "testAsBufferedWriter", "testAsBufferedWriterWithBufferSize", "testCloseQuietly_AllCloseableIOException", "testCloseQuietly_CloseableIOException", "testCloseQuietly_Selector", "testCloseQuietly_SelectorIOException", "testCloseQuietly_SelectorNull", "testCloseQuietly_SelectorTwice", "testCloseQuietly_ServerSocket", "testCloseQuietly_ServerSocketIOException", "testCloseQuietly_Socket", "testCloseQuietly_SocketIOException", "testConstants", "testContentEqualsIgnoreEOL", "testContentEquals_InputStream_InputStream", "testContentEquals_Reader_Reader", "testCopyLarge_CharExtraLength", "testCopyLarge_CharFullLength", "testCopyLarge_CharNoSkip", "testCopyLarge_CharSkip", "testCopyLarge_CharSkipInvalid", "testCopyLarge_ExtraLength", "testCopyLarge_FullLength", "testCopyLarge_NoSkip", "testCopyLarge_Skip", "testCopyLarge_SkipInvalid", "testCopyLarge_SkipWithInvalidOffset", "testCopy_ByteArray_OutputStream", "testCopy_ByteArray_Writer", "testCopy_String_Writer", "testReadFully_InputStream_ByteArray", "testReadFully_InputStream_Offset", "testReadFully_InputStream__ReturnByteArray", "testReadFully_ReadableByteChannel", "testReadFully_Reader", "testReadFully_Reader_Offset", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testRead_ReadableByteChannel", "testResourceToByteArray_ExistingResourceAtRootPackage", "testResourceToByteArray_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToByteArray_ExistingResourceAtSubPackage", "testResourceToByteArray_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToByteArray_NonExistingResource", "testResourceToByteArray_NonExistingResource_WithClassLoader", "testResourceToByteArray_Null", "testResourceToByteArray_Null_WithClassLoader", "testResourceToString_ExistingResourceAtRootPackage", "testResourceToString_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToString_ExistingResourceAtSubPackage", "testResourceToString_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToString_NonExistingResource", "testResourceToString_NonExistingResource_WithClassLoader", "testResourceToString_NullCharset", "testResourceToString_NullCharset_WithClassLoader", "testResourceToString_NullResource", "testResourceToString_NullResource_WithClassLoader", "testResourceToURL_ExistingResourceAtRootPackage", "testResourceToURL_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToURL_ExistingResourceAtSubPackage", "testResourceToURL_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToURL_NonExistingResource", "testResourceToURL_NonExistingResource_WithClassLoader", "testResourceToURL_Null", "testResourceToURL_Null_WithClassLoader", "testSkipFully_InputStream", "testSkipFully_ReadableByteChannel", "testSkipFully_Reader", "testSkip_FileReader", "testSkip_InputStream", "testSkip_ReadableByteChannel", "testStringToOutputStream", "testToBufferedInputStreamWithBufferSize_InputStream", "testToBufferedInputStream_InputStream", "testToByteArray_InputStream", "testToByteArray_InputStream_NegativeSize", "testToByteArray_InputStream_Size", "testToByteArray_InputStream_SizeIllegal", "testToByteArray_InputStream_SizeLong", "testToByteArray_InputStream_SizeZero", "testToByteArray_Reader", "testToByteArray_String", "testToByteArray_URI", "testToByteArray_URL", "testToByteArray_URLConnection", "testToCharArray_InputStream", "testToCharArray_InputStream_CharsetName", "testToCharArray_Reader", "testToInputStream_CharSequence", "testToInputStream_String", "testToString_ByteArray", "testToString_InputStream", "testToString_Reader", "testToString_URI", "testToString_URI_CharsetName", "testToString_URI_CharsetNameNull", "testToString_URL", "testToString_URL_CharsetName", "testToString_URL_CharsetNameNull" ],
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWriteLines_OutputStream", "testWriteLines_OutputStream_Encoding", "testWriteLines_OutputStream_Encoding_nullData", "testWriteLines_OutputStream_Encoding_nullEncoding", "testWriteLines_OutputStream_Encoding_nullSeparator", "testWriteLines_OutputStream_Encoding_nullStream", "testWriteLines_OutputStream_nullData", "testWriteLines_OutputStream_nullSeparator", "testWriteLines_OutputStream_nullStream", "testWriteLines_Writer", "testWriteLines_Writer_nullData", "testWriteLines_Writer_nullSeparator", "testWriteLines_Writer_nullStream", "testWrite_byteArrayToOutputStream", "testWrite_byteArrayToOutputStream_nullData", "testWrite_byteArrayToOutputStream_nullStream", "testWrite_byteArrayToWriter", "testWrite_byteArrayToWriter_Encoding", "testWrite_byteArrayToWriter_Encoding_nullData", "testWrite_byteArrayToWriter_Encoding_nullEncoding", "testWrite_byteArrayToWriter_Encoding_nullWriter", "testWrite_byteArrayToWriter_nullData", "testWrite_byteArrayToWriter_nullWriter", "testWrite_charArrayToOutputStream", "testWrite_charArrayToOutputStream_Encoding", "testWrite_charArrayToOutputStream_Encoding_nullData", "testWrite_charArrayToOutputStream_Encoding_nullStream", "testWrite_charArrayToOutputStream_nullData", "testWrite_charArrayToOutputStream_nullEncoding", "testWrite_charArrayToOutputStream_nullStream", "testWrite_charArrayToWriter", "testWrite_charArrayToWriter_Encoding_nullData", "testWrite_charArrayToWriter_Encoding_nullStream", "testWrite_charSequenceToOutputStream", "testWrite_charSequenceToOutputStream_Encoding", "testWrite_charSequenceToOutputStream_Encoding_nullData", "testWrite_charSequenceToOutputStream_Encoding_nullStream", "testWrite_charSequenceToOutputStream_nullData", "testWrite_charSequenceToOutputStream_nullEncoding", "testWrite_charSequenceToOutputStream_nullStream", "testWrite_charSequenceToWriter", "testWrite_charSequenceToWriter_Encoding_nullData", "testWrite_charSequenceToWriter_Encoding_nullStream", "testWrite_stringToOutputStream", "testWrite_stringToOutputStream_Encoding", "testWrite_stringToOutputStream_Encoding_nullData", "testWrite_stringToOutputStream_Encoding_nullStream", "testWrite_stringToOutputStream_nullData", "testWrite_stringToOutputStream_nullEncoding", "testWrite_stringToOutputStream_nullStream", "testWrite_stringToWriter", "testWrite_stringToWriter_Encoding_nullData", "testWrite_stringToWriter_Encoding_nullStream" ],
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testFilteringBufferedReader", "testFilteringFileReader", "testInvalidEncoding", "testNextLineOnlyDefaultEncoding", "testNextLineOnlyNullEncoding", "testNextLineOnlyUtf8Encoding", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset" ],
            "org.apache.commons.io.input.BoundedInputStreamTest" : [ "testReadArray" ],
            "org.apache.commons.io.input.TailerTest" : [ "testBufferBreak", "testIO335", "testLongFile", "testMultiByteBreak", "testTailer", "testTailerEndOfFileReached", "testTailerEof" ],
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testHttpContent", "testLowerCaseEncodingWithTurkishLocale_IO_557", "testRawContent" ],
            "org.apache.commons.io.output.ByteArrayOutputStreamTestCase" : [ "testToInputStream", "testToInputStreamWithReset" ],
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 1)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 1.024)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 128)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 16)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 2)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 2.048)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 256)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 32)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 4)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 4.096)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 512)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 64)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 8)" ],
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "constructor_File_directory", "constructor_File_encoding_badEncoding", "constructor_File_nullFile", "constructor_fileName_nullFile", "sameEncoding_CharsetEncoder_constructor", "sameEncoding_Charset_constructor", "sameEncoding_string_CharsetEncoder_constructor", "sameEncoding_string_Charset_constructor", "sameEncoding_string_constructor", "sameEncoding_string_string_constructor", "testDifferentEncoding" ]
          }
        },
        "org.apache.commons.io.IOUtilsCopyTestCase" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToOutputStreamWithBufferSize", "testCopy_inputStreamToOutputStream_nullIn", "testCopy_inputStreamToOutputStream_nullOut", "testCopy_inputStreamToWriter", "testCopy_inputStreamToWriter_Encoding", "testCopy_inputStreamToWriter_Encoding_nullEncoding", "testCopy_inputStreamToWriter_Encoding_nullIn", "testCopy_inputStreamToWriter_Encoding_nullOut", "testCopy_inputStreamToWriter_nullIn", "testCopy_inputStreamToWriter_nullOut", "testCopy_readerToOutputStream", "testCopy_readerToOutputStream_Encoding", "testCopy_readerToOutputStream_Encoding_nullEncoding", "testCopy_readerToOutputStream_Encoding_nullIn", "testCopy_readerToOutputStream_Encoding_nullOut", "testCopy_readerToOutputStream_nullIn", "testCopy_readerToOutputStream_nullOut", "testCopy_readerToWriter", "testCopy_readerToWriter_nullIn", "testCopy_readerToWriter_nullOut" ]
          }
        }
      },
      "ignoredAffectedTests" : {
        "testcases" : {
          "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyFileLarge" ]
        }
      }
    },
    "4daab02fb7d967a39eb15fe33f0d5350fc548a98" : {
      "running" : false,
      "jdk" : 8,
      "changedClazzes" : { }
    },
    "b5990be69139f0b04919bc097144a105051aafcc" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "d403c703ab8b8c015febdb887e9756caf67eb8b9",
      "changedClazzes" : {
        "org.apache.commons.io.IOUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileSystemUtilsTestCase" : [ "testGetFreeSpaceUnix_String_EmptyResponse", "testGetFreeSpaceUnix_String_InvalidResponse1", "testGetFreeSpaceUnix_String_InvalidResponse2", "testGetFreeSpaceUnix_String_InvalidResponse3", "testGetFreeSpaceUnix_String_InvalidResponse4", "testGetFreeSpaceUnix_String_LongResponse", "testGetFreeSpaceUnix_String_LongResponseKb", "testGetFreeSpaceUnix_String_NormalResponseFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD", "testGetFreeSpaceUnix_String_NormalResponseKbLinux", "testGetFreeSpaceUnix_String_NormalResponseKbSolaris", "testGetFreeSpaceUnix_String_NormalResponseLinux", "testGetFreeSpaceWindows_String_EmptyMultiLineResponse", "testGetFreeSpaceWindows_String_EmptyPath", "testGetFreeSpaceWindows_String_EmptyResponse", "testGetFreeSpaceWindows_String_InvalidTextResponse", "testGetFreeSpaceWindows_String_NoSuchDirectoryResponse", "testGetFreeSpaceWindows_String_NormalResponse", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes_Big", "testGetFreeSpaceWindows_String_ParseCommaFormatBytes_Small", "testGetFreeSpaceWindows_String_StripDrive", "testGetFreeSpaceWindows_String_quoted", "testGetFreeSpace_String" ],
            "org.apache.commons.io.FileUtilsCopyToFileTestCase" : [ "testCopyInputStreamToFile", "testCopyToFile" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnNullChecksum", "testContentEquals", "testContentEqualsIgnoreEOL", "testCopyDirectoryFiltered", "testCopyDirectoryPreserveDates", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToNonExistingDest", "testCopyFileToOutputStream", "testCopyURLToFile", "testCopyURLToFileWithTimeout", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testFileUtils", "testIsFileNewerOlder", "testIterateFiles", "testIterateFilesAndDirs", "testListFiles", "testListFilesWithDirs", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory_Errors", "testMoveFile_Errors", "testMoveToDirectory", "testReadFileToByteArray", "testReadFileToStringWithDefaultEncoding", "testReadFileToStringWithEncoding", "testReadLines", "testSizeOfDirectoryAsBigInteger", "testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_3arg_nullSeparator", "testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile1", "testWriteStringToFile2", "testWriteStringToFile3", "testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines" ],
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_inputStreamToOutputStream", "testCopy_inputStreamToOutputStreamWithBufferSize", "testCopy_inputStreamToOutputStream_nullIn", "testCopy_inputStreamToOutputStream_nullOut", "testCopy_inputStreamToWriter", "testCopy_inputStreamToWriter_Encoding", "testCopy_inputStreamToWriter_Encoding_nullEncoding", "testCopy_inputStreamToWriter_Encoding_nullIn", "testCopy_inputStreamToWriter_Encoding_nullOut", "testCopy_inputStreamToWriter_nullIn", "testCopy_inputStreamToWriter_nullOut", "testCopy_readerToOutputStream", "testCopy_readerToOutputStream_Encoding", "testCopy_readerToOutputStream_Encoding_nullEncoding", "testCopy_readerToOutputStream_Encoding_nullIn", "testCopy_readerToOutputStream_Encoding_nullOut", "testCopy_readerToOutputStream_nullIn", "testCopy_readerToOutputStream_nullOut", "testCopy_readerToWriter", "testCopy_readerToWriter_nullIn", "testCopy_readerToWriter_nullOut" ],
            "org.apache.commons.io.IOUtilsTestCase" : [ "testAsBufferedInputStream", "testAsBufferedInputStreamWithBufferSize", "testAsBufferedNull", "testAsBufferedOutputStream", "testAsBufferedOutputStreamWithBufferSize", "testAsBufferedReader", "testAsBufferedReaderWithBufferSize", "testAsBufferedWriter", "testAsBufferedWriterWithBufferSize", "testCloseQuietly_AllCloseableIOException", "testCloseQuietly_CloseableIOException", "testCloseQuietly_Selector", "testCloseQuietly_SelectorIOException", "testCloseQuietly_SelectorNull", "testCloseQuietly_SelectorTwice", "testCloseQuietly_ServerSocket", "testCloseQuietly_ServerSocketIOException", "testCloseQuietly_Socket", "testCloseQuietly_SocketIOException", "testConstants", "testContentEqualsIgnoreEOL", "testContentEquals_InputStream_InputStream", "testContentEquals_Reader_Reader", "testCopyLarge_CharExtraLength", "testCopyLarge_CharFullLength", "testCopyLarge_CharNoSkip", "testCopyLarge_CharSkip", "testCopyLarge_CharSkipInvalid", "testCopyLarge_ExtraLength", "testCopyLarge_FullLength", "testCopyLarge_NoSkip", "testCopyLarge_Skip", "testCopyLarge_SkipInvalid", "testCopyLarge_SkipWithInvalidOffset", "testCopy_ByteArray_OutputStream", "testCopy_ByteArray_Writer", "testCopy_String_Writer", "testReadFully_InputStream_ByteArray", "testReadFully_InputStream_Offset", "testReadFully_InputStream__ReturnByteArray", "testReadFully_ReadableByteChannel", "testReadFully_Reader", "testReadFully_Reader_Offset", "testReadLines_InputStream", "testReadLines_InputStream_String", "testReadLines_Reader", "testRead_ReadableByteChannel", "testResourceToByteArray_ExistingResourceAtRootPackage", "testResourceToByteArray_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToByteArray_ExistingResourceAtSubPackage", "testResourceToByteArray_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToByteArray_NonExistingResource", "testResourceToByteArray_NonExistingResource_WithClassLoader", "testResourceToByteArray_Null", "testResourceToByteArray_Null_WithClassLoader", "testResourceToString_ExistingResourceAtRootPackage", "testResourceToString_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToString_ExistingResourceAtSubPackage", "testResourceToString_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToString_NonExistingResource", "testResourceToString_NonExistingResource_WithClassLoader", "testResourceToString_NullCharset", "testResourceToString_NullCharset_WithClassLoader", "testResourceToString_NullResource", "testResourceToString_NullResource_WithClassLoader", "testResourceToURL_ExistingResourceAtRootPackage", "testResourceToURL_ExistingResourceAtRootPackage_WithClassLoader", "testResourceToURL_ExistingResourceAtSubPackage", "testResourceToURL_ExistingResourceAtSubPackage_WithClassLoader", "testResourceToURL_NonExistingResource", "testResourceToURL_NonExistingResource_WithClassLoader", "testResourceToURL_Null", "testResourceToURL_Null_WithClassLoader", "testSkipFully_InputStream", "testSkipFully_ReadableByteChannel", "testSkipFully_Reader", "testSkip_FileReader", "testSkip_InputStream", "testSkip_ReadableByteChannel", "testStringToOutputStream", "testToBufferedInputStreamWithBufferSize_InputStream", "testToBufferedInputStream_InputStream", "testToByteArray_InputStream", "testToByteArray_InputStream_NegativeSize", "testToByteArray_InputStream_Size", "testToByteArray_InputStream_SizeIllegal", "testToByteArray_InputStream_SizeLong", "testToByteArray_InputStream_SizeZero", "testToByteArray_Reader", "testToByteArray_String", "testToByteArray_URI", "testToByteArray_URL", "testToByteArray_URLConnection", "testToCharArray_InputStream", "testToCharArray_InputStream_CharsetName", "testToCharArray_Reader", "testToInputStream_CharSequence", "testToInputStream_String", "testToString_ByteArray", "testToString_InputStream", "testToString_Reader", "testToString_URI", "testToString_URI_CharsetName", "testToString_URI_CharsetNameNull", "testToString_URL", "testToString_URL_CharsetName", "testToString_URL_CharsetNameNull" ],
            "org.apache.commons.io.IOUtilsWriteTestCase" : [ "testWriteLines_OutputStream", "testWriteLines_OutputStream_Encoding", "testWriteLines_OutputStream_Encoding_nullData", "testWriteLines_OutputStream_Encoding_nullEncoding", "testWriteLines_OutputStream_Encoding_nullSeparator", "testWriteLines_OutputStream_Encoding_nullStream", "testWriteLines_OutputStream_nullData", "testWriteLines_OutputStream_nullSeparator", "testWriteLines_OutputStream_nullStream", "testWriteLines_Writer", "testWriteLines_Writer_nullData", "testWriteLines_Writer_nullSeparator", "testWriteLines_Writer_nullStream", "testWrite_byteArrayToOutputStream", "testWrite_byteArrayToOutputStream_nullData", "testWrite_byteArrayToOutputStream_nullStream", "testWrite_byteArrayToWriter", "testWrite_byteArrayToWriter_Encoding", "testWrite_byteArrayToWriter_Encoding_nullData", "testWrite_byteArrayToWriter_Encoding_nullEncoding", "testWrite_byteArrayToWriter_Encoding_nullWriter", "testWrite_byteArrayToWriter_nullData", "testWrite_byteArrayToWriter_nullWriter", "testWrite_charArrayToOutputStream", "testWrite_charArrayToOutputStream_Encoding", "testWrite_charArrayToOutputStream_Encoding_nullData", "testWrite_charArrayToOutputStream_Encoding_nullStream", "testWrite_charArrayToOutputStream_nullData", "testWrite_charArrayToOutputStream_nullEncoding", "testWrite_charArrayToOutputStream_nullStream", "testWrite_charArrayToWriter", "testWrite_charArrayToWriter_Encoding_nullData", "testWrite_charArrayToWriter_Encoding_nullStream", "testWrite_charSequenceToOutputStream", "testWrite_charSequenceToOutputStream_Encoding", "testWrite_charSequenceToOutputStream_Encoding_nullData", "testWrite_charSequenceToOutputStream_Encoding_nullStream", "testWrite_charSequenceToOutputStream_nullData", "testWrite_charSequenceToOutputStream_nullEncoding", "testWrite_charSequenceToOutputStream_nullStream", "testWrite_charSequenceToWriter", "testWrite_charSequenceToWriter_Encoding_nullData", "testWrite_charSequenceToWriter_Encoding_nullStream", "testWrite_stringToOutputStream", "testWrite_stringToOutputStream_Encoding", "testWrite_stringToOutputStream_Encoding_nullData", "testWrite_stringToOutputStream_Encoding_nullStream", "testWrite_stringToOutputStream_nullData", "testWrite_stringToOutputStream_nullEncoding", "testWrite_stringToOutputStream_nullStream", "testWrite_stringToWriter", "testWrite_stringToWriter_Encoding_nullData", "testWrite_stringToWriter_Encoding_nullStream" ],
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testFilteringBufferedReader", "testFilteringFileReader", "testInvalidEncoding", "testNextLineOnlyDefaultEncoding", "testNextLineOnlyNullEncoding", "testNextLineOnlyUtf8Encoding", "testNextOnly", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset" ],
            "org.apache.commons.io.input.BoundedInputStreamTest" : [ "testReadArray" ],
            "org.apache.commons.io.input.TailerTest" : [ "testBufferBreak", "testIO335", "testLongFile", "testMultiByteBreak", "testTailer", "testTailerEndOfFileReached", "testTailerEof" ],
            "org.apache.commons.io.input.XmlStreamReaderTest" : [ "testHttpContent", "testLowerCaseEncodingWithTurkishLocale_IO_557", "testRawContent" ],
            "org.apache.commons.io.output.ByteArrayOutputStreamTestCase" : [ "testToInputStream", "testToInputStreamWithReset" ],
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 1)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 1.024)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 128)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 16)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 2)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 2.048)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 256)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 32)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 4)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 4.096)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 512)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 64)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 8)" ],
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "constructor_File_directory", "constructor_File_encoding_badEncoding", "constructor_File_nullFile", "constructor_fileName_nullFile", "sameEncoding_CharsetEncoder_constructor", "sameEncoding_Charset_constructor", "sameEncoding_string_CharsetEncoder_constructor", "sameEncoding_string_Charset_constructor", "sameEncoding_string_constructor", "sameEncoding_string_string_constructor", "testDifferentEncoding" ]
          }
        },
        "org.apache.commons.io.IOUtilsCopyTestCase#testCopy_readerToAppendable_IO84" : { }
      },
      "ignoredAffectedTests" : {
        "testcases" : {
          "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyFileLarge" ]
        }
      }
    },
    "30f81c47f7ea0e9f743e08e73f48c0cfcfb746ff" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "b5990be69139f0b04919bc097144a105051aafcc",
      "changedClazzes" : { }
    },
    "f15433d69c96aec08c9a0c3c15a69edd8250ae2b" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "30f81c47f7ea0e9f743e08e73f48c0cfcfb746ff",
      "changedClazzes" : {
        "org.apache.commons.io.IOUtils#copy(java.io.Reader,java.lang.Appendable)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_readerToAppendable", "testCopy_readerToAppendable_nullIn", "testCopy_readerToAppendable_nullOut" ]
          }
        },
        "org.apache.commons.io.IOUtilsCopyTestCase" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_readerToAppendable", "testCopy_readerToAppendable_nullIn", "testCopy_readerToAppendable_nullOut" ]
          }
        },
        "org.apache.commons.io.IOUtilsCopyTestCase#testCopy_readerToAppendable" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_readerToAppendable" ]
          }
        },
        "org.apache.commons.io.IOUtilsCopyTestCase#testCopy_readerToAppendable_IO84" : { },
        "org.apache.commons.io.IOUtilsCopyTestCase#testCopy_readerToAppendable_nullIn" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_readerToAppendable_nullIn" ]
          }
        },
        "org.apache.commons.io.IOUtilsCopyTestCase#testCopy_readerToAppendable_nullOut" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_readerToAppendable_nullOut" ]
          }
        },
        "org.apache.commons.io.input.ProxyInputStream#<init>(java.io.InputStream)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_readerToAppendable", "testCopy_readerToAppendable_nullOut" ]
          }
        },
        "org.apache.commons.io.input.ProxyInputStream#afterRead(int)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_readerToAppendable", "testCopy_readerToAppendable_nullOut" ]
          }
        },
        "org.apache.commons.io.input.ProxyInputStream#available" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_readerToAppendable" ]
          }
        },
        "org.apache.commons.io.input.ProxyInputStream#beforeRead(int)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_readerToAppendable", "testCopy_readerToAppendable_nullOut" ]
          }
        },
        "org.apache.commons.io.input.ProxyInputStream#read(byte[],int,int)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_readerToAppendable", "testCopy_readerToAppendable_nullOut" ]
          }
        },
        "org.apache.commons.io.input.buffer.CircularBufferInputStream" : {
          "testcases" : {
            "org.apache.commons.io.input.buffer.CircularBufferInputStreamTest" : [ "testRandomRead" ]
          }
        },
        "org.apache.commons.io.input.buffer.package-info" : { },
        "org.apache.commons.io.output.ByteArrayOutputStream#<init>" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_readerToAppendable", "testCopy_readerToAppendable_nullIn" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream#needNewBuffer(int)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_readerToAppendable", "testCopy_readerToAppendable_nullIn" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream#size" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_readerToAppendable" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream#toByteArray" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_readerToAppendable" ]
          }
        },
        "org.apache.commons.io.output.ByteArrayOutputStream#write(byte[],int,int)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_readerToAppendable" ]
          }
        },
        "org.apache.commons.io.output.ProxyOutputStream#<init>(java.io.OutputStream)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_readerToAppendable", "testCopy_readerToAppendable_nullIn" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#<init>(int)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_readerToAppendable", "testCopy_readerToAppendable_nullIn", "testCopy_readerToAppendable_nullOut" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#close" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_readerToAppendable", "testCopy_readerToAppendable_nullIn", "testCopy_readerToAppendable_nullOut" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#toString" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_readerToAppendable", "testCopy_readerToAppendable_nullIn", "testCopy_readerToAppendable_nullOut" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#write(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_readerToAppendable", "testCopy_readerToAppendable_nullIn", "testCopy_readerToAppendable_nullOut" ]
          }
        },
        "org.apache.commons.io.testtools.YellOnCloseInputStream#<init>(java.io.InputStream)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_readerToAppendable", "testCopy_readerToAppendable_nullOut" ]
          }
        },
        "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream#<init>(java.io.OutputStream,boolean,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_readerToAppendable", "testCopy_readerToAppendable_nullIn" ]
          }
        },
        "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream#off" : {
          "testcases" : {
            "org.apache.commons.io.IOUtilsCopyTestCase" : [ "testCopy_readerToAppendable" ]
          }
        }
      }
    },
    "7c05b02f646f03b247997be522568bbaee78d591" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "f15433d69c96aec08c9a0c3c15a69edd8250ae2b",
      "changedClazzes" : { }
    },
    "66fba1cb89dadd60c6901e0914e74b8c155dfa64" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "7c05b02f646f03b247997be522568bbaee78d591",
      "changedClazzes" : { }
    },
    "19cd138d25fb461dc57125589a026ca0fa8f7805" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "66fba1cb89dadd60c6901e0914e74b8c155dfa64",
      "changedClazzes" : { }
    },
    "3e9210998975472eedcb87935a10906d6098f777" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "19cd138d25fb461dc57125589a026ca0fa8f7805",
      "changedClazzes" : { }
    },
    "94aaf0649da33ad07a35c4dab29363227febce56" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "3e9210998975472eedcb87935a10906d6098f777",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce" ],
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testCleanEmpty", "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile", "testThrowsOnNullList" ],
            "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" : [ "testCleanDirWithASymlinkDir", "testCleanDirWithParentSymlinks", "testCleanDirWithSymlinkFile", "testCorrectlyIdentifySymlinkWithParentSymLink", "testIdentifiesBrokenSymlinkFile", "testIdentifiesSymlinkDir", "testIdentifiesSymlinkFile", "testStillClearsIfGivenDirectoryIsASymlink" ],
            "org.apache.commons.io.FileUtilsCopyToFileTestCase" : [ "testCopyInputStreamToFile", "testCopyToFile" ],
            "org.apache.commons.io.FileUtilsDirectoryContainsTestCase" : [ "testCanonicalPath", "testDirectoryContainsDirectory", "testDirectoryContainsFile", "testDirectoryDoesNotContainFile", "testDirectoryDoesNotContainsDirectory", "testDirectoryDoesNotExist", "testFileDoesNotExist", "testFileDoesNotExistBug", "testIO466", "testSameFile", "testUnrealizedContainment" ],
            "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension", "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySizeBigInteger", "testByteCountToDisplaySizeLong", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testCompareSizeOf", "testContentEquals", "testContentEqualsIgnoreEOL", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryPreserveDates", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToItself", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyFileToOutputStream", "testCopyToDirectoryWithDirectory", "testCopyToDirectoryWithFile", "testCopyToDirectoryWithFileSourceDoesNotExist", "testCopyToDirectoryWithFileSourceIsNull", "testCopyToDirectoryWithIterable", "testCopyToDirectoryWithIterableSourceDoesNotExist", "testCopyToDirectoryWithIterableSourceIsNull", "testCopyToSelf", "testCopyURLToFile", "testCopyURLToFileWithTimeout", "testDecodeUrl", "testDecodeUrlEncodingUtf8", "testDecodeUrlLenient", "testDecodeUrlNullSafe", "testDeleteDirectoryWithNonDirectory", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testForceMkdirParent", "testGetFile", "testGetFile_Parent", "testGetTempDirectory", "testGetTempDirectoryPath", "testGetUserDirectory", "testGetUserDirectoryPath", "testIO276", "testIO300", "testIncorrectOutputSize", "testIsFileNewerOlder", "testIterateFiles", "testIterateFilesAndDirs", "testListFiles", "testListFilesWithDirs", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToStringWithDefaultEncoding", "testReadFileToStringWithEncoding", "testReadLines", "testSizeOf", "testSizeOfAsBigInteger", "testSizeOfDirectory", "testSizeOfDirectoryAsBigInteger", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFile5", "testToFileUtf8", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles3a", "testToFiles4", "testToURLs1", "testToURLs3a", "testTouch", "testWriteByteArrayToFile", "testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteByteArrayToFile_WithOffsetAndLength", "testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_3arg_nullSeparator", "testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile1", "testWriteStringToFile2", "testWriteStringToFile3", "testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ],
            "org.apache.commons.io.FileUtilsWaitForTestCase" : [ "testWaitFor", "testWaitForInterrupted" ],
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFilteringBufferedReader", "testFilteringFileReader", "testInvalidEncoding", "testMissingFile", "testNextLineOnlyDefaultEncoding", "testNextLineOnlyNullEncoding", "testNextLineOnlyUtf8Encoding", "testNextOnly", "testNextWithException", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testEmpty", "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware" ],
            "org.apache.commons.io.input.TailerTest" : [ "testBufferBreak", "testIO335", "testLongFile", "testMultiByteBreak", "testTailer", "testTailerEndOfFileReached", "testTailerEof" ],
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor", "testThreadFactory" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ],
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 1)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 1.024)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 128)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 16)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 2)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 2.048)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 256)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 32)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 4)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 4.096)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 512)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 64)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 8)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 1)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 1.024)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 128)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 16)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 2)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 2.048)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 256)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 32)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 4)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 4.096)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 512)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 64)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 8)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 1)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 1.024)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 128)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 16)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 2)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 2.048)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 256)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 32)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 4)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 4.096)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 512)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 64)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 8)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 1)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 1.024)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 128)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 16)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 2)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 2.048)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 256)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 32)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 4)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 4.096)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 512)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 64)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 8)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 1)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 1.024)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 128)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 16)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 2)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 2.048)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 256)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 32)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 4)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 4.096)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 512)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 64)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 8)" ],
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "constructor_File_encoding_badEncoding" ],
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testFileLocked", "testFileNotLocked" ]
          }
        }
      },
      "ignoredAffectedTests" : {
        "testcases" : {
          "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyFileLarge" ]
        }
      }
    },
    "62eef61f85e15fddcb54e95a68f270fe3614684b" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "94aaf0649da33ad07a35c4dab29363227febce56",
      "changedClazzes" : {
        "org.apache.commons.io.filefilter.CanExecuteFileFilter" : { },
        "org.apache.commons.io.filefilter.FileFilterTestCase" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testAnd", "testCanRead", "testCanWrite", "testDelegateFileFilter", "testDelegation", "testDeprecatedWildcard", "testDirectory", "testEmpty", "testEnsureTestCoverage", "testFalse", "testFileFilterUtils_and", "testFileFilterUtils_or", "testFiles", "testFilterArray", "testFilterArrayNullParameters", "testFilterArray_fromList", "testFilterList", "testFilterListNullParameters", "testFilterList_fromArray", "testFilterSet", "testFilterSetNullParameters", "testFilterSet_fromArray", "testHidden", "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset", "testMagicNumberFileFilterValidation", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNameFilterNullArrayArgument", "testNameFilterNullListArgument", "testNot", "testNullFilters", "testOr", "testPrefix", "testPrefixCaseInsensitive", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testTrue", "testWildcard" ]
          }
        }
      }
    },
    "533944f431e31fe281aea99a36404634111adce6" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "62eef61f85e15fddcb54e95a68f270fe3614684b",
      "changedClazzes" : {
        "org.apache.commons.io.FileUtils" : {
          "testcases" : {
            "org.apache.commons.io.FileDeleteStrategyTestCase" : [ "testDeleteForce" ],
            "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" : [ "testCleanEmpty", "testDeletesNested", "testDeletesRegular", "testThrowsOnCannotDeleteFile", "testThrowsOnNullList" ],
            "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" : [ "testCleanDirWithASymlinkDir", "testCleanDirWithParentSymlinks", "testCleanDirWithSymlinkFile", "testCorrectlyIdentifySymlinkWithParentSymLink", "testIdentifiesBrokenSymlinkFile", "testIdentifiesSymlinkDir", "testIdentifiesSymlinkFile", "testStillClearsIfGivenDirectoryIsASymlink" ],
            "org.apache.commons.io.FileUtilsCopyToFileTestCase" : [ "testCopyInputStreamToFile", "testCopyToFile" ],
            "org.apache.commons.io.FileUtilsDirectoryContainsTestCase" : [ "testCanonicalPath", "testDirectoryContainsDirectory", "testDirectoryContainsFile", "testDirectoryDoesNotContainFile", "testDirectoryDoesNotContainsDirectory", "testDirectoryDoesNotExist", "testFileDoesNotExist", "testFileDoesNotExistBug", "testIO466", "testSameFile", "testUnrealizedContainment" ],
            "org.apache.commons.io.FileUtilsFileNewerTestCase" : [ "testIsFileNewer", "testIsFileNewerImaginaryFile", "testIsFileNewerNoDate", "testIsFileNewerNoFile", "testIsFileNewerNoFileReference" ],
            "org.apache.commons.io.FileUtilsListFilesTestCase" : [ "testIterateFilesByExtension", "testListFiles", "testListFilesByExtension" ],
            "org.apache.commons.io.FileUtilsTestCase" : [ "testByteCountToDisplaySizeBigInteger", "testByteCountToDisplaySizeLong", "testChecksum", "testChecksumCRC32", "testChecksumDouble", "testChecksumOnDirectory", "testChecksumOnNullChecksum", "testChecksumOnNullFile", "testCompareSizeOf", "testContentEquals", "testContentEqualsIgnoreEOL", "testCopyDirectoryErrors", "testCopyDirectoryFiltered", "testCopyDirectoryPreserveDates", "testCopyDirectoryToChild", "testCopyDirectoryToDirectory_NonExistingDest", "testCopyDirectoryToExistingDest", "testCopyDirectoryToGrandChild", "testCopyDirectoryToItself", "testCopyDirectoryToNonExistingDest", "testCopyFile1", "testCopyFile1ToDir", "testCopyFile2", "testCopyFile2ToDir", "testCopyFile2WithoutFileDatePreservation", "testCopyFileToOutputStream", "testCopyToDirectoryWithDirectory", "testCopyToDirectoryWithFile", "testCopyToDirectoryWithFileSourceDoesNotExist", "testCopyToDirectoryWithFileSourceIsNull", "testCopyToDirectoryWithIterable", "testCopyToDirectoryWithIterableSourceDoesNotExist", "testCopyToDirectoryWithIterableSourceIsNull", "testCopyToSelf", "testCopyURLToFile", "testCopyURLToFileWithTimeout", "testDecodeUrl", "testDecodeUrlEncodingUtf8", "testDecodeUrlLenient", "testDecodeUrlNullSafe", "testDeleteDirectoryWithNonDirectory", "testDeleteQuietlyDir", "testDeleteQuietlyFile", "testDeleteQuietlyForNull", "testDeleteQuietlyNonExistent", "testFileUtils", "testForceDeleteAFile1", "testForceDeleteAFile2", "testForceDeleteAFile3", "testForceDeleteDir", "testForceMkdir", "testForceMkdirParent", "testGetFile", "testGetFile_Parent", "testGetTempDirectory", "testGetTempDirectoryPath", "testGetUserDirectory", "testGetUserDirectoryPath", "testIO276", "testIO300", "testIncorrectOutputSize", "testIsFileNewerOlder", "testIterateFiles", "testIterateFilesAndDirs", "testListFiles", "testListFilesWithDirs", "testMoveDirectoryToDirectory", "testMoveDirectoryToDirectory_Errors", "testMoveDirectory_CopyDelete", "testMoveDirectory_Errors", "testMoveDirectory_Rename", "testMoveFileToDirectory", "testMoveFileToDirectory_Errors", "testMoveFile_CopyDelete", "testMoveFile_CopyDelete_Failed", "testMoveFile_Errors", "testMoveFile_Rename", "testMoveToDirectory", "testMoveToDirectory_Errors", "testReadFileToByteArray", "testReadFileToStringWithDefaultEncoding", "testReadFileToStringWithEncoding", "testReadLines", "testSizeOf", "testSizeOfAsBigInteger", "testSizeOfDirectory", "testSizeOfDirectoryAsBigInteger", "testToFile1", "testToFile2", "testToFile3", "testToFile4", "testToFile5", "testToFileUtf8", "testToFiles1", "testToFiles2", "testToFiles3", "testToFiles3a", "testToFiles4", "testToURLs1", "testToURLs3a", "testTouch", "testWriteByteArrayToFile", "testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteByteArrayToFile_WithOffsetAndLength", "testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldDeletePreviousFileLines", "testWriteByteArrayToFile_WithOffsetAndLength_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteCharSequence1", "testWriteCharSequence2", "testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_3arg_nullSeparator", "testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_4arg", "testWriteLines_4arg_Writer_nullData", "testWriteLines_4arg_nullSeparator", "testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile1", "testWriteStringToFile2", "testWriteStringToFile3", "testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines", "testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines", "test_openInputStream_exists", "test_openInputStream_existsButIsDirectory", "test_openInputStream_notExists", "test_openOutputStream_exists", "test_openOutputStream_existsButIsDirectory", "test_openOutputStream_noParentCreateFile", "test_openOutputStream_noParentNoFile", "test_openOutputStream_notExists", "test_openOutputStream_notExistsCannotCreate" ],
            "org.apache.commons.io.FileUtilsWaitForTestCase" : [ "testWaitFor", "testWaitForInterrupted" ],
            "org.apache.commons.io.LineIteratorTestCase" : [ "testCloseEarly", "testConstructor", "testFilteringBufferedReader", "testFilteringFileReader", "testInvalidEncoding", "testMissingFile", "testNextLineOnlyDefaultEncoding", "testNextLineOnlyNullEncoding", "testNextLineOnlyUtf8Encoding", "testNextOnly", "testNextWithException", "testOneLines", "testThreeLines", "testTwoLines", "testValidEncoding", "testZeroLines" ],
            "org.apache.commons.io.comparator.SizeFileComparatorTest" : [ "testCompareDirectorySizes" ],
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testEmpty", "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware" ],
            "org.apache.commons.io.input.TailerTest" : [ "testBufferBreak", "testIO335", "testLongFile", "testMultiByteBreak", "testTailer", "testTailerEndOfFileReached", "testTailerEof" ],
            "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" : [ "testMonitor", "testThreadFactory" ],
            "org.apache.commons.io.monitor.FileAlterationObserverTestCase" : [ "testDirectory", "testFileCreate", "testFileDelete", "testFileUpdate", "testObserveSingleFile" ],
            "org.apache.commons.io.output.DeferredFileOutputStreamTest" : [ "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 1)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 1.024)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 128)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 16)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 2)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 2.048)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 256)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 32)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 4)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 4.096)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 512)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 64)", "testAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 8)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 1)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 1.024)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 128)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 16)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 2)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 2.048)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 256)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 32)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 4)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 4.096)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 512)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 64)", "testTempFileAboveThreshold(JUNIT_PARAMETERIZED-initialBufferSize = 8)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 1)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 1.024)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 128)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 16)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 2)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 2.048)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 256)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 32)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 4)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 4.096)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 512)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 64)", "testTempFileAboveThresholdPrefixOnly(JUNIT_PARAMETERIZED-initialBufferSize = 8)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 1)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 1.024)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 128)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 16)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 2)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 2.048)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 256)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 32)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 4)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 4.096)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 512)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 64)", "testThresholdReached(JUNIT_PARAMETERIZED-initialBufferSize = 8)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 1)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 1.024)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 128)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 16)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 2)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 2.048)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 256)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 32)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 4)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 4.096)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 512)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 64)", "testWriteToLarge(JUNIT_PARAMETERIZED-initialBufferSize = 8)" ],
            "org.apache.commons.io.output.FileWriterWithEncodingTest" : [ "constructor_File_encoding_badEncoding" ],
            "org.apache.commons.io.output.LockableFileWriterTest" : [ "testAlternateLockDir", "testConstructor_File_directory", "testFileLocked", "testFileNotLocked" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#skipReturnValueWithBom" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "skipReturnValueWithBom" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#skipReturnValueWithoutBom" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "skipReturnValueWithoutBom" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#testAvailableWithBOM" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testAvailableWithBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#testAvailableWithoutBOM" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testAvailableWithoutBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#testClose" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testClose" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#testEmptyBufferWithBOM" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testEmptyBufferWithBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#testEmptyBufferWithoutBOM" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testEmptyBufferWithoutBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#testGetBOMFirstThenRead" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testGetBOMFirstThenRead" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#testGetBOMFirstThenReadInclude" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testGetBOMFirstThenReadInclude" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#testLargeBufferWithBOM" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testLargeBufferWithBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#testLargeBufferWithoutBOM" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testLargeBufferWithoutBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#testLeadingNonBOMBufferedRead" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testLeadingNonBOMBufferedRead" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#testLeadingNonBOMSingleRead" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testLeadingNonBOMSingleRead" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#testMarkResetAfterReadWithBOM" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testMarkResetAfterReadWithBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#testMarkResetAfterReadWithoutBOM" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testMarkResetAfterReadWithoutBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#testMarkResetBeforeReadWithBOM" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testMarkResetBeforeReadWithBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#testMarkResetBeforeReadWithoutBOM" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testMarkResetBeforeReadWithoutBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#testReadEmpty" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testReadEmpty" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#testReadSmall" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testReadSmall" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#testReadWithBOMInclude" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testReadWithBOMInclude" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#testReadWithBOMUtf16Be" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testReadWithBOMUtf16Be" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#testReadWithBOMUtf16Le" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testReadWithBOMUtf16Le" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#testReadWithBOMUtf32Be" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testReadWithBOMUtf32Be" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#testReadWithBOMUtf32Le" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testReadWithBOMUtf32Le" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#testReadWithBOMUtf8" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testReadWithBOMUtf8" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#testReadWithMultipleBOM" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testReadWithMultipleBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#testReadWithoutBOM" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testReadWithoutBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#testSkipWithBOM" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testSkipWithBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#testSkipWithoutBOM" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testSkipWithoutBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#testSmallBufferWithBOM" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testSmallBufferWithBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#testSmallBufferWithoutBOM" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testSmallBufferWithoutBOM" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#testSupportCode" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testSupportCode" ]
          }
        },
        "org.apache.commons.io.input.BoundedReaderTest#closeTest" : {
          "testcases" : {
            "org.apache.commons.io.input.BoundedReaderTest" : [ "closeTest" ]
          }
        },
        "org.apache.commons.io.input.BoundedReaderTest#markReset" : {
          "testcases" : {
            "org.apache.commons.io.input.BoundedReaderTest" : [ "markReset" ]
          }
        },
        "org.apache.commons.io.input.BoundedReaderTest#markResetFromOffset1" : {
          "testcases" : {
            "org.apache.commons.io.input.BoundedReaderTest" : [ "markResetFromOffset1" ]
          }
        },
        "org.apache.commons.io.input.BoundedReaderTest#markResetMarkMore" : {
          "testcases" : {
            "org.apache.commons.io.input.BoundedReaderTest" : [ "markResetMarkMore" ]
          }
        },
        "org.apache.commons.io.input.BoundedReaderTest#markResetWithMarkOutsideBoundedReaderMax" : {
          "testcases" : {
            "org.apache.commons.io.input.BoundedReaderTest" : [ "markResetWithMarkOutsideBoundedReaderMax" ]
          }
        },
        "org.apache.commons.io.input.BoundedReaderTest#markResetWithMarkOutsideBoundedReaderMaxAndInitialOffset" : {
          "testcases" : {
            "org.apache.commons.io.input.BoundedReaderTest" : [ "markResetWithMarkOutsideBoundedReaderMaxAndInitialOffset" ]
          }
        },
        "org.apache.commons.io.input.BoundedReaderTest#readMulti" : {
          "testcases" : {
            "org.apache.commons.io.input.BoundedReaderTest" : [ "readMulti" ]
          }
        },
        "org.apache.commons.io.input.BoundedReaderTest#readMultiWithOffset" : {
          "testcases" : {
            "org.apache.commons.io.input.BoundedReaderTest" : [ "readMultiWithOffset" ]
          }
        },
        "org.apache.commons.io.input.BoundedReaderTest#readTillEnd" : {
          "testcases" : {
            "org.apache.commons.io.input.BoundedReaderTest" : [ "readTillEnd" ]
          }
        },
        "org.apache.commons.io.input.BoundedReaderTest#shortReader" : {
          "testcases" : {
            "org.apache.commons.io.input.BoundedReaderTest" : [ "shortReader" ]
          }
        },
        "org.apache.commons.io.input.BoundedReaderTest#skipTest" : {
          "testcases" : {
            "org.apache.commons.io.input.BoundedReaderTest" : [ "skipTest" ]
          }
        },
        "org.apache.commons.io.input.CharSequenceInputStreamTest#testBufferedRead(java.lang.String,java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.CharSequenceInputStreamTest" : [ "testBufferedRead_AvailableCharset", "testBufferedRead_RequiredCharset", "testBufferedRead_UTF8", "testLargeBufferedRead_RequiredCharsets", "testLargeBufferedRead_UTF8" ]
          }
        },
        "org.apache.commons.io.input.CharSequenceReaderTest#testMark" : {
          "testcases" : {
            "org.apache.commons.io.input.CharSequenceReaderTest" : [ "testMark" ]
          }
        },
        "org.apache.commons.io.input.CharSequenceReaderTest#testMarkSupported" : {
          "testcases" : {
            "org.apache.commons.io.input.CharSequenceReaderTest" : [ "testMarkSupported" ]
          }
        },
        "org.apache.commons.io.input.CharSequenceReaderTest#testRead" : {
          "testcases" : {
            "org.apache.commons.io.input.CharSequenceReaderTest" : [ "testRead" ]
          }
        },
        "org.apache.commons.io.input.CharSequenceReaderTest#testReadCharArray" : {
          "testcases" : {
            "org.apache.commons.io.input.CharSequenceReaderTest" : [ "testReadCharArray" ]
          }
        },
        "org.apache.commons.io.input.CharSequenceReaderTest#testReadCharArrayPortion" : {
          "testcases" : {
            "org.apache.commons.io.input.CharSequenceReaderTest" : [ "testReadCharArrayPortion" ]
          }
        },
        "org.apache.commons.io.input.ClassLoaderObjectInputStreamTest#testExpected" : { },
        "org.apache.commons.io.input.ClassLoaderObjectInputStreamTest#testLong" : { },
        "org.apache.commons.io.input.ClassLoaderObjectInputStreamTest#testObject1" : { },
        "org.apache.commons.io.input.ClassLoaderObjectInputStreamTest#testObject2" : { },
        "org.apache.commons.io.input.ClassLoaderObjectInputStreamTest#testPrimitiveLong" : { },
        "org.apache.commons.io.input.ClassLoaderObjectInputStreamTest#testResolveProxyClass" : { },
        "org.apache.commons.io.input.ClassLoaderObjectInputStreamTest#testResolveProxyClassWithMultipleInterfaces" : { },
        "org.apache.commons.io.input.ClassLoaderObjectInputStreamTest$Test#equals(java.lang.Object)" : { },
        "org.apache.commons.io.input.ClosedInputStreamTest#testRead" : {
          "testcases" : {
            "org.apache.commons.io.input.ClosedInputStreamTest" : [ "testRead" ]
          }
        },
        "org.apache.commons.io.input.CountingInputStreamTest#testCounting" : {
          "testcases" : {
            "org.apache.commons.io.input.CountingInputStreamTest" : [ "testCounting" ]
          }
        },
        "org.apache.commons.io.input.CountingInputStreamTest#testEOF1" : {
          "testcases" : {
            "org.apache.commons.io.input.CountingInputStreamTest" : [ "testEOF1" ]
          }
        },
        "org.apache.commons.io.input.CountingInputStreamTest#testEOF2" : {
          "testcases" : {
            "org.apache.commons.io.input.CountingInputStreamTest" : [ "testEOF2" ]
          }
        },
        "org.apache.commons.io.input.CountingInputStreamTest#testEOF3" : {
          "testcases" : {
            "org.apache.commons.io.input.CountingInputStreamTest" : [ "testEOF3" ]
          }
        },
        "org.apache.commons.io.input.CountingInputStreamTest#testResetting" : {
          "testcases" : {
            "org.apache.commons.io.input.CountingInputStreamTest" : [ "testResetting" ]
          }
        },
        "org.apache.commons.io.input.CountingInputStreamTest#testSkipping" : {
          "testcases" : {
            "org.apache.commons.io.input.CountingInputStreamTest" : [ "testSkipping" ]
          }
        },
        "org.apache.commons.io.input.CountingInputStreamTest#testZeroLength1" : {
          "testcases" : {
            "org.apache.commons.io.input.CountingInputStreamTest" : [ "testZeroLength1" ]
          }
        },
        "org.apache.commons.io.input.CountingInputStreamTest#testZeroLength2" : {
          "testcases" : {
            "org.apache.commons.io.input.CountingInputStreamTest" : [ "testZeroLength2" ]
          }
        },
        "org.apache.commons.io.input.CountingInputStreamTest#testZeroLength3" : {
          "testcases" : {
            "org.apache.commons.io.input.CountingInputStreamTest" : [ "testZeroLength3" ]
          }
        }
      },
      "ignoredAffectedTests" : {
        "testcases" : {
          "org.apache.commons.io.FileUtilsTestCase" : [ "testCopyFileLarge" ],
          "org.apache.commons.io.input.CharSequenceInputStreamTest" : [ "testMarkReset_RequiredCharsets", "testSkip_RequiredCharsets" ]
        }
      }
    },
    "a931b223435e0ad2cd65d50153cdc071895ea958" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "533944f431e31fe281aea99a36404634111adce6",
      "changedClazzes" : { }
    },
    "ec3f268c041eb980eb9959d62616e0ab84243a4d" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "a931b223435e0ad2cd65d50153cdc071895ea958",
      "changedClazzes" : { }
    },
    "290ced5f70db2d51fb282f49a1f7f0d8e272cae3" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "ec3f268c041eb980eb9959d62616e0ab84243a4d",
      "changedClazzes" : { }
    },
    "a14aa925ecba88855c66b7e38b6dcf30c5b99ffe" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "290ced5f70db2d51fb282f49a1f7f0d8e272cae3",
      "changedClazzes" : { }
    },
    "085226e8473cae1c8ddf216fad002151465bfaa3" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "a14aa925ecba88855c66b7e38b6dcf30c5b99ffe",
      "changedClazzes" : {
        "org.apache.commons.io.filefilter.FileFilterTestCase" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testAgeFilter", "testAnd", "testCanExecute", "testCanRead", "testCanWrite", "testDelegateFileFilter", "testDelegation", "testDeprecatedWildcard", "testDirectory", "testEmpty", "testEnsureTestCoverage", "testFalse", "testFileFilterUtils_and", "testFileFilterUtils_or", "testFiles", "testFilterArray", "testFilterArrayNullParameters", "testFilterArray_fromList", "testFilterList", "testFilterListNullParameters", "testFilterList_fromArray", "testFilterSet", "testFilterSetNullParameters", "testFilterSet_fromArray", "testHidden", "testMagicNumberFileFilterBytes", "testMagicNumberFileFilterBytesOffset", "testMagicNumberFileFilterString", "testMagicNumberFileFilterStringOffset", "testMagicNumberFileFilterValidation", "testMakeCVSAware", "testMakeDirectoryOnly", "testMakeFileOnly", "testMakeSVNAware", "testNameFilter", "testNameFilterNullArgument", "testNameFilterNullArrayArgument", "testNameFilterNullListArgument", "testNot", "testNullFilters", "testOr", "testPrefix", "testPrefixCaseInsensitive", "testSizeFilter", "testSuffix", "testSuffixCaseInsensitive", "testTrue", "testWildcard" ]
          }
        },
        "org.apache.commons.io.filefilter.FileFilterTestCase#testCanExecute" : {
          "testcases" : {
            "org.apache.commons.io.filefilter.FileFilterTestCase" : [ "testCanExecute" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#testReadXmlWithBOMUcs2" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testReadXmlWithBOMUcs2" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#testReadXmlWithBOMUcs4" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testReadXmlWithBOMUcs4" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#testReadXmlWithBOMUtf16Be" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testReadXmlWithBOMUtf16Be" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#testReadXmlWithBOMUtf16Le" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testReadXmlWithBOMUtf16Le" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#testReadXmlWithBOMUtf32Be" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testReadXmlWithBOMUtf32Be" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#testReadXmlWithBOMUtf32Le" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testReadXmlWithBOMUtf32Le" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#testReadXmlWithBOMUtf8" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testReadXmlWithBOMUtf8" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#testReadXmlWithoutBOMUtf32Be" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testReadXmlWithoutBOMUtf32Be" ]
          }
        },
        "org.apache.commons.io.input.BOMInputStreamTest#testReadXmlWithoutBOMUtf32Le" : {
          "testcases" : {
            "org.apache.commons.io.input.BOMInputStreamTest" : [ "testReadXmlWithoutBOMUtf32Le" ]
          }
        },
        "org.apache.commons.io.input.compatibility.XmlStreamReader#<init>(java.io.InputStream,java.lang.String,boolean,java.lang.String)" : { },
        "org.apache.commons.io.input.compatibility.XmlStreamReader#getXmlProlog(java.io.BufferedInputStream,java.lang.String)" : { },
        "org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest#calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)" : { },
        "org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest#calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String)" : { },
        "org.apache.commons.io.output.ChunkedWriterTest#negative_chunksize_not_permitted" : {
          "testcases" : {
            "org.apache.commons.io.output.ChunkedWriterTest" : [ "negative_chunksize_not_permitted" ]
          }
        },
        "org.apache.commons.io.output.ChunkedWriterTest#write_four_chunks" : {
          "testcases" : {
            "org.apache.commons.io.output.ChunkedWriterTest" : [ "write_four_chunks" ]
          }
        },
        "org.apache.commons.io.output.ChunkedWriterTest#write_two_chunks_default_constructor" : {
          "testcases" : {
            "org.apache.commons.io.output.ChunkedWriterTest" : [ "write_two_chunks_default_constructor" ]
          }
        },
        "org.apache.commons.io.output.CountingOutputStreamTest#testCounting" : {
          "testcases" : {
            "org.apache.commons.io.output.CountingOutputStreamTest" : [ "testCounting" ]
          }
        },
        "org.apache.commons.io.output.NullOutputStreamTest#testNull" : {
          "testcases" : {
            "org.apache.commons.io.output.NullOutputStreamTest" : [ "testNull" ]
          }
        },
        "org.apache.commons.io.output.NullWriterTest#testNull" : {
          "testcases" : {
            "org.apache.commons.io.output.NullWriterTest" : [ "testNull" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriterTest#appendChar" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "appendChar" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriterTest#appendCharSequence" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "appendCharSequence" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriterTest#appendCharSequence_with_offset" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "appendCharSequence_with_offset" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriterTest#exceptions_in_append_char" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "exceptions_in_append_char" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriterTest#exceptions_in_append_charSequence" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "exceptions_in_append_charSequence" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriterTest#exceptions_in_append_charSequence_offset" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "exceptions_in_append_charSequence_offset" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriterTest#exceptions_in_close" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "exceptions_in_close" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriterTest#exceptions_in_flush" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "exceptions_in_flush" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriterTest#exceptions_in_write_char_array" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "exceptions_in_write_char_array" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriterTest#exceptions_in_write_int" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "exceptions_in_write_int" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriterTest#exceptions_in_write_offset_char_array" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "exceptions_in_write_offset_char_array" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriterTest#exceptions_in_write_string" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "exceptions_in_write_string" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriterTest#exceptions_in_write_string_offset" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "exceptions_in_write_string_offset" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriterTest#nullCharArray" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "nullCharArray" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriterTest#nullCharSequencec" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "nullCharSequencec" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriterTest#nullString" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "nullString" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriterTest#writeCharArray" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "writeCharArray" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriterTest#writeCharArrayPartial" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "writeCharArrayPartial" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriterTest#writeInt" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "writeInt" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriterTest#writeString" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "writeString" ]
          }
        },
        "org.apache.commons.io.output.ProxyWriterTest#writeStringPartial" : {
          "testcases" : {
            "org.apache.commons.io.output.ProxyWriterTest" : [ "writeStringPartial" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriterTest" : {
          "testcases" : {
            "org.apache.commons.io.output.StringBuilderWriterTest" : [ "testAppendChar", "testAppendCharSequence", "testAppendCharSequencePortion", "testAppendConstructCapacity", "testAppendConstructNull", "testAppendConstructStringBuilder", "testClose", "testWriteChar", "testWriteCharArray", "testWriteCharArrayPortion", "testWriteString", "testWriteStringPortion" ]
          }
        },
        "org.apache.commons.io.output.TaggedOutputStreamTest#testNormalStream" : {
          "testcases" : {
            "org.apache.commons.io.output.TaggedOutputStreamTest" : [ "testNormalStream" ]
          }
        },
        "org.apache.commons.io.output.TaggedOutputStreamTest#testOtherException" : {
          "testcases" : {
            "org.apache.commons.io.output.TaggedOutputStreamTest" : [ "testOtherException" ]
          }
        },
        "org.apache.commons.io.output.TeeOutputStreamTest#testTee" : {
          "testcases" : {
            "org.apache.commons.io.output.TeeOutputStreamTest" : [ "testTee" ]
          }
        },
        "org.apache.commons.io.output.ThresholdingOutputStreamTest#testSetByteCount" : {
          "testcases" : {
            "org.apache.commons.io.output.ThresholdingOutputStreamTest" : [ "testSetByteCount" ]
          }
        },
        "org.apache.commons.io.output.XmlStreamWriterTest#testEmpty" : {
          "testcases" : {
            "org.apache.commons.io.output.XmlStreamWriterTest" : [ "testEmpty" ]
          }
        }
      }
    },
    "41c73e390abb85f0c8bc4f3097056ddda246540b" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "085226e8473cae1c8ddf216fad002151465bfaa3",
      "changedClazzes" : {
        "org.apache.commons.io.Charsets#toCharset(java.nio.charset.Charset)" : {
          "testcases" : {
            "org.apache.commons.io.input.BoundedReaderTest" : [ "testLineNumberReaderAndFileReaderLastLineEolNo", "testLineNumberReaderAndFileReaderLastLineEolYes" ]
          }
        },
        "org.apache.commons.io.FileUtils#openOutputStream(java.io.File,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.input.BoundedReaderTest" : [ "testLineNumberReaderAndFileReaderLastLineEolNo", "testLineNumberReaderAndFileReaderLastLineEolYes" ]
          }
        },
        "org.apache.commons.io.FileUtils#write(java.io.File,java.lang.CharSequence,java.nio.charset.Charset)" : {
          "testcases" : {
            "org.apache.commons.io.input.BoundedReaderTest" : [ "testLineNumberReaderAndFileReaderLastLineEolNo", "testLineNumberReaderAndFileReaderLastLineEolYes" ]
          }
        },
        "org.apache.commons.io.FileUtils#writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)" : {
          "testcases" : {
            "org.apache.commons.io.input.BoundedReaderTest" : [ "testLineNumberReaderAndFileReaderLastLineEolNo", "testLineNumberReaderAndFileReaderLastLineEolYes" ]
          }
        },
        "org.apache.commons.io.IOUtils#write(java.lang.String,java.io.OutputStream,java.nio.charset.Charset)" : {
          "testcases" : {
            "org.apache.commons.io.input.BoundedReaderTest" : [ "testLineNumberReaderAndFileReaderLastLineEolNo", "testLineNumberReaderAndFileReaderLastLineEolYes" ]
          }
        },
        "org.apache.commons.io.input.BoundedReader#<init>(java.io.Reader,int)" : {
          "testcases" : {
            "org.apache.commons.io.input.BoundedReaderTest" : [ "testLineNumberReaderAndFileReaderLastLineEolNo", "testLineNumberReaderAndFileReaderLastLineEolYes", "testLineNumberReaderAndStringReaderLastLineEolNo", "testLineNumberReaderAndStringReaderLastLineEolYes" ]
          }
        },
        "org.apache.commons.io.input.BoundedReader#close" : {
          "testcases" : {
            "org.apache.commons.io.input.BoundedReaderTest" : [ "testLineNumberReaderAndFileReaderLastLineEolNo", "testLineNumberReaderAndFileReaderLastLineEolYes", "testLineNumberReaderAndStringReaderLastLineEolNo", "testLineNumberReaderAndStringReaderLastLineEolYes" ]
          }
        },
        "org.apache.commons.io.input.BoundedReader#read" : {
          "testcases" : {
            "org.apache.commons.io.input.BoundedReaderTest" : [ "testLineNumberReaderAndFileReaderLastLineEolNo", "testLineNumberReaderAndFileReaderLastLineEolYes", "testLineNumberReaderAndStringReaderLastLineEolNo", "testLineNumberReaderAndStringReaderLastLineEolYes" ]
          }
        },
        "org.apache.commons.io.input.BoundedReaderTest" : {
          "testcases" : {
            "org.apache.commons.io.input.BoundedReaderTest" : [ "closeTest", "markReset", "markResetFromOffset1", "markResetMarkMore", "markResetWithMarkOutsideBoundedReaderMax", "markResetWithMarkOutsideBoundedReaderMaxAndInitialOffset", "readMulti", "readMultiWithOffset", "readTillEnd", "shortReader", "skipTest", "testLineNumberReaderAndFileReaderLastLineEolNo", "testLineNumberReaderAndFileReaderLastLineEolYes", "testLineNumberReaderAndStringReaderLastLineEolNo", "testLineNumberReaderAndStringReaderLastLineEolYes", "testReadBytesEOF" ]
          }
        },
        "org.apache.commons.io.input.BoundedReaderTest#testLineNumberReader(java.io.Reader)" : {
          "testcases" : {
            "org.apache.commons.io.input.BoundedReaderTest" : [ "testLineNumberReaderAndFileReaderLastLineEolNo", "testLineNumberReaderAndFileReaderLastLineEolYes", "testLineNumberReaderAndStringReaderLastLineEolNo", "testLineNumberReaderAndStringReaderLastLineEolYes" ]
          }
        },
        "org.apache.commons.io.input.BoundedReaderTest#testLineNumberReaderAndFileReaderLastLine(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.BoundedReaderTest" : [ "testLineNumberReaderAndFileReaderLastLineEolNo", "testLineNumberReaderAndFileReaderLastLineEolYes" ]
          }
        },
        "org.apache.commons.io.input.BoundedReaderTest#testLineNumberReaderAndFileReaderLastLineEolNo" : {
          "testcases" : {
            "org.apache.commons.io.input.BoundedReaderTest" : [ "testLineNumberReaderAndFileReaderLastLineEolNo" ]
          }
        },
        "org.apache.commons.io.input.BoundedReaderTest#testLineNumberReaderAndFileReaderLastLineEolYes" : {
          "testcases" : {
            "org.apache.commons.io.input.BoundedReaderTest" : [ "testLineNumberReaderAndFileReaderLastLineEolYes" ]
          }
        },
        "org.apache.commons.io.input.BoundedReaderTest#testLineNumberReaderAndStringReaderLastLineEolNo" : {
          "testcases" : {
            "org.apache.commons.io.input.BoundedReaderTest" : [ "testLineNumberReaderAndStringReaderLastLineEolNo" ]
          }
        },
        "org.apache.commons.io.input.BoundedReaderTest#testLineNumberReaderAndStringReaderLastLineEolYes" : {
          "testcases" : {
            "org.apache.commons.io.input.BoundedReaderTest" : [ "testLineNumberReaderAndStringReaderLastLineEolYes" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#<init>(int)" : {
          "testcases" : {
            "org.apache.commons.io.input.BoundedReaderTest" : [ "testLineNumberReaderAndFileReaderLastLineEolNo", "testLineNumberReaderAndFileReaderLastLineEolYes" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#close" : {
          "testcases" : {
            "org.apache.commons.io.input.BoundedReaderTest" : [ "testLineNumberReaderAndFileReaderLastLineEolNo", "testLineNumberReaderAndFileReaderLastLineEolYes" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#toString" : {
          "testcases" : {
            "org.apache.commons.io.input.BoundedReaderTest" : [ "testLineNumberReaderAndFileReaderLastLineEolNo", "testLineNumberReaderAndFileReaderLastLineEolYes" ]
          }
        },
        "org.apache.commons.io.output.StringBuilderWriter#write(java.lang.String)" : {
          "testcases" : {
            "org.apache.commons.io.input.BoundedReaderTest" : [ "testLineNumberReaderAndFileReaderLastLineEolNo", "testLineNumberReaderAndFileReaderLastLineEolYes" ]
          }
        }
      }
    },
    "9bb3481aec6468da930fa2cae9b0710f33b1c5dc" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "41c73e390abb85f0c8bc4f3097056ddda246540b",
      "changedClazzes" : { }
    },
    "a9e8244e42a3c746c27db06544d027fb897fe17e" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "9bb3481aec6468da930fa2cae9b0710f33b1c5dc",
      "changedClazzes" : { }
    },
    "390c981388242a2623567521ecd5cb4fcce698fc" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "a9e8244e42a3c746c27db06544d027fb897fe17e",
      "changedClazzes" : { }
    },
    "042423214371eaba7000ae8b301adbd19532b729" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "390c981388242a2623567521ecd5cb4fcce698fc",
      "changedClazzes" : { }
    },
    "880e64274e06e79b59a64231410280aa704b7dbb" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "042423214371eaba7000ae8b301adbd19532b729",
      "changedClazzes" : { }
    },
    "5799ec50d7b220bc25f86828ce388a358aa2d9b4" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "880e64274e06e79b59a64231410280aa704b7dbb",
      "changedClazzes" : { }
    },
    "e921bc6a8c63dc6b33e8e220aa28084bb2434222" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "5799ec50d7b220bc25f86828ce388a358aa2d9b4",
      "changedClazzes" : { }
    }
  },
  "android" : false
}