/**                                                                                                    /**                                                                                                 
* &lt;p&gt;Round this date, leaving the field specified as the most                                    * &lt;p&gt;Round this date, leaving the field specified as the most                                 
* significant field.&lt;/p&gt;                                                                         * significant field.&lt;/p&gt;                                                                      
*                                                                                                      *                                                                                                   
* &lt;p&gt;For example, if you had the datetime of 28 Mar 2002                                         * &lt;p&gt;For example, if you had the datetime of 28 Mar 2002                                      
* 13:45:01.231, if this was passed with HOUR, it would return                                          * 13:45:01.231, if this was passed with HOUR, it would return                                       
* 28 Mar 2002 14:00:00.000. If this was passed with MONTH, it                                          * 28 Mar 2002 14:00:00.000. If this was passed with MONTH, it                                       
* would return 1 April 2002 0:00:00.000.&lt;/p&gt;                                                     * would return 1 April 2002 0:00:00.000.&lt;/p&gt;                                                  
*                                                                                                      *                                                                                                   
* &lt;p&gt;For a date in a timezone that handles the change to daylight                                * &lt;p&gt;For a date in a timezone that handles the change to daylight                             
* saving time, rounding to Calendar.HOUR_OF_DAY will behave as follows.                                * saving time, rounding to Calendar.HOUR_OF_DAY will behave as follows.                             
* Suppose daylight saving time begins at 02:00 on March 30. Rounding a                                 * Suppose daylight saving time begins at 02:00 on March 30. Rounding a                              
* date that crosses this time would produce the following values:                                      * date that crosses this time would produce the following values:                                   
* &lt;ul&gt;                                                                                           * &lt;ul&gt;                                                                                        
* &lt;li&gt;March 30, 2003 01:10 rounds to March 30, 2003 01:00&lt;/li&gt;                             * &lt;li&gt;March 30, 2003 01:10 rounds to March 30, 2003 01:00&lt;/li&gt;                          
* &lt;li&gt;March 30, 2003 01:40 rounds to March 30, 2003 03:00&lt;/li&gt;                             * &lt;li&gt;March 30, 2003 01:40 rounds to March 30, 2003 03:00&lt;/li&gt;                          
* &lt;li&gt;March 30, 2003 02:10 rounds to March 30, 2003 03:00&lt;/li&gt;                             * &lt;li&gt;March 30, 2003 02:10 rounds to March 30, 2003 03:00&lt;/li&gt;                          
* &lt;li&gt;March 30, 2003 02:40 rounds to March 30, 2003 04:00&lt;/li&gt;                             * &lt;li&gt;March 30, 2003 02:40 rounds to March 30, 2003 04:00&lt;/li&gt;                          
* &lt;/ul&gt;                                                                                          * &lt;/ul&gt;                                                                                       
* &lt;/p&gt;                                                                                           * &lt;/p&gt;                                                                                        
*                                                                                                      *                                                                                                   
* @param date  the date to work with                                                                   * @param date  the date to work with                                                                
* @param field  the field from &lt;code&gt;Calendar&lt;/code&gt;                                       * @param field  the field from &lt;code&gt;Calendar&lt;/code&gt;                                    
*  or &lt;code&gt;SEMI_MONTH&lt;/code&gt;                                                              *  or &lt;code&gt;SEMI_MONTH&lt;/code&gt;                                                           
* @return the rounded date (a different object)                                                        * @return the rounded date (a different object)                                                     
* @throws IllegalArgumentException if the date is &lt;code&gt;null&lt;/code&gt;                        * @throws IllegalArgumentException if the date is &lt;code&gt;null&lt;/code&gt;                     
* @throws ArithmeticException if the year is over 280 million                                          * @throws ArithmeticException if the year is over 280 million                                       
*/                                                                                                     */                                                                                                  
public static Calendar round(Calendar date, int field) {                                               public static Calendar round(Calendar date, int field) {                                            
if (date == null) {                                                                                    if (date == null) {                                                                                 
throw new IllegalArgumentException("The date must not be null");                                       throw new IllegalArgumentException("The date must not be null");                                    
}                                                                                                      }                                                                                                   
Calendar rounded = (Calendar) date.clone();                                                            Calendar rounded = (Calendar) date.clone();                                                         
modify(rounded, field, true);                                                                        | modify(rounded, field, MODIFY_ROUND);                                                               
return rounded;                                                                                        return rounded;                                                                                     
}                                                                                                      }                                                                                                   
