/**
 * Returns a new <code>CharSequence</code> that is a subsequence of this
 * sequence starting with the <code>char</code> value at the specified
 * index. The length (in <code>char</code>s) of the returned sequence is
 * <code>length() - start</code>, so if <code>start == end</code> then an
 * empty sequence is returned. </p>
 *
 * @param start
 *            the start index, inclusive
 *
 * @return the specified subsequence
 *
 * @throws IndexOutOfBoundsException
 *             if <code>start</code> is negative or if <code>start</code> is
 *             greater than <code>length()</code>
 * @since 3.0
 */
public static CharSequence subSequence(CharSequence cs, int start) {
    return cs == null ? null : cs.subSequence(start, cs.length());
}