// xor methods                                                                                       |                                                                                                     
// ----------------------------------------------------------------------                            |                                                                                                     
/**                                                                                                    /**                                                                                                 
* &lt;p&gt;Performs an xor on a set of booleans.&lt;/p&gt;                                             * &lt;p&gt;Performs an xor on a set of booleans.&lt;/p&gt;                                          
*                                                                                                      *                                                                                                   
* &lt;pre&gt;                                                                                          * &lt;pre&gt;                                                                                       
*   BooleanUtils.xor(new boolean[] { true, true })   = false                                         | *   BooleanUtils.xor(true, true)   = false                                                          
*   BooleanUtils.xor(new boolean[] { false, false }) = false                                         | *   BooleanUtils.xor(false, false) = false                                                          
*   BooleanUtils.xor(new boolean[] { true, false })  = true                                          | *   BooleanUtils.xor(true, false)  = true                                                           
                                                                                                     | *   BooleanUtils.xor(true, true)   = false                                                          
                                                                                                     | *   BooleanUtils.xor(false, false) = false                                                          
                                                                                                     | *   BooleanUtils.xor(true, false)  = true                                                           
* &lt;/pre&gt;                                                                                         * &lt;/pre&gt;                                                                                      
*                                                                                                      *                                                                                                   
* @param array  an array of {@code boolean}s                                                           * @param array  an array of {@code boolean}s                                                        
* @return {@code true} if the xor is successful.                                                       * @return {@code true} if the xor is successful.                                                    
* @throws IllegalArgumentException if {@code array} is {@code null}                                    * @throws IllegalArgumentException if {@code array} is {@code null}                                 
* @throws IllegalArgumentException if {@code array} is empty.                                          * @throws IllegalArgumentException if {@code array} is empty.                                       
*/                                                                                                     */                                                                                                  
public static boolean xor(boolean... array) {                                                          public static boolean xor(boolean... array) {                                                       
// Validates input                                                                                     // Validates input                                                                                  
if (array == null) {                                                                                   if (array == null) {                                                                                
throw new IllegalArgumentException("The Array must not be null");                                      throw new IllegalArgumentException("The Array must not be null");                                   
}                                                                                                      }                                                                                                   
if (array.length == 0) {                                                                               if (array.length == 0) {                                                                            
throw new IllegalArgumentException("Array is empty");                                                  throw new IllegalArgumentException("Array is empty");                                               
}                                                                                                      }                                                                                                   
// Loops through array, comparing each item                                                            // Loops through array, comparing each item                                                         
int trueCount = 0;                                                                                     int trueCount = 0;                                                                                  
for (boolean element : array) {                                                                        for (boolean element : array) {                                                                     
// If item is true, and trueCount is &lt; 1, increments count                                          // If item is true, and trueCount is &lt; 1, increments count                                       
// Else, xor fails                                                                                     // Else, xor fails                                                                                  
if (element) {                                                                                         if (element) {                                                                                      
if (trueCount &lt; 1) {                                                                                if (trueCount &lt; 1) {                                                                             
trueCount++;                                                                                           trueCount++;                                                                                        
} else {                                                                                               } else {                                                                                            
return false;                                                                                          return false;                                                                                       
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
// Returns true if there was exactly 1 true item                                                       // Returns true if there was exactly 1 true item                                                    
return trueCount == 1;                                                                                 return trueCount == 1;                                                                              
}                                                                                                      }                                                                                                   
