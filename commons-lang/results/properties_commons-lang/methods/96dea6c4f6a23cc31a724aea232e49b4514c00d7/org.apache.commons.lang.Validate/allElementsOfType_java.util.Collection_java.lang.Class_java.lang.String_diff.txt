/**
 * <p>Validate an argument, throwing <code>IllegalArgumentException</code>
 * if the argument collection  is <code>null</code> or has elements that
 * are not of type <code>clazz</code> or a subclass.</p>
 *
 * <pre>
 * Validate.allElementsOfType(collection, String.class, "Collection has invalid elements");
 * </pre>
 *
 * @param collection  the collection to check, not null
 * @param clazz  the <code>Class</code> which the collection's elements are expected to be, not null
 * @param message  the exception message if the <code>Collection</code> has elements not of type <code>clazz</code>
 * @since 2.1
 */
public static void allElementsOfType(Collection<?> collection, Class<?> clazz, String message) {
    Validate.notNull(collection);
    Validate.notNull(clazz);
    for (Iterator<?> it = collection.iterator(); it.hasNext(); ) {
        if (clazz.isInstance(it.next()) == false) {
            throw new IllegalArgumentException(message);
        }
    }
}