/**                                                                                                  |                                                                                                     
* &lt;p&gt;Compares two floats for order.&lt;/p&gt;                                                  |                                                                                                     
*                                                                                                    |                                                                                                     
* &lt;p&gt;This method is more comprehensive than the standard Java greater than,                    |                                                                                                     
* less than and equals operators.&lt;/p&gt;                                                          |                                                                                                     
* &lt;ul&gt;                                                                                         |                                                                                                     
*  &lt;li&gt;It returns &lt;code&gt;-1&lt;/code&gt; if the first value is less than the second.      |                                                                                                     
*  &lt;li&gt;It returns &lt;code&gt;+1&lt;/code&gt; if the first value is greater than the second.   |                                                                                                     
*  &lt;li&gt;It returns &lt;code&gt;0&lt;/code&gt; if the values are equal.                          |                                                                                                     
* &lt;/ul&gt;                                                                                        |                                                                                                     
*                                                                                                    |                                                                                                     
* &lt;p&gt; The ordering is as follows, largest to smallest:                                         |                                                                                                     
* &lt;ul&gt;                                                                                         |                                                                                                     
* &lt;li&gt;NaN                                                                                      |                                                                                                     
* &lt;li&gt;Positive infinity                                                                        |                                                                                                     
* &lt;li&gt;Maximum float                                                                            |                                                                                                     
* &lt;li&gt;Normal positive numbers                                                                  |                                                                                                     
* &lt;li&gt;+0.0                                                                                     |                                                                                                     
* &lt;li&gt;-0.0                                                                                     |                                                                                                     
* &lt;li&gt;Normal negative numbers                                                                  |                                                                                                     
* &lt;li&gt;Minimum float (&lt;code&gt;-Float.MAX_VALUE&lt;/code&gt;)                                |                                                                                                     
* &lt;li&gt;Negative infinity                                                                        |                                                                                                     
* &lt;/ul&gt;                                                                                        |                                                                                                     
*                                                                                                    |                                                                                                     
* &lt;p&gt;Comparing &lt;code&gt;NaN&lt;/code&gt; with &lt;code&gt;NaN&lt;/code&gt; will return      |                                                                                                     
* &lt;code&gt;0&lt;/code&gt;.&lt;/p&gt;                                                              |                                                                                                     
*                                                                                                    |                                                                                                     
* @param lhs  the first &lt;code&gt;float&lt;/code&gt;                                               |                                                                                                     
* @param rhs  the second &lt;code&gt;float&lt;/code&gt;                                              |                                                                                                     
* @return &lt;code&gt;-1&lt;/code&gt; if lhs is less, &lt;code&gt;+1&lt;/code&gt; if greater,        |                                                                                                     
*  &lt;code&gt;0&lt;/code&gt; if equal to rhs                                                        |                                                                                                     
*/                                                                                                   |                                                                                                     
public static int compare(float lhs, float rhs) {                                                    |                                                                                                     
if (lhs &lt; rhs) {                                                                                  |                                                                                                     
return -1;                                                                                           |                                                                                                     
}                                                                                                    |                                                                                                     
if (lhs &gt; rhs) {                                                                                  |                                                                                                     
return +1;                                                                                           |                                                                                                     
}                                                                                                    |                                                                                                     
// Need to compare bits to handle 0.0 == -0.0 being true                                             |                                                                                                     
// compare should put -0.0 &lt; +0.0                                                                 |                                                                                                     
// Two NaNs are also == for compare purposes                                                         |                                                                                                     
// where NaN == NaN is false                                                                         |                                                                                                     
int lhsBits = Float.floatToIntBits(lhs);                                                             |                                                                                                     
int rhsBits = Float.floatToIntBits(rhs);                                                             |                                                                                                     
if (lhsBits == rhsBits) {                                                                            |                                                                                                     
return 0;                                                                                            |                                                                                                     
}                                                                                                    |                                                                                                     
// Something exotic! A comparison to NaN or 0.0 vs -0.0                                              |                                                                                                     
// Fortunately NaN's int is &gt; than everything else                                                |                                                                                                     
// Also negzeros bits &lt; poszero                                                                   |                                                                                                     
// NAN: 2143289344                                                                                   |                                                                                                     
// MAX: 2139095039                                                                                   |                                                                                                     
// NEGZERO: -2147483648                                                                              |                                                                                                     
if (lhsBits &lt; rhsBits) {                                                                          |                                                                                                     
return -1;                                                                                           |                                                                                                     
} else {                                                                                             |                                                                                                     
return +1;                                                                                           |                                                                                                     
}                                                                                                    |                                                                                                     
}                                                                                                    |                                                                                                     
