public void testCompareFloat() {
    assertTrue(Float.compare(Float.NaN, Float.NaN) == 0);
    assertTrue(Float.compare(Float.NaN, Float.POSITIVE_INFINITY) == +1);
    assertTrue(Float.compare(Float.NaN, Float.MAX_VALUE) == +1);
    assertTrue(Float.compare(Float.NaN, 1.2f) == +1);
    assertTrue(Float.compare(Float.NaN, 0.0f) == +1);
    assertTrue(Float.compare(Float.NaN, -0.0f) == +1);
    assertTrue(Float.compare(Float.NaN, -1.2f) == +1);
    assertTrue(Float.compare(Float.NaN, -Float.MAX_VALUE) == +1);
    assertTrue(Float.compare(Float.NaN, Float.NEGATIVE_INFINITY) == +1);
    assertTrue(Float.compare(Float.POSITIVE_INFINITY, Float.NaN) == -1);
    assertTrue(Float.compare(Float.POSITIVE_INFINITY, Float.POSITIVE_INFINITY) == 0);
    assertTrue(Float.compare(Float.POSITIVE_INFINITY, Float.MAX_VALUE) == +1);
    assertTrue(Float.compare(Float.POSITIVE_INFINITY, 1.2f) == +1);
    assertTrue(Float.compare(Float.POSITIVE_INFINITY, 0.0f) == +1);
    assertTrue(Float.compare(Float.POSITIVE_INFINITY, -0.0f) == +1);
    assertTrue(Float.compare(Float.POSITIVE_INFINITY, -1.2f) == +1);
    assertTrue(Float.compare(Float.POSITIVE_INFINITY, -Float.MAX_VALUE) == +1);
    assertTrue(Float.compare(Float.POSITIVE_INFINITY, Float.NEGATIVE_INFINITY) == +1);
    assertTrue(Float.compare(Float.MAX_VALUE, Float.NaN) == -1);
    assertTrue(Float.compare(Float.MAX_VALUE, Float.POSITIVE_INFINITY) == -1);
    assertTrue(Float.compare(Float.MAX_VALUE, Float.MAX_VALUE) == 0);
    assertTrue(Float.compare(Float.MAX_VALUE, 1.2f) == +1);
    assertTrue(Float.compare(Float.MAX_VALUE, 0.0f) == +1);
    assertTrue(Float.compare(Float.MAX_VALUE, -0.0f) == +1);
    assertTrue(Float.compare(Float.MAX_VALUE, -1.2f) == +1);
    assertTrue(Float.compare(Float.MAX_VALUE, -Float.MAX_VALUE) == +1);
    assertTrue(Float.compare(Float.MAX_VALUE, Float.NEGATIVE_INFINITY) == +1);
    assertTrue(Float.compare(1.2f, Float.NaN) == -1);
    assertTrue(Float.compare(1.2f, Float.POSITIVE_INFINITY) == -1);
    assertTrue(Float.compare(1.2f, Float.MAX_VALUE) == -1);
    assertTrue(Float.compare(1.2f, 1.2f) == 0);
    assertTrue(Float.compare(1.2f, 0.0f) == +1);
    assertTrue(Float.compare(1.2f, -0.0f) == +1);
    assertTrue(Float.compare(1.2f, -1.2f) == +1);
    assertTrue(Float.compare(1.2f, -Float.MAX_VALUE) == +1);
    assertTrue(Float.compare(1.2f, Float.NEGATIVE_INFINITY) == +1);
    assertTrue(Float.compare(0.0f, Float.NaN) == -1);
    assertTrue(Float.compare(0.0f, Float.POSITIVE_INFINITY) == -1);
    assertTrue(Float.compare(0.0f, Float.MAX_VALUE) == -1);
    assertTrue(Float.compare(0.0f, 1.2f) == -1);
    assertTrue(Float.compare(0.0f, 0.0f) == 0);
    assertTrue(Float.compare(0.0f, -0.0f) == +1);
    assertTrue(Float.compare(0.0f, -1.2f) == +1);
    assertTrue(Float.compare(0.0f, -Float.MAX_VALUE) == +1);
    assertTrue(Float.compare(0.0f, Float.NEGATIVE_INFINITY) == +1);
    assertTrue(Float.compare(-0.0f, Float.NaN) == -1);
    assertTrue(Float.compare(-0.0f, Float.POSITIVE_INFINITY) == -1);
    assertTrue(Float.compare(-0.0f, Float.MAX_VALUE) == -1);
    assertTrue(Float.compare(-0.0f, 1.2f) == -1);
    assertTrue(Float.compare(-0.0f, 0.0f) == -1);
    assertTrue(Float.compare(-0.0f, -0.0f) == 0);
    assertTrue(Float.compare(-0.0f, -1.2f) == +1);
    assertTrue(Float.compare(-0.0f, -Float.MAX_VALUE) == +1);
    assertTrue(Float.compare(-0.0f, Float.NEGATIVE_INFINITY) == +1);
    assertTrue(Float.compare(-1.2f, Float.NaN) == -1);
    assertTrue(Float.compare(-1.2f, Float.POSITIVE_INFINITY) == -1);
    assertTrue(Float.compare(-1.2f, Float.MAX_VALUE) == -1);
    assertTrue(Float.compare(-1.2f, 1.2f) == -1);
    assertTrue(Float.compare(-1.2f, 0.0f) == -1);
    assertTrue(Float.compare(-1.2f, -0.0f) == -1);
    assertTrue(Float.compare(-1.2f, -1.2f) == 0);
    assertTrue(Float.compare(-1.2f, -Float.MAX_VALUE) == +1);
    assertTrue(Float.compare(-1.2f, Float.NEGATIVE_INFINITY) == +1);
    assertTrue(Float.compare(-Float.MAX_VALUE, Float.NaN) == -1);
    assertTrue(Float.compare(-Float.MAX_VALUE, Float.POSITIVE_INFINITY) == -1);
    assertTrue(Float.compare(-Float.MAX_VALUE, Float.MAX_VALUE) == -1);
    assertTrue(Float.compare(-Float.MAX_VALUE, 1.2f) == -1);
    assertTrue(Float.compare(-Float.MAX_VALUE, 0.0f) == -1);
    assertTrue(Float.compare(-Float.MAX_VALUE, -0.0f) == -1);
    assertTrue(Float.compare(-Float.MAX_VALUE, -1.2f) == -1);
    assertTrue(Float.compare(-Float.MAX_VALUE, -Float.MAX_VALUE) == 0);
    assertTrue(Float.compare(-Float.MAX_VALUE, Float.NEGATIVE_INFINITY) == +1);
    assertTrue(Float.compare(Float.NEGATIVE_INFINITY, Float.NaN) == -1);
    assertTrue(Float.compare(Float.NEGATIVE_INFINITY, Float.POSITIVE_INFINITY) == -1);
    assertTrue(Float.compare(Float.NEGATIVE_INFINITY, Float.MAX_VALUE) == -1);
    assertTrue(Float.compare(Float.NEGATIVE_INFINITY, 1.2f) == -1);
    assertTrue(Float.compare(Float.NEGATIVE_INFINITY, 0.0f) == -1);
    assertTrue(Float.compare(Float.NEGATIVE_INFINITY, -0.0f) == -1);
    assertTrue(Float.compare(Float.NEGATIVE_INFINITY, -1.2f) == -1);
    assertTrue(Float.compare(Float.NEGATIVE_INFINITY, -Float.MAX_VALUE) == -1);
    assertTrue(Float.compare(Float.NEGATIVE_INFINITY, Float.NEGATIVE_INFINITY) == 0);
}