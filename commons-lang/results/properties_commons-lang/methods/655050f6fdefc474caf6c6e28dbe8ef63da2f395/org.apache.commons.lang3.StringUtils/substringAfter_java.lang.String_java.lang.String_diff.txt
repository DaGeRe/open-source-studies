/**                                                                                                    /**                                                                                                 
* &lt;p&gt;Gets the substring after the first occurrence of a separator.                               * &lt;p&gt;Gets the substring after the first occurrence of a separator.                            
* The separator is not returned.&lt;/p&gt;                                                             * The separator is not returned.&lt;/p&gt;                                                          
*                                                                                                      *                                                                                                   
* &lt;p&gt;A &lt;code&gt;null&lt;/code&gt; string input will return &lt;code&gt;null&lt;/code&gt;.     * &lt;p&gt;A &lt;code&gt;null&lt;/code&gt; string input will return &lt;code&gt;null&lt;/code&gt;.  
* An empty ("") string input will return the empty string.                                             * An empty ("") string input will return the empty string.                                          
* A &lt;code&gt;null&lt;/code&gt; separator will return the empty string if the                        * A &lt;code&gt;null&lt;/code&gt; separator will return the empty string if the                     
* input string is not &lt;code&gt;null&lt;/code&gt;.&lt;/p&gt;                                         * input string is not &lt;code&gt;null&lt;/code&gt;.&lt;/p&gt;                                      
*                                                                                                      *                                                                                                   
* &lt;p&gt;If nothing is found, the empty string is returned.&lt;/p&gt;                                * &lt;p&gt;If nothing is found, the empty string is returned.&lt;/p&gt;                             
*                                                                                                      *                                                                                                   
* &lt;pre&gt;                                                                                          * &lt;pre&gt;                                                                                       
* StringUtils.substringAfter(null, *)      = null                                                      * StringUtils.substringAfter(null, *)      = null                                                   
* StringUtils.substringAfter("", *)        = ""                                                        * StringUtils.substringAfter("", *)        = ""                                                     
* StringUtils.substringAfter(*, null)      = ""                                                        * StringUtils.substringAfter(*, null)      = ""                                                     
* StringUtils.substringAfter("abc", "a")   = "bc"                                                      * StringUtils.substringAfter("abc", "a")   = "bc"                                                   
* StringUtils.substringAfter("abcba", "b") = "cba"                                                     * StringUtils.substringAfter("abcba", "b") = "cba"                                                  
* StringUtils.substringAfter("abc", "c")   = ""                                                        * StringUtils.substringAfter("abc", "c")   = ""                                                     
* StringUtils.substringAfter("abc", "d")   = ""                                                        * StringUtils.substringAfter("abc", "d")   = ""                                                     
* StringUtils.substringAfter("abc", "")    = "abc"                                                     * StringUtils.substringAfter("abc", "")    = "abc"                                                  
* &lt;/pre&gt;                                                                                         * &lt;/pre&gt;                                                                                      
*                                                                                                      *                                                                                                   
* @param str  the String to get a substring from, may be null                                          * @param str  the String to get a substring from, may be null                                       
* @param separator  the String to search for, may be null                                              * @param separator  the String to search for, may be null                                           
* @return the substring after the first occurrence of the separator,                                   * @return the substring after the first occurrence of the separator,                                
*  &lt;code&gt;null&lt;/code&gt; if null String input                                                  *  &lt;code&gt;null&lt;/code&gt; if null String input                                               
* @since 2.0                                                                                           * @since 2.0                                                                                        
*/                                                                                                     */                                                                                                  
public static String substringAfter(String str, String separator) {                                    public static String substringAfter(String str, String separator) {                                 
if (isEmpty(str)) {                                                                                    if (isEmpty(str)) {                                                                                 
return str;                                                                                            return str;                                                                                         
}                                                                                                      }                                                                                                   
if (separator == null) {                                                                               if (separator == null) {                                                                            
return EMPTY;                                                                                          return EMPTY;                                                                                       
}                                                                                                      }                                                                                                   
int pos = str.indexOf(separator);                                                                      int pos = str.indexOf(separator);                                                                   
if (pos == -1) {                                                                                     | if (pos == INDEX_NOT_FOUND) {                                                                       
return EMPTY;                                                                                          return EMPTY;                                                                                       
}                                                                                                      }                                                                                                   
return str.substring(pos + separator.length());                                                        return str.substring(pos + separator.length());                                                     
}                                                                                                      }                                                                                                   
