/**                                                                                                    /**                                                                                                 
* &lt;p&gt;Gets the String that is nested in between two Strings.                                      * &lt;p&gt;Gets the String that is nested in between two Strings.                                   
* Only the first match is returned.&lt;/p&gt;                                                          * Only the first match is returned.&lt;/p&gt;                                                       
*                                                                                                      *                                                                                                   
* &lt;p&gt;A &lt;code&gt;null&lt;/code&gt; input String returns &lt;code&gt;null&lt;/code&gt;.         * &lt;p&gt;A &lt;code&gt;null&lt;/code&gt; input String returns &lt;code&gt;null&lt;/code&gt;.      
* A &lt;code&gt;null&lt;/code&gt; open/close returns &lt;code&gt;null&lt;/code&gt; (no match).         * A &lt;code&gt;null&lt;/code&gt; open/close returns &lt;code&gt;null&lt;/code&gt; (no match).      
* An empty ("") open and close returns an empty string.&lt;/p&gt;                                      * An empty ("") open and close returns an empty string.&lt;/p&gt;                                   
*                                                                                                      *                                                                                                   
* &lt;pre&gt;                                                                                          * &lt;pre&gt;                                                                                       
* StringUtils.substringBetween("wx[b]yz", "[", "]") = "b"                                              * StringUtils.substringBetween("wx[b]yz", "[", "]") = "b"                                           
* StringUtils.substringBetween(null, *, *)          = null                                             * StringUtils.substringBetween(null, *, *)          = null                                          
* StringUtils.substringBetween(*, null, *)          = null                                             * StringUtils.substringBetween(*, null, *)          = null                                          
* StringUtils.substringBetween(*, *, null)          = null                                             * StringUtils.substringBetween(*, *, null)          = null                                          
* StringUtils.substringBetween("", "", "")          = ""                                               * StringUtils.substringBetween("", "", "")          = ""                                            
* StringUtils.substringBetween("", "", "]")         = null                                             * StringUtils.substringBetween("", "", "]")         = null                                          
* StringUtils.substringBetween("", "[", "]")        = null                                             * StringUtils.substringBetween("", "[", "]")        = null                                          
* StringUtils.substringBetween("yabcz", "", "")     = ""                                               * StringUtils.substringBetween("yabcz", "", "")     = ""                                            
* StringUtils.substringBetween("yabcz", "y", "z")   = "abc"                                            * StringUtils.substringBetween("yabcz", "y", "z")   = "abc"                                         
* StringUtils.substringBetween("yabczyabcz", "y", "z")   = "abc"                                       * StringUtils.substringBetween("yabczyabcz", "y", "z")   = "abc"                                    
* &lt;/pre&gt;                                                                                         * &lt;/pre&gt;                                                                                      
*                                                                                                      *                                                                                                   
* @param str  the String containing the substring, may be null                                         * @param str  the String containing the substring, may be null                                      
* @param open  the String before the substring, may be null                                            * @param open  the String before the substring, may be null                                         
* @param close  the String after the substring, may be null                                            * @param close  the String after the substring, may be null                                         
* @return the substring, &lt;code&gt;null&lt;/code&gt; if no match                                     * @return the substring, &lt;code&gt;null&lt;/code&gt; if no match                                  
* @since 2.0                                                                                           * @since 2.0                                                                                        
*/                                                                                                     */                                                                                                  
public static String substringBetween(String str, String open, String close) {                         public static String substringBetween(String str, String open, String close) {                      
if (str == null || open == null || close == null) {                                                    if (str == null || open == null || close == null) {                                                 
return null;                                                                                           return null;                                                                                        
}                                                                                                      }                                                                                                   
int start = str.indexOf(open);                                                                         int start = str.indexOf(open);                                                                      
if (start != -1) {                                                                                   | if (start != INDEX_NOT_FOUND) {                                                                     
int end = str.indexOf(close, start + open.length());                                                   int end = str.indexOf(close, start + open.length());                                                
if (end != -1) {                                                                                     | if (end != INDEX_NOT_FOUND) {                                                                       
return str.substring(start + open.length(), end);                                                      return str.substring(start + open.length(), end);                                                   
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
return null;                                                                                           return null;                                                                                        
}                                                                                                      }                                                                                                   
