/**                                                                                                    /**                                                                                                 
* &lt;p&gt;Case in-sensitive find of the first index within a String                                   * &lt;p&gt;Case in-sensitive find of the first index within a String                                
* from the specified position.&lt;/p&gt;                                                               * from the specified position.&lt;/p&gt;                                                            
*                                                                                                      *                                                                                                   
* &lt;p&gt;A &lt;code&gt;null&lt;/code&gt; String will return &lt;code&gt;-1&lt;/code&gt;.             * &lt;p&gt;A &lt;code&gt;null&lt;/code&gt; String will return &lt;code&gt;-1&lt;/code&gt;.          
* A negative start position is treated as zero.                                                        * A negative start position is treated as zero.                                                     
* An empty ("") search String always matches.                                                          * An empty ("") search String always matches.                                                       
* A start position greater than the string length only matches                                         * A start position greater than the string length only matches                                      
* an empty search String.&lt;/p&gt;                                                                    * an empty search String.&lt;/p&gt;                                                                 
*                                                                                                      *                                                                                                   
* &lt;pre&gt;                                                                                          * &lt;pre&gt;                                                                                       
* StringUtils.indexOfIgnoreCase(null, *, *)          = -1                                              * StringUtils.indexOfIgnoreCase(null, *, *)          = -1                                           
* StringUtils.indexOfIgnoreCase(*, null, *)          = -1                                              * StringUtils.indexOfIgnoreCase(*, null, *)          = -1                                           
* StringUtils.indexOfIgnoreCase("", "", 0)           = 0                                               * StringUtils.indexOfIgnoreCase("", "", 0)           = 0                                            
* StringUtils.indexOfIgnoreCase("aabaabaa", "A", 0)  = 0                                               * StringUtils.indexOfIgnoreCase("aabaabaa", "A", 0)  = 0                                            
* StringUtils.indexOfIgnoreCase("aabaabaa", "B", 0)  = 2                                               * StringUtils.indexOfIgnoreCase("aabaabaa", "B", 0)  = 2                                            
* StringUtils.indexOfIgnoreCase("aabaabaa", "AB", 0) = 1                                               * StringUtils.indexOfIgnoreCase("aabaabaa", "AB", 0) = 1                                            
* StringUtils.indexOfIgnoreCase("aabaabaa", "B", 3)  = 5                                               * StringUtils.indexOfIgnoreCase("aabaabaa", "B", 3)  = 5                                            
* StringUtils.indexOfIgnoreCase("aabaabaa", "B", 9)  = -1                                              * StringUtils.indexOfIgnoreCase("aabaabaa", "B", 9)  = -1                                           
* StringUtils.indexOfIgnoreCase("aabaabaa", "B", -1) = 2                                               * StringUtils.indexOfIgnoreCase("aabaabaa", "B", -1) = 2                                            
* StringUtils.indexOfIgnoreCase("aabaabaa", "", 2)   = 2                                               * StringUtils.indexOfIgnoreCase("aabaabaa", "", 2)   = 2                                            
* StringUtils.indexOfIgnoreCase("abc", "", 9)        = 3                                               * StringUtils.indexOfIgnoreCase("abc", "", 9)        = 3                                            
* &lt;/pre&gt;                                                                                         * &lt;/pre&gt;                                                                                      
*                                                                                                      *                                                                                                   
* @param str  the String to check, may be null                                                         * @param str  the String to check, may be null                                                      
* @param searchStr  the String to find, may be null                                                    * @param searchStr  the String to find, may be null                                                 
* @param startPos  the start position, negative treated as zero                                        * @param startPos  the start position, negative treated as zero                                     
* @return the first index of the search String,                                                        * @return the first index of the search String,                                                     
*  -1 if no match or &lt;code&gt;null&lt;/code&gt; string input                                        *  -1 if no match or &lt;code&gt;null&lt;/code&gt; string input                                     
* @since 2.5                                                                                           * @since 2.5                                                                                        
*/                                                                                                     */                                                                                                  
public static int indexOfIgnoreCase(String str, String searchStr, int startPos) {                      public static int indexOfIgnoreCase(String str, String searchStr, int startPos) {                   
if (str == null || searchStr == null) {                                                                if (str == null || searchStr == null) {                                                             
return -1;                                                                                           | return INDEX_NOT_FOUND;                                                                             
}                                                                                                      }                                                                                                   
if (startPos &lt; 0) {                                                                                 if (startPos &lt; 0) {                                                                              
startPos = 0;                                                                                          startPos = 0;                                                                                       
}                                                                                                      }                                                                                                   
int endLimit = (str.length() - searchStr.length()) + 1;                                                int endLimit = (str.length() - searchStr.length()) + 1;                                             
if (startPos &gt; endLimit) {                                                                          if (startPos &gt; endLimit) {                                                                       
return -1;                                                                                           | return INDEX_NOT_FOUND;                                                                             
}                                                                                                      }                                                                                                   
if (searchStr.length() == 0) {                                                                         if (searchStr.length() == 0) {                                                                      
return startPos;                                                                                       return startPos;                                                                                    
}                                                                                                      }                                                                                                   
for (int i = startPos; i &lt; endLimit; i++) {                                                         for (int i = startPos; i &lt; endLimit; i++) {                                                      
if (str.regionMatches(true, i, searchStr, 0, searchStr.length())) {                                    if (str.regionMatches(true, i, searchStr, 0, searchStr.length())) {                                 
return i;                                                                                              return i;                                                                                           
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
return -1;                                                                                           | return INDEX_NOT_FOUND;                                                                             
}                                                                                                      }                                                                                                   
