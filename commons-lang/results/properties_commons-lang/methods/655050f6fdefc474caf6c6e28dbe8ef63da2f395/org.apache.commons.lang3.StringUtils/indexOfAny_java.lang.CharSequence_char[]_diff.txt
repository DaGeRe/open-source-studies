// IndexOfAny chars                                                                                    // IndexOfAny chars                                                                                 
// -----------------------------------------------------------------------                             // -----------------------------------------------------------------------                          
/**                                                                                                    /**                                                                                                 
* &lt;p&gt;Search a CharSequence to find the first index of any                                        * &lt;p&gt;Search a CharSequence to find the first index of any                                     
* character in the given set of characters.&lt;/p&gt;                                                  * character in the given set of characters.&lt;/p&gt;                                               
*                                                                                                      *                                                                                                   
* &lt;p&gt;A &lt;code&gt;null&lt;/code&gt; String will return &lt;code&gt;-1&lt;/code&gt;.             * &lt;p&gt;A &lt;code&gt;null&lt;/code&gt; String will return &lt;code&gt;-1&lt;/code&gt;.          
* A &lt;code&gt;null&lt;/code&gt; or zero length search array will return &lt;code&gt;-1&lt;/code&gt   * A &lt;code&gt;null&lt;/code&gt; or zero length search array will return &lt;code&gt;-1&lt;/code&gt
*                                                                                                      *                                                                                                   
* &lt;pre&gt;                                                                                          * &lt;pre&gt;                                                                                       
* StringUtils.indexOfAny(null, *)                = -1                                                  * StringUtils.indexOfAny(null, *)                = -1                                               
* StringUtils.indexOfAny("", *)                  = -1                                                  * StringUtils.indexOfAny("", *)                  = -1                                               
* StringUtils.indexOfAny(*, null)                = -1                                                  * StringUtils.indexOfAny(*, null)                = -1                                               
* StringUtils.indexOfAny(*, [])                  = -1                                                  * StringUtils.indexOfAny(*, [])                  = -1                                               
* StringUtils.indexOfAny("zzabyycdxx",['z','a']) = 0                                                   * StringUtils.indexOfAny("zzabyycdxx",['z','a']) = 0                                                
* StringUtils.indexOfAny("zzabyycdxx",['b','y']) = 3                                                   * StringUtils.indexOfAny("zzabyycdxx",['b','y']) = 3                                                
* StringUtils.indexOfAny("aba", ['z'])           = -1                                                  * StringUtils.indexOfAny("aba", ['z'])           = -1                                               
* &lt;/pre&gt;                                                                                         * &lt;/pre&gt;                                                                                      
*                                                                                                      *                                                                                                   
* @param cs  the CharSequence to check, may be null                                                    * @param cs  the CharSequence to check, may be null                                                 
* @param searchChars  the chars to search for, may be null                                             * @param searchChars  the chars to search for, may be null                                          
* @return the index of any of the chars, -1 if no match or null input                                  * @return the index of any of the chars, -1 if no match or null input                               
* @since 2.0                                                                                           * @since 2.0                                                                                        
*/                                                                                                     */                                                                                                  
public static int indexOfAny(CharSequence cs, char[] searchChars) {                                    public static int indexOfAny(CharSequence cs, char[] searchChars) {                                 
if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {                                                  if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {                                               
return -1;                                                                                           | return INDEX_NOT_FOUND;                                                                             
}                                                                                                      }                                                                                                   
for (int i = 0; i &lt; cs.length(); i++) {                                                             for (int i = 0; i &lt; cs.length(); i++) {                                                          
char ch = cs.charAt(i);                                                                                char ch = cs.charAt(i);                                                                             
for (int j = 0; j &lt; searchChars.length; j++) {                                                      for (int j = 0; j &lt; searchChars.length; j++) {                                                   
if (searchChars[j] == ch) {                                                                            if (searchChars[j] == ch) {                                                                         
return i;                                                                                              return i;                                                                                           
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
return -1;                                                                                           | return INDEX_NOT_FOUND;                                                                             
}                                                                                                      }                                                                                                   
