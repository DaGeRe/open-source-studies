// SubStringAfter/SubStringBefore                                                                      // SubStringAfter/SubStringBefore                                                                   
// -----------------------------------------------------------------------                             // -----------------------------------------------------------------------                          
/**                                                                                                    /**                                                                                                 
* &lt;p&gt;Gets the substring before the first occurrence of a separator.                              * &lt;p&gt;Gets the substring before the first occurrence of a separator.                           
* The separator is not returned.&lt;/p&gt;                                                             * The separator is not returned.&lt;/p&gt;                                                          
*                                                                                                      *                                                                                                   
* &lt;p&gt;A &lt;code&gt;null&lt;/code&gt; string input will return &lt;code&gt;null&lt;/code&gt;.     * &lt;p&gt;A &lt;code&gt;null&lt;/code&gt; string input will return &lt;code&gt;null&lt;/code&gt;.  
* An empty ("") string input will return the empty string.                                             * An empty ("") string input will return the empty string.                                          
* A &lt;code&gt;null&lt;/code&gt; separator will return the input string.&lt;/p&gt;                    * A &lt;code&gt;null&lt;/code&gt; separator will return the input string.&lt;/p&gt;                 
*                                                                                                      *                                                                                                   
* &lt;p&gt;If nothing is found, the string input is returned.&lt;/p&gt;                                * &lt;p&gt;If nothing is found, the string input is returned.&lt;/p&gt;                             
*                                                                                                      *                                                                                                   
* &lt;pre&gt;                                                                                          * &lt;pre&gt;                                                                                       
* StringUtils.substringBefore(null, *)      = null                                                     * StringUtils.substringBefore(null, *)      = null                                                  
* StringUtils.substringBefore("", *)        = ""                                                       * StringUtils.substringBefore("", *)        = ""                                                    
* StringUtils.substringBefore("abc", "a")   = ""                                                       * StringUtils.substringBefore("abc", "a")   = ""                                                    
* StringUtils.substringBefore("abcba", "b") = "a"                                                      * StringUtils.substringBefore("abcba", "b") = "a"                                                   
* StringUtils.substringBefore("abc", "c")   = "ab"                                                     * StringUtils.substringBefore("abc", "c")   = "ab"                                                  
* StringUtils.substringBefore("abc", "d")   = "abc"                                                    * StringUtils.substringBefore("abc", "d")   = "abc"                                                 
* StringUtils.substringBefore("abc", "")    = ""                                                       * StringUtils.substringBefore("abc", "")    = ""                                                    
* StringUtils.substringBefore("abc", null)  = "abc"                                                    * StringUtils.substringBefore("abc", null)  = "abc"                                                 
* &lt;/pre&gt;                                                                                         * &lt;/pre&gt;                                                                                      
*                                                                                                      *                                                                                                   
* @param str  the String to get a substring from, may be null                                          * @param str  the String to get a substring from, may be null                                       
* @param separator  the String to search for, may be null                                              * @param separator  the String to search for, may be null                                           
* @return the substring before the first occurrence of the separator,                                  * @return the substring before the first occurrence of the separator,                               
*  &lt;code&gt;null&lt;/code&gt; if null String input                                                  *  &lt;code&gt;null&lt;/code&gt; if null String input                                               
* @since 2.0                                                                                           * @since 2.0                                                                                        
*/                                                                                                     */                                                                                                  
public static String substringBefore(String str, String separator) {                                   public static String substringBefore(String str, String separator) {                                
if (isEmpty(str) || separator == null) {                                                               if (isEmpty(str) || separator == null) {                                                            
return str;                                                                                            return str;                                                                                         
}                                                                                                      }                                                                                                   
if (separator.length() == 0) {                                                                         if (separator.length() == 0) {                                                                      
return EMPTY;                                                                                          return EMPTY;                                                                                       
}                                                                                                      }                                                                                                   
int pos = str.indexOf(separator);                                                                      int pos = str.indexOf(separator);                                                                   
if (pos == -1) {                                                                                     | if (pos == INDEX_NOT_FOUND) {                                                                       
return str;                                                                                            return str;                                                                                         
}                                                                                                      }                                                                                                   
return str.substring(0, pos);                                                                          return str.substring(0, pos);                                                                       
}                                                                                                      }                                                                                                   
