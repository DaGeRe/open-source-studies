/**                                                                                                    /**                                                                                                 
* &lt;p&gt;Finds the first index within a String, handling &lt;code&gt;null&lt;/code&gt;.              * &lt;p&gt;Finds the first index within a String, handling &lt;code&gt;null&lt;/code&gt;.           
* This method uses {@link String#lastIndexOf(String, int)}.&lt;/p&gt;                                  * This method uses {@link String#lastIndexOf(String, int)}.&lt;/p&gt;                               
*                                                                                                      *                                                                                                   
* &lt;p&gt;A &lt;code&gt;null&lt;/code&gt; String will return &lt;code&gt;-1&lt;/code&gt;.             * &lt;p&gt;A &lt;code&gt;null&lt;/code&gt; String will return &lt;code&gt;-1&lt;/code&gt;.          
* A negative start position returns &lt;code&gt;-1&lt;/code&gt;.                                       * A negative start position returns &lt;code&gt;-1&lt;/code&gt;.                                    
* An empty ("") search String always matches unless the start position is negative.                    * An empty ("") search String always matches unless the start position is negative.                 
* A start position greater than the string length searches the whole string.&lt;/p&gt;                 * A start position greater than the string length searches the whole string.&lt;/p&gt;              
*                                                                                                      *                                                                                                   
* &lt;pre&gt;                                                                                          * &lt;pre&gt;                                                                                       
* StringUtils.lastIndexOf(null, *, *)          = -1                                                    * StringUtils.lastIndexOf(null, *, *)          = -1                                                 
* StringUtils.lastIndexOf(*, null, *)          = -1                                                    * StringUtils.lastIndexOf(*, null, *)          = -1                                                 
* StringUtils.lastIndexOf("aabaabaa", "a", 8)  = 7                                                     * StringUtils.lastIndexOf("aabaabaa", "a", 8)  = 7                                                  
* StringUtils.lastIndexOf("aabaabaa", "b", 8)  = 5                                                     * StringUtils.lastIndexOf("aabaabaa", "b", 8)  = 5                                                  
* StringUtils.lastIndexOf("aabaabaa", "ab", 8) = 4                                                     * StringUtils.lastIndexOf("aabaabaa", "ab", 8) = 4                                                  
* StringUtils.lastIndexOf("aabaabaa", "b", 9)  = 5                                                     * StringUtils.lastIndexOf("aabaabaa", "b", 9)  = 5                                                  
* StringUtils.lastIndexOf("aabaabaa", "b", -1) = -1                                                    * StringUtils.lastIndexOf("aabaabaa", "b", -1) = -1                                                 
* StringUtils.lastIndexOf("aabaabaa", "a", 0)  = 0                                                     * StringUtils.lastIndexOf("aabaabaa", "a", 0)  = 0                                                  
* StringUtils.lastIndexOf("aabaabaa", "b", 0)  = -1                                                    * StringUtils.lastIndexOf("aabaabaa", "b", 0)  = -1                                                 
* &lt;/pre&gt;                                                                                         * &lt;/pre&gt;                                                                                      
*                                                                                                      *                                                                                                   
* @param str  the String to check, may be null                                                         * @param str  the String to check, may be null                                                      
* @param searchStr  the String to find, may be null                                                    * @param searchStr  the String to find, may be null                                                 
* @param startPos  the start position, negative treated as zero                                        * @param startPos  the start position, negative treated as zero                                     
* @return the first index of the search String,                                                        * @return the first index of the search String,                                                     
*  -1 if no match or &lt;code&gt;null&lt;/code&gt; string input                                        *  -1 if no match or &lt;code&gt;null&lt;/code&gt; string input                                     
* @since 2.0                                                                                           * @since 2.0                                                                                        
*/                                                                                                     */                                                                                                  
public static int lastIndexOf(String str, String searchStr, int startPos) {                            public static int lastIndexOf(String str, String searchStr, int startPos) {                         
if (str == null || searchStr == null) {                                                                if (str == null || searchStr == null) {                                                             
return -1;                                                                                           | return INDEX_NOT_FOUND;                                                                             
}                                                                                                      }                                                                                                   
return str.lastIndexOf(searchStr, startPos);                                                           return str.lastIndexOf(searchStr, startPos);                                                        
}                                                                                                      }                                                                                                   
