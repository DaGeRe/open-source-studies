                                                                                                     | @Test                                                                                               
public void test_toBooleanObject_String_String_String_String() {                                       public void test_toBooleanObject_String_String_String_String() {                                    
assertSame(Boolean.TRUE, BooleanUtils.toBooleanObject((String) null, null, "N", "U"));                 assertSame(Boolean.TRUE, BooleanUtils.toBooleanObject((String) null, null, "N", "U"));              
assertSame(Boolean.FALSE, BooleanUtils.toBooleanObject((String) null, "Y", null, "U"));                assertSame(Boolean.FALSE, BooleanUtils.toBooleanObject((String) null, "Y", null, "U"));             
assertSame(null, BooleanUtils.toBooleanObject((String) null, "Y", "N", null));                         assertSame(null, BooleanUtils.toBooleanObject((String) null, "Y", "N", null));                      
try {                                                                                                  try {                                                                                               
BooleanUtils.toBooleanObject((String) null, "Y", "N", "U");                                            BooleanUtils.toBooleanObject((String) null, "Y", "N", "U");                                         
fail();                                                                                                fail();                                                                                             
} catch (IllegalArgumentException ex) {                                                                } catch (IllegalArgumentException ex) {                                                             
}                                                                                                      }                                                                                                   
assertEquals(Boolean.TRUE, BooleanUtils.toBooleanObject("Y", "Y", "N", "U"));                          assertEquals(Boolean.TRUE, BooleanUtils.toBooleanObject("Y", "Y", "N", "U"));                       
assertEquals(Boolean.FALSE, BooleanUtils.toBooleanObject("N", "Y", "N", "U"));                         assertEquals(Boolean.FALSE, BooleanUtils.toBooleanObject("N", "Y", "N", "U"));                      
assertEquals(null, BooleanUtils.toBooleanObject("U", "Y", "N", "U"));                                  assertEquals(null, BooleanUtils.toBooleanObject("U", "Y", "N", "U"));                               
try {                                                                                                  try {                                                                                               
BooleanUtils.toBooleanObject(null, "Y", "N", "U");                                                     BooleanUtils.toBooleanObject(null, "Y", "N", "U");                                                  
fail();                                                                                                fail();                                                                                             
} catch (IllegalArgumentException ex) {                                                                } catch (IllegalArgumentException ex) {                                                             
}                                                                                                      }                                                                                                   
try {                                                                                                  try {                                                                                               
BooleanUtils.toBooleanObject("X", "Y", "N", "U");                                                      BooleanUtils.toBooleanObject("X", "Y", "N", "U");                                                   
fail();                                                                                                fail();                                                                                             
} catch (IllegalArgumentException ex) {                                                                } catch (IllegalArgumentException ex) {                                                             
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
