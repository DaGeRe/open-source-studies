/**                                                                                                    /**                                                                                                 
* &lt;p&gt;Replaces multiple characters in a String in one go.                                         * &lt;p&gt;Replaces multiple characters in a String in one go.                                      
* This method can also be used to delete characters.&lt;/p&gt;                                         * This method can also be used to delete characters.&lt;/p&gt;                                      
*                                                                                                      *                                                                                                   
* &lt;p&gt;For example:&lt;br /&gt;                                                                    * &lt;p&gt;For example:&lt;br /&gt;                                                                 
* &lt;code&gt;replaceChars(&quot;hello&quot;, &quot;ho&quot;, &quot;jy&quot;) = jelly&lt;/code&gt;.&   * &lt;code&gt;replaceChars(&quot;hello&quot;, &quot;ho&quot;, &quot;jy&quot;) = jelly&lt;/code&gt;.&
*                                                                                                      *                                                                                                   
* &lt;p&gt;A &lt;code&gt;null&lt;/code&gt; string input returns &lt;code&gt;null&lt;/code&gt;.         * &lt;p&gt;A &lt;code&gt;null&lt;/code&gt; string input returns &lt;code&gt;null&lt;/code&gt;.      
* An empty ("") string input returns an empty string.                                                  * An empty ("") string input returns an empty string.                                               
* A null or empty set of search characters returns the input string.&lt;/p&gt;                         * A null or empty set of search characters returns the input string.&lt;/p&gt;                      
*                                                                                                      *                                                                                                   
* &lt;p&gt;The length of the search characters should normally equal the length                        * &lt;p&gt;The length of the search characters should normally equal the length                     
* of the replace characters.                                                                           * of the replace characters.                                                                        
* If the search characters is longer, then the extra search characters                                 * If the search characters is longer, then the extra search characters                              
* are deleted.                                                                                         * are deleted.                                                                                      
* If the search characters is shorter, then the extra replace characters                               * If the search characters is shorter, then the extra replace characters                            
* are ignored.&lt;/p&gt;                                                                               * are ignored.&lt;/p&gt;                                                                            
*                                                                                                      *                                                                                                   
* &lt;pre&gt;                                                                                          * &lt;pre&gt;                                                                                       
* StringUtils.replaceChars(null, *, *)           = null                                                * StringUtils.replaceChars(null, *, *)           = null                                             
* StringUtils.replaceChars("", *, *)             = ""                                                  * StringUtils.replaceChars("", *, *)             = ""                                               
* StringUtils.replaceChars("abc", null, *)       = "abc"                                               * StringUtils.replaceChars("abc", null, *)       = "abc"                                            
* StringUtils.replaceChars("abc", "", *)         = "abc"                                               * StringUtils.replaceChars("abc", "", *)         = "abc"                                            
* StringUtils.replaceChars("abc", "b", null)     = "ac"                                                * StringUtils.replaceChars("abc", "b", null)     = "ac"                                             
* StringUtils.replaceChars("abc", "b", "")       = "ac"                                                * StringUtils.replaceChars("abc", "b", "")       = "ac"                                             
* StringUtils.replaceChars("abcba", "bc", "yz")  = "ayzya"                                             * StringUtils.replaceChars("abcba", "bc", "yz")  = "ayzya"                                          
* StringUtils.replaceChars("abcba", "bc", "y")   = "ayya"                                              * StringUtils.replaceChars("abcba", "bc", "y")   = "ayya"                                           
* StringUtils.replaceChars("abcba", "bc", "yzx") = "ayzya"                                             * StringUtils.replaceChars("abcba", "bc", "yzx") = "ayzya"                                          
* &lt;/pre&gt;                                                                                         * &lt;/pre&gt;                                                                                      
*                                                                                                      *                                                                                                   
* @param str  String to replace characters in, may be null                                             * @param str  String to replace characters in, may be null                                          
* @param searchChars  a set of characters to search for, may be null                                   * @param searchChars  a set of characters to search for, may be null                                
* @param replaceChars  a set of characters to replace, may be null                                     * @param replaceChars  a set of characters to replace, may be null                                  
* @return modified String, &lt;code&gt;null&lt;/code&gt; if null string input                          * @return modified String, &lt;code&gt;null&lt;/code&gt; if null string input                       
* @since 2.0                                                                                           * @since 2.0                                                                                        
*/                                                                                                     */                                                                                                  
public static String replaceChars(String str, String searchChars, String replaceChars) {               public static String replaceChars(String str, String searchChars, String replaceChars) {            
if (isEmpty(str) || isEmpty(searchChars)) {                                                            if (isEmpty(str) || isEmpty(searchChars)) {                                                         
return str;                                                                                            return str;                                                                                         
}                                                                                                      }                                                                                                   
if (replaceChars == null) {                                                                            if (replaceChars == null) {                                                                         
replaceChars = EMPTY;                                                                                  replaceChars = EMPTY;                                                                               
}                                                                                                      }                                                                                                   
boolean modified = false;                                                                              boolean modified = false;                                                                           
int replaceCharsLength = replaceChars.length();                                                        int replaceCharsLength = replaceChars.length();                                                     
int strLength = str.length();                                                                          int strLength = str.length();                                                                       
StringBuffer buf = new StringBuffer(strLength);                                                      | StringBuilder buf = new StringBuilder(strLength);                                                   
for (int i = 0; i &lt; strLength; i++) {                                                               for (int i = 0; i &lt; strLength; i++) {                                                            
char ch = str.charAt(i);                                                                               char ch = str.charAt(i);                                                                            
int index = searchChars.indexOf(ch);                                                                   int index = searchChars.indexOf(ch);                                                                
if (index &gt;= 0) {                                                                                   if (index &gt;= 0) {                                                                                
modified = true;                                                                                       modified = true;                                                                                    
if (index &lt; replaceCharsLength) {                                                                   if (index &lt; replaceCharsLength) {                                                                
buf.append(replaceChars.charAt(index));                                                                buf.append(replaceChars.charAt(index));                                                             
}                                                                                                      }                                                                                                   
} else {                                                                                               } else {                                                                                            
buf.append(ch);                                                                                        buf.append(ch);                                                                                     
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
if (modified) {                                                                                        if (modified) {                                                                                     
return buf.toString();                                                                                 return buf.toString();                                                                              
}                                                                                                      }                                                                                                   
return str;                                                                                            return str;                                                                                         
}                                                                                                      }                                                                                                   
