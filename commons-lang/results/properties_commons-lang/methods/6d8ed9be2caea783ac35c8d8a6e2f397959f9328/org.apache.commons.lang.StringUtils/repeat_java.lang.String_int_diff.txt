// Conversion                                                                                          // Conversion                                                                                       
// -----------------------------------------------------------------------                             // -----------------------------------------------------------------------                          
// Padding                                                                                             // Padding                                                                                          
// -----------------------------------------------------------------------                             // -----------------------------------------------------------------------                          
/**                                                                                                    /**                                                                                                 
* &lt;p&gt;Repeat a String &lt;code&gt;repeat&lt;/code&gt; times to form a                             * &lt;p&gt;Repeat a String &lt;code&gt;repeat&lt;/code&gt; times to form a                          
* new String.&lt;/p&gt;                                                                                * new String.&lt;/p&gt;                                                                             
*                                                                                                      *                                                                                                   
* &lt;pre&gt;                                                                                          * &lt;pre&gt;                                                                                       
* StringUtils.repeat(null, 2) = null                                                                   * StringUtils.repeat(null, 2) = null                                                                
* StringUtils.repeat("", 0)   = ""                                                                     * StringUtils.repeat("", 0)   = ""                                                                  
* StringUtils.repeat("", 2)   = ""                                                                     * StringUtils.repeat("", 2)   = ""                                                                  
* StringUtils.repeat("a", 3)  = "aaa"                                                                  * StringUtils.repeat("a", 3)  = "aaa"                                                               
* StringUtils.repeat("ab", 2) = "abab"                                                                 * StringUtils.repeat("ab", 2) = "abab"                                                              
* StringUtils.repeat("a", -2) = ""                                                                     * StringUtils.repeat("a", -2) = ""                                                                  
* &lt;/pre&gt;                                                                                         * &lt;/pre&gt;                                                                                      
*                                                                                                      *                                                                                                   
* @param str  the String to repeat, may be null                                                        * @param str  the String to repeat, may be null                                                     
* @param repeat  number of times to repeat str, negative treated as zero                               * @param repeat  number of times to repeat str, negative treated as zero                            
* @return a new String consisting of the original String repeated,                                     * @return a new String consisting of the original String repeated,                                  
*  &lt;code&gt;null&lt;/code&gt; if null String input                                                  *  &lt;code&gt;null&lt;/code&gt; if null String input                                               
*/                                                                                                     */                                                                                                  
public static String repeat(String str, int repeat) {                                                  public static String repeat(String str, int repeat) {                                               
// Performance tuned for 2.0 (JDK1.4)                                                                  // Performance tuned for 2.0 (JDK1.4)                                                               
if (str == null) {                                                                                     if (str == null) {                                                                                  
return null;                                                                                           return null;                                                                                        
}                                                                                                      }                                                                                                   
if (repeat &lt;= 0) {                                                                                  if (repeat &lt;= 0) {                                                                               
return EMPTY;                                                                                          return EMPTY;                                                                                       
}                                                                                                      }                                                                                                   
int inputLength = str.length();                                                                        int inputLength = str.length();                                                                     
if (repeat == 1 || inputLength == 0) {                                                                 if (repeat == 1 || inputLength == 0) {                                                              
return str;                                                                                            return str;                                                                                         
}                                                                                                      }                                                                                                   
if (inputLength == 1 && repeat &lt;= PAD_LIMIT) {                                                      if (inputLength == 1 && repeat &lt;= PAD_LIMIT) {                                                   
return padding(repeat, str.charAt(0));                                                                 return padding(repeat, str.charAt(0));                                                              
}                                                                                                      }                                                                                                   
int outputLength = inputLength * repeat;                                                               int outputLength = inputLength * repeat;                                                            
switch(inputLength) {                                                                                  switch(inputLength) {                                                                               
case 1:                                                                                                case 1:                                                                                             
char ch = str.charAt(0);                                                                               char ch = str.charAt(0);                                                                            
char[] output1 = new char[outputLength];                                                               char[] output1 = new char[outputLength];                                                            
for (int i = repeat - 1; i &gt;= 0; i--) {                                                             for (int i = repeat - 1; i &gt;= 0; i--) {                                                          
output1[i] = ch;                                                                                       output1[i] = ch;                                                                                    
}                                                                                                      }                                                                                                   
return new String(output1);                                                                            return new String(output1);                                                                         
case 2:                                                                                                case 2:                                                                                             
char ch0 = str.charAt(0);                                                                              char ch0 = str.charAt(0);                                                                           
char ch1 = str.charAt(1);                                                                              char ch1 = str.charAt(1);                                                                           
char[] output2 = new char[outputLength];                                                               char[] output2 = new char[outputLength];                                                            
for (int i = repeat * 2 - 2; i &gt;= 0; i--, i--) {                                                    for (int i = repeat * 2 - 2; i &gt;= 0; i--, i--) {                                                 
output2[i] = ch0;                                                                                      output2[i] = ch0;                                                                                   
output2[i + 1] = ch1;                                                                                  output2[i + 1] = ch1;                                                                               
}                                                                                                      }                                                                                                   
return new String(output2);                                                                            return new String(output2);                                                                         
default:                                                                                               default:                                                                                            
StringBuffer buf = new StringBuffer(outputLength);                                                   | StringBuilder buf = new StringBuilder(outputLength);                                                
for (int i = 0; i &lt; repeat; i++) {                                                                  for (int i = 0; i &lt; repeat; i++) {                                                               
buf.append(str);                                                                                       buf.append(str);                                                                                    
}                                                                                                      }                                                                                                   
return buf.toString();                                                                                 return buf.toString();                                                                              
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
