// -----------------------------------------------------------------------                             // -----------------------------------------------------------------------                          
/**                                                                                                    /**                                                                                                 
* Abbreviates a string nicely.                                                                         * Abbreviates a string nicely.                                                                      
*                                                                                                      *                                                                                                   
* This method searches for the first space after the lower limit and abbreviates                       * This method searches for the first space after the lower limit and abbreviates                    
* the String there. It will also append any String passed as a parameter                               * the String there. It will also append any String passed as a parameter                            
* to the end of the String. The upper limit can be specified to forcibly                               * to the end of the String. The upper limit can be specified to forcibly                            
* abbreviate a String.                                                                                 * abbreviate a String.                                                                              
*                                                                                                      *                                                                                                   
* @param str         the string to be abbreviated. If null is passed, null is returned.                * @param str         the string to be abbreviated. If null is passed, null is returned.             
*                    If the empty String is passed, the empty string is returned.                      *                    If the empty String is passed, the empty string is returned.                   
* @param lower       the lower limit.                                                                  * @param lower       the lower limit.                                                               
* @param upper       the upper limit; specify -1 if no limit is desired.                               * @param upper       the upper limit; specify -1 if no limit is desired.                            
*                    If the upper limit is lower than the lower limit, it will be                      *                    If the upper limit is lower than the lower limit, it will be                   
*                    adjusted to be the same as the lower limit.                                       *                    adjusted to be the same as the lower limit.                                    
* @param appendToEnd String to be appended to the end of the abbreviated string.                       * @param appendToEnd String to be appended to the end of the abbreviated string.                    
*                    This is appended ONLY if the string was indeed abbreviated.                       *                    This is appended ONLY if the string was indeed abbreviated.                    
*                    The append does not count towards the lower or upper limits.                      *                    The append does not count towards the lower or upper limits.                   
* @return the abbreviated String.                                                                      * @return the abbreviated String.                                                                   
* @since 2.4                                                                                           * @since 2.4                                                                                        
*/                                                                                                     */                                                                                                  
public static String abbreviate(String str, int lower, int upper, String appendToEnd) {                public static String abbreviate(String str, int lower, int upper, String appendToEnd) {             
// initial parameter checks                                                                            // initial parameter checks                                                                         
if (str == null) {                                                                                     if (str == null) {                                                                                  
return null;                                                                                           return null;                                                                                        
}                                                                                                      }                                                                                                   
if (str.length() == 0) {                                                                               if (str.length() == 0) {                                                                            
return StringUtils.EMPTY;                                                                              return StringUtils.EMPTY;                                                                           
}                                                                                                      }                                                                                                   
// if the lower value is greater than the length of the string,                                        // if the lower value is greater than the length of the string,                                     
// set to the length of the string                                                                     // set to the length of the string                                                                  
if (lower &gt; str.length()) {                                                                         if (lower &gt; str.length()) {                                                                      
lower = str.length();                                                                                  lower = str.length();                                                                               
}                                                                                                      }                                                                                                   
// if the upper value is -1 (i.e. no limit) or is greater                                              // if the upper value is -1 (i.e. no limit) or is greater                                           
// than the length of the string, set to the length of the string                                      // than the length of the string, set to the length of the string                                   
if (upper == -1 || upper &gt; str.length()) {                                                          if (upper == -1 || upper &gt; str.length()) {                                                       
upper = str.length();                                                                                  upper = str.length();                                                                               
}                                                                                                      }                                                                                                   
// if upper is less than lower, raise it to lower                                                      // if upper is less than lower, raise it to lower                                                   
if (upper &lt; lower) {                                                                                if (upper &lt; lower) {                                                                             
upper = lower;                                                                                         upper = lower;                                                                                      
}                                                                                                      }                                                                                                   
StringBuffer result = new StringBuffer();                                                            | StringBuilder result = new StringBuilder();                                                         
int index = StringUtils.indexOf(str, " ", lower);                                                      int index = StringUtils.indexOf(str, " ", lower);                                                   
if (index == -1) {                                                                                     if (index == -1) {                                                                                  
result.append(str.substring(0, upper));                                                                result.append(str.substring(0, upper));                                                             
// only if abbreviation has occured do we append the appendToEnd value                                 // only if abbreviation has occured do we append the appendToEnd value                              
if (upper != str.length()) {                                                                           if (upper != str.length()) {                                                                        
result.append(StringUtils.defaultString(appendToEnd));                                                 result.append(StringUtils.defaultString(appendToEnd));                                              
}                                                                                                      }                                                                                                   
} else if (index &gt; upper) {                                                                         } else if (index &gt; upper) {                                                                      
result.append(str.substring(0, upper));                                                                result.append(str.substring(0, upper));                                                             
result.append(StringUtils.defaultString(appendToEnd));                                                 result.append(StringUtils.defaultString(appendToEnd));                                              
} else {                                                                                               } else {                                                                                            
result.append(str.substring(0, index));                                                                result.append(str.substring(0, index));                                                             
result.append(StringUtils.defaultString(appendToEnd));                                                 result.append(StringUtils.defaultString(appendToEnd));                                              
}                                                                                                      }                                                                                                   
return result.toString();                                                                              return result.toString();                                                                           
}                                                                                                      }                                                                                                   
