// -----------------------------------------------------------------------                             // -----------------------------------------------------------------------                          
/**                                                                                                    /**                                                                                                 
* &lt;p&gt;Factory method to create a new CharSet using a special syntax.&lt;/p&gt;                    * &lt;p&gt;Factory method to create a new CharSet using a special syntax.&lt;/p&gt;                 
*                                                                                                      *                                                                                                   
* &lt;ul&gt;                                                                                           * &lt;ul&gt;                                                                                        
*  &lt;li&gt;{@code null} or empty string ("")                                                         *  &lt;li&gt;{@code null} or empty string ("")                                                      
* - set containing no characters&lt;/li&gt;                                                            * - set containing no characters&lt;/li&gt;                                                         
*  &lt;li&gt;Single character, such as "a"                                                             *  &lt;li&gt;Single character, such as "a"                                                          
*  - set containing just that character&lt;/li&gt;                                                     *  - set containing just that character&lt;/li&gt;                                                  
*  &lt;li&gt;Multi character, such as "a-e"                                                            *  &lt;li&gt;Multi character, such as "a-e"                                                         
*  - set containing characters from one character to the other&lt;/li&gt;                              *  - set containing characters from one character to the other&lt;/li&gt;                           
*  &lt;li&gt;Negated, such as "^a" or "^a-e"                                                           *  &lt;li&gt;Negated, such as "^a" or "^a-e"                                                        
*  - set containing all characters except those defined&lt;/li&gt;                                     *  - set containing all characters except those defined&lt;/li&gt;                                  
*  &lt;li&gt;Combinations, such as "abe-g"                                                             *  &lt;li&gt;Combinations, such as "abe-g"                                                          
*  - set containing all the characters from the individual sets&lt;/li&gt;                             *  - set containing all the characters from the individual sets&lt;/li&gt;                          
* &lt;/ul&gt;                                                                                          * &lt;/ul&gt;                                                                                       
*                                                                                                      *                                                                                                   
* &lt;p&gt;The matching order is:&lt;/p&gt;                                                            * &lt;p&gt;The matching order is:&lt;/p&gt;                                                         
* &lt;ol&gt;                                                                                           * &lt;ol&gt;                                                                                        
*  &lt;li&gt;Negated multi character range, such as "^a-e"                                             *  &lt;li&gt;Negated multi character range, such as "^a-e"                                          
*  &lt;li&gt;Ordinary multi character range, such as "a-e"                                             *  &lt;li&gt;Ordinary multi character range, such as "a-e"                                          
*  &lt;li&gt;Negated single character, such as "^a"                                                    *  &lt;li&gt;Negated single character, such as "^a"                                                 
*  &lt;li&gt;Ordinary single character, such as "a"                                                    *  &lt;li&gt;Ordinary single character, such as "a"                                                 
* &lt;/ol&gt;                                                                                          * &lt;/ol&gt;                                                                                       
* &lt;p&gt;Matching works left to right. Once a match is found the                                     * &lt;p&gt;Matching works left to right. Once a match is found the                                  
* search starts again from the next character.&lt;/p&gt;                                               * search starts again from the next character.&lt;/p&gt;                                            
*                                                                                                      *                                                                                                   
* &lt;p&gt;If the same range is defined twice using the same syntax, only                              * &lt;p&gt;If the same range is defined twice using the same syntax, only                           
* one range will be kept.                                                                              * one range will be kept.                                                                           
* Thus, "a-ca-c" creates only one range of "a-c".&lt;/p&gt;                                            * Thus, "a-ca-c" creates only one range of "a-c".&lt;/p&gt;                                         
*                                                                                                      *                                                                                                   
* &lt;p&gt;If the start and end of a range are in the wrong order,                                     * &lt;p&gt;If the start and end of a range are in the wrong order,                                  
* they are reversed. Thus "a-e" is the same as "e-a".                                                  * they are reversed. Thus "a-e" is the same as "e-a".                                               
* As a result, "a-ee-a" would create only one range,                                                   * As a result, "a-ee-a" would create only one range,                                                
* as the "a-e" and "e-a" are the same.&lt;/p&gt;                                                       * as the "a-e" and "e-a" are the same.&lt;/p&gt;                                                    
*                                                                                                      *                                                                                                   
* &lt;p&gt;The set of characters represented is the union of the specified ranges.&lt;/p&gt;           * &lt;p&gt;The set of characters represented is the union of the specified ranges.&lt;/p&gt;        
*                                                                                                      *                                                                                                   
* &lt;p&gt;All CharSet objects returned by this method will be immutable.&lt;/p&gt;                    * &lt;p&gt;All CharSet objects returned by this method will be immutable.&lt;/p&gt;                 
*                                                                                                      *                                                                                                   
* @param setStr  the String describing the set, may be null                                          | * @param setStrs  Strings to merge into the set, may be null                                        
* @return a CharSet instance                                                                           * @return a CharSet instance                                                                        
* @since 2.0                                                                                         | * @since 2.4                                                                                        
*/                                                                                                     */                                                                                                  
public static CharSet getInstance(String setStr) {                                                   | public static CharSet getInstance(String... setStrs) {                                              
Object set = COMMON.get(setStr);                                                                     | if (setStrs == null) {                                                                              
if (set != null) {                                                                                   | return null;                                                                                        
return (CharSet) set;                                                                                |                                                                                                     
}                                                                                                      }                                                                                                   
return new CharSet(setStr);                                                                          | if (setStrs.length == 1) {                                                                          
                                                                                                     | CharSet common = COMMON.get(setStrs[0]);                                                            
                                                                                                     | if (common != null) {                                                                               
                                                                                                     | return common;                                                                                      
}                                                                                                      }                                                                                                   
                                                                                                     | }                                                                                                   
                                                                                                     | return new CharSet(setStrs);                                                                        
                                                                                                     | }                                                                                                   
