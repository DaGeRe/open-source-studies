                                                                                                     | @Test                                                                                               
public void testRemoveCharArray() {                                                                    public void testRemoveCharArray() {                                                                 
char[] array;                                                                                          char[] array;                                                                                       
array = ArrayUtils.remove(new char[] { 'a' }, 0);                                                      array = ArrayUtils.remove(new char[] { 'a' }, 0);                                                   
assertTrue(Arrays.equals(ArrayUtils.EMPTY_CHAR_ARRAY, array));                                         assertTrue(Arrays.equals(ArrayUtils.EMPTY_CHAR_ARRAY, array));                                      
assertEquals(Character.TYPE, array.getClass().getComponentType());                                     assertEquals(Character.TYPE, array.getClass().getComponentType());                                  
array = ArrayUtils.remove(new char[] { 'a', 'b' }, 0);                                                 array = ArrayUtils.remove(new char[] { 'a', 'b' }, 0);                                              
assertTrue(Arrays.equals(new char[] { 'b' }, array));                                                  assertTrue(Arrays.equals(new char[] { 'b' }, array));                                               
assertEquals(Character.TYPE, array.getClass().getComponentType());                                     assertEquals(Character.TYPE, array.getClass().getComponentType());                                  
array = ArrayUtils.remove(new char[] { 'a', 'b' }, 1);                                                 array = ArrayUtils.remove(new char[] { 'a', 'b' }, 1);                                              
assertTrue(Arrays.equals(new char[] { 'a' }, array));                                                  assertTrue(Arrays.equals(new char[] { 'a' }, array));                                               
assertEquals(Character.TYPE, array.getClass().getComponentType());                                     assertEquals(Character.TYPE, array.getClass().getComponentType());                                  
array = ArrayUtils.remove(new char[] { 'a', 'b', 'c' }, 1);                                            array = ArrayUtils.remove(new char[] { 'a', 'b', 'c' }, 1);                                         
assertTrue(Arrays.equals(new char[] { 'a', 'c' }, array));                                             assertTrue(Arrays.equals(new char[] { 'a', 'c' }, array));                                          
assertEquals(Character.TYPE, array.getClass().getComponentType());                                     assertEquals(Character.TYPE, array.getClass().getComponentType());                                  
try {                                                                                                  try {                                                                                               
ArrayUtils.remove(new char[] { 'a', 'b' }, -1);                                                        ArrayUtils.remove(new char[] { 'a', 'b' }, -1);                                                     
fail("IndexOutOfBoundsException expected");                                                            fail("IndexOutOfBoundsException expected");                                                         
} catch (IndexOutOfBoundsException e) {                                                                } catch (IndexOutOfBoundsException e) {                                                             
}                                                                                                      }                                                                                                   
try {                                                                                                  try {                                                                                               
ArrayUtils.remove(new char[] { 'a', 'b' }, 2);                                                         ArrayUtils.remove(new char[] { 'a', 'b' }, 2);                                                      
fail("IndexOutOfBoundsException expected");                                                            fail("IndexOutOfBoundsException expected");                                                         
} catch (IndexOutOfBoundsException e) {                                                                } catch (IndexOutOfBoundsException e) {                                                             
}                                                                                                      }                                                                                                   
try {                                                                                                  try {                                                                                               
ArrayUtils.remove((char[]) null, 0);                                                                   ArrayUtils.remove((char[]) null, 0);                                                                
fail("IndexOutOfBoundsException expected");                                                            fail("IndexOutOfBoundsException expected");                                                         
} catch (IndexOutOfBoundsException e) {                                                                } catch (IndexOutOfBoundsException e) {                                                             
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
