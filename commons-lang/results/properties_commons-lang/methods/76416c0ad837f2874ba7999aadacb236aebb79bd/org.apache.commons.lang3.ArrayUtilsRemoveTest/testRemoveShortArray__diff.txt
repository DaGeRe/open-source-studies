                                                                                                     | @Test                                                                                               
public void testRemoveShortArray() {                                                                   public void testRemoveShortArray() {                                                                
short[] array;                                                                                         short[] array;                                                                                      
array = ArrayUtils.remove(new short[] { 1 }, 0);                                                       array = ArrayUtils.remove(new short[] { 1 }, 0);                                                    
assertTrue(Arrays.equals(ArrayUtils.EMPTY_SHORT_ARRAY, array));                                        assertTrue(Arrays.equals(ArrayUtils.EMPTY_SHORT_ARRAY, array));                                     
assertEquals(Short.TYPE, array.getClass().getComponentType());                                         assertEquals(Short.TYPE, array.getClass().getComponentType());                                      
array = ArrayUtils.remove(new short[] { 1, 2 }, 0);                                                    array = ArrayUtils.remove(new short[] { 1, 2 }, 0);                                                 
assertTrue(Arrays.equals(new short[] { 2 }, array));                                                   assertTrue(Arrays.equals(new short[] { 2 }, array));                                                
assertEquals(Short.TYPE, array.getClass().getComponentType());                                         assertEquals(Short.TYPE, array.getClass().getComponentType());                                      
array = ArrayUtils.remove(new short[] { 1, 2 }, 1);                                                    array = ArrayUtils.remove(new short[] { 1, 2 }, 1);                                                 
assertTrue(Arrays.equals(new short[] { 1 }, array));                                                   assertTrue(Arrays.equals(new short[] { 1 }, array));                                                
assertEquals(Short.TYPE, array.getClass().getComponentType());                                         assertEquals(Short.TYPE, array.getClass().getComponentType());                                      
array = ArrayUtils.remove(new short[] { 1, 2, 1 }, 1);                                                 array = ArrayUtils.remove(new short[] { 1, 2, 1 }, 1);                                              
assertTrue(Arrays.equals(new short[] { 1, 1 }, array));                                                assertTrue(Arrays.equals(new short[] { 1, 1 }, array));                                             
assertEquals(Short.TYPE, array.getClass().getComponentType());                                         assertEquals(Short.TYPE, array.getClass().getComponentType());                                      
try {                                                                                                  try {                                                                                               
ArrayUtils.remove(new short[] { 1, 2 }, -1);                                                           ArrayUtils.remove(new short[] { 1, 2 }, -1);                                                        
fail("IndexOutOfBoundsException expected");                                                            fail("IndexOutOfBoundsException expected");                                                         
} catch (IndexOutOfBoundsException e) {                                                                } catch (IndexOutOfBoundsException e) {                                                             
}                                                                                                      }                                                                                                   
try {                                                                                                  try {                                                                                               
ArrayUtils.remove(new short[] { 1, 2 }, 2);                                                            ArrayUtils.remove(new short[] { 1, 2 }, 2);                                                         
fail("IndexOutOfBoundsException expected");                                                            fail("IndexOutOfBoundsException expected");                                                         
} catch (IndexOutOfBoundsException e) {                                                                } catch (IndexOutOfBoundsException e) {                                                             
}                                                                                                      }                                                                                                   
try {                                                                                                  try {                                                                                               
ArrayUtils.remove((short[]) null, 0);                                                                  ArrayUtils.remove((short[]) null, 0);                                                               
fail("IndexOutOfBoundsException expected");                                                            fail("IndexOutOfBoundsException expected");                                                         
} catch (IndexOutOfBoundsException e) {                                                                } catch (IndexOutOfBoundsException e) {                                                             
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
