                                                                                                     | @Test                                                                                               
public void testRemoveBooleanArray() {                                                                 public void testRemoveBooleanArray() {                                                              
boolean[] array;                                                                                       boolean[] array;                                                                                    
array = ArrayUtils.remove(new boolean[] { true }, 0);                                                  array = ArrayUtils.remove(new boolean[] { true }, 0);                                               
assertTrue(Arrays.equals(ArrayUtils.EMPTY_BOOLEAN_ARRAY, array));                                      assertTrue(Arrays.equals(ArrayUtils.EMPTY_BOOLEAN_ARRAY, array));                                   
assertEquals(Boolean.TYPE, array.getClass().getComponentType());                                       assertEquals(Boolean.TYPE, array.getClass().getComponentType());                                    
array = ArrayUtils.remove(new boolean[] { true, false }, 0);                                           array = ArrayUtils.remove(new boolean[] { true, false }, 0);                                        
assertTrue(Arrays.equals(new boolean[] { false }, array));                                             assertTrue(Arrays.equals(new boolean[] { false }, array));                                          
assertEquals(Boolean.TYPE, array.getClass().getComponentType());                                       assertEquals(Boolean.TYPE, array.getClass().getComponentType());                                    
array = ArrayUtils.remove(new boolean[] { true, false }, 1);                                           array = ArrayUtils.remove(new boolean[] { true, false }, 1);                                        
assertTrue(Arrays.equals(new boolean[] { true }, array));                                              assertTrue(Arrays.equals(new boolean[] { true }, array));                                           
assertEquals(Boolean.TYPE, array.getClass().getComponentType());                                       assertEquals(Boolean.TYPE, array.getClass().getComponentType());                                    
array = ArrayUtils.remove(new boolean[] { true, false, true }, 1);                                     array = ArrayUtils.remove(new boolean[] { true, false, true }, 1);                                  
assertTrue(Arrays.equals(new boolean[] { true, true }, array));                                        assertTrue(Arrays.equals(new boolean[] { true, true }, array));                                     
assertEquals(Boolean.TYPE, array.getClass().getComponentType());                                       assertEquals(Boolean.TYPE, array.getClass().getComponentType());                                    
try {                                                                                                  try {                                                                                               
ArrayUtils.remove(new boolean[] { true, false }, -1);                                                  ArrayUtils.remove(new boolean[] { true, false }, -1);                                               
fail("IndexOutOfBoundsException expected");                                                            fail("IndexOutOfBoundsException expected");                                                         
} catch (IndexOutOfBoundsException e) {                                                                } catch (IndexOutOfBoundsException e) {                                                             
}                                                                                                      }                                                                                                   
try {                                                                                                  try {                                                                                               
ArrayUtils.remove(new boolean[] { true, false }, 2);                                                   ArrayUtils.remove(new boolean[] { true, false }, 2);                                                
fail("IndexOutOfBoundsException expected");                                                            fail("IndexOutOfBoundsException expected");                                                         
} catch (IndexOutOfBoundsException e) {                                                                } catch (IndexOutOfBoundsException e) {                                                             
}                                                                                                      }                                                                                                   
try {                                                                                                  try {                                                                                               
ArrayUtils.remove((boolean[]) null, 0);                                                                ArrayUtils.remove((boolean[]) null, 0);                                                             
fail("IndexOutOfBoundsException expected");                                                            fail("IndexOutOfBoundsException expected");                                                         
} catch (IndexOutOfBoundsException e) {                                                                } catch (IndexOutOfBoundsException e) {                                                             
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
