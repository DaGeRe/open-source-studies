                                                                                                     | @Test                                                                                               
public void testRemoveIntArray() {                                                                     public void testRemoveIntArray() {                                                                  
int[] array;                                                                                           int[] array;                                                                                        
array = ArrayUtils.remove(new int[] { 1 }, 0);                                                         array = ArrayUtils.remove(new int[] { 1 }, 0);                                                      
assertTrue(Arrays.equals(ArrayUtils.EMPTY_INT_ARRAY, array));                                          assertTrue(Arrays.equals(ArrayUtils.EMPTY_INT_ARRAY, array));                                       
assertEquals(Integer.TYPE, array.getClass().getComponentType());                                       assertEquals(Integer.TYPE, array.getClass().getComponentType());                                    
array = ArrayUtils.remove(new int[] { 1, 2 }, 0);                                                      array = ArrayUtils.remove(new int[] { 1, 2 }, 0);                                                   
assertTrue(Arrays.equals(new int[] { 2 }, array));                                                     assertTrue(Arrays.equals(new int[] { 2 }, array));                                                  
assertEquals(Integer.TYPE, array.getClass().getComponentType());                                       assertEquals(Integer.TYPE, array.getClass().getComponentType());                                    
array = ArrayUtils.remove(new int[] { 1, 2 }, 1);                                                      array = ArrayUtils.remove(new int[] { 1, 2 }, 1);                                                   
assertTrue(Arrays.equals(new int[] { 1 }, array));                                                     assertTrue(Arrays.equals(new int[] { 1 }, array));                                                  
assertEquals(Integer.TYPE, array.getClass().getComponentType());                                       assertEquals(Integer.TYPE, array.getClass().getComponentType());                                    
array = ArrayUtils.remove(new int[] { 1, 2, 1 }, 1);                                                   array = ArrayUtils.remove(new int[] { 1, 2, 1 }, 1);                                                
assertTrue(Arrays.equals(new int[] { 1, 1 }, array));                                                  assertTrue(Arrays.equals(new int[] { 1, 1 }, array));                                               
assertEquals(Integer.TYPE, array.getClass().getComponentType());                                       assertEquals(Integer.TYPE, array.getClass().getComponentType());                                    
try {                                                                                                  try {                                                                                               
ArrayUtils.remove(new int[] { 1, 2 }, -1);                                                             ArrayUtils.remove(new int[] { 1, 2 }, -1);                                                          
fail("IndexOutOfBoundsException expected");                                                            fail("IndexOutOfBoundsException expected");                                                         
} catch (IndexOutOfBoundsException e) {                                                                } catch (IndexOutOfBoundsException e) {                                                             
}                                                                                                      }                                                                                                   
try {                                                                                                  try {                                                                                               
ArrayUtils.remove(new int[] { 1, 2 }, 2);                                                              ArrayUtils.remove(new int[] { 1, 2 }, 2);                                                           
fail("IndexOutOfBoundsException expected");                                                            fail("IndexOutOfBoundsException expected");                                                         
} catch (IndexOutOfBoundsException e) {                                                                } catch (IndexOutOfBoundsException e) {                                                             
}                                                                                                      }                                                                                                   
try {                                                                                                  try {                                                                                               
ArrayUtils.remove((int[]) null, 0);                                                                    ArrayUtils.remove((int[]) null, 0);                                                                 
fail("IndexOutOfBoundsException expected");                                                            fail("IndexOutOfBoundsException expected");                                                         
} catch (IndexOutOfBoundsException e) {                                                                } catch (IndexOutOfBoundsException e) {                                                             
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
