public void testGetCause_Throwable() {                                                                 public void testGetCause_Throwable() {                                                              
assertSame(null, ExceptionUtils.getCause(null));                                                       assertSame(null, ExceptionUtils.getCause(null));                                                    
assertSame(null, ExceptionUtils.getCause(withoutCause));                                               assertSame(null, ExceptionUtils.getCause(withoutCause));                                            
assertSame(withoutCause, ExceptionUtils.getCause(nested));                                             assertSame(withoutCause, ExceptionUtils.getCause(nested));                                          
assertSame(nested, ExceptionUtils.getCause(withCause));                                                assertSame(nested, ExceptionUtils.getCause(withCause));                                             
assertSame(null, ExceptionUtils.getCause(jdkNoCause));                                                 assertSame(null, ExceptionUtils.getCause(jdkNoCause));                                              
assertSame(selfCause, ExceptionUtils.getCause(selfCause));                                           |                                                                                                     
assertSame(cyclicCause.getCause(), ExceptionUtils.getCause(cyclicCause));                              assertSame(cyclicCause.getCause(), ExceptionUtils.getCause(cyclicCause));                           
assertSame(((ExceptionWithCause) cyclicCause.getCause()).getCause(), ExceptionUtils.getCause(cyclicC   assertSame(((ExceptionWithCause) cyclicCause.getCause()).getCause(), ExceptionUtils.getCause(cyclicC
assertSame(cyclicCause.getCause(), ExceptionUtils.getCause(((ExceptionWithCause) cyclicCause.getCaus   assertSame(cyclicCause.getCause(), ExceptionUtils.getCause(((ExceptionWithCause) cyclicCause.getCaus
}                                                                                                      }                                                                                                   
