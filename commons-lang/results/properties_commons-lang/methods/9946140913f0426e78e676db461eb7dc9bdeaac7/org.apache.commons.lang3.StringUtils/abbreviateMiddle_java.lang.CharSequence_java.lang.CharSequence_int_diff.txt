/**                                                                                                  |                                                                                                     
* &lt;p&gt;Abbreviates a String to the length passed, replacing the middle characters with the suppl |                                                                                                     
* replacement String.&lt;/p&gt;                                                                      |                                                                                                     
*                                                                                                    |                                                                                                     
* &lt;p&gt;This abbreviation only occurs if the following criteria is met:                           |                                                                                                     
* &lt;ul&gt;                                                                                         |                                                                                                     
* &lt;li&gt;Neither the String for abbreviation nor the replacement String are null or empty &lt;/li |                                                                                                     
* &lt;li&gt;The length to truncate to is less than the length of the supplied String&lt;/li&gt;      |                                                                                                     
* &lt;li&gt;The length to truncate to is greater than 0&lt;/li&gt;                                   |                                                                                                     
* &lt;li&gt;The abbreviated String will have enough room for the length supplied replacement String  |                                                                                                     
* and the first and last characters of the supplied String for abbreviation&lt;/li&gt;               |                                                                                                     
* &lt;/ul&gt;                                                                                        |                                                                                                     
* Otherwise, the returned String will be the same as the supplied String for abbreviation.           |                                                                                                     
* &lt;/p&gt;                                                                                         |                                                                                                     
*                                                                                                    |                                                                                                     
* &lt;pre&gt;                                                                                        |                                                                                                     
* StringUtils.abbreviateMiddle(null, null, 0)      = null                                            |                                                                                                     
* StringUtils.abbreviateMiddle("abc", null, 0)      = "abc"                                          |                                                                                                     
* StringUtils.abbreviateMiddle("abc", ".", 0)      = "abc"                                           |                                                                                                     
* StringUtils.abbreviateMiddle("abc", ".", 3)      = "abc"                                           |                                                                                                     
* StringUtils.abbreviateMiddle("abcdef", ".", 4)     = "ab.f"                                        |                                                                                                     
* &lt;/pre&gt;                                                                                       |                                                                                                     
*                                                                                                    |                                                                                                     
* @param seq  the CharSequence to abbreviate, may be null                                            |                                                                                                     
* @param middle the CharSequence to replace the middle characters with, may be null                  |                                                                                                     
* @param length the length to abbreviate {@code seq} to.                                             |                                                                                                     
* @return the abbreviated String if the above criteria is met, or the original String supplied for a |                                                                                                     
* @since 2.5                                                                                         |                                                                                                     
*/                                                                                                   |                                                                                                     
public static String abbreviateMiddle(CharSequence seq, CharSequence middle, int length) {           |                                                                                                     
if (seq == null) {                                                                                   |                                                                                                     
return null;                                                                                         |                                                                                                     
}                                                                                                    |                                                                                                     
if (isEmpty(seq) || isEmpty(middle)) {                                                               |                                                                                                     
return seq.toString();                                                                               |                                                                                                     
}                                                                                                    |                                                                                                     
if (length &gt;= seq.length() || length &lt; (middle.length() + 2)) {                                |                                                                                                     
return seq.toString();                                                                               |                                                                                                     
}                                                                                                    |                                                                                                     
int targetSting = length - middle.length();                                                          |                                                                                                     
int startOffset = targetSting / 2 + targetSting % 2;                                                 |                                                                                                     
int endOffset = seq.length() - targetSting / 2;                                                      |                                                                                                     
StringBuilder builder = new StringBuilder(length);                                                   |                                                                                                     
builder.append(seq.subSequence(0, startOffset));                                                     |                                                                                                     
builder.append(middle);                                                                              |                                                                                                     
builder.append(StringUtils.subSequence(seq, endOffset));                                             |                                                                                                     
return builder.toString();                                                                           |                                                                                                     
}                                                                                                    |                                                                                                     
