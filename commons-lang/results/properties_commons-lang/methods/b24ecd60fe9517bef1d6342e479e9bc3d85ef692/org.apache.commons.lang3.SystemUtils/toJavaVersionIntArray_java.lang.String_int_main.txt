/**
 * <p>
 * Converts the given Java version string to an <code>int[]</code> of maximum size <code>limit</code>.
 * </p>
 *
 * <p>
 * Example return values:
 * </p>
 * <ul>
 * <li><code>[1, 2, 0]</code> for Java 1.2</li>
 * <li><code>[1, 3, 1]</code> for Java 1.3.1</li>
 * <li><code>[1, 5, 0, 21]</code> for Java 1.5.0_21</li>
 * </ul>
 *
 * @return the version, for example [1, 5, 0, 21] for Java 1.5.0_21
 */
private static int[] toJavaVersionIntArray(String version, int limit) {
    if (version == null) {
        return ArrayUtils.EMPTY_INT_ARRAY;
    }
    String[] strings = Pattern.compile("[^\\d]").split(version);
    int[] ints = new int[Math.min(limit, strings.length)];
    int j = 0;
    for (int i = 0; i < strings.length && j < limit; i++) {
        String s = strings[i];
        if (s.length() > 0) {
            ints[j++] = Integer.parseInt(s);
        }
    }
    return ints;
}