/**
 * Use {@code java.text.Normalizer#normalize(CharSequence, Normalizer.Form)}
 * (but be careful, this class exists in Java 1.3, with an entirely different meaning!)
 *
 * @param text the text to be processed
 * @return the processed string
 * @throws IllegalAccessException may be thrown by a reflection call
 * @throws InvocationTargetException if a reflection call throws an exception
 * @throws IllegalStateException if the {@code Normalizer} class is not available
 */
private static String removeAccentsJava6(CharSequence text) throws IllegalAccessException, InvocationTargetException {
    /*
        String decomposed = java.text.Normalizer.normalize(CharSequence, Normalizer.Form.NFD);
        return java6Pattern.matcher(decomposed).replaceAll("");//$NON-NLS-1$
        */
    if (InitStripAccents.java6NormalizeMethod == null || InitStripAccents.java6NormalizerFormNFD == null) {
        throw new IllegalStateException("java.text.Normalizer is not available", InitStripAccents.java6Exception);
    }
    String result;
    result = (String) InitStripAccents.java6NormalizeMethod.invoke(null, new Object[] { text, InitStripAccents.java6NormalizerFormNFD });
    // $NON-NLS-1$
    result = InitStripAccents.java6Pattern.matcher(result).replaceAll("");
    return result;
}