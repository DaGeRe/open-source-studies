/**
 * <p>Writes a <code>String</code> value for a CSV column enclosed in double quotes,
 * if required.</p>
 *
 * <p>If the value contains a comma, newline or double quote, then the
 *    String value is written enclosed in double quotes.</p>
 * </p>
 *
 * <p>Any double quote characters in the value are escaped with another double quote.</p>
 *
 * <p>If the value does not contain a comma, newline or double quote, then the
 *    String value is written unchanged (null values are ignored).</p>
 * </p>
 *
 * see <a href="http://en.wikipedia.org/wiki/Comma-separated_values">Wikipedia</a> and
 * <a href="http://tools.ietf.org/html/rfc4180">RFC 4180</a>.
 *
 * @param str the input CSV column String, may be null
 * @param out Writer to write input string to, enclosed in double quotes if it contains
 * a comma, newline or double quote
 * @throws IOException if error occurs on underlying Writer
 * @since 2.4
 */
public static void escapeCsv(Writer out, String str) throws IOException {
    if (StringUtils.containsNone(str, CSV_SEARCH_CHARS)) {
        if (str != null) {
            out.write(str);
        }
        return;
    }
    out.write(CSV_QUOTE);
    for (int i = 0; i < str.length(); i++) {
        char c = str.charAt(i);
        if (c == CSV_QUOTE) {
            // escape double quote
            out.write(CSV_QUOTE);
        }
        out.write(c);
    }
    out.write(CSV_QUOTE);
}