// -----------------------------------------------------------------------
/**
 * <p>Returns a <code>String</code> value for a CSV column enclosed in double quotes,
 * if required.</p>
 *
 * <p>If the value contains a comma, newline or double quote, then the
 *    String value is returned enclosed in double quotes.</p>
 * </p>
 *
 * <p>Any double quote characters in the value are escaped with another double quote.</p>
 *
 * <p>If the value does not contain a comma, newline or double quote, then the
 *    String value is returned unchanged.</p>
 * </p>
 *
 * see <a href="http://en.wikipedia.org/wiki/Comma-separated_values">Wikipedia</a> and
 * <a href="http://tools.ietf.org/html/rfc4180">RFC 4180</a>.
 *
 * @param str the input CSV column String, may be null
 * @return the input String, enclosed in double quotes if the value contains a comma,
 * newline or double quote, <code>null</code> if null string input
 * @since 2.4
 */
public static String escapeCsv(String str) {
    if (StringUtils.containsNone(str, CSV_SEARCH_CHARS)) {
        return str;
    }
    try {
        StringWriter writer = new StringWriter();
        escapeCsv(writer, str);
        return writer.toString();
    } catch (IOException ioe) {
        // this should never ever happen while writing to a StringWriter
        throw new UnhandledException(ioe);
    }
}