/**                                                                                                    /**                                                                                                 
* &lt;p&gt;This constructs an &lt;code&gt;Iterator&lt;/code&gt; over each day in a date                * &lt;p&gt;This constructs an &lt;code&gt;Iterator&lt;/code&gt; over each day in a date             
* range defined by a focus date and range style.&lt;/p&gt;                                             * range defined by a focus date and range style.&lt;/p&gt;                                          
*                                                                                                      *                                                                                                   
* &lt;p&gt;For instance, passing Thursday, July 4, 2002 and a                                          * &lt;p&gt;For instance, passing Thursday, July 4, 2002 and a                                       
* &lt;code&gt;RANGE_MONTH_SUNDAY&lt;/code&gt; will return an &lt;code&gt;Iterator&lt;/code&gt;         * &lt;code&gt;RANGE_MONTH_SUNDAY&lt;/code&gt; will return an &lt;code&gt;Iterator&lt;/code&gt;      
* that starts with Sunday, June 30, 2002 and ends with Saturday, August 3,                             * that starts with Sunday, June 30, 2002 and ends with Saturday, August 3,                          
* 2002, returning a Calendar instance for each intermediate day.&lt;/p&gt;                             * 2002, returning a Calendar instance for each intermediate day.&lt;/p&gt;                          
*                                                                                                      *                                                                                                   
* &lt;p&gt;This method provides an iterator that returns Calendar objects.                             * &lt;p&gt;This method provides an iterator that returns Calendar objects.                          
* The days are progressed using {@link Calendar#add(int, int)}.&lt;/p&gt;                              * The days are progressed using {@link Calendar#add(int, int)}.&lt;/p&gt;                           
*                                                                                                      *                                                                                                   
* @param focus  the date to work with                                                                  * @param focus  the date to work with                                                               
* @param rangeStyle  the style constant to use. Must be one of                                         * @param rangeStyle  the style constant to use. Must be one of                                      
* {@link DateUtils#RANGE_MONTH_SUNDAY},                                                                * {@link DateUtils#RANGE_MONTH_SUNDAY},                                                             
* {@link DateUtils#RANGE_MONTH_MONDAY},                                                                * {@link DateUtils#RANGE_MONTH_MONDAY},                                                             
* {@link DateUtils#RANGE_WEEK_SUNDAY},                                                                 * {@link DateUtils#RANGE_WEEK_SUNDAY},                                                              
* {@link DateUtils#RANGE_WEEK_MONDAY},                                                                 * {@link DateUtils#RANGE_WEEK_MONDAY},                                                              
* {@link DateUtils#RANGE_WEEK_RELATIVE},                                                               * {@link DateUtils#RANGE_WEEK_RELATIVE},                                                            
* {@link DateUtils#RANGE_WEEK_CENTER}                                                                  * {@link DateUtils#RANGE_WEEK_CENTER}                                                               
* @return the date iterator                                                                            * @return the date iterator                                                                         
* @throws IllegalArgumentException if the date is &lt;code&gt;null&lt;/code&gt;                        * @throws IllegalArgumentException if the date is &lt;code&gt;null&lt;/code&gt;                     
* @throws IllegalArgumentException if the rangeStyle is invalid                                        * @throws IllegalArgumentException if the rangeStyle is invalid                                     
*/                                                                                                     */                                                                                                  
public static Iterator iterator(Calendar focus, int rangeStyle) {                                    | public static Iterator&lt;Calendar&gt; iterator(Calendar focus, int rangeStyle) {                   
if (focus == null) {                                                                                   if (focus == null) {                                                                                
throw new IllegalArgumentException("The date must not be null");                                       throw new IllegalArgumentException("The date must not be null");                                    
}                                                                                                      }                                                                                                   
Calendar start = null;                                                                                 Calendar start = null;                                                                              
Calendar end = null;                                                                                   Calendar end = null;                                                                                
int startCutoff = Calendar.SUNDAY;                                                                     int startCutoff = Calendar.SUNDAY;                                                                  
int endCutoff = Calendar.SATURDAY;                                                                     int endCutoff = Calendar.SATURDAY;                                                                  
switch(rangeStyle) {                                                                                   switch(rangeStyle) {                                                                                
case RANGE_MONTH_SUNDAY:                                                                               case RANGE_MONTH_SUNDAY:                                                                            
case RANGE_MONTH_MONDAY:                                                                               case RANGE_MONTH_MONDAY:                                                                            
// Set start to the first of the month                                                                 // Set start to the first of the month                                                              
start = truncate(focus, Calendar.MONTH);                                                               start = truncate(focus, Calendar.MONTH);                                                            
// Set end to the last of the month                                                                    // Set end to the last of the month                                                                 
end = (Calendar) start.clone();                                                                        end = (Calendar) start.clone();                                                                     
end.add(Calendar.MONTH, 1);                                                                            end.add(Calendar.MONTH, 1);                                                                         
end.add(Calendar.DATE, -1);                                                                            end.add(Calendar.DATE, -1);                                                                         
// Loop start back to the previous sunday or monday                                                    // Loop start back to the previous sunday or monday                                                 
if (rangeStyle == RANGE_MONTH_MONDAY) {                                                                if (rangeStyle == RANGE_MONTH_MONDAY) {                                                             
startCutoff = Calendar.MONDAY;                                                                         startCutoff = Calendar.MONDAY;                                                                      
endCutoff = Calendar.SUNDAY;                                                                           endCutoff = Calendar.SUNDAY;                                                                        
}                                                                                                      }                                                                                                   
break;                                                                                                 break;                                                                                              
case RANGE_WEEK_SUNDAY:                                                                                case RANGE_WEEK_SUNDAY:                                                                             
case RANGE_WEEK_MONDAY:                                                                                case RANGE_WEEK_MONDAY:                                                                             
case RANGE_WEEK_RELATIVE:                                                                              case RANGE_WEEK_RELATIVE:                                                                           
case RANGE_WEEK_CENTER:                                                                                case RANGE_WEEK_CENTER:                                                                             
// Set start and end to the current date                                                               // Set start and end to the current date                                                            
start = truncate(focus, Calendar.DATE);                                                                start = truncate(focus, Calendar.DATE);                                                             
end = truncate(focus, Calendar.DATE);                                                                  end = truncate(focus, Calendar.DATE);                                                               
switch(rangeStyle) {                                                                                   switch(rangeStyle) {                                                                                
case RANGE_WEEK_SUNDAY:                                                                                case RANGE_WEEK_SUNDAY:                                                                             
// already set by default                                                                              // already set by default                                                                           
break;                                                                                                 break;                                                                                              
case RANGE_WEEK_MONDAY:                                                                                case RANGE_WEEK_MONDAY:                                                                             
startCutoff = Calendar.MONDAY;                                                                         startCutoff = Calendar.MONDAY;                                                                      
endCutoff = Calendar.SUNDAY;                                                                           endCutoff = Calendar.SUNDAY;                                                                        
break;                                                                                                 break;                                                                                              
case RANGE_WEEK_RELATIVE:                                                                              case RANGE_WEEK_RELATIVE:                                                                           
startCutoff = focus.get(Calendar.DAY_OF_WEEK);                                                         startCutoff = focus.get(Calendar.DAY_OF_WEEK);                                                      
endCutoff = startCutoff - 1;                                                                           endCutoff = startCutoff - 1;                                                                        
break;                                                                                                 break;                                                                                              
case RANGE_WEEK_CENTER:                                                                                case RANGE_WEEK_CENTER:                                                                             
startCutoff = focus.get(Calendar.DAY_OF_WEEK) - 3;                                                     startCutoff = focus.get(Calendar.DAY_OF_WEEK) - 3;                                                  
endCutoff = focus.get(Calendar.DAY_OF_WEEK) + 3;                                                       endCutoff = focus.get(Calendar.DAY_OF_WEEK) + 3;                                                    
break;                                                                                                 break;                                                                                              
}                                                                                                      }                                                                                                   
break;                                                                                                 break;                                                                                              
default:                                                                                               default:                                                                                            
throw new IllegalArgumentException("The range style " + rangeStyle + " is not valid.");                throw new IllegalArgumentException("The range style " + rangeStyle + " is not valid.");             
}                                                                                                      }                                                                                                   
if (startCutoff &lt; Calendar.SUNDAY) {                                                                if (startCutoff &lt; Calendar.SUNDAY) {                                                             
startCutoff += 7;                                                                                      startCutoff += 7;                                                                                   
}                                                                                                      }                                                                                                   
if (startCutoff &gt; Calendar.SATURDAY) {                                                              if (startCutoff &gt; Calendar.SATURDAY) {                                                           
startCutoff -= 7;                                                                                      startCutoff -= 7;                                                                                   
}                                                                                                      }                                                                                                   
if (endCutoff &lt; Calendar.SUNDAY) {                                                                  if (endCutoff &lt; Calendar.SUNDAY) {                                                               
endCutoff += 7;                                                                                        endCutoff += 7;                                                                                     
}                                                                                                      }                                                                                                   
if (endCutoff &gt; Calendar.SATURDAY) {                                                                if (endCutoff &gt; Calendar.SATURDAY) {                                                             
endCutoff -= 7;                                                                                        endCutoff -= 7;                                                                                     
}                                                                                                      }                                                                                                   
while (start.get(Calendar.DAY_OF_WEEK) != startCutoff) {                                               while (start.get(Calendar.DAY_OF_WEEK) != startCutoff) {                                            
start.add(Calendar.DATE, -1);                                                                          start.add(Calendar.DATE, -1);                                                                       
}                                                                                                      }                                                                                                   
while (end.get(Calendar.DAY_OF_WEEK) != endCutoff) {                                                   while (end.get(Calendar.DAY_OF_WEEK) != endCutoff) {                                                
end.add(Calendar.DATE, 1);                                                                             end.add(Calendar.DATE, 1);                                                                          
}                                                                                                      }                                                                                                   
return new DateIterator(start, end);                                                                   return new DateIterator(start, end);                                                                
}                                                                                                      }                                                                                                   
