/**                                                                                                    /**                                                                                                 
* Parses a classic date format string into Tokens                                                      * Parses a classic date format string into Tokens                                                   
*                                                                                                      *                                                                                                   
* @param format to parse                                                                               * @param format to parse                                                                            
* @return Token[] of tokens                                                                          | * @return array of Token[]                                                                          
*/                                                                                                     */                                                                                                  
static Token[] lexx(String format) {                                                                   static Token[] lexx(String format) {                                                                
char[] array = format.toCharArray();                                                                   char[] array = format.toCharArray();                                                                
ArrayList list = new ArrayList(array.length);                                                        | ArrayList&lt;Token&gt; list = new ArrayList&lt;Token&gt;(array.length);                             
boolean inLiteral = false;                                                                             boolean inLiteral = false;                                                                          
StringBuffer buffer = null;                                                                            StringBuffer buffer = null;                                                                         
Token previous = null;                                                                                 Token previous = null;                                                                              
int sz = array.length;                                                                                 int sz = array.length;                                                                              
for (int i = 0; i &lt; sz; i++) {                                                                      for (int i = 0; i &lt; sz; i++) {                                                                   
char ch = array[i];                                                                                    char ch = array[i];                                                                                 
if (inLiteral && ch != '\'') {                                                                         if (inLiteral && ch != '\'') {                                                                      
                                                                                                     | // buffer can't be null if inLiteral is true                                                        
buffer.append(ch);                                                                                     buffer.append(ch);                                                                                  
continue;                                                                                              continue;                                                                                           
}                                                                                                      }                                                                                                   
Object value = null;                                                                                   Object value = null;                                                                                
switch(ch) {                                                                                           switch(ch) {                                                                                        
// TODO: Need to handle escaping of '                                                                  // TODO: Need to handle escaping of '                                                               
case '\'':                                                                                             case '\'':                                                                                          
if (inLiteral) {                                                                                       if (inLiteral) {                                                                                    
buffer = null;                                                                                         buffer = null;                                                                                      
inLiteral = false;                                                                                     inLiteral = false;                                                                                  
} else {                                                                                               } else {                                                                                            
buffer = new StringBuffer();                                                                           buffer = new StringBuffer();                                                                        
list.add(new Token(buffer));                                                                           list.add(new Token(buffer));                                                                        
inLiteral = true;                                                                                      inLiteral = true;                                                                                   
}                                                                                                      }                                                                                                   
break;                                                                                                 break;                                                                                              
case 'y':                                                                                              case 'y':                                                                                           
value = y;                                                                                             value = y;                                                                                          
break;                                                                                                 break;                                                                                              
case 'M':                                                                                              case 'M':                                                                                           
value = M;                                                                                             value = M;                                                                                          
break;                                                                                                 break;                                                                                              
case 'd':                                                                                              case 'd':                                                                                           
value = d;                                                                                             value = d;                                                                                          
break;                                                                                                 break;                                                                                              
case 'H':                                                                                              case 'H':                                                                                           
value = H;                                                                                             value = H;                                                                                          
break;                                                                                                 break;                                                                                              
case 'm':                                                                                              case 'm':                                                                                           
value = m;                                                                                             value = m;                                                                                          
break;                                                                                                 break;                                                                                              
case 's':                                                                                              case 's':                                                                                           
value = s;                                                                                             value = s;                                                                                          
break;                                                                                                 break;                                                                                              
case 'S':                                                                                              case 'S':                                                                                           
value = S;                                                                                             value = S;                                                                                          
break;                                                                                                 break;                                                                                              
default:                                                                                               default:                                                                                            
if (buffer == null) {                                                                                  if (buffer == null) {                                                                               
buffer = new StringBuffer();                                                                           buffer = new StringBuffer();                                                                        
list.add(new Token(buffer));                                                                           list.add(new Token(buffer));                                                                        
}                                                                                                      }                                                                                                   
buffer.append(ch);                                                                                     buffer.append(ch);                                                                                  
}                                                                                                      }                                                                                                   
if (value != null) {                                                                                   if (value != null) {                                                                                
if (previous != null && previous.getValue() == value) {                                                if (previous != null && previous.getValue() == value) {                                             
previous.increment();                                                                                  previous.increment();                                                                               
} else {                                                                                               } else {                                                                                            
Token token = new Token(value);                                                                        Token token = new Token(value);                                                                     
list.add(token);                                                                                       list.add(token);                                                                                    
previous = token;                                                                                      previous = token;                                                                                   
}                                                                                                      }                                                                                                   
buffer = null;                                                                                         buffer = null;                                                                                      
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
return (Token[]) list.toArray(new Token[list.size()]);                                               | return list.toArray(new Token[list.size()]);                                                        
}                                                                                                      }                                                                                                   
