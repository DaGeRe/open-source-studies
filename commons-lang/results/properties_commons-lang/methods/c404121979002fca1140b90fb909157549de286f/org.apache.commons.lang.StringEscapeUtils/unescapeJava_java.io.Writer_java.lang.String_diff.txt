/**                                                                                                    /**                                                                                                 
* &lt;p&gt;Unescapes any Java literals found in the &lt;code&gt;String&lt;/code&gt; to a               * &lt;p&gt;Unescapes any Java literals found in the &lt;code&gt;String&lt;/code&gt; to a            
* &lt;code&gt;Writer&lt;/code&gt;.&lt;/p&gt;                                                           * &lt;code&gt;Writer&lt;/code&gt;.&lt;/p&gt;                                                        
*                                                                                                      *                                                                                                   
* &lt;p&gt;For example, it will turn a sequence of &lt;code&gt;'\'&lt;/code&gt; and                    * &lt;p&gt;For example, it will turn a sequence of &lt;code&gt;'\'&lt;/code&gt; and                 
* &lt;code&gt;'n'&lt;/code&gt; into a newline character, unless the &lt;code&gt;'\'&lt;/code&gt;       * &lt;code&gt;'n'&lt;/code&gt; into a newline character, unless the &lt;code&gt;'\'&lt;/code&gt;    
* is preceded by another &lt;code&gt;'\'&lt;/code&gt;.&lt;/p&gt;                                       * is preceded by another &lt;code&gt;'\'&lt;/code&gt;.&lt;/p&gt;                                    
*                                                                                                      *                                                                                                   
* &lt;p&gt;A &lt;code&gt;null&lt;/code&gt; string input has no effect.&lt;/p&gt;                       * &lt;p&gt;A &lt;code&gt;null&lt;/code&gt; string input has no effect.&lt;/p&gt;                    
*                                                                                                      *                                                                                                   
* @param out  the &lt;code&gt;Writer&lt;/code&gt; used to output unescaped characters                  * @param out  the &lt;code&gt;Writer&lt;/code&gt; used to output unescaped characters               
* @param str  the &lt;code&gt;String&lt;/code&gt; to unescape, may be null                             * @param str  the &lt;code&gt;String&lt;/code&gt; to unescape, may be null                          
* @throws IllegalArgumentException if the Writer is &lt;code&gt;null&lt;/code&gt;                      * @throws IllegalArgumentException if the Writer is &lt;code&gt;null&lt;/code&gt;                   
* @throws IOException if error occurs on underlying Writer                                             * @throws IOException if error occurs on underlying Writer                                          
*/                                                                                                     */                                                                                                  
public static void unescapeJava(Writer out, String str) throws IOException {                           public static void unescapeJava(Writer out, String str) throws IOException {                        
if (out == null) {                                                                                   | UnescapeUtils.UNESCAPE_JAVA.translate(str, out);                                                    
throw new IllegalArgumentException("The Writer must not be null");                                   |                                                                                                     
}                                                                                                      }                                                                                                   
if (str == null) {                                                                                   |                                                                                                     
return;                                                                                              |                                                                                                     
}                                                                                                    |                                                                                                     
int sz = str.length();                                                                               |                                                                                                     
StringBuffer unicode = new StringBuffer(4);                                                          |                                                                                                     
boolean hadSlash = false;                                                                            |                                                                                                     
boolean inUnicode = false;                                                                           |                                                                                                     
for (int i = 0; i &lt; sz; i++) {                                                                    |                                                                                                     
char ch = str.charAt(i);                                                                             |                                                                                                     
if (inUnicode) {                                                                                     |                                                                                                     
// if in unicode, then we're reading unicode                                                         |                                                                                                     
// values in somehow                                                                                 |                                                                                                     
unicode.append(ch);                                                                                  |                                                                                                     
if (unicode.length() == 4) {                                                                         |                                                                                                     
// unicode now contains the four hex digits                                                          |                                                                                                     
// which represents our unicode character                                                            |                                                                                                     
try {                                                                                                |                                                                                                     
int value = Integer.parseInt(unicode.toString(), 16);                                                |                                                                                                     
out.write((char) value);                                                                             |                                                                                                     
unicode.setLength(0);                                                                                |                                                                                                     
inUnicode = false;                                                                                   |                                                                                                     
hadSlash = false;                                                                                    |                                                                                                     
} catch (NumberFormatException nfe) {                                                                |                                                                                                     
throw new UnhandledException("Unable to parse unicode value: " + unicode, nfe);                      |                                                                                                     
}                                                                                                    |                                                                                                     
}                                                                                                    |                                                                                                     
continue;                                                                                            |                                                                                                     
}                                                                                                    |                                                                                                     
if (hadSlash) {                                                                                      |                                                                                                     
// handle an escaped value                                                                           |                                                                                                     
hadSlash = false;                                                                                    |                                                                                                     
switch(ch) {                                                                                         |                                                                                                     
case '\\':                                                                                           |                                                                                                     
out.write('\\');                                                                                     |                                                                                                     
break;                                                                                               |                                                                                                     
case '\'':                                                                                           |                                                                                                     
out.write('\'');                                                                                     |                                                                                                     
break;                                                                                               |                                                                                                     
case '\"':                                                                                           |                                                                                                     
out.write('"');                                                                                      |                                                                                                     
break;                                                                                               |                                                                                                     
case 'r':                                                                                            |                                                                                                     
out.write('\r');                                                                                     |                                                                                                     
break;                                                                                               |                                                                                                     
case 'f':                                                                                            |                                                                                                     
out.write('\f');                                                                                     |                                                                                                     
break;                                                                                               |                                                                                                     
case 't':                                                                                            |                                                                                                     
out.write('\t');                                                                                     |                                                                                                     
break;                                                                                               |                                                                                                     
case 'n':                                                                                            |                                                                                                     
out.write('\n');                                                                                     |                                                                                                     
break;                                                                                               |                                                                                                     
case 'b':                                                                                            |                                                                                                     
out.write('\b');                                                                                     |                                                                                                     
break;                                                                                               |                                                                                                     
case 'u':                                                                                            |                                                                                                     
{                                                                                                    |                                                                                                     
// uh-oh, we're in unicode country....                                                               |                                                                                                     
inUnicode = true;                                                                                    |                                                                                                     
break;                                                                                               |                                                                                                     
}                                                                                                    |                                                                                                     
default:                                                                                             |                                                                                                     
out.write(ch);                                                                                       |                                                                                                     
break;                                                                                               |                                                                                                     
}                                                                                                    |                                                                                                     
continue;                                                                                            |                                                                                                     
} else if (ch == '\\') {                                                                             |                                                                                                     
hadSlash = true;                                                                                     |                                                                                                     
continue;                                                                                            |                                                                                                     
}                                                                                                    |                                                                                                     
out.write(ch);                                                                                       |                                                                                                     
}                                                                                                    |                                                                                                     
if (hadSlash) {                                                                                      |                                                                                                     
// then we're in the weird case of a \ at the end of the                                             |                                                                                                     
// string, let's output it anyway.                                                                   |                                                                                                     
out.write('\\');                                                                                     |                                                                                                     
}                                                                                                    |                                                                                                     
}                                                                                                    |                                                                                                     
