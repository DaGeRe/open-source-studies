// -----------------------------------------------------------------------                             // -----------------------------------------------------------------------                          
// -----------------------------------------------------------------------                             // -----------------------------------------------------------------------                          
public void testNotEmptyMap1() {                                                                       public void testNotEmptyMap1() {                                                                    
Map&lt;String, Integer&gt; map = new HashMap&lt;String, Integer&gt;();                                 Map&lt;String, Integer&gt; map = new HashMap&lt;String, Integer&gt;();                              
try {                                                                                                  try {                                                                                               
Validate.notEmpty((Map&lt;?, ?&gt;) null);                                                             Validate.notEmpty((Map&lt;?, ?&gt;) null);                                                          
fail("Expecting NullPointerException");                                                                fail("Expecting NullPointerException");                                                             
} catch (NullPointerException ex) {                                                                    } catch (NullPointerException ex) {                                                                 
assertEquals("The validated map is empty", ex.getMessage());                                           assertEquals("The validated map is empty", ex.getMessage());                                        
}                                                                                                      }                                                                                                   
try {                                                                                                  try {                                                                                               
Validate.notEmpty(map);                                                                                Validate.notEmpty(map);                                                                             
fail("Expecting IllegalArgumentException");                                                            fail("Expecting IllegalArgumentException");                                                         
} catch (IllegalArgumentException ex) {                                                                } catch (IllegalArgumentException ex) {                                                             
assertEquals("The validated map is empty", ex.getMessage());                                           assertEquals("The validated map is empty", ex.getMessage());                                        
}                                                                                                      }                                                                                                   
map.put("ll", new Integer(8));                                                                       | map.put("ll", Integer.valueOf(8));                                                                  
Validate.notEmpty(map);                                                                                Validate.notEmpty(map);                                                                             
Map&lt;String, Integer&gt; test = Validate.notEmpty(map);                                              Map&lt;String, Integer&gt; test = Validate.notEmpty(map);                                           
assertSame(map, test);                                                                                 assertSame(map, test);                                                                              
}                                                                                                      }                                                                                                   
