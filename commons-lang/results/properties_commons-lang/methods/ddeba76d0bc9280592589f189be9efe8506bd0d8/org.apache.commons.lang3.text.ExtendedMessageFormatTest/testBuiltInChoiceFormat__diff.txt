// /**                                                                                                 // /**                                                                                              
// * Test extended formats with choice format.                                                         // * Test extended formats with choice format.                                                      
// *                                                                                                   // *                                                                                                
// * NOTE: FAILING - currently sub-formats not supported                                               // * NOTE: FAILING - currently sub-formats not supported                                            
// */                                                                                                  // */                                                                                               
// public void testExtendedWithChoiceFormat() {                                                        // public void testExtendedWithChoiceFormat() {                                                     
// String pattern = "Choice: {0,choice,1.0#{1,lower}|2.0#{1,upper}}";                                  // String pattern = "Choice: {0,choice,1.0#{1,lower}|2.0#{1,upper}}";                               
// ExtendedMessageFormat emf = new ExtendedMessageFormat(pattern, registry);                           // ExtendedMessageFormat emf = new ExtendedMessageFormat(pattern, registry);                        
// assertPatterns(null, pattern, emf.toPattern());                                                     // assertPatterns(null, pattern, emf.toPattern());                                                  
// try {                                                                                               // try {                                                                                            
// assertEquals("one", emf.format(new Object[] {new Integer(1), "ONE"}));                            | // assertEquals("one", emf.format(new Object[] {Integer.valueOf(1), "ONE"}));                       
// assertEquals("TWO", emf.format(new Object[] {new Integer(2), "two"}));                            | // assertEquals("TWO", emf.format(new Object[] {Integer.valueOf(2), "two"}));                       
// } catch (IllegalArgumentException e) {                                                              // } catch (IllegalArgumentException e) {                                                           
// // currently sub-formats not supported                                                              // // currently sub-formats not supported                                                           
// }                                                                                                   // }                                                                                                
// }                                                                                                   // }                                                                                                
// /**                                                                                                 // /**                                                                                              
// * Test mixed extended and built-in formats with choice format.                                      // * Test mixed extended and built-in formats with choice format.                                   
// *                                                                                                   // *                                                                                                
// * NOTE: FAILING - currently sub-formats not supported                                               // * NOTE: FAILING - currently sub-formats not supported                                            
// */                                                                                                  // */                                                                                               
// public void testExtendedAndBuiltInWithChoiceFormat() {                                              // public void testExtendedAndBuiltInWithChoiceFormat() {                                           
// String pattern = "Choice: {0,choice,1.0#{0} {1,lower} {2,number}|2.0#{0} {1,upper} {2,number,curr   // String pattern = "Choice: {0,choice,1.0#{0} {1,lower} {2,number}|2.0#{0} {1,upper} {2,number,curr
// Object[] lowArgs  = new Object[] {new Integer(1), "Low",  new Double("1234.56")};                 | // Object[] lowArgs  = new Object[] {Integer.valueOf(1), "Low",  new Double("1234.56")};            
// Object[] highArgs = new Object[] {new Integer(2), "High", new Double("9876.54")};                 | // Object[] highArgs = new Object[] {Integer.valueOf(2), "High", new Double("9876.54")};            
// Locale[] availableLocales = ChoiceFormat.getAvailableLocales();                                     // Locale[] availableLocales = ChoiceFormat.getAvailableLocales();                                  
// Locale[] testLocales = new Locale[availableLocales.length + 1];                                     // Locale[] testLocales = new Locale[availableLocales.length + 1];                                  
// testLocales[0] = null;                                                                              // testLocales[0] = null;                                                                           
// System.arraycopy(availableLocales, 0, testLocales, 1, availableLocales.length);                     // System.arraycopy(availableLocales, 0, testLocales, 1, availableLocales.length);                  
// for (int i = 0; i &lt; testLocales.length; i++) {                                                   // for (int i = 0; i &lt; testLocales.length; i++) {                                                
// NumberFormat nf = null;                                                                             // NumberFormat nf = null;                                                                          
// NumberFormat cf = null;                                                                             // NumberFormat cf = null;                                                                          
// ExtendedMessageFormat emf = null;                                                                   // ExtendedMessageFormat emf = null;                                                                
// if (testLocales[i] == null) {                                                                       // if (testLocales[i] == null) {                                                                    
// nf = NumberFormat.getNumberInstance();                                                              // nf = NumberFormat.getNumberInstance();                                                           
// cf = NumberFormat.getCurrencyInstance();                                                            // cf = NumberFormat.getCurrencyInstance();                                                         
// emf = new ExtendedMessageFormat(pattern, registry);                                                 // emf = new ExtendedMessageFormat(pattern, registry);                                              
// } else {                                                                                            // } else {                                                                                         
// nf = NumberFormat.getNumberInstance(testLocales[i]);                                                // nf = NumberFormat.getNumberInstance(testLocales[i]);                                             
// cf = NumberFormat.getCurrencyInstance(testLocales[i]);                                              // cf = NumberFormat.getCurrencyInstance(testLocales[i]);                                           
// emf = new ExtendedMessageFormat(pattern, testLocales[i], registry);                                 // emf = new ExtendedMessageFormat(pattern, testLocales[i], registry);                              
// }                                                                                                   // }                                                                                                
// assertPatterns(null, pattern, emf.toPattern());                                                     // assertPatterns(null, pattern, emf.toPattern());                                                  
// try {                                                                                               // try {                                                                                            
// String lowExpected = lowArgs[0] + " low "    + nf.format(lowArgs[2]);                               // String lowExpected = lowArgs[0] + " low "    + nf.format(lowArgs[2]);                            
// String highExpected = highArgs[0] + " HIGH "  + cf.format(highArgs[2]);                             // String highExpected = highArgs[0] + " HIGH "  + cf.format(highArgs[2]);                          
// assertEquals(lowExpected,  emf.format(lowArgs));                                                    // assertEquals(lowExpected,  emf.format(lowArgs));                                                 
// assertEquals(highExpected, emf.format(highArgs));                                                   // assertEquals(highExpected, emf.format(highArgs));                                                
// } catch (IllegalArgumentException e) {                                                              // } catch (IllegalArgumentException e) {                                                           
// // currently sub-formats not supported                                                              // // currently sub-formats not supported                                                           
// }                                                                                                   // }                                                                                                
// }                                                                                                   // }                                                                                                
// }                                                                                                   // }                                                                                                
/**                                                                                                    /**                                                                                                 
* Test the built in choice format.                                                                     * Test the built in choice format.                                                                  
*/                                                                                                     */                                                                                                  
public void testBuiltInChoiceFormat() {                                                                public void testBuiltInChoiceFormat() {                                                             
Object[] values = new Number[] { new Integer(1), new Double("2.2"), new Double("1234.5") };          | Object[] values = new Number[] { Integer.valueOf(1), new Double("2.2"), new Double("1234.5") };     
String choicePattern = null;                                                                           String choicePattern = null;                                                                        
Locale[] availableLocales = ChoiceFormat.getAvailableLocales();                                        Locale[] availableLocales = ChoiceFormat.getAvailableLocales();                                     
choicePattern = "{0,choice,1#One|2#Two|3#Many {0,number}}";                                            choicePattern = "{0,choice,1#One|2#Two|3#Many {0,number}}";                                         
for (Object value : values) {                                                                          for (Object value : values) {                                                                       
checkBuiltInFormat(value + ": " + choicePattern, new Object[] { value }, availableLocales);            checkBuiltInFormat(value + ": " + choicePattern, new Object[] { value }, availableLocales);         
}                                                                                                      }                                                                                                   
choicePattern = "{0,choice,1#''One''|2#\"Two\"|3#''{Many}'' {0,number}}";                              choicePattern = "{0,choice,1#''One''|2#\"Two\"|3#''{Many}'' {0,number}}";                           
for (Object value : values) {                                                                          for (Object value : values) {                                                                       
checkBuiltInFormat(value + ": " + choicePattern, new Object[] { value }, availableLocales);            checkBuiltInFormat(value + ": " + choicePattern, new Object[] { value }, availableLocales);         
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
