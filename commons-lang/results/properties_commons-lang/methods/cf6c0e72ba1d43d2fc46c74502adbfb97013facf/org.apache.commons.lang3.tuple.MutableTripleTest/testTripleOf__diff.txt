@Test                                                                                                  @Test                                                                                               
public void testTripleOf() throws Exception {                                                          public void testTripleOf() throws Exception {                                                       
MutableTriple&lt;Integer, String, Boolean&gt; triple = MutableTriple.of(0, "foo", Boolean.TRUE);       MutableTriple&lt;Integer, String, Boolean&gt; triple = MutableTriple.of(0, "foo", Boolean.TRUE);    
assertEquals(0, triple.getLeft().intValue());                                                          assertEquals(0, triple.getLeft().intValue());                                                       
assertEquals("foo", triple.getMiddle());                                                               assertEquals("foo", triple.getMiddle());                                                            
assertTrue(triple.getRight());                                                                       | assertEquals(Boolean.TRUE, triple.getRight());                                                      
MutableTriple&lt;Object, String, String&gt; triple2 = MutableTriple.of(null, "bar", "hello");          MutableTriple&lt;Object, String, String&gt; triple2 = MutableTriple.of(null, "bar", "hello");       
assertNull(triple2.getLeft());                                                                         assertNull(triple2.getLeft());                                                                      
assertEquals("bar", triple2.getMiddle());                                                              assertEquals("bar", triple2.getMiddle());                                                           
assertEquals("hello", triple2.getRight());                                                             assertEquals("hello", triple2.getRight());                                                          
}                                                                                                      }                                                                                                   
