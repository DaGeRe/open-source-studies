@Test
public void testTripleOf() throws Exception {
    Triple<Integer, String, Boolean> triple = Triple.of(0, "foo", Boolean.TRUE);
    assertTrue(triple instanceof ImmutableTriple<?, ?, ?>);
    assertEquals(0, ((ImmutableTriple<Integer, String, Boolean>) triple).left.intValue());
    assertEquals("foo", ((ImmutableTriple<Integer, String, Boolean>) triple).middle);
    assertEquals(Boolean.TRUE, ((ImmutableTriple<Integer, String, Boolean>) triple).right);
    Triple<Object, String, Long> triple2 = Triple.of(null, "bar", Long.valueOf(200L));
    assertTrue(triple2 instanceof ImmutableTriple<?, ?, ?>);
    assertNull(((ImmutableTriple<Object, String, Long>) triple2).left);
    assertEquals("bar", ((ImmutableTriple<Object, String, Long>) triple2).middle);
    assertEquals(new Long(200L), ((ImmutableTriple<Object, String, Long>) triple2).right);
}