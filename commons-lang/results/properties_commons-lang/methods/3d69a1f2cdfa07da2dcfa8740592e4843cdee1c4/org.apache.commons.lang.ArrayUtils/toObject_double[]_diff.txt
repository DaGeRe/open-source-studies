/**                                                                                                    /**                                                                                                 
* &lt;p&gt;Converts an array of primitive doubles to objects.&lt;/p&gt;                                * &lt;p&gt;Converts an array of primitive doubles to objects.&lt;/p&gt;                             
*                                                                                                      *                                                                                                   
* &lt;p&gt;This method returns &lt;code&gt;null&lt;/code&gt; for a &lt;code&gt;null&lt;/code&gt; inp   * &lt;p&gt;This method returns &lt;code&gt;null&lt;/code&gt; for a &lt;code&gt;null&lt;/code&gt; inp
*                                                                                                      *                                                                                                   
* @param array  a &lt;code&gt;double&lt;/code&gt; array                                                * @param array  a &lt;code&gt;double&lt;/code&gt; array                                             
* @return a &lt;code&gt;Double&lt;/code&gt; array, &lt;code&gt;null&lt;/code&gt; if null array input   * @return a &lt;code&gt;Double&lt;/code&gt; array, &lt;code&gt;null&lt;/code&gt; if null array input
*/                                                                                                     */                                                                                                  
public static Double[] toObject(double[] array) {                                                      public static Double[] toObject(double[] array) {                                                   
if (array == null) {                                                                                   if (array == null) {                                                                                
return null;                                                                                           return null;                                                                                        
} else if (array.length == 0) {                                                                        } else if (array.length == 0) {                                                                     
return EMPTY_DOUBLE_OBJECT_ARRAY;                                                                      return EMPTY_DOUBLE_OBJECT_ARRAY;                                                                   
}                                                                                                      }                                                                                                   
final Double[] result = new Double[array.length];                                                      final Double[] result = new Double[array.length];                                                   
for (int i = 0; i &lt; array.length; i++) {                                                            for (int i = 0; i &lt; array.length; i++) {                                                         
result[i] = new Double(array[i]);                                                                    | result[i] = Double.valueOf(array[i]);                                                               
}                                                                                                      }                                                                                                   
return result;                                                                                         return result;                                                                                      
}                                                                                                      }                                                                                                   
