/**                                                                                                    /**                                                                                                 
* &lt;p&gt;Removes diacritics (~= accents) from a string. The case will not be altered.&lt;/p&gt;      * &lt;p&gt;Removes diacritics (~= accents) from a string. The case will not be altered.&lt;/p&gt;   
* &lt;p&gt;For instance, '&agrave;' will be replaced by 'a'.&lt;/p&gt;                                 * &lt;p&gt;For instance, '&agrave;' will be replaced by 'a'.&lt;/p&gt;                              
* &lt;p&gt;Note that ligatures will be left as is.&lt;/p&gt;                                           * &lt;p&gt;Note that ligatures will be left as is.&lt;/p&gt;                                        
*                                                                                                      *                                                                                                   
* &lt;p&gt;This method will use the first available implementation of:                                 * &lt;p&gt;This method will use the first available implementation of:                              
* Java 6's {@link java.text.Normalizer}, Java 1.3&ndash;1.5's {@code sun.text.Normalizer}&lt;/p&gt;    * Java 6's {@link java.text.Normalizer}, Java 1.3&ndash;1.5's {@code sun.text.Normalizer}&lt;/p&gt; 
*                                                                                                      *                                                                                                   
* &lt;pre&gt;                                                                                          * &lt;pre&gt;                                                                                       
* StringUtils.stripAccents(null)                = null                                                 * StringUtils.stripAccents(null)                = null                                              
* StringUtils.stripAccents("")                  = ""                                                   * StringUtils.stripAccents("")                  = ""                                                
* StringUtils.stripAccents("control")           = "control"                                            * StringUtils.stripAccents("control")           = "control"                                         
* StringUtils.stripAccents("&ecute;clair")      = "eclair"                                             * StringUtils.stripAccents("&ecute;clair")      = "eclair"                                          
* &lt;/pre&gt;                                                                                         * &lt;/pre&gt;                                                                                      
*                                                                                                      *                                                                                                   
* @param input String to be stripped                                                                   * @param input String to be stripped                                                                
* @return input text with diacritics removed                                                           * @return input text with diacritics removed                                                        
*                                                                                                      *                                                                                                   
* @since 3.0                                                                                           * @since 3.0                                                                                        
*/                                                                                                     */                                                                                                  
// See also Lucene's ASCIIFoldingFilter (Lucene 2.9) that replaces accented characters by their unac   // See also Lucene's ASCIIFoldingFilter (Lucene 2.9) that replaces accented characters by their unac
public static String stripAccents(CharSequence input) {                                                public static String stripAccents(CharSequence input) {                                             
if (input == null) {                                                                                   if (input == null) {                                                                                
return null;                                                                                           return null;                                                                                        
}                                                                                                      }                                                                                                   
try {                                                                                                  try {                                                                                               
String result = null;                                                                                  String result = null;                                                                               
if (java6Available) {                                                                                  if (java6Available) {                                                                               
result = removeAccentsJava6(input);                                                                    result = removeAccentsJava6(input);                                                                 
} else if (sunAvailable) {                                                                             } else if (sunAvailable) {                                                                          
result = removeAccentsSUN(input);                                                                      result = removeAccentsSUN(input);                                                                   
} else {                                                                                               } else {                                                                                            
throw new UnsupportedOperationException("The stripAccents(CharSequence) method requires at least Jav | throw new UnsupportedOperationException("The stripAccents(CharSequence) method requires at least Jav
}                                                                                                      }                                                                                                   
// Note that none of the above methods correctly remove ligatures...                                   // Note that none of the above methods correctly remove ligatures...                                
return result;                                                                                         return result;                                                                                      
} catch (IllegalArgumentException iae) {                                                               } catch (IllegalArgumentException iae) {                                                            
throw new RuntimeException("IllegalArgumentException occurred during 1.6 backcompat code", iae);     | throw new RuntimeException("IllegalArgumentException occurred", iae);                               
} catch (IllegalAccessException iae) {                                                                 } catch (IllegalAccessException iae) {                                                              
throw new RuntimeException("IllegalAccessException occurred during 1.6 backcompat code", iae);       | throw new RuntimeException("IllegalAccessException occurred", iae);                                 
} catch (InvocationTargetException ite) {                                                              } catch (InvocationTargetException ite) {                                                           
throw new RuntimeException("InvocationTargetException occurred during 1.6 backcompat code", ite);    | throw new RuntimeException("InvocationTargetException occurred", ite);                              
} catch (SecurityException se) {                                                                       } catch (SecurityException se) {                                                                    
throw new RuntimeException("SecurityException occurred during 1.6 backcompat code", se);             | throw new RuntimeException("SecurityException occurred", se);                                       
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
