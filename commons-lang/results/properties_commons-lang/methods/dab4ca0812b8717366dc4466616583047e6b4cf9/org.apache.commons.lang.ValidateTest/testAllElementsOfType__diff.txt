// -----------------------------------------------------------------------                             // -----------------------------------------------------------------------                          
                                                                                                     | // -----------------------------------------------------------------------                          
public void testAllElementsOfType() {                                                                  public void testAllElementsOfType() {                                                               
List&lt;Object&gt; coll = new ArrayList&lt;Object&gt;();                                               List&lt;Object&gt; coll = new ArrayList&lt;Object&gt;();                                            
coll.add("a");                                                                                         coll.add("a");                                                                                      
coll.add("b");                                                                                         coll.add("b");                                                                                      
Validate.allElementsOfType(coll, String.class, "MSG");                                                 Validate.allElementsOfType(coll, String.class, "MSG");                                              
Validate.allElementsOfType(coll, String.class);                                                        Validate.allElementsOfType(coll, String.class);                                                     
try {                                                                                                  try {                                                                                               
Validate.allElementsOfType(coll, Integer.class, "MSG");                                                Validate.allElementsOfType(coll, Integer.class, "MSG");                                             
fail("Expecting IllegalArgumentException");                                                            fail("Expecting IllegalArgumentException");                                                         
} catch (IllegalArgumentException ex) {                                                                } catch (IllegalArgumentException ex) {                                                             
assertEquals("MSG", ex.getMessage());                                                                  assertEquals("MSG", ex.getMessage());                                                               
}                                                                                                      }                                                                                                   
coll.set(1, Boolean.FALSE);                                                                            coll.set(1, Boolean.FALSE);                                                                         
try {                                                                                                  try {                                                                                               
Validate.allElementsOfType(coll, String.class);                                                        Validate.allElementsOfType(coll, String.class);                                                     
fail("Expecting IllegalArgumentException");                                                            fail("Expecting IllegalArgumentException");                                                         
} catch (IllegalArgumentException ex) {                                                                } catch (IllegalArgumentException ex) {                                                             
assertEquals("The validated collection contains an element not of type java.lang.String at index: 1"   assertEquals("The validated collection contains an element not of type java.lang.String at index: 1"
}                                                                                                      }                                                                                                   
coll = new ArrayList&lt;Object&gt;();                                                                  coll = new ArrayList&lt;Object&gt;();                                                               
coll.add(new Integer(5));                                                                              coll.add(new Integer(5));                                                                           
coll.add(new Double(2.0d));                                                                            coll.add(new Double(2.0d));                                                                         
Validate.allElementsOfType(coll, Number.class, "MSG");                                                 Validate.allElementsOfType(coll, Number.class, "MSG");                                              
try {                                                                                                  try {                                                                                               
Validate.allElementsOfType(coll, Integer.class, "MSG");                                                Validate.allElementsOfType(coll, Integer.class, "MSG");                                             
fail("Expecting IllegalArgumentException");                                                            fail("Expecting IllegalArgumentException");                                                         
} catch (IllegalArgumentException ex) {                                                                } catch (IllegalArgumentException ex) {                                                             
assertEquals("MSG", ex.getMessage());                                                                  assertEquals("MSG", ex.getMessage());                                                               
}                                                                                                      }                                                                                                   
try {                                                                                                  try {                                                                                               
Validate.allElementsOfType(coll, Double.class, "MSG");                                                 Validate.allElementsOfType(coll, Double.class, "MSG");                                              
fail("Expecting IllegalArgumentException");                                                            fail("Expecting IllegalArgumentException");                                                         
} catch (IllegalArgumentException ex) {                                                                } catch (IllegalArgumentException ex) {                                                             
assertEquals("MSG", ex.getMessage());                                                                  assertEquals("MSG", ex.getMessage());                                                               
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
