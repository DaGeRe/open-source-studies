                                                                                                     | @Test                                                                                               
public void testWriteDeclaredNamedStaticFieldForceAccess() throws Exception {                          public void testWriteDeclaredNamedStaticFieldForceAccess() throws Exception {                       
FieldUtils.writeDeclaredStaticField(StaticContainer.class, "mutablePublic", "new", true);              FieldUtils.writeDeclaredStaticField(StaticContainer.class, "mutablePublic", "new", true);           
assertEquals("new", StaticContainer.mutablePublic);                                                    assertEquals("new", StaticContainer.mutablePublic);                                                 
FieldUtils.writeDeclaredStaticField(StaticContainer.class, "mutableProtected", "new", true);           FieldUtils.writeDeclaredStaticField(StaticContainer.class, "mutableProtected", "new", true);        
assertEquals("new", StaticContainer.getMutableProtected());                                            assertEquals("new", StaticContainer.getMutableProtected());                                         
FieldUtils.writeDeclaredStaticField(StaticContainer.class, "mutablePackage", "new", true);             FieldUtils.writeDeclaredStaticField(StaticContainer.class, "mutablePackage", "new", true);          
assertEquals("new", StaticContainer.getMutablePackage());                                              assertEquals("new", StaticContainer.getMutablePackage());                                           
FieldUtils.writeDeclaredStaticField(StaticContainer.class, "mutablePrivate", "new", true);             FieldUtils.writeDeclaredStaticField(StaticContainer.class, "mutablePrivate", "new", true);          
assertEquals("new", StaticContainer.getMutablePrivate());                                              assertEquals("new", StaticContainer.getMutablePrivate());                                           
try {                                                                                                  try {                                                                                               
FieldUtils.writeDeclaredStaticField(StaticContainer.class, "IMMUTABLE_PUBLIC", "new", true);           FieldUtils.writeDeclaredStaticField(StaticContainer.class, "IMMUTABLE_PUBLIC", "new", true);        
fail("Expected IllegalAccessException");                                                               fail("Expected IllegalAccessException");                                                            
} catch (IllegalAccessException e) {                                                                   } catch (IllegalAccessException e) {                                                                
// pass                                                                                                // pass                                                                                             
}                                                                                                      }                                                                                                   
try {                                                                                                  try {                                                                                               
FieldUtils.writeDeclaredStaticField(StaticContainer.class, "IMMUTABLE_PROTECTED", "new", true);        FieldUtils.writeDeclaredStaticField(StaticContainer.class, "IMMUTABLE_PROTECTED", "new", true);     
fail("Expected IllegalAccessException");                                                               fail("Expected IllegalAccessException");                                                            
} catch (IllegalAccessException e) {                                                                   } catch (IllegalAccessException e) {                                                                
// pass                                                                                                // pass                                                                                             
}                                                                                                      }                                                                                                   
try {                                                                                                  try {                                                                                               
FieldUtils.writeDeclaredStaticField(StaticContainer.class, "IMMUTABLE_PACKAGE", "new", true);          FieldUtils.writeDeclaredStaticField(StaticContainer.class, "IMMUTABLE_PACKAGE", "new", true);       
fail("Expected IllegalAccessException");                                                               fail("Expected IllegalAccessException");                                                            
} catch (IllegalAccessException e) {                                                                   } catch (IllegalAccessException e) {                                                                
// pass                                                                                                // pass                                                                                             
}                                                                                                      }                                                                                                   
try {                                                                                                  try {                                                                                               
FieldUtils.writeDeclaredStaticField(StaticContainer.class, "IMMUTABLE_PRIVATE", "new", true);          FieldUtils.writeDeclaredStaticField(StaticContainer.class, "IMMUTABLE_PRIVATE", "new", true);       
fail("Expected IllegalAccessException");                                                               fail("Expected IllegalAccessException");                                                            
} catch (IllegalAccessException e) {                                                                   } catch (IllegalAccessException e) {                                                                
// pass                                                                                                // pass                                                                                             
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
