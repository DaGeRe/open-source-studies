public void testIterator() {                                                                           public void testIterator() {                                                                        
CharRange a = CharRange.is('a');                                                                       CharRange a = CharRange.is('a');                                                                    
CharRange ad = CharRange.isIn('a', 'd');                                                               CharRange ad = CharRange.isIn('a', 'd');                                                            
CharRange nota = CharRange.isNot('a');                                                                 CharRange nota = CharRange.isNot('a');                                                              
CharRange emptySet = CharRange.isNotIn((char) 0, Character.MAX_VALUE);                                 CharRange emptySet = CharRange.isNotIn((char) 0, Character.MAX_VALUE);                              
CharRange notFirst = CharRange.isNotIn((char) 1, Character.MAX_VALUE);                                 CharRange notFirst = CharRange.isNotIn((char) 1, Character.MAX_VALUE);                              
CharRange notLast = CharRange.isNotIn((char) 0, (char) (Character.MAX_VALUE - 1));                     CharRange notLast = CharRange.isNotIn((char) 0, (char) (Character.MAX_VALUE - 1));                  
Iterator aIt = a.iterator();                                                                         | Iterator&lt;Character&gt; aIt = a.iterator();                                                       
assertNotNull(aIt);                                                                                    assertNotNull(aIt);                                                                                 
assertTrue(aIt.hasNext());                                                                             assertTrue(aIt.hasNext());                                                                          
assertEquals(Character.valueOf('a'), aIt.next());                                                      assertEquals(Character.valueOf('a'), aIt.next());                                                   
assertFalse(aIt.hasNext());                                                                            assertFalse(aIt.hasNext());                                                                         
Iterator adIt = ad.iterator();                                                                       | Iterator&lt;Character&gt; adIt = ad.iterator();                                                     
assertNotNull(adIt);                                                                                   assertNotNull(adIt);                                                                                
assertTrue(adIt.hasNext());                                                                            assertTrue(adIt.hasNext());                                                                         
assertEquals(Character.valueOf('a'), adIt.next());                                                     assertEquals(Character.valueOf('a'), adIt.next());                                                  
assertEquals(Character.valueOf('b'), adIt.next());                                                     assertEquals(Character.valueOf('b'), adIt.next());                                                  
assertEquals(Character.valueOf('c'), adIt.next());                                                     assertEquals(Character.valueOf('c'), adIt.next());                                                  
assertEquals(Character.valueOf('d'), adIt.next());                                                     assertEquals(Character.valueOf('d'), adIt.next());                                                  
assertFalse(adIt.hasNext());                                                                           assertFalse(adIt.hasNext());                                                                        
Iterator notaIt = nota.iterator();                                                                   | Iterator&lt;Character&gt; notaIt = nota.iterator();                                                 
assertNotNull(notaIt);                                                                                 assertNotNull(notaIt);                                                                              
assertTrue(notaIt.hasNext());                                                                          assertTrue(notaIt.hasNext());                                                                       
while (notaIt.hasNext()) {                                                                             while (notaIt.hasNext()) {                                                                          
Character c = (Character) notaIt.next();                                                             | Character c = notaIt.next();                                                                        
assertFalse('a' == c.charValue());                                                                     assertFalse('a' == c.charValue());                                                                  
}                                                                                                      }                                                                                                   
Iterator emptySetIt = emptySet.iterator();                                                           | Iterator&lt;Character&gt; emptySetIt = emptySet.iterator();                                         
assertNotNull(emptySetIt);                                                                             assertNotNull(emptySetIt);                                                                          
assertFalse(emptySetIt.hasNext());                                                                     assertFalse(emptySetIt.hasNext());                                                                  
try {                                                                                                  try {                                                                                               
emptySetIt.next();                                                                                     emptySetIt.next();                                                                                  
fail("Should throw NoSuchElementException");                                                           fail("Should throw NoSuchElementException");                                                        
} catch (NoSuchElementException e) {                                                                   } catch (NoSuchElementException e) {                                                                
assertTrue(true);                                                                                      assertTrue(true);                                                                                   
}                                                                                                      }                                                                                                   
Iterator notFirstIt = notFirst.iterator();                                                           | Iterator&lt;Character&gt; notFirstIt = notFirst.iterator();                                         
assertNotNull(notFirstIt);                                                                             assertNotNull(notFirstIt);                                                                          
assertTrue(notFirstIt.hasNext());                                                                      assertTrue(notFirstIt.hasNext());                                                                   
assertEquals(Character.valueOf((char) 0), notFirstIt.next());                                          assertEquals(Character.valueOf((char) 0), notFirstIt.next());                                       
assertFalse(notFirstIt.hasNext());                                                                     assertFalse(notFirstIt.hasNext());                                                                  
try {                                                                                                  try {                                                                                               
notFirstIt.next();                                                                                     notFirstIt.next();                                                                                  
fail("Should throw NoSuchElementException");                                                           fail("Should throw NoSuchElementException");                                                        
} catch (NoSuchElementException e) {                                                                   } catch (NoSuchElementException e) {                                                                
assertTrue(true);                                                                                      assertTrue(true);                                                                                   
}                                                                                                      }                                                                                                   
Iterator notLastIt = notLast.iterator();                                                             | Iterator&lt;Character&gt; notLastIt = notLast.iterator();                                           
assertNotNull(notLastIt);                                                                              assertNotNull(notLastIt);                                                                           
assertTrue(notLastIt.hasNext());                                                                       assertTrue(notLastIt.hasNext());                                                                    
assertEquals(Character.valueOf(Character.MAX_VALUE), notLastIt.next());                                assertEquals(Character.valueOf(Character.MAX_VALUE), notLastIt.next());                             
assertFalse(notLastIt.hasNext());                                                                      assertFalse(notLastIt.hasNext());                                                                   
try {                                                                                                  try {                                                                                               
notLastIt.next();                                                                                      notLastIt.next();                                                                                   
fail("Should throw NoSuchElementException");                                                           fail("Should throw NoSuchElementException");                                                        
} catch (NoSuchElementException e) {                                                                   } catch (NoSuchElementException e) {                                                                
assertTrue(true);                                                                                      assertTrue(true);                                                                                   
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
