                                                                                                     | @Test                                                                                               
public void testMultiCharArray() {                                                                     public void testMultiCharArray() {                                                                  
char[][] array1 = new char[2][2];                                                                      char[][] array1 = new char[2][2];                                                                   
char[][] array2 = new char[2][2];                                                                      char[][] array2 = new char[2][2];                                                                   
char[][] array3 = new char[2][3];                                                                      char[][] array3 = new char[2][3];                                                                   
for (short i = 0; i &lt; array1.length; ++i) {                                                         for (short i = 0; i &lt; array1.length; ++i) {                                                      
for (short j = 0; j &lt; array1[0].length; j++) {                                                      for (short j = 0; j &lt; array1[0].length; j++) {                                                   
array1[i][j] = (char) ((i + 1) * (j + 1));                                                             array1[i][j] = (char) ((i + 1) * (j + 1));                                                          
array2[i][j] = (char) ((i + 1) * (j + 1));                                                             array2[i][j] = (char) ((i + 1) * (j + 1));                                                          
array3[i][j] = (char) ((i + 1) * (j + 1));                                                             array3[i][j] = (char) ((i + 1) * (j + 1));                                                          
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
array3[1][2] = 100;                                                                                    array3[1][2] = 100;                                                                                 
array3[1][2] = 100;                                                                                    array3[1][2] = 100;                                                                                 
assertTrue(new CompareToBuilder().append(array1, array1).toComparison() == 0);                         assertTrue(new CompareToBuilder().append(array1, array1).toComparison() == 0);                      
assertTrue(new CompareToBuilder().append(array1, array2).toComparison() == 0);                         assertTrue(new CompareToBuilder().append(array1, array2).toComparison() == 0);                      
assertTrue(new CompareToBuilder().append(array1, array3).toComparison() &lt; 0);                       assertTrue(new CompareToBuilder().append(array1, array3).toComparison() &lt; 0);                    
assertTrue(new CompareToBuilder().append(array3, array1).toComparison() &gt; 0);                       assertTrue(new CompareToBuilder().append(array3, array1).toComparison() &gt; 0);                    
array1[1][1] = 200;                                                                                    array1[1][1] = 200;                                                                                 
assertTrue(new CompareToBuilder().append(array1, array2).toComparison() &gt; 0);                       assertTrue(new CompareToBuilder().append(array1, array2).toComparison() &gt; 0);                    
assertTrue(new CompareToBuilder().append(array2, array1).toComparison() &lt; 0);                       assertTrue(new CompareToBuilder().append(array2, array1).toComparison() &lt; 0);                    
}                                                                                                      }                                                                                                   
