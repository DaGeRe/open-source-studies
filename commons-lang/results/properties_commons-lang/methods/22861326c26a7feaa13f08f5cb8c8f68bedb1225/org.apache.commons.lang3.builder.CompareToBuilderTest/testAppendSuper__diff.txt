                                                                                                     | @Test                                                                                               
public void testAppendSuper() {                                                                        public void testAppendSuper() {                                                                     
TestObject o1 = new TestObject(4);                                                                     TestObject o1 = new TestObject(4);                                                                  
TestObject o2 = new TestObject(5);                                                                     TestObject o2 = new TestObject(5);                                                                  
assertTrue(new CompareToBuilder().appendSuper(0).append(o1, o1).toComparison() == 0);                  assertTrue(new CompareToBuilder().appendSuper(0).append(o1, o1).toComparison() == 0);               
assertTrue(new CompareToBuilder().appendSuper(0).append(o1, o2).toComparison() &lt; 0);                assertTrue(new CompareToBuilder().appendSuper(0).append(o1, o2).toComparison() &lt; 0);             
assertTrue(new CompareToBuilder().appendSuper(0).append(o2, o1).toComparison() &gt; 0);                assertTrue(new CompareToBuilder().appendSuper(0).append(o2, o1).toComparison() &gt; 0);             
assertTrue(new CompareToBuilder().appendSuper(-1).append(o1, o1).toComparison() &lt; 0);               assertTrue(new CompareToBuilder().appendSuper(-1).append(o1, o1).toComparison() &lt; 0);            
assertTrue(new CompareToBuilder().appendSuper(-1).append(o1, o2).toComparison() &lt; 0);               assertTrue(new CompareToBuilder().appendSuper(-1).append(o1, o2).toComparison() &lt; 0);            
assertTrue(new CompareToBuilder().appendSuper(1).append(o1, o1).toComparison() &gt; 0);                assertTrue(new CompareToBuilder().appendSuper(1).append(o1, o1).toComparison() &gt; 0);             
assertTrue(new CompareToBuilder().appendSuper(1).append(o1, o2).toComparison() &gt; 0);                assertTrue(new CompareToBuilder().appendSuper(1).append(o1, o2).toComparison() &gt; 0);             
}                                                                                                      }                                                                                                   
