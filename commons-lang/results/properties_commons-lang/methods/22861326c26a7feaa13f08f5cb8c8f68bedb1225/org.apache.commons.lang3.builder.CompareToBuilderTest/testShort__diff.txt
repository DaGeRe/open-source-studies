                                                                                                     | @Test                                                                                               
public void testShort() {                                                                              public void testShort() {                                                                           
short o1 = 1;                                                                                          short o1 = 1;                                                                                       
short o2 = 2;                                                                                          short o2 = 2;                                                                                       
assertTrue(new CompareToBuilder().append(o1, o1).toComparison() == 0);                                 assertTrue(new CompareToBuilder().append(o1, o1).toComparison() == 0);                              
assertTrue(new CompareToBuilder().append(o1, o2).toComparison() &lt; 0);                               assertTrue(new CompareToBuilder().append(o1, o2).toComparison() &lt; 0);                            
assertTrue(new CompareToBuilder().append(o2, o1).toComparison() &gt; 0);                               assertTrue(new CompareToBuilder().append(o2, o1).toComparison() &gt; 0);                            
assertTrue(new CompareToBuilder().append(o1, Short.MAX_VALUE).toComparison() &lt; 0);                  assertTrue(new CompareToBuilder().append(o1, Short.MAX_VALUE).toComparison() &lt; 0);               
assertTrue(new CompareToBuilder().append(Short.MAX_VALUE, o1).toComparison() &gt; 0);                  assertTrue(new CompareToBuilder().append(Short.MAX_VALUE, o1).toComparison() &gt; 0);               
assertTrue(new CompareToBuilder().append(o1, Short.MIN_VALUE).toComparison() &gt; 0);                  assertTrue(new CompareToBuilder().append(o1, Short.MIN_VALUE).toComparison() &gt; 0);               
assertTrue(new CompareToBuilder().append(Short.MIN_VALUE, o1).toComparison() &lt; 0);                  assertTrue(new CompareToBuilder().append(Short.MIN_VALUE, o1).toComparison() &lt; 0);               
}                                                                                                      }                                                                                                   
