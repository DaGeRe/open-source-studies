public void testMultiByteArray() {
    byte[][] array1 = new byte[2][2];
    byte[][] array2 = new byte[2][2];
    byte[][] array3 = new byte[2][3];
    for (byte i = 0; i < array1.length; ++i) {
        for (byte j = 0; j < array1[0].length; j++) {
            array1[i][j] = (byte) ((i + 1) * (j + 1));
            array2[i][j] = (byte) ((i + 1) * (j + 1));
            array3[i][j] = (byte) ((i + 1) * (j + 1));
        }
    }
    array3[1][2] = 100;
    array3[1][2] = 100;
    assertTrue(new CompareToBuilder().append(array1, array1).toComparison() == 0);
    assertTrue(new CompareToBuilder().append(array1, array2).toComparison() == 0);
    assertTrue(new CompareToBuilder().append(array1, array3).toComparison() < 0);
    assertTrue(new CompareToBuilder().append(array3, array1).toComparison() > 0);
    array1[1][1] = 127;
    assertTrue(new CompareToBuilder().append(array1, array2).toComparison() > 0);
    assertTrue(new CompareToBuilder().append(array2, array1).toComparison() < 0);
}