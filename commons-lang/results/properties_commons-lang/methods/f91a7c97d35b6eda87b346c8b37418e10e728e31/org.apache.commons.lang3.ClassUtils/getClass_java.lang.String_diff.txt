/**                                                                                                    /**                                                                                                 
* Returns the (initialized) class represented by &lt;code&gt;className&lt;/code&gt;                    * Returns the (initialized) class represented by &lt;code&gt;className&lt;/code&gt;                 
* using the current thread's context class loader. This implementation                                 * using the current thread's context class loader. This implementation                              
* supports names like "&lt;code&gt;java.lang.String[]&lt;/code&gt;" as well as                       | * supports the syntaxes "&lt;code&gt;java.util.Map.Entry[]&lt;/code&gt;",                           
* "&lt;code&gt;[Ljava.lang.String;&lt;/code&gt;".                                                    | * "&lt;code&gt;java.util.Map$Entry[]&lt;/code&gt;", "&lt;code&gt;[Ljava.util.Map.Entry;&lt;/code&gt;
                                                                                                     | * and "&lt;code&gt;[Ljava.util.Map$Entry;&lt;/code&gt;".                                            
*                                                                                                      *                                                                                                   
* @param className  the class name                                                                     * @param className  the class name                                                                  
* @return the class represented by &lt;code&gt;className&lt;/code&gt; using the current thread's con   * @return the class represented by &lt;code&gt;className&lt;/code&gt; using the current thread's con
* @throws ClassNotFoundException if the class is not found                                             * @throws ClassNotFoundException if the class is not found                                          
*/                                                                                                     */                                                                                                  
public static Class&lt;?&gt; getClass(String className) throws ClassNotFoundException {                public static Class&lt;?&gt; getClass(String className) throws ClassNotFoundException {             
return getClass(className, true);                                                                      return getClass(className, true);                                                                   
}                                                                                                      }                                                                                                   
