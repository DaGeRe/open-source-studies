/**                                                                                                    /**                                                                                                 
* &lt;p&gt;Finds the last index within a CharSequence from a start position,                           * &lt;p&gt;Finds the last index within a CharSequence from a start position,                        
* handling {@code null}.                                                                               * handling {@code null}.                                                                            
* This method uses {@link String#lastIndexOf(int, int)} if possible.&lt;/p&gt;                         * This method uses {@link String#lastIndexOf(int, int)} if possible.&lt;/p&gt;                      
*                                                                                                      *                                                                                                   
* &lt;p&gt;A {@code null} or empty ("") CharSequence will return {@code -1}.                           * &lt;p&gt;A {@code null} or empty ("") CharSequence will return {@code -1}.                        
* A negative start position returns {@code -1}.                                                        * A negative start position returns {@code -1}.                                                     
* A start position greater than the string length searches the whole string.&lt;/p&gt;                 * A start position greater than the string length searches the whole string.&lt;/p&gt;              
*                                                                                                      *                                                                                                   
* &lt;pre&gt;                                                                                          * &lt;pre&gt;                                                                                       
* StringUtils.lastIndexOf(null, *, *)          = -1                                                    * StringUtils.lastIndexOf(null, *, *)          = -1                                                 
* StringUtils.lastIndexOf("", *,  *)           = -1                                                    * StringUtils.lastIndexOf("", *,  *)           = -1                                                 
* StringUtils.lastIndexOf("aabaabaa", 'b', 8)  = 5                                                     * StringUtils.lastIndexOf("aabaabaa", 'b', 8)  = 5                                                  
* StringUtils.lastIndexOf("aabaabaa", 'b', 4)  = 2                                                     * StringUtils.lastIndexOf("aabaabaa", 'b', 4)  = 2                                                  
* StringUtils.lastIndexOf("aabaabaa", 'b', 0)  = -1                                                    * StringUtils.lastIndexOf("aabaabaa", 'b', 0)  = -1                                                 
* StringUtils.lastIndexOf("aabaabaa", 'b', 9)  = 5                                                     * StringUtils.lastIndexOf("aabaabaa", 'b', 9)  = 5                                                  
* StringUtils.lastIndexOf("aabaabaa", 'b', -1) = -1                                                    * StringUtils.lastIndexOf("aabaabaa", 'b', -1) = -1                                                 
* StringUtils.lastIndexOf("aabaabaa", 'a', 0)  = 0                                                     * StringUtils.lastIndexOf("aabaabaa", 'a', 0)  = 0                                                  
* &lt;/pre&gt;                                                                                         * &lt;/pre&gt;                                                                                      
*                                                                                                      *                                                                                                   
* @param seq  the CharSequence to check, may be null                                                   * @param seq  the CharSequence to check, may be null                                                
* @param searchChar  the character to find                                                             * @param searchChar  the character to find                                                          
* @param startPos  the start position                                                                  * @param startPos  the start position                                                               
* @return the last index of the search character,                                                      * @return the last index of the search character,                                                   
*  -1 if no match or {@code null} string input                                                         *  -1 if no match or {@code null} string input                                                      
* @since 2.0                                                                                           * @since 2.0                                                                                        
*/                                                                                                     */                                                                                                  
public static int lastIndexOf(CharSequence seq, int searchChar, int startPos) {                        public static int lastIndexOf(CharSequence seq, int searchChar, int startPos) {                     
if (isEmpty(seq)) {                                                                                    if (isEmpty(seq)) {                                                                                 
return INDEX_NOT_FOUND;                                                                                return INDEX_NOT_FOUND;                                                                             
}                                                                                                      }                                                                                                   
return StringUtils.lastIndexOfSequence(seq, searchChar, startPos);                                   | return CharSequenceUtils.lastIndexOf(seq, searchChar, startPos);                                    
}                                                                                                      }                                                                                                   
