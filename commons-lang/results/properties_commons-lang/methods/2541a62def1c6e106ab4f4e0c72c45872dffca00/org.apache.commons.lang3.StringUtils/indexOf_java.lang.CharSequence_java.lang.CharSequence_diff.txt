/**                                                                                                    /**                                                                                                 
* &lt;p&gt;Finds the first index within a CharSequence, handling {@code null}.                         * &lt;p&gt;Finds the first index within a CharSequence, handling {@code null}.                      
* This method uses {@link String#indexOf(String, int)} if possible.&lt;/p&gt;                          * This method uses {@link String#indexOf(String, int)} if possible.&lt;/p&gt;                       
*                                                                                                      *                                                                                                   
* &lt;p&gt;A {@code null} CharSequence will return {@code -1}.&lt;/p&gt;                               * &lt;p&gt;A {@code null} CharSequence will return {@code -1}.&lt;/p&gt;                            
*                                                                                                      *                                                                                                   
* &lt;pre&gt;                                                                                          * &lt;pre&gt;                                                                                       
* StringUtils.indexOf(null, *)          = -1                                                           * StringUtils.indexOf(null, *)          = -1                                                        
* StringUtils.indexOf(*, null)          = -1                                                           * StringUtils.indexOf(*, null)          = -1                                                        
* StringUtils.indexOf("", "")           = 0                                                            * StringUtils.indexOf("", "")           = 0                                                         
* StringUtils.indexOf("", *)            = -1 (except when * = "")                                      * StringUtils.indexOf("", *)            = -1 (except when * = "")                                   
* StringUtils.indexOf("aabaabaa", "a")  = 0                                                            * StringUtils.indexOf("aabaabaa", "a")  = 0                                                         
* StringUtils.indexOf("aabaabaa", "b")  = 2                                                            * StringUtils.indexOf("aabaabaa", "b")  = 2                                                         
* StringUtils.indexOf("aabaabaa", "ab") = 1                                                            * StringUtils.indexOf("aabaabaa", "ab") = 1                                                         
* StringUtils.indexOf("aabaabaa", "")   = 0                                                            * StringUtils.indexOf("aabaabaa", "")   = 0                                                         
* &lt;/pre&gt;                                                                                         * &lt;/pre&gt;                                                                                      
*                                                                                                      *                                                                                                   
* @param seq  the CharSequence to check, may be null                                                   * @param seq  the CharSequence to check, may be null                                                
* @param searchSeq  the CharSequence to find, may be null                                              * @param searchSeq  the CharSequence to find, may be null                                           
* @return the first index of the search CharSequence,                                                  * @return the first index of the search CharSequence,                                               
*  -1 if no match or {@code null} string input                                                         *  -1 if no match or {@code null} string input                                                      
* @since 2.0                                                                                           * @since 2.0                                                                                        
*/                                                                                                     */                                                                                                  
public static int indexOf(CharSequence seq, CharSequence searchSeq) {                                  public static int indexOf(CharSequence seq, CharSequence searchSeq) {                               
if (seq == null || searchSeq == null) {                                                                if (seq == null || searchSeq == null) {                                                             
return INDEX_NOT_FOUND;                                                                                return INDEX_NOT_FOUND;                                                                             
}                                                                                                      }                                                                                                   
return StringUtils.indexOfSequence(seq, searchSeq, 0);                                               | return CharSequenceUtils.indexOf(seq, searchSeq, 0);                                                
}                                                                                                      }                                                                                                   
