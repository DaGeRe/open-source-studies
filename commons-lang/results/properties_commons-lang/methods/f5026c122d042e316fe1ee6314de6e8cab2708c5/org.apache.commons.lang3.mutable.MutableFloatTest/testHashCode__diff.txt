public void testHashCode() {                                                                           public void testHashCode() {                                                                        
final MutableFloat mutNumA = new MutableFloat(0f);                                                     final MutableFloat mutNumA = new MutableFloat(0f);                                                  
final MutableFloat mutNumB = new MutableFloat(0f);                                                     final MutableFloat mutNumB = new MutableFloat(0f);                                                  
final MutableFloat mutNumC = new MutableFloat(1f);                                                     final MutableFloat mutNumC = new MutableFloat(1f);                                                  
assertEquals(true, mutNumA.hashCode() == mutNumA.hashCode());                                          assertEquals(true, mutNumA.hashCode() == mutNumA.hashCode());                                       
assertEquals(true, mutNumA.hashCode() == mutNumB.hashCode());                                          assertEquals(true, mutNumA.hashCode() == mutNumB.hashCode());                                       
assertEquals(false, mutNumA.hashCode() == mutNumC.hashCode());                                         assertEquals(false, mutNumA.hashCode() == mutNumC.hashCode());                                      
assertEquals(true, mutNumA.hashCode() == new Float(0f).hashCode());                                  | assertEquals(true, mutNumA.hashCode() == Float.valueOf(0f).hashCode());                             
}                                                                                                      }                                                                                                   
