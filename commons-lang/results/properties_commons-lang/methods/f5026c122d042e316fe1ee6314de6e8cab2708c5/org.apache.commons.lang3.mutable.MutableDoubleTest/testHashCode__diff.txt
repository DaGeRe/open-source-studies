public void testHashCode() {                                                                           public void testHashCode() {                                                                        
final MutableDouble mutNumA = new MutableDouble(0d);                                                   final MutableDouble mutNumA = new MutableDouble(0d);                                                
final MutableDouble mutNumB = new MutableDouble(0d);                                                   final MutableDouble mutNumB = new MutableDouble(0d);                                                
final MutableDouble mutNumC = new MutableDouble(1d);                                                   final MutableDouble mutNumC = new MutableDouble(1d);                                                
assertEquals(true, mutNumA.hashCode() == mutNumA.hashCode());                                          assertEquals(true, mutNumA.hashCode() == mutNumA.hashCode());                                       
assertEquals(true, mutNumA.hashCode() == mutNumB.hashCode());                                          assertEquals(true, mutNumA.hashCode() == mutNumB.hashCode());                                       
assertEquals(false, mutNumA.hashCode() == mutNumC.hashCode());                                         assertEquals(false, mutNumA.hashCode() == mutNumC.hashCode());                                      
assertEquals(true, mutNumA.hashCode() == new Double(0d).hashCode());                                 | assertEquals(true, mutNumA.hashCode() == Double.valueOf(0d).hashCode());                            
}                                                                                                      }                                                                                                   
