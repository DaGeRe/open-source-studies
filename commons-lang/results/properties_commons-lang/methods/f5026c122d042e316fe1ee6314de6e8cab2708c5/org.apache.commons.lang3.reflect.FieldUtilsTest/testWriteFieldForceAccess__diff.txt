@Test                                                                                                  @Test                                                                                               
public void testWriteFieldForceAccess() throws Exception {                                             public void testWriteFieldForceAccess() throws Exception {                                          
Field field = parentClass.getDeclaredField("s");                                                       Field field = parentClass.getDeclaredField("s");                                                    
FieldUtils.writeField(field, publicChild, "S", true);                                                  FieldUtils.writeField(field, publicChild, "S", true);                                               
assertEquals("S", field.get(publicChild));                                                             assertEquals("S", field.get(publicChild));                                                          
field = parentClass.getDeclaredField("b");                                                             field = parentClass.getDeclaredField("b");                                                          
FieldUtils.writeField(field, publicChild, Boolean.TRUE, true);                                         FieldUtils.writeField(field, publicChild, Boolean.TRUE, true);                                      
assertEquals(Boolean.TRUE, field.get(publicChild));                                                    assertEquals(Boolean.TRUE, field.get(publicChild));                                                 
field = parentClass.getDeclaredField("i");                                                             field = parentClass.getDeclaredField("i");                                                          
FieldUtils.writeField(field, publicChild, Integer.valueOf(Integer.MAX_VALUE), true);                   FieldUtils.writeField(field, publicChild, Integer.valueOf(Integer.MAX_VALUE), true);                
assertEquals(Integer.valueOf(Integer.MAX_VALUE), field.get(publicChild));                              assertEquals(Integer.valueOf(Integer.MAX_VALUE), field.get(publicChild));                           
field = parentClass.getDeclaredField("d");                                                             field = parentClass.getDeclaredField("d");                                                          
FieldUtils.writeField(field, publicChild, new Double(Double.MAX_VALUE), true);                       | FieldUtils.writeField(field, publicChild, Double.valueOf(Double.MAX_VALUE), true);                  
assertEquals(new Double(Double.MAX_VALUE), field.get(publicChild));                                  | assertEquals(Double.valueOf(Double.MAX_VALUE), field.get(publicChild));                             
}                                                                                                      }                                                                                                   
