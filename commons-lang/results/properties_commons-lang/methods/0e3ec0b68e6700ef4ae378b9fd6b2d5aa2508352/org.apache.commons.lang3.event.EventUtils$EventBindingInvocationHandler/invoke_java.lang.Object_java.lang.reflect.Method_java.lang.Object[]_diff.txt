/**
 * Handles a method invocation on the proxy object.
 *
 * @param proxy the proxy instance
 * @param method the method to be invoked
 * @param parameters the parameters for the method invocation
 * @return the result of the method call
 * @throws Throwable if an error occurs
 */
public Object invoke(final Object proxy, final Method method, final Object[] parameters) throws Throwable {
    if (eventTypes.isEmpty() || eventTypes.contains(method.getName())) {
        if (hasMatchingParametersMethod(method)) {
            return MethodUtils.invokeMethod(target, methodName, parameters);
        } else {
            return MethodUtils.invokeMethod(target, methodName);
        }
    }
    return null;
}