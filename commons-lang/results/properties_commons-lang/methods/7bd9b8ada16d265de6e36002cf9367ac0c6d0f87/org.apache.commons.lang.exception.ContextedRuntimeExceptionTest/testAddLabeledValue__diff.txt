public void testAddLabeledValue() {                                                                    public void testAddLabeledValue() {                                                                 
contextedRuntimeException = new ContextedRuntimeException(new Exception(TEST_MESSAGE)).addLabeledVal   contextedRuntimeException = new ContextedRuntimeException(new Exception(TEST_MESSAGE)).addLabeledVal
String message = contextedRuntimeException.getMessage();                                               String message = contextedRuntimeException.getMessage();                                            
assertTrue(message.indexOf(TEST_MESSAGE) &gt;= 0);                                                     assertTrue(message.indexOf(TEST_MESSAGE) &gt;= 0);                                                  
assertTrue(message.indexOf("test1") &gt;= 0);                                                          assertTrue(message.indexOf("test1") &gt;= 0);                                                       
assertTrue(message.indexOf("test2") &gt;= 0);                                                          assertTrue(message.indexOf("test2") &gt;= 0);                                                       
assertTrue(message.indexOf("test Date") &gt;= 0);                                                      assertTrue(message.indexOf("test Date") &gt;= 0);                                                   
assertTrue(message.indexOf("test Nbr") &gt;= 0);                                                       assertTrue(message.indexOf("test Nbr") &gt;= 0);                                                    
assertTrue(message.indexOf("test Poorly written obj") &gt;= 0);                                        assertTrue(message.indexOf("test Poorly written obj") &gt;= 0);                                     
assertTrue(message.indexOf("some value") &gt;= 0);                                                     assertTrue(message.indexOf("some value") &gt;= 0);                                                  
assertTrue(message.indexOf("5") &gt;= 0);                                                              assertTrue(message.indexOf("5") &gt;= 0);                                                           
assertTrue(message.indexOf("Crap") &gt;= 0);                                                           assertTrue(message.indexOf("Crap") &gt;= 0);                                                        
String contextMessage = contextedRuntimeException.getFormattedExceptionMessage("");                  |                                                                                                     
assertTrue(contextMessage.indexOf(TEST_MESSAGE) == -1);                                              |                                                                                                     
assertTrue(message.contains(contextMessage));                                                        |                                                                                                     
assertTrue(contextedRuntimeException.getLabeledValue("test1") == null);                                assertTrue(contextedRuntimeException.getLabeledValue("test1") == null);                             
assertTrue(contextedRuntimeException.getLabeledValue("test2").equals("some value"));                   assertTrue(contextedRuntimeException.getLabeledValue("test2").equals("some value"));                
assertTrue(contextedRuntimeException.getLabeledValue("crap") == null);                                 assertTrue(contextedRuntimeException.getLabeledValue("crap") == null);                              
assertTrue(contextedRuntimeException.getLabeledValue("test Poorly written obj") instanceof ObjectWit   assertTrue(contextedRuntimeException.getLabeledValue("test Poorly written obj") instanceof ObjectWit
assertTrue(contextedRuntimeException.getLabelSet().size() == 5);                                       assertTrue(contextedRuntimeException.getLabelSet().size() == 5);                                    
assertTrue(contextedRuntimeException.getLabelSet().contains("test1"));                                 assertTrue(contextedRuntimeException.getLabelSet().contains("test1"));                              
assertTrue(contextedRuntimeException.getLabelSet().contains("test2"));                                 assertTrue(contextedRuntimeException.getLabelSet().contains("test2"));                              
assertTrue(contextedRuntimeException.getLabelSet().contains("test Date"));                             assertTrue(contextedRuntimeException.getLabelSet().contains("test Date"));                          
assertTrue(contextedRuntimeException.getLabelSet().contains("test Nbr"));                              assertTrue(contextedRuntimeException.getLabelSet().contains("test Nbr"));                           
assertTrue(contextedRuntimeException.getLabelSet().contains("test Poorly written obj"));               assertTrue(contextedRuntimeException.getLabelSet().contains("test Poorly written obj"));            
assertTrue(!contextedRuntimeException.getLabelSet().contains("crap"));                                 assertTrue(!contextedRuntimeException.getLabelSet().contains("crap"));                              
                                                                                                     | contextedRuntimeException.addLabeledValue("test Poorly written obj", "replacement");                
                                                                                                     | String contextMessage = contextedRuntimeException.getFormattedExceptionMessage(null);               
                                                                                                     | assertTrue(contextMessage.indexOf(TEST_MESSAGE) == -1);                                             
                                                                                                     | assertTrue(contextedRuntimeException.getMessage().endsWith(contextMessage));                        
}                                                                                                      }                                                                                                   
