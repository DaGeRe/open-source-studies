/**                                                                                                    /**                                                                                                 
* Insert formats back into the pattern for toPattern() support.                                        * Insert formats back into the pattern for toPattern() support.                                     
*                                                                                                      *                                                                                                   
* @param pattern source                                                                                * @param pattern source                                                                             
* @param customPatterns The custom patterns to re-insert, if any                                       * @param customPatterns The custom patterns to re-insert, if any                                    
* @return full pattern                                                                                 * @return full pattern                                                                              
*/                                                                                                     */                                                                                                  
private String insertFormats(String pattern, ArrayList&lt;String&gt; customPatterns) {                 private String insertFormats(String pattern, ArrayList&lt;String&gt; customPatterns) {              
if (!containsElements(customPatterns)) {                                                               if (!containsElements(customPatterns)) {                                                            
return pattern;                                                                                        return pattern;                                                                                     
}                                                                                                      }                                                                                                   
StringBuffer sb = new StringBuffer(pattern.length() * 2);                                            | StringBuilder sb = new StringBuilder(pattern.length() * 2);                                         
ParsePosition pos = new ParsePosition(0);                                                              ParsePosition pos = new ParsePosition(0);                                                           
int fe = -1;                                                                                           int fe = -1;                                                                                        
int depth = 0;                                                                                         int depth = 0;                                                                                      
while (pos.getIndex() &lt; pattern.length()) {                                                         while (pos.getIndex() &lt; pattern.length()) {                                                      
char c = pattern.charAt(pos.getIndex());                                                               char c = pattern.charAt(pos.getIndex());                                                            
switch(c) {                                                                                            switch(c) {                                                                                         
case QUOTE:                                                                                            case QUOTE:                                                                                         
appendQuotedString(pattern, pos, sb, false);                                                           appendQuotedString(pattern, pos, sb, false);                                                        
break;                                                                                                 break;                                                                                              
case START_FE:                                                                                         case START_FE:                                                                                      
depth++;                                                                                               depth++;                                                                                            
if (depth == 1) {                                                                                      if (depth == 1) {                                                                                   
fe++;                                                                                                  fe++;                                                                                               
sb.append(START_FE).append(readArgumentIndex(pattern, next(pos)));                                     sb.append(START_FE).append(readArgumentIndex(pattern, next(pos)));                                  
String customPattern = customPatterns.get(fe);                                                         String customPattern = customPatterns.get(fe);                                                      
if (customPattern != null) {                                                                           if (customPattern != null) {                                                                        
sb.append(START_FMT).append(customPattern);                                                            sb.append(START_FMT).append(customPattern);                                                         
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
break;                                                                                                 break;                                                                                              
case END_FE:                                                                                           case END_FE:                                                                                        
depth--;                                                                                               depth--;                                                                                            
// fall through:                                                                                     | // $FALL-THROUGH$                                                                                   
default:                                                                                               default:                                                                                            
sb.append(c);                                                                                          sb.append(c);                                                                                       
next(pos);                                                                                             next(pos);                                                                                          
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
return sb.toString();                                                                                  return sb.toString();                                                                               
}                                                                                                      }                                                                                                   
