/**
 * <p>Validates that the index is within the bounds of the argument
 * collection; otherwise throwing an exception.</p>
 *
 * <pre>Validate.validIndex(myCollection, 2);</pre>
 *
 * <p>If the index is invalid, then the message of the exception
 * is &quot;The validated collection index is invalid: &quot;
 * followed by the index.</p>
 *
 * @param <T> the collection type
 * @param collection the collection to check
 * @param index the index
 * @return the validated collection (never <code>null</code> for method chaining)
 * @throws NullPointerException if the collection is <code>null</code>
 * @throws IndexOutOfBoundsException if the index is invalid
 * @see #validIndex(Collection, int, String, Object...)
 */
public static <T extends Collection<?>> T validIndex(T collection, int index) {
    return validIndex(collection, index, DEFAULT_VALID_INDEX_COLLECTION_EXCEPTION_MESSAGE, index);
}