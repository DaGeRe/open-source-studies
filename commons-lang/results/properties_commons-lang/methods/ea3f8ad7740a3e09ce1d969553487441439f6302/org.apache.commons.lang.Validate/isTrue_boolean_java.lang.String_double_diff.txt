/**
 * <p>Validate that the argument condition is <code>true</code>; otherwise
 * throwing an exception with the specified message. This method is useful when
 * validating according to an arbitrary boolean expression, such as validating a
 * primitive number or using your own custom validation expression.</p>
 *
 * <pre>Validate.isTrue(d > 0.0, "The value must be greater than zero: %s", d);</pre>
 *
 * <p>For performance reasons, the double value is passed as a separate parameter and
 * appended to the exception message only in the case of an error.</p>
 *
 * @param expression the boolean expression to check
 * @param message the exception message if invalid
 * @param value the value to append to the message when invalid
 * @throws IllegalArgumentException if expression is <code>false</code>
 * @see #isTrue(boolean)
 * @see #isTrue(boolean, String, long)
 * @see #isTrue(boolean, String, Object)
 * @see #isTrue(boolean, String, Object...)
 */
public static void isTrue(boolean expression, String message, double value) {
    if (expression == false) {
        throw new IllegalArgumentException(String.format(message, value));
    }
}