// -----------------------------------------------------------------------                             // -----------------------------------------------------------------------                          
// -----------------------------------------------------------------------                             // -----------------------------------------------------------------------                          
public void testValidIndex_withMessage_array() {                                                       public void testValidIndex_withMessage_array() {                                                    
Object[] array = new Object[2];                                                                        Object[] array = new Object[2];                                                                     
Validate.validIndex(array, 0, "Broken: ");                                                             Validate.validIndex(array, 0, "Broken: ");                                                          
Validate.validIndex(array, 1, "Broken: ");                                                             Validate.validIndex(array, 1, "Broken: ");                                                          
try {                                                                                                  try {                                                                                               
Validate.validIndex(array, -1, "Broken: ");                                                            Validate.validIndex(array, -1, "Broken: ");                                                         
fail("Expecting IllegalArgumentException");                                                          | fail("Expecting IndexOutOfBoundsException");                                                        
} catch (IllegalArgumentException ex) {                                                              | } catch (IndexOutOfBoundsException ex) {                                                            
assertEquals("Broken: -1", ex.getMessage());                                                         | assertEquals("Broken: ", ex.getMessage());                                                          
}                                                                                                      }                                                                                                   
try {                                                                                                  try {                                                                                               
Validate.validIndex(array, 2, "Broken: ");                                                             Validate.validIndex(array, 2, "Broken: ");                                                          
fail("Expecting IllegalArgumentException");                                                          | fail("Expecting IndexOutOfBoundsException");                                                        
} catch (IllegalArgumentException ex) {                                                              | } catch (IndexOutOfBoundsException ex) {                                                            
assertEquals("Broken: 2", ex.getMessage());                                                          | assertEquals("Broken: ", ex.getMessage());                                                          
}                                                                                                      }                                                                                                   
String[] strArray = new String[] { "Hi" };                                                             String[] strArray = new String[] { "Hi" };                                                          
String[] test = Validate.noNullElements(strArray, "Message");                                          String[] test = Validate.noNullElements(strArray, "Message");                                       
assertSame(strArray, test);                                                                            assertSame(strArray, test);                                                                         
}                                                                                                      }                                                                                                   
