                                                                                                     | // Squeeze                                                                                          
                                                                                                     | // -----------------------------------------------------------------------                          
/**                                                                                                    /**                                                                                                 
* &lt;p&gt;Squeezes any repetitions of a character that is mentioned in the                            * &lt;p&gt;Squeezes any repetitions of a character that is mentioned in the                         
* supplied set.&lt;/p&gt;                                                                              * supplied set.&lt;/p&gt;                                                                           
*                                                                                                      *                                                                                                   
* &lt;p&gt;An example is:&lt;/p&gt;                                                                  | * &lt;pre&gt;                                                                                       
* &lt;ul&gt;                                                                                         | * CharSetUtils.squeeze(null, *)        = null                                                       
*   &lt;li&gt;squeeze(&quot;hello&quot;, {&quot;el&quot;}) =&gt; &quot;helo&quot;&lt;/li&gt;         | * CharSetUtils.squeeze("", *)          = ""                                                         
* &lt;/ul&gt;                                                                                        | * CharSetUtils.squeeze(*, null)        = *                                                          
                                                                                                     | * CharSetUtils.squeeze(*, "")          = *                                                          
                                                                                                     | * CharSetUtils.squeeze("hello", "k-p") = "helo"                                                     
                                                                                                     | * CharSetUtils.squeeze("hello", "a-e") = "hello"                                                    
                                                                                                     | * &lt;/pre&gt;                                                                                      
*                                                                                                      *                                                                                                   
* @see CharSet#getInstance(java.lang.String) for set-syntax.                                           * @see CharSet#getInstance(java.lang.String) for set-syntax.                                        
* @param str  the string to squeeze, may be null                                                       * @param str  the string to squeeze, may be null                                                    
* @param set  the character set to use for manipulation, may be null                                   * @param set  the character set to use for manipulation, may be null                                
* @return the modified String, {@code null} if null string input                                       * @return the modified String, {@code null} if null string input                                    
*/                                                                                                     */                                                                                                  
public static String squeeze(String str, String[] set) {                                             | public static String squeeze(String str, String... set) {                                           
if (StringUtils.isEmpty(str) || ArrayUtils.isEmpty(set)) {                                           | if (StringUtils.isEmpty(str) || deepEmpty(set)) {                                                   
return str;                                                                                            return str;                                                                                         
}                                                                                                      }                                                                                                   
CharSet chars = CharSet.getInstance(set);                                                              CharSet chars = CharSet.getInstance(set);                                                           
StringBuilder buffer = new StringBuilder(str.length());                                                StringBuilder buffer = new StringBuilder(str.length());                                             
char[] chrs = str.toCharArray();                                                                       char[] chrs = str.toCharArray();                                                                    
int sz = chrs.length;                                                                                  int sz = chrs.length;                                                                               
char lastChar = ' ';                                                                                   char lastChar = ' ';                                                                                
char ch = ' ';                                                                                         char ch = ' ';                                                                                      
for (int i = 0; i &lt; sz; i++) {                                                                      for (int i = 0; i &lt; sz; i++) {                                                                   
ch = chrs[i];                                                                                          ch = chrs[i];                                                                                       
if (chars.contains(ch)) {                                                                              if (chars.contains(ch)) {                                                                           
if ((ch == lastChar) && (i != 0)) {                                                                    if ((ch == lastChar) && (i != 0)) {                                                                 
continue;                                                                                              continue;                                                                                           
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
buffer.append(ch);                                                                                     buffer.append(ch);                                                                                  
lastChar = ch;                                                                                         lastChar = ch;                                                                                      
}                                                                                                      }                                                                                                   
return buffer.toString();                                                                              return buffer.toString();                                                                           
}                                                                                                      }                                                                                                   
