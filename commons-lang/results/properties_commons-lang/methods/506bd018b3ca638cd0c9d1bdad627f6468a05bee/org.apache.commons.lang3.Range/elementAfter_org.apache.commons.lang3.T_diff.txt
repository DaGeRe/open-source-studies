/**                                                                                                    /**                                                                                                 
* &lt;p&gt;Tests whether the specified element occurs after this range.&lt;/p&gt;                      * &lt;p&gt;Tests whether the specified element occurs after this range.&lt;/p&gt;                   
*                                                                                                      *                                                                                                   
* &lt;p&gt;&lt;code&gt;null&lt;/code&gt; is handled and returns &lt;code&gt;false&lt;/code&gt;.&lt;/   * &lt;p&gt;&lt;code&gt;null&lt;/code&gt; is handled and returns &lt;code&gt;false&lt;/code&gt;.&lt;/
*                                                                                                      *                                                                                                   
* @param element  the element to test, may be &lt;code&gt;null&lt;/code&gt;                            * @param element  the element to test, may be &lt;code&gt;null&lt;/code&gt;                         
* @return &lt;code&gt;true&lt;/code&gt; if the specified element occurs after this range               * @return &lt;code&gt;true&lt;/code&gt; if the specified element occurs after this range            
*/                                                                                                     */                                                                                                  
public boolean elementAfter(T element) {                                                               public boolean elementAfter(T element) {                                                            
if (element == null) {                                                                                 if (element == null) {                                                                              
return false;                                                                                          return false;                                                                                       
}                                                                                                      }                                                                                                   
return this.comparator.compare(element, getMaximum()) &gt; 0;                                        | return this.comparator.compare(element, this.maximum) &gt; 0;                                       
}                                                                                                      }                                                                                                   
