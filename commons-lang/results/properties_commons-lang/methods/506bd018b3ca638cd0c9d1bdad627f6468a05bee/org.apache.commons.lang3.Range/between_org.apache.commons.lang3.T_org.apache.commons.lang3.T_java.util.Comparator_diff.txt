/**
 * <p>Constructs a new <code>Range</code> with the specified
 * minimum and maximum values (both inclusive).</p>
 * <p>The range uses the passed in <code>Comparator</code> to
 * determine where values lie in the range.</p>
 *
 * <p>The arguments may be passed in the order (min,max) or (max,min). The
 * getMinimum and getMaximum methods will return the correct values.</p>
 *
 * @param element1  first value that defines the edge of the range, inclusive
 * @param element2  second value that defines the edge of the range, inclusive
 * @param c comparator to be used
 * @throws IllegalArgumentException if either value is <code>null</code>
 */
public static <T> Range<T> between(T element1, T element2, Comparator<T> c) {
    return new Range<T>(element1, element2, c);
}