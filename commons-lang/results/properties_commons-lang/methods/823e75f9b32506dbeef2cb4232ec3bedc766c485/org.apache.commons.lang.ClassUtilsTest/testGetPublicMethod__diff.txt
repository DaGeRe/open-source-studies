public void testGetPublicMethod() throws Exception {                                                   public void testGetPublicMethod() throws Exception {                                                
// Tests with Collections$UnmodifiableSet                                                              // Tests with Collections$UnmodifiableSet                                                           
Set set = Collections.unmodifiableSet(new HashSet());                                                | Set&lt;?&gt; set = Collections.unmodifiableSet(new HashSet&lt;Object&gt;());                        
Method isEmptyMethod = ClassUtils.getPublicMethod(set.getClass(), "isEmpty", new Class[0]);            Method isEmptyMethod = ClassUtils.getPublicMethod(set.getClass(), "isEmpty", new Class[0]);         
assertTrue(Modifier.isPublic(isEmptyMethod.getDeclaringClass().getModifiers()));                       assertTrue(Modifier.isPublic(isEmptyMethod.getDeclaringClass().getModifiers()));                    
try {                                                                                                  try {                                                                                               
isEmptyMethod.invoke(set, new Object[0]);                                                              isEmptyMethod.invoke(set, new Object[0]);                                                           
} catch (java.lang.IllegalAccessException iae) {                                                       } catch (java.lang.IllegalAccessException iae) {                                                    
fail("Should not have thrown IllegalAccessException");                                                 fail("Should not have thrown IllegalAccessException");                                              
}                                                                                                      }                                                                                                   
// Tests with a public Class                                                                           // Tests with a public Class                                                                        
Method toStringMethod = ClassUtils.getPublicMethod(Object.class, "toString", new Class[0]);            Method toStringMethod = ClassUtils.getPublicMethod(Object.class, "toString", new Class[0]);         
assertEquals(Object.class.getMethod("toString", new Class[0]), toStringMethod);                        assertEquals(Object.class.getMethod("toString", new Class[0]), toStringMethod);                     
}                                                                                                      }                                                                                                   
