// Show the Java bug: http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4071957                       // Show the Java bug: http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4071957                    
// We may have to delete this if a JDK fixes the bug.                                                  // We may have to delete this if a JDK fixes the bug.                                               
public void testShowJavaBug() throws Exception {                                                       public void testShowJavaBug() throws Exception {                                                    
// Tests with Collections$UnmodifiableSet                                                              // Tests with Collections$UnmodifiableSet                                                           
Set set = Collections.unmodifiableSet(new HashSet());                                                | Set&lt;?&gt; set = Collections.unmodifiableSet(new HashSet&lt;Object&gt;());                        
Method isEmptyMethod = set.getClass().getMethod("isEmpty", new Class[0]);                              Method isEmptyMethod = set.getClass().getMethod("isEmpty", new Class[0]);                           
try {                                                                                                  try {                                                                                               
isEmptyMethod.invoke(set, new Object[0]);                                                              isEmptyMethod.invoke(set, new Object[0]);                                                           
fail("Failed to throw IllegalAccessException as expected");                                            fail("Failed to throw IllegalAccessException as expected");                                         
} catch (IllegalAccessException iae) {                                                                 } catch (IllegalAccessException iae) {                                                              
// expected                                                                                            // expected                                                                                         
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
