/**                                                                                                    /**                                                                                                 
* &lt;p&gt;Compares all Strings in an array and returns the initial sequence of                        * &lt;p&gt;Compares all Strings in an array and returns the initial sequence of                     
* characters that is common to all of them.&lt;/p&gt;                                                  * characters that is common to all of them.&lt;/p&gt;                                               
*                                                                                                      *                                                                                                   
* &lt;p&gt;For example,                                                                                * &lt;p&gt;For example,                                                                             
* &lt;code&gt;getCommonPrefix(new String[] {"i am a machine", "i am a robot"}) -&gt; "i am a "&lt;/c   * &lt;code&gt;getCommonPrefix(new String[] {"i am a machine", "i am a robot"}) -&gt; "i am a "&lt;/c
*                                                                                                      *                                                                                                   
* &lt;pre&gt;                                                                                          * &lt;pre&gt;                                                                                       
* StringUtils.getCommonPrefix(null) = ""                                                               * StringUtils.getCommonPrefix(null) = ""                                                            
* StringUtils.getCommonPrefix(new String[] {}) = ""                                                    * StringUtils.getCommonPrefix(new String[] {}) = ""                                                 
* StringUtils.getCommonPrefix(new String[] {"abc"}) = "abc"                                            * StringUtils.getCommonPrefix(new String[] {"abc"}) = "abc"                                         
* StringUtils.getCommonPrefix(new String[] {null, null}) = ""                                          * StringUtils.getCommonPrefix(new String[] {null, null}) = ""                                       
* StringUtils.getCommonPrefix(new String[] {"", ""}) = ""                                              * StringUtils.getCommonPrefix(new String[] {"", ""}) = ""                                           
* StringUtils.getCommonPrefix(new String[] {"", null}) = ""                                            * StringUtils.getCommonPrefix(new String[] {"", null}) = ""                                         
* StringUtils.getCommonPrefix(new String[] {"abc", null, null}) = ""                                   * StringUtils.getCommonPrefix(new String[] {"abc", null, null}) = ""                                
* StringUtils.getCommonPrefix(new String[] {null, null, "abc"}) = ""                                   * StringUtils.getCommonPrefix(new String[] {null, null, "abc"}) = ""                                
* StringUtils.getCommonPrefix(new String[] {"", "abc"}) = ""                                           * StringUtils.getCommonPrefix(new String[] {"", "abc"}) = ""                                        
* StringUtils.getCommonPrefix(new String[] {"abc", ""}) = ""                                           * StringUtils.getCommonPrefix(new String[] {"abc", ""}) = ""                                        
* StringUtils.getCommonPrefix(new String[] {"abc", "abc"}) = "abc"                                     * StringUtils.getCommonPrefix(new String[] {"abc", "abc"}) = "abc"                                  
* StringUtils.getCommonPrefix(new String[] {"abc", "a"}) = "a"                                         * StringUtils.getCommonPrefix(new String[] {"abc", "a"}) = "a"                                      
* StringUtils.getCommonPrefix(new String[] {"ab", "abxyz"}) = "ab"                                     * StringUtils.getCommonPrefix(new String[] {"ab", "abxyz"}) = "ab"                                  
* StringUtils.getCommonPrefix(new String[] {"abcde", "abxyz"}) = "ab"                                  * StringUtils.getCommonPrefix(new String[] {"abcde", "abxyz"}) = "ab"                               
* StringUtils.getCommonPrefix(new String[] {"abcde", "xyz"}) = ""                                      * StringUtils.getCommonPrefix(new String[] {"abcde", "xyz"}) = ""                                   
* StringUtils.getCommonPrefix(new String[] {"xyz", "abcde"}) = ""                                      * StringUtils.getCommonPrefix(new String[] {"xyz", "abcde"}) = ""                                   
* StringUtils.getCommonPrefix(new String[] {"i am a machine", "i am a robot"}) = "i am a "             * StringUtils.getCommonPrefix(new String[] {"i am a machine", "i am a robot"}) = "i am a "          
* &lt;/pre&gt;                                                                                         * &lt;/pre&gt;                                                                                      
*                                                                                                      *                                                                                                   
* @param strs  array of String objects, entries may be null                                            * @param strs  array of String objects, entries may be null                                         
* @return the initial sequence of characters that are common to all Strings                            * @return the initial sequence of characters that are common to all Strings                         
* in the array; empty String if the array is null, the elements are all null                           * in the array; empty String if the array is null, the elements are all null                        
* or if there is no common prefix.                                                                     * or if there is no common prefix.                                                                  
* @since 2.4                                                                                           * @since 2.4                                                                                        
*/                                                                                                     */                                                                                                  
public static String getCommonPrefix(String[] strs) {                                                | public static String getCommonPrefix(String... strs) {                                              
if (strs == null || strs.length == 0) {                                                                if (strs == null || strs.length == 0) {                                                             
return EMPTY;                                                                                          return EMPTY;                                                                                       
}                                                                                                      }                                                                                                   
int smallestIndexOfDiff = indexOfDifference(strs);                                                     int smallestIndexOfDiff = indexOfDifference(strs);                                                  
if (smallestIndexOfDiff == INDEX_NOT_FOUND) {                                                          if (smallestIndexOfDiff == INDEX_NOT_FOUND) {                                                       
// all strings were identical                                                                          // all strings were identical                                                                       
if (strs[0] == null) {                                                                                 if (strs[0] == null) {                                                                              
return EMPTY;                                                                                          return EMPTY;                                                                                       
}                                                                                                      }                                                                                                   
return strs[0];                                                                                        return strs[0];                                                                                     
} else if (smallestIndexOfDiff == 0) {                                                                 } else if (smallestIndexOfDiff == 0) {                                                              
// there were no common initial characters                                                             // there were no common initial characters                                                          
return EMPTY;                                                                                          return EMPTY;                                                                                       
} else {                                                                                               } else {                                                                                            
// we found a common initial character sequence                                                        // we found a common initial character sequence                                                     
return strs[0].substring(0, smallestIndexOfDiff);                                                      return strs[0].substring(0, smallestIndexOfDiff);                                                   
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
