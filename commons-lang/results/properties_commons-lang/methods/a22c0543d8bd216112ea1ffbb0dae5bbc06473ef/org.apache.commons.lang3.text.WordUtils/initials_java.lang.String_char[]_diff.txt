/**                                                                                                    /**                                                                                                 
* &lt;p&gt;Extracts the initial letters from each word in the String.&lt;/p&gt;                        * &lt;p&gt;Extracts the initial letters from each word in the String.&lt;/p&gt;                     
*                                                                                                      *                                                                                                   
* &lt;p&gt;The first letter of the string and all first letters after the                              * &lt;p&gt;The first letter of the string and all first letters after the                           
* defined delimiters are returned as a new string.                                                     * defined delimiters are returned as a new string.                                                  
* Their case is not changed.&lt;/p&gt;                                                                 * Their case is not changed.&lt;/p&gt;                                                              
*                                                                                                      *                                                                                                   
* &lt;p&gt;If the delimiters array is null, then Whitespace is used.                                   * &lt;p&gt;If the delimiters array is null, then Whitespace is used.                                
* Whitespace is defined by {@link Character#isWhitespace(char)}.                                       * Whitespace is defined by {@link Character#isWhitespace(char)}.                                    
* A &lt;code&gt;null&lt;/code&gt; input String returns &lt;code&gt;null&lt;/code&gt;.                  * A &lt;code&gt;null&lt;/code&gt; input String returns &lt;code&gt;null&lt;/code&gt;.               
* An empty delimiter array returns an empty String.&lt;/p&gt;                                          * An empty delimiter array returns an empty String.&lt;/p&gt;                                       
*                                                                                                      *                                                                                                   
* &lt;pre&gt;                                                                                          * &lt;pre&gt;                                                                                       
* WordUtils.initials(null, *)                = null                                                    * WordUtils.initials(null, *)                = null                                                 
* WordUtils.initials("", *)                  = ""                                                      * WordUtils.initials("", *)                  = ""                                                   
* WordUtils.initials("Ben John Lee", null)   = "BJL"                                                   * WordUtils.initials("Ben John Lee", null)   = "BJL"                                                
* WordUtils.initials("Ben J.Lee", null)      = "BJ"                                                    * WordUtils.initials("Ben J.Lee", null)      = "BJ"                                                 
* WordUtils.initials("Ben J.Lee", [' ','.']) = "BJL"                                                   * WordUtils.initials("Ben J.Lee", [' ','.']) = "BJL"                                                
* WordUtils.initials(*, new char[0])         = ""                                                      * WordUtils.initials(*, new char[0])         = ""                                                   
* &lt;/pre&gt;                                                                                         * &lt;/pre&gt;                                                                                      
*                                                                                                      *                                                                                                   
* @param str  the String to get initials from, may be null                                             * @param str  the String to get initials from, may be null                                          
* @param delimiters  set of characters to determine words, null means whitespace                       * @param delimiters  set of characters to determine words, null means whitespace                    
* @return String of initial letters, &lt;code&gt;null&lt;/code&gt; if null String input                * @return String of initial letters, &lt;code&gt;null&lt;/code&gt; if null String input             
* @see #initials(String)                                                                               * @see #initials(String)                                                                            
* @since 2.2                                                                                           * @since 2.2                                                                                        
*/                                                                                                     */                                                                                                  
public static String initials(String str, char[] delimiters) {                                       | public static String initials(String str, char... delimiters) {                                     
if (str == null || str.length() == 0) {                                                                if (str == null || str.length() == 0) {                                                             
return str;                                                                                            return str;                                                                                         
}                                                                                                      }                                                                                                   
if (delimiters != null && delimiters.length == 0) {                                                    if (delimiters != null && delimiters.length == 0) {                                                 
return "";                                                                                             return "";                                                                                          
}                                                                                                      }                                                                                                   
int strLen = str.length();                                                                             int strLen = str.length();                                                                          
char[] buf = new char[strLen / 2 + 1];                                                                 char[] buf = new char[strLen / 2 + 1];                                                              
int count = 0;                                                                                         int count = 0;                                                                                      
boolean lastWasGap = true;                                                                             boolean lastWasGap = true;                                                                          
for (int i = 0; i &lt; strLen; i++) {                                                                  for (int i = 0; i &lt; strLen; i++) {                                                               
char ch = str.charAt(i);                                                                               char ch = str.charAt(i);                                                                            
if (isDelimiter(ch, delimiters)) {                                                                     if (isDelimiter(ch, delimiters)) {                                                                  
lastWasGap = true;                                                                                     lastWasGap = true;                                                                                  
} else if (lastWasGap) {                                                                               } else if (lastWasGap) {                                                                            
buf[count++] = ch;                                                                                     buf[count++] = ch;                                                                                  
lastWasGap = false;                                                                                    lastWasGap = false;                                                                                 
} else {                                                                                               } else {                                                                                            
// ignore ch                                                                                           // ignore ch                                                                                        
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
return new String(buf, 0, count);                                                                      return new String(buf, 0, count);                                                                   
}                                                                                                      }                                                                                                   
