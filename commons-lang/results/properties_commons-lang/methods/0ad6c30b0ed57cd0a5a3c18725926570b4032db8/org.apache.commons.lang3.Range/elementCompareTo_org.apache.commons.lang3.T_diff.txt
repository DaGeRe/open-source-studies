/**                                                                                                    /**                                                                                                 
* &lt;p&gt;Tests where the specified element occurs relative to this range.&lt;/p&gt;                | * &lt;p&gt;Checks where the specified element occurs relative to this range.&lt;/p&gt;              
                                                                                                     | *                                                                                                   
* &lt;p&gt;The API is reminiscent of the Comparable interface returning {@code -1} if                  * &lt;p&gt;The API is reminiscent of the Comparable interface returning {@code -1} if               
* the element is before the range, {@code 0} if contained within the range and                         * the element is before the range, {@code 0} if contained within the range and                      
* {@code 1} if the element is after the range. &lt;/p&gt;                                              * {@code 1} if the element is after the range. &lt;/p&gt;                                           
*                                                                                                      *                                                                                                   
* @param element  the element to test                                                                | * @param element  the element to check for, not null                                                
* @return -1, 0 or +1 depending on the element's location relative to the range                        * @return -1, 0 or +1 depending on the element's location relative to the range                     
*/                                                                                                     */                                                                                                  
public int elementCompareTo(T element) {                                                               public int elementCompareTo(T element) {                                                            
if (element == null) {                                                                                 if (element == null) {                                                                              
// Comparable API says throw NPE on null                                                               // Comparable API says throw NPE on null                                                            
throw new NullPointerException("Element is null");                                                     throw new NullPointerException("Element is null");                                                  
}                                                                                                      }                                                                                                   
if (elementBefore(element)) {                                                                        | if (isAfter(element)) {                                                                             
return -1;                                                                                             return -1;                                                                                          
} else if (elementAfter(element)) {                                                                  | } else if (isBefore(element)) {                                                                     
return 1;                                                                                              return 1;                                                                                           
} else {                                                                                               } else {                                                                                            
return 0;                                                                                              return 0;                                                                                           
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
