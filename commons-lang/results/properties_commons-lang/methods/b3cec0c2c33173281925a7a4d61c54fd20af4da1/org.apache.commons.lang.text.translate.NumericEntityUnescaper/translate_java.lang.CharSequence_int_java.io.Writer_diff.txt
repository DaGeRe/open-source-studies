/**                                                                                                    /**                                                                                                 
* {@inheritDoc}                                                                                        * {@inheritDoc}                                                                                     
*/                                                                                                     */                                                                                                  
                                                                                                     | @Override                                                                                           
public int translate(CharSequence input, int index, Writer out) throws IOException {                   public int translate(CharSequence input, int index, Writer out) throws IOException {                
// TODO: Protect from ArrayIndexOutOfBounds                                                            // TODO: Protect from ArrayIndexOutOfBounds                                                         
if (input.charAt(index) == '&' && input.charAt(index + 1) == '#') {                                    if (input.charAt(index) == '&' && input.charAt(index + 1) == '#') {                                 
int start = index + 2;                                                                                 int start = index + 2;                                                                              
boolean isHex = false;                                                                                 boolean isHex = false;                                                                              
char firstChar = input.charAt(start);                                                                  char firstChar = input.charAt(start);                                                               
if (firstChar == 'x' || firstChar == 'X') {                                                            if (firstChar == 'x' || firstChar == 'X') {                                                         
start++;                                                                                               start++;                                                                                            
isHex = true;                                                                                          isHex = true;                                                                                       
}                                                                                                      }                                                                                                   
int end = start;                                                                                       int end = start;                                                                                    
while (input.charAt(end) != ';') {                                                                     while (input.charAt(end) != ';') {                                                                  
end++;                                                                                                 end++;                                                                                              
}                                                                                                      }                                                                                                   
int entityValue;                                                                                       int entityValue;                                                                                    
try {                                                                                                  try {                                                                                               
if (isHex) {                                                                                           if (isHex) {                                                                                        
entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16);                          entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16);                       
} else {                                                                                               } else {                                                                                            
entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);                          entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);                       
}                                                                                                      }                                                                                                   
} catch (NumberFormatException nfe) {                                                                  } catch (NumberFormatException nfe) {                                                               
return 0;                                                                                              return 0;                                                                                           
}                                                                                                      }                                                                                                   
// TODO: if(entityValue &gt; 0xFFFF) {                                                                 // TODO: if(entityValue &gt; 0xFFFF) {                                                              
out.write(entityValue);                                                                                out.write(entityValue);                                                                             
return 2 + (end - start) + (isHex ? 1 : 0) + 1;                                                        return 2 + (end - start) + (isHex ? 1 : 0) + 1;                                                     
}                                                                                                      }                                                                                                   
return 0;                                                                                              return 0;                                                                                           
}                                                                                                      }                                                                                                   
