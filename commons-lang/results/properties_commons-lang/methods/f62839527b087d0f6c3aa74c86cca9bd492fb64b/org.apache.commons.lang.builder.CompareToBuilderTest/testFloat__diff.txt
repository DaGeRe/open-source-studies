public void testFloat() {
    float o1 = 1;
    float o2 = 2;
    assertTrue(new CompareToBuilder().append(o1, o1).toComparison() == 0);
    assertTrue(new CompareToBuilder().append(o1, o2).toComparison() < 0);
    assertTrue(new CompareToBuilder().append(o2, o1).toComparison() > 0);
    assertTrue(new CompareToBuilder().append(o1, Float.MAX_VALUE).toComparison() < 0);
    assertTrue(new CompareToBuilder().append(Float.MAX_VALUE, o1).toComparison() > 0);
    assertTrue(new CompareToBuilder().append(o1, Float.MIN_VALUE).toComparison() > 0);
    assertTrue(new CompareToBuilder().append(Float.MIN_VALUE, o1).toComparison() < 0);
    assertTrue(new CompareToBuilder().append(Float.NaN, Float.NaN).toComparison() == 0);
    assertTrue(new CompareToBuilder().append(Float.NaN, Float.MAX_VALUE).toComparison() > 0);
    assertTrue(new CompareToBuilder().append(Float.POSITIVE_INFINITY, Float.MAX_VALUE).toComparison() > 0);
    assertTrue(new CompareToBuilder().append(Float.NEGATIVE_INFINITY, Float.MIN_VALUE).toComparison() < 0);
    assertTrue(new CompareToBuilder().append(o1, Float.NaN).toComparison() < 0);
    assertTrue(new CompareToBuilder().append(Float.NaN, o1).toComparison() > 0);
    assertTrue(new CompareToBuilder().append(-0.0, 0.0).toComparison() < 0);
    assertTrue(new CompareToBuilder().append(0.0, -0.0).toComparison() > 0);
}