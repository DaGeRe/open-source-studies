/**
 * <p>Validate that the specified argument iterable is neither
 * <code>null</code> nor contains any elements that are <code>null</code>;
 * otherwise throwing an exception.
 *
 * <pre>Validate.noNullElements(myCollection);</pre>
 *
 * <p>If the iterable is <code>null</code>, then the message in the exception
 * is &quot;The validated object is null&quot;.</p>
 *
 * <p>If the array has a <code>null</code> element, then the message in the
 * exception is &quot;The validated iterable contains null element at index:
 * &quot followed by the index.</p>
 *
 * @param <T> the iterable type
 * @param iterable the iterable to check
 * @return the validated iterable (never <code>null</code> method for chaining)
 * @throws NullPointerException if the array is <code>null</code>
 * @throws IllegalArgumentException if an element is <code>null</code>
 * @see #noNullElements(Collection, String, Object...)
 */
public static <T extends Iterable<?>> T noNullElements(T iterable) {
    return noNullElements(iterable, DEFAULT_NO_NULL_ELEMENTS_COLLECTION_EXCEPTION_MESSAGE);
}