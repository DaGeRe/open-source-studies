/**                                                                                                    /**                                                                                                 
* Test extended and built in formats.                                                                  * Test extended and built in formats.                                                               
*/                                                                                                     */                                                                                                  
public void testExtendedAndBuiltInFormats() {                                                          public void testExtendedAndBuiltInFormats() {                                                       
Calendar cal = Calendar.getInstance();                                                                 Calendar cal = Calendar.getInstance();                                                              
cal.set(2007, Calendar.JANUARY, 23, 18, 33, 05);                                                       cal.set(2007, Calendar.JANUARY, 23, 18, 33, 05);                                                    
Object[] args = new Object[] { "John Doe", cal.getTime(), new Double("12345.67") };                    Object[] args = new Object[] { "John Doe", cal.getTime(), new Double("12345.67") };                 
String builtinsPattern = "DOB: {1,date,short} Salary: {2,number,currency}";                            String builtinsPattern = "DOB: {1,date,short} Salary: {2,number,currency}";                         
String extendedPattern = "Name: {0,upper} ";                                                           String extendedPattern = "Name: {0,upper} ";                                                        
String pattern = extendedPattern + builtinsPattern;                                                    String pattern = extendedPattern + builtinsPattern;                                                 
HashSet testLocales = new HashSet();                                                                 | HashSet&lt;Locale&gt; testLocales = new HashSet&lt;Locale&gt;();                                    
testLocales.addAll(Arrays.asList(DateFormat.getAvailableLocales()));                                   testLocales.addAll(Arrays.asList(DateFormat.getAvailableLocales()));                                
testLocales.retainAll(Arrays.asList(NumberFormat.getAvailableLocales()));                              testLocales.retainAll(Arrays.asList(NumberFormat.getAvailableLocales()));                           
testLocales.add(null);                                                                                 testLocales.add(null);                                                                              
for (Iterator l = testLocales.iterator(); l.hasNext(); ) {                                           | for (Iterator&lt;Locale&gt; l = testLocales.iterator(); l.hasNext(); ) {                            
Locale locale = (Locale) l.next();                                                                   | Locale locale = l.next();                                                                           
MessageFormat builtins = createMessageFormat(builtinsPattern, locale);                                 MessageFormat builtins = createMessageFormat(builtinsPattern, locale);                              
String expectedPattern = extendedPattern + builtins.toPattern();                                       String expectedPattern = extendedPattern + builtins.toPattern();                                    
DateFormat df = null;                                                                                  DateFormat df = null;                                                                               
NumberFormat nf = null;                                                                                NumberFormat nf = null;                                                                             
ExtendedMessageFormat emf = null;                                                                      ExtendedMessageFormat emf = null;                                                                   
if (locale == null) {                                                                                  if (locale == null) {                                                                               
df = DateFormat.getDateInstance(DateFormat.SHORT);                                                     df = DateFormat.getDateInstance(DateFormat.SHORT);                                                  
nf = NumberFormat.getCurrencyInstance();                                                               nf = NumberFormat.getCurrencyInstance();                                                            
emf = new ExtendedMessageFormat(pattern, registry);                                                    emf = new ExtendedMessageFormat(pattern, registry);                                                 
} else {                                                                                               } else {                                                                                            
df = DateFormat.getDateInstance(DateFormat.SHORT, locale);                                             df = DateFormat.getDateInstance(DateFormat.SHORT, locale);                                          
nf = NumberFormat.getCurrencyInstance(locale);                                                         nf = NumberFormat.getCurrencyInstance(locale);                                                      
emf = new ExtendedMessageFormat(pattern, locale, registry);                                            emf = new ExtendedMessageFormat(pattern, locale, registry);                                         
}                                                                                                      }                                                                                                   
StringBuffer expected = new StringBuffer();                                                            StringBuffer expected = new StringBuffer();                                                         
expected.append("Name: ");                                                                             expected.append("Name: ");                                                                          
expected.append(args[0].toString().toUpperCase());                                                     expected.append(args[0].toString().toUpperCase());                                                  
expected.append(" DOB: ");                                                                             expected.append(" DOB: ");                                                                          
expected.append(df.format(args[1]));                                                                   expected.append(df.format(args[1]));                                                                
expected.append(" Salary: ");                                                                          expected.append(" Salary: ");                                                                       
expected.append(nf.format(args[2]));                                                                   expected.append(nf.format(args[2]));                                                                
assertPatternsEqual("pattern comparison for locale " + locale, expectedPattern, emf.toPattern());      assertPatternsEqual("pattern comparison for locale " + locale, expectedPattern, emf.toPattern());   
assertEquals(String.valueOf(locale), expected.toString(), emf.format(args));                           assertEquals(String.valueOf(locale), expected.toString(), emf.format(args));                        
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
