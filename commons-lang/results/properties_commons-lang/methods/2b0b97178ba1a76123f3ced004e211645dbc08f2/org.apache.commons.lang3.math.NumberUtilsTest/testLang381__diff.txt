                                                                                                     | @Test                                                                                               
public void testLang381() {                                                                            public void testLang381() {                                                                         
assertTrue(Double.isNaN(NumberUtils.min(1.2, 2.5, Double.NaN)));                                       assertTrue(Double.isNaN(NumberUtils.min(1.2, 2.5, Double.NaN)));                                    
assertTrue(Double.isNaN(NumberUtils.max(1.2, 2.5, Double.NaN)));                                       assertTrue(Double.isNaN(NumberUtils.max(1.2, 2.5, Double.NaN)));                                    
assertTrue(Float.isNaN(NumberUtils.min(1.2f, 2.5f, Float.NaN)));                                       assertTrue(Float.isNaN(NumberUtils.min(1.2f, 2.5f, Float.NaN)));                                    
assertTrue(Float.isNaN(NumberUtils.max(1.2f, 2.5f, Float.NaN)));                                       assertTrue(Float.isNaN(NumberUtils.max(1.2f, 2.5f, Float.NaN)));                                    
double[] a = new double[] { 1.2, Double.NaN, 3.7, 27.0, 42.0, Double.NaN };                            double[] a = new double[] { 1.2, Double.NaN, 3.7, 27.0, 42.0, Double.NaN };                         
assertTrue(Double.isNaN(NumberUtils.max(a)));                                                          assertTrue(Double.isNaN(NumberUtils.max(a)));                                                       
assertTrue(Double.isNaN(NumberUtils.min(a)));                                                          assertTrue(Double.isNaN(NumberUtils.min(a)));                                                       
double[] b = new double[] { Double.NaN, 1.2, Double.NaN, 3.7, 27.0, 42.0, Double.NaN };                double[] b = new double[] { Double.NaN, 1.2, Double.NaN, 3.7, 27.0, 42.0, Double.NaN };             
assertTrue(Double.isNaN(NumberUtils.max(b)));                                                          assertTrue(Double.isNaN(NumberUtils.max(b)));                                                       
assertTrue(Double.isNaN(NumberUtils.min(b)));                                                          assertTrue(Double.isNaN(NumberUtils.min(b)));                                                       
float[] aF = new float[] { 1.2f, Float.NaN, 3.7f, 27.0f, 42.0f, Float.NaN };                           float[] aF = new float[] { 1.2f, Float.NaN, 3.7f, 27.0f, 42.0f, Float.NaN };                        
assertTrue(Float.isNaN(NumberUtils.max(aF)));                                                          assertTrue(Float.isNaN(NumberUtils.max(aF)));                                                       
float[] bF = new float[] { Float.NaN, 1.2f, Float.NaN, 3.7f, 27.0f, 42.0f, Float.NaN };                float[] bF = new float[] { Float.NaN, 1.2f, Float.NaN, 3.7f, 27.0f, 42.0f, Float.NaN };             
assertTrue(Float.isNaN(NumberUtils.max(bF)));                                                          assertTrue(Float.isNaN(NumberUtils.max(bF)));                                                       
}                                                                                                      }                                                                                                   
