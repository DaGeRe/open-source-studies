                                                                                                     | @Test                                                                                               
public void testMinFloat() {                                                                           public void testMinFloat() {                                                                        
final float[] f = null;                                                                                final float[] f = null;                                                                             
try {                                                                                                  try {                                                                                               
NumberUtils.min(f);                                                                                    NumberUtils.min(f);                                                                                 
fail("No exception was thrown for null input.");                                                       fail("No exception was thrown for null input.");                                                    
} catch (IllegalArgumentException ex) {                                                                } catch (IllegalArgumentException ex) {                                                             
}                                                                                                      }                                                                                                   
try {                                                                                                  try {                                                                                               
NumberUtils.min(new float[0]);                                                                         NumberUtils.min(new float[0]);                                                                      
fail("No exception was thrown for empty input.");                                                      fail("No exception was thrown for empty input.");                                                   
} catch (IllegalArgumentException ex) {                                                                } catch (IllegalArgumentException ex) {                                                             
}                                                                                                      }                                                                                                   
assertEquals("min(float[]) failed for array length 1", 5.9f, NumberUtils.min(new float[] { 5.9f }),    assertEquals("min(float[]) failed for array length 1", 5.9f, NumberUtils.min(new float[] { 5.9f }), 
assertEquals("min(float[]) failed for array length 2", 6.8f, NumberUtils.min(new float[] { 6.8f, 9.7   assertEquals("min(float[]) failed for array length 2", 6.8f, NumberUtils.min(new float[] { 6.8f, 9.7
assertEquals("min(float[]) failed for array length 5", -10.6f, NumberUtils.min(new float[] { -10.6f,   assertEquals("min(float[]) failed for array length 5", -10.6f, NumberUtils.min(new float[] { -10.6f,
assertEquals(-10, NumberUtils.min(new float[] { -10, -5, 0, 5, 10 }), 0.0001f);                        assertEquals(-10, NumberUtils.min(new float[] { -10, -5, 0, 5, 10 }), 0.0001f);                     
assertEquals(-10, NumberUtils.min(new float[] { -5, 0, -10, 5, 10 }), 0.0001f);                        assertEquals(-10, NumberUtils.min(new float[] { -5, 0, -10, 5, 10 }), 0.0001f);                     
}                                                                                                      }                                                                                                   
