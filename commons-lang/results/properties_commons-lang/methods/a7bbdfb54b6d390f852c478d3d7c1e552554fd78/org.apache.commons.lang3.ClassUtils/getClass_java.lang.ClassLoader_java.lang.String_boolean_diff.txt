// Class loading
// ----------------------------------------------------------------------
/**
 * Returns the class represented by <code>className</code> using the
 * <code>classLoader</code>.  This implementation supports names like
 * "<code>java.lang.String[]</code>" as well as "<code>[Ljava.lang.String;</code>".
 *
 * @param classLoader  the class loader to use to load the class
 * @param className  the class name
 * @param initialize  whether the class must be initialized
 * @return the class represented by <code>className</code> using the <code>classLoader</code>
 * @throws ClassNotFoundException if the class is not found
 */
public static Class<?> getClass(ClassLoader classLoader, String className, boolean initialize) throws ClassNotFoundException {
    Class<?> clazz;
    if (abbreviationMap.containsKey(className)) {
        String clsName = "[" + abbreviationMap.get(className);
        clazz = Class.forName(clsName, initialize, classLoader).getComponentType();
    } else {
        clazz = Class.forName(toCanonicalName(className), initialize, classLoader);
    }
    return clazz;
}