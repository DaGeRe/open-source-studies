public void testSplitByWholeString_StringStringBooleanInt() {
    assertEquals(null, StringUtils.splitByWholeSeparator(null, ".", 3));
    assertEquals(0, StringUtils.splitByWholeSeparator("", ".", 3).length);
    String stringToSplitOnNulls = "ab   de fg";
    String[] splitOnNullExpectedResults = { "ab", "de fg" };
    // String[] splitOnNullExpectedResults = { "ab", "de" } ;
    String[] splitOnNullResults = StringUtils.splitByWholeSeparator(stringToSplitOnNulls, null, 2);
    assertEquals(splitOnNullExpectedResults.length, splitOnNullResults.length);
    for (int i = 0; i < splitOnNullExpectedResults.length; i += 1) {
        assertEquals(splitOnNullExpectedResults[i], splitOnNullResults[i]);
    }
    String stringToSplitOnCharactersAndString = "abstemiouslyaeiouyabstemiouslyaeiouyabstemiously";
    String[] splitOnStringExpectedResults = { "abstemiously", "abstemiouslyaeiouyabstemiously" };
    // String[] splitOnStringExpectedResults = { "abstemiously", "abstemiously" } ;
    String[] splitOnStringResults = StringUtils.splitByWholeSeparator(stringToSplitOnCharactersAndString, "aeiouy", 2);
    assertEquals(splitOnStringExpectedResults.length, splitOnStringResults.length);
    for (int i = 0; i < splitOnStringExpectedResults.length; i++) {
        assertEquals(splitOnStringExpectedResults[i], splitOnStringResults[i]);
    }
}