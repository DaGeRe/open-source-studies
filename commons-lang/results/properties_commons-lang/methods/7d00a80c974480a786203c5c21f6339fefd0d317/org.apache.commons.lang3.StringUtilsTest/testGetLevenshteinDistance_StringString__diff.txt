// -----------------------------------------------------------------------                             // -----------------------------------------------------------------------                          
                                                                                                     | @Test                                                                                               
public void testGetLevenshteinDistance_StringString() {                                                public void testGetLevenshteinDistance_StringString() {                                             
assertEquals(0, StringUtils.getLevenshteinDistance("", ""));                                           assertEquals(0, StringUtils.getLevenshteinDistance("", ""));                                        
assertEquals(1, StringUtils.getLevenshteinDistance("", "a"));                                          assertEquals(1, StringUtils.getLevenshteinDistance("", "a"));                                       
assertEquals(7, StringUtils.getLevenshteinDistance("aaapppp", ""));                                    assertEquals(7, StringUtils.getLevenshteinDistance("aaapppp", ""));                                 
assertEquals(1, StringUtils.getLevenshteinDistance("frog", "fog"));                                    assertEquals(1, StringUtils.getLevenshteinDistance("frog", "fog"));                                 
assertEquals(3, StringUtils.getLevenshteinDistance("fly", "ant"));                                     assertEquals(3, StringUtils.getLevenshteinDistance("fly", "ant"));                                  
assertEquals(7, StringUtils.getLevenshteinDistance("elephant", "hippo"));                              assertEquals(7, StringUtils.getLevenshteinDistance("elephant", "hippo"));                           
assertEquals(7, StringUtils.getLevenshteinDistance("hippo", "elephant"));                              assertEquals(7, StringUtils.getLevenshteinDistance("hippo", "elephant"));                           
assertEquals(8, StringUtils.getLevenshteinDistance("hippo", "zzzzzzzz"));                              assertEquals(8, StringUtils.getLevenshteinDistance("hippo", "zzzzzzzz"));                           
assertEquals(8, StringUtils.getLevenshteinDistance("zzzzzzzz", "hippo"));                              assertEquals(8, StringUtils.getLevenshteinDistance("zzzzzzzz", "hippo"));                           
assertEquals(1, StringUtils.getLevenshteinDistance("hello", "hallo"));                                 assertEquals(1, StringUtils.getLevenshteinDistance("hello", "hallo"));                              
try {                                                                                                  try {                                                                                               
@SuppressWarnings("unused")                                                                            @SuppressWarnings("unused")                                                                         
int d = StringUtils.getLevenshteinDistance("a", null);                                                 int d = StringUtils.getLevenshteinDistance("a", null);                                              
fail("expecting IllegalArgumentException");                                                            fail("expecting IllegalArgumentException");                                                         
} catch (IllegalArgumentException ex) {                                                                } catch (IllegalArgumentException ex) {                                                             
// empty                                                                                               // empty                                                                                            
}                                                                                                      }                                                                                                   
try {                                                                                                  try {                                                                                               
@SuppressWarnings("unused")                                                                            @SuppressWarnings("unused")                                                                         
int d = StringUtils.getLevenshteinDistance(null, "a");                                                 int d = StringUtils.getLevenshteinDistance(null, "a");                                              
fail("expecting IllegalArgumentException");                                                            fail("expecting IllegalArgumentException");                                                         
} catch (IllegalArgumentException ex) {                                                                } catch (IllegalArgumentException ex) {                                                             
// empty                                                                                               // empty                                                                                            
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
