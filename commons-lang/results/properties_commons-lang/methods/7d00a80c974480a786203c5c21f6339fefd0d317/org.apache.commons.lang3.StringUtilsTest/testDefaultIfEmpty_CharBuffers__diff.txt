                                                                                                     | @Test                                                                                               
public void testDefaultIfEmpty_CharBuffers() {                                                         public void testDefaultIfEmpty_CharBuffers() {                                                      
assertEquals("NULL", StringUtils.defaultIfEmpty(CharBuffer.wrap(""), CharBuffer.wrap("NULL")).toStri   assertEquals("NULL", StringUtils.defaultIfEmpty(CharBuffer.wrap(""), CharBuffer.wrap("NULL")).toStri
assertEquals("abc", StringUtils.defaultIfEmpty(CharBuffer.wrap("abc"), CharBuffer.wrap("NULL")).toSt   assertEquals("abc", StringUtils.defaultIfEmpty(CharBuffer.wrap("abc"), CharBuffer.wrap("NULL")).toSt
assertNull(StringUtils.defaultIfEmpty(CharBuffer.wrap(""), null));                                     assertNull(StringUtils.defaultIfEmpty(CharBuffer.wrap(""), null));                                  
// Tests compatibility for the API return type                                                         // Tests compatibility for the API return type                                                      
CharBuffer s = StringUtils.defaultIfEmpty(CharBuffer.wrap("abc"), CharBuffer.wrap("NULL"));            CharBuffer s = StringUtils.defaultIfEmpty(CharBuffer.wrap("abc"), CharBuffer.wrap("NULL"));         
assertEquals("abc", s.toString());                                                                     assertEquals("abc", s.toString());                                                                  
}                                                                                                      }                                                                                                   
