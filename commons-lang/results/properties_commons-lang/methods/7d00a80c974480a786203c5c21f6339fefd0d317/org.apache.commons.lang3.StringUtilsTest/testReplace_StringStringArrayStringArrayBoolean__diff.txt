/**                                                                                                    /**                                                                                                 
* Test method for 'StringUtils.replaceEachRepeatedly(String, String[], String[])'                      * Test method for 'StringUtils.replaceEachRepeatedly(String, String[], String[])'                   
*/                                                                                                     */                                                                                                  
                                                                                                     | @Test                                                                                               
public void testReplace_StringStringArrayStringArrayBoolean() {                                        public void testReplace_StringStringArrayStringArrayBoolean() {                                     
// JAVADOC TESTS START                                                                                 // JAVADOC TESTS START                                                                              
assertNull(StringUtils.replaceEachRepeatedly(null, new String[] { "a" }, new String[] { "b" }));       assertNull(StringUtils.replaceEachRepeatedly(null, new String[] { "a" }, new String[] { "b" }));    
assertEquals(StringUtils.replaceEachRepeatedly("", new String[] { "a" }, new String[] { "b" }), "");   assertEquals(StringUtils.replaceEachRepeatedly("", new String[] { "a" }, new String[] { "b" }), "");
assertEquals(StringUtils.replaceEachRepeatedly("aba", null, null), "aba");                             assertEquals(StringUtils.replaceEachRepeatedly("aba", null, null), "aba");                          
assertEquals(StringUtils.replaceEachRepeatedly("aba", new String[0], null), "aba");                    assertEquals(StringUtils.replaceEachRepeatedly("aba", new String[0], null), "aba");                 
assertEquals(StringUtils.replaceEachRepeatedly("aba", null, new String[0]), "aba");                    assertEquals(StringUtils.replaceEachRepeatedly("aba", null, new String[0]), "aba");                 
assertEquals(StringUtils.replaceEachRepeatedly("aba", new String[0], null), "aba");                    assertEquals(StringUtils.replaceEachRepeatedly("aba", new String[0], null), "aba");                 
assertEquals(StringUtils.replaceEachRepeatedly("aba", new String[] { "a" }, new String[] { "" }), "b   assertEquals(StringUtils.replaceEachRepeatedly("aba", new String[] { "a" }, new String[] { "" }), "b
assertEquals(StringUtils.replaceEachRepeatedly("aba", new String[] { null }, new String[] { "a" }),    assertEquals(StringUtils.replaceEachRepeatedly("aba", new String[] { null }, new String[] { "a" }), 
assertEquals(StringUtils.replaceEachRepeatedly("abcde", new String[] { "ab", "d" }, new String[] { "   assertEquals(StringUtils.replaceEachRepeatedly("abcde", new String[] { "ab", "d" }, new String[] { "
assertEquals(StringUtils.replaceEachRepeatedly("abcde", new String[] { "ab", "d" }, new String[] { "   assertEquals(StringUtils.replaceEachRepeatedly("abcde", new String[] { "ab", "d" }, new String[] { "
try {                                                                                                  try {                                                                                               
StringUtils.replaceEachRepeatedly("abcde", new String[] { "ab", "d" }, new String[] { "d", "ab" });    StringUtils.replaceEachRepeatedly("abcde", new String[] { "ab", "d" }, new String[] { "d", "ab" }); 
fail("Should be a circular reference");                                                                fail("Should be a circular reference");                                                             
} catch (IllegalStateException e) {                                                                    } catch (IllegalStateException e) {                                                                 
}                                                                                                      }                                                                                                   
// JAVADOC TESTS END                                                                                   // JAVADOC TESTS END                                                                                
}                                                                                                      }                                                                                                   
