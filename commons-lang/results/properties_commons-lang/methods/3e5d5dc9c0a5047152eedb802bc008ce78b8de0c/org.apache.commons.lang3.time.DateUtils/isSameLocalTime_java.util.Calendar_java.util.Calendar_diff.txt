// -----------------------------------------------------------------------                             // -----------------------------------------------------------------------                          
/**                                                                                                    /**                                                                                                 
* &lt;p&gt;Checks if two calendar objects represent the same local time.&lt;/p&gt;                     * &lt;p&gt;Checks if two calendar objects represent the same local time.&lt;/p&gt;                  
*                                                                                                      *                                                                                                   
* &lt;p&gt;This method compares the values of the fields of the two objects.                           * &lt;p&gt;This method compares the values of the fields of the two objects.                        
* In addition, both calendars must be the same of the same type.&lt;/p&gt;                             * In addition, both calendars must be the same of the same type.&lt;/p&gt;                          
*                                                                                                      *                                                                                                   
* @param cal1  the first calendar, not altered, not null                                               * @param cal1  the first calendar, not altered, not null                                            
* @param cal2  the second calendar, not altered, not null                                              * @param cal2  the second calendar, not altered, not null                                           
* @return true if they represent the same millisecond instant                                          * @return true if they represent the same millisecond instant                                       
* @throws IllegalArgumentException if either date is &lt;code&gt;null&lt;/code&gt;                     * @throws IllegalArgumentException if either date is &lt;code&gt;null&lt;/code&gt;                  
* @since 2.1                                                                                           * @since 2.1                                                                                        
*/                                                                                                     */                                                                                                  
public static boolean isSameLocalTime(Calendar cal1, Calendar cal2) {                                  public static boolean isSameLocalTime(Calendar cal1, Calendar cal2) {                               
if (cal1 == null || cal2 == null) {                                                                    if (cal1 == null || cal2 == null) {                                                                 
throw new IllegalArgumentException("The date must not be null");                                       throw new IllegalArgumentException("The date must not be null");                                    
}                                                                                                      }                                                                                                   
return (cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND | return (cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND
}                                                                                                      }                                                                                                   
