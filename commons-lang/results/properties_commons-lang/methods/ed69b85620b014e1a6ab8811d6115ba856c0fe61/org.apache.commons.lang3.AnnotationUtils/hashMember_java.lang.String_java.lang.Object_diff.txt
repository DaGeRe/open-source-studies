// besides modularity, this has the advantage of autoboxing primitives:                                // besides modularity, this has the advantage of autoboxing primitives:                             
private static int hashMember(String name, Object value) throws IllegalArgumentException, IllegalAcc | private static int hashMember(String name, Object value) throws IllegalAccessException, InvocationTa
int part1 = name.hashCode() * 127;                                                                     int part1 = name.hashCode() * 127;                                                                  
if (value.getClass().isArray()) {                                                                      if (value.getClass().isArray()) {                                                                   
return part1 ^ arrayMemberHash(value.getClass().getComponentType(), value);                            return part1 ^ arrayMemberHash(value.getClass().getComponentType(), value);                         
}                                                                                                      }                                                                                                   
if (value instanceof Annotation) {                                                                     if (value instanceof Annotation) {                                                                  
return part1 ^ hashCode((Annotation) value);                                                           return part1 ^ hashCode((Annotation) value);                                                        
}                                                                                                      }                                                                                                   
return part1 ^ value.hashCode();                                                                       return part1 ^ value.hashCode();                                                                    
}                                                                                                      }                                                                                                   
