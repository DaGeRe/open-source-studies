/**
 * <p>Uses <code>ReflectionToStringBuilder</code> to generate a
 * <code>toString</code> for the specified object.</p>
 *
 * @param <T> the type of the object
 * @param object  the Object to be output
 * @param style  the style of the <code>toString</code> to create, may be <code>null</code>
 * @param outputTransients  whether to include transient fields
 * @param reflectUpToClass  the superclass to reflect up to (inclusive), may be <code>null</code>
 * @return the String result
 * @see ReflectionToStringBuilder#toString(Object,ToStringStyle,boolean,boolean,Class)
 * @since 2.0
 */
public static <T> String reflectionToString(T object, ToStringStyle style, boolean outputTransients, Class<? super T> reflectUpToClass) {
    return ReflectionToStringBuilder.toString(object, style, outputTransients, false, reflectUpToClass);
}