public void testObject() {
    Integer i3 = Integer.valueOf(3);
    Integer i4 = Integer.valueOf(4);
    assertEquals(baseStr + "[<null>]", new ToStringBuilder(base).append((Object) null).toString());
    assertEquals(baseStr + "[3]", new ToStringBuilder(base).append(i3).toString());
    assertEquals(baseStr + "[<null>]", new ToStringBuilder(base).append("a", (Object) null).toString());
    assertEquals(baseStr + "[3]", new ToStringBuilder(base).append("a", i3).toString());
    assertEquals(baseStr + "[3,4]", new ToStringBuilder(base).append("a", i3).append("b", i4).toString());
    assertEquals(baseStr + "[<Integer>]", new ToStringBuilder(base).append("a", i3, false).toString());
    assertEquals(baseStr + "[<size=0>]", new ToStringBuilder(base).append("a", new ArrayList<Object>(), false).toString());
    assertEquals(baseStr + "[[]]", new ToStringBuilder(base).append("a", new ArrayList<Object>(), true).toString());
    assertEquals(baseStr + "[<size=0>]", new ToStringBuilder(base).append("a", new HashMap<Object, Object>(), false).toString());
    assertEquals(baseStr + "[{}]", new ToStringBuilder(base).append("a", new HashMap<Object, Object>(), true).toString());
    assertEquals(baseStr + "[<size=0>]", new ToStringBuilder(base).append("a", (Object) new String[0], false).toString());
    assertEquals(baseStr + "[{}]", new ToStringBuilder(base).append("a", (Object) new String[0], true).toString());
}