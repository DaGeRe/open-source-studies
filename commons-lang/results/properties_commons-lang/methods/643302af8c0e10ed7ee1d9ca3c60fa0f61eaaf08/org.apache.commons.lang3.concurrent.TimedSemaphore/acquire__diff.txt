/**
 * Tries to acquire a permit from this semaphore. This method will block if
 * the limit for the current period has already been reached. If
 * {@link #shutdown()} has already been invoked, calling this method will
 * cause an exception. The very first call of this method starts the timer
 * task which monitors the time period set for this {@code TimedSemaphore}.
 * From now on the semaphore is active.
 *
 * @throws InterruptedException if the thread gets interrupted
 * @throws IllegalStateException if this semaphore is already shut down
 */
public synchronized void acquire() throws InterruptedException {
    if (isShutdown()) {
        throw new IllegalStateException("TimedSemaphore is shut down!");
    }
    if (task == null) {
        task = startTimer();
    }
    boolean canPass = false;
    do {
        canPass = getLimit() <= NO_LIMIT || acquireCount < getLimit();
        if (!canPass) {
            wait();
        } else {
            acquireCount++;
        }
    } while (!canPass);
}