/**
 * Null safe comparison of Comparables.
 *
 * @param c1  the first comparable, may be null
 * @param c2  the second comparable, may be null
 * @param nullGreater if true <code>null</code> is considered greater
 * than a Non-<code>null</code> value or if false <code>null</code> is
 * considered less than a Non-<code>null</code> value
 * @return a negative value if c1 < c2, zero if c1 = c2
 * and a positive value if c1 > c2
 * @see java.util.Comparator#compare(Object, Object)
 */
public static <T extends Comparable<? super T>> int compare(T c1, T c2, boolean nullGreater) {
    int result = 0;
    if ((c1 == null) || (c2 == null)) {
        if (nullGreater) {
            result = (c1 == null ? 1 : 0) - (c2 == null ? 1 : 0);
        } else {
            result = (c1 == null ? -1 : 0) - (c2 == null ? -1 : 0);
        }
    } else {
        result = c1.compareTo(c2);
    }
    return result;
}