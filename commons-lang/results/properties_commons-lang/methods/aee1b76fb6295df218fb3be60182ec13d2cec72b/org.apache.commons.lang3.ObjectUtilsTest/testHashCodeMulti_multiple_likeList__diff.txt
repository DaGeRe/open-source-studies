                                                                                                     | @Test                                                                                               
public void testHashCodeMulti_multiple_likeList() {                                                    public void testHashCodeMulti_multiple_likeList() {                                                 
List&lt;Object&gt; list0 = new ArrayList&lt;Object&gt;(Arrays.asList());                               List&lt;Object&gt; list0 = new ArrayList&lt;Object&gt;(Arrays.asList());                            
assertEquals(list0.hashCode(), ObjectUtils.hashCodeMulti());                                           assertEquals(list0.hashCode(), ObjectUtils.hashCodeMulti());                                        
List&lt;Object&gt; list1 = new ArrayList&lt;Object&gt;(Arrays.asList("a"));                            List&lt;Object&gt; list1 = new ArrayList&lt;Object&gt;(Arrays.asList("a"));                         
assertEquals(list1.hashCode(), ObjectUtils.hashCodeMulti("a"));                                        assertEquals(list1.hashCode(), ObjectUtils.hashCodeMulti("a"));                                     
List&lt;Object&gt; list2 = new ArrayList&lt;Object&gt;(Arrays.asList("a", "b"));                       List&lt;Object&gt; list2 = new ArrayList&lt;Object&gt;(Arrays.asList("a", "b"));                    
assertEquals(list2.hashCode(), ObjectUtils.hashCodeMulti("a", "b"));                                   assertEquals(list2.hashCode(), ObjectUtils.hashCodeMulti("a", "b"));                                
List&lt;Object&gt; list3 = new ArrayList&lt;Object&gt;(Arrays.asList("a", "b", "c"));                  List&lt;Object&gt; list3 = new ArrayList&lt;Object&gt;(Arrays.asList("a", "b", "c"));               
assertEquals(list3.hashCode(), ObjectUtils.hashCodeMulti("a", "b", "c"));                              assertEquals(list3.hashCode(), ObjectUtils.hashCodeMulti("a", "b", "c"));                           
}                                                                                                      }                                                                                                   
