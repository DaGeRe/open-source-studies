/**
 * <p>Finds the index of the given value in the array starting at the given index.</p>
 *
 * <p>This method returns {@link #INDEX_NOT_FOUND} (<code>-1</code>) for a <code>null</code> input array.</p>
 *
 * <p>A negative startIndex is treated as zero. A startIndex larger than the array
 * length will return {@link #INDEX_NOT_FOUND} (<code>-1</code>).</p>
 *
 * @param array  the array to search through for the object, may be <code>null</code>
 * @param valueToFind  the value to find
 * @param startIndex  the index to start searching at
 * @return the index of the value within the array,
 *  {@link #INDEX_NOT_FOUND} (<code>-1</code>) if not found or <code>null</code> array input
 */
public static int indexOf(double[] array, double valueToFind, int startIndex) {
    if (ArrayUtils.isEmpty(array)) {
        return INDEX_NOT_FOUND;
    }
    if (startIndex < 0) {
        startIndex = 0;
    }
    for (int i = startIndex; i < array.length; i++) {
        if (valueToFind == array[i]) {
            return i;
        }
    }
    return INDEX_NOT_FOUND;
}