// noNullElements array
// ---------------------------------------------------------------------------------
/**
 * <p>Validate that the specified argument array is neither
 * <code>null</code> nor contains any elements that are <code>null</code>;
 * otherwise throwing an exception with the specified message.
 *
 * <pre>Validate.noNullElements(myArray, "The array contain null at position %d");</pre>
 *
 * <p>If the array is <code>null</code>, then the message in the exception
 * is &quot;The validated object is null&quot;.</p>
 *
 * <p>If the array has a <code>null</code> element, then the iteration
 * index of the invalid element is appended to the <code>values</code>
 * argument.</p>
 *
 * @param <T> the array type
 * @param array the array to check
 * @return the validated array (never <code>null</code> method for chaining)
 * @throws NullPointerException if the array is <code>null</code>
 * @throws IllegalArgumentException if an element is <code>null</code>
 * @see #noNullElements(Object[])
 */
public static <T> T[] noNullElements(T[] array, String message, Object... values) {
    Validate.notNull(array);
    for (int i = 0; i < array.length; i++) {
        if (array[i] == null) {
            Object[] values2 = ArrayUtils.add(values, Integer.valueOf(i));
            throw new IllegalArgumentException(String.format(message, values2));
        }
    }
    return array;
}