public void testSqueeze_StringStringarray() {
    assertEquals(null, CharSetUtils.squeeze(null, (String[]) null));
    assertEquals(null, CharSetUtils.squeeze(null, new String[0]));
    assertEquals(null, CharSetUtils.squeeze(null, new String[] { null }));
    assertEquals(null, CharSetUtils.squeeze(null, new String[] { "el" }));
    assertEquals("", CharSetUtils.squeeze("", (String[]) null));
    assertEquals("", CharSetUtils.squeeze("", new String[0]));
    assertEquals("", CharSetUtils.squeeze("", new String[] { null }));
    assertEquals("", CharSetUtils.squeeze("", new String[] { "a-e" }));
    assertEquals("hello", CharSetUtils.squeeze("hello", (String[]) null));
    assertEquals("hello", CharSetUtils.squeeze("hello", new String[0]));
    assertEquals("hello", CharSetUtils.squeeze("hello", new String[] { null }));
    assertEquals("hello", CharSetUtils.squeeze("hello", new String[] { "a-e" }));
    assertEquals("helo", CharSetUtils.squeeze("hello", new String[] { "el" }));
    assertEquals("hello", CharSetUtils.squeeze("hello", new String[] { "e" }));
    assertEquals("fofof", CharSetUtils.squeeze("fooffooff", new String[] { "of" }));
    assertEquals("fof", CharSetUtils.squeeze("fooooff", new String[] { "fo" }));
}