// /**
// * Test extended formats with choice format.
// *
// * NOTE: FAILING - currently sub-formats not supported
// */
// public void testExtendedWithChoiceFormat() {
// String pattern = "Choice: {0,choice,1.0#{1,lower}|2.0#{1,upper}}";
// ExtendedMessageFormat emf = new ExtendedMessageFormat(pattern, registry);
// assertPatterns(null, pattern, emf.toPattern());
// try {
// assertEquals("one", emf.format(new Object[] {Integer.valueOf(1), "ONE"}));
// assertEquals("TWO", emf.format(new Object[] {Integer.valueOf(2), "two"}));
// } catch (IllegalArgumentException e) {
// // currently sub-formats not supported
// }
// }
// /**
// * Test mixed extended and built-in formats with choice format.
// *
// * NOTE: FAILING - currently sub-formats not supported
// */
// public void testExtendedAndBuiltInWithChoiceFormat() {
// String pattern = "Choice: {0,choice,1.0#{0} {1,lower} {2,number}|2.0#{0} {1,upper} {2,number,currency}}";
// Object[] lowArgs  = new Object[] {Integer.valueOf(1), "Low",  Double.valueOf("1234.56")};
// Object[] highArgs = new Object[] {Integer.valueOf(2), "High", Double.valueOf("9876.54")};
// Locale[] availableLocales = ChoiceFormat.getAvailableLocales();
// Locale[] testLocales = new Locale[availableLocales.length + 1];
// testLocales[0] = null;
// System.arraycopy(availableLocales, 0, testLocales, 1, availableLocales.length);
// for (int i = 0; i < testLocales.length; i++) {
// NumberFormat nf = null;
// NumberFormat cf = null;
// ExtendedMessageFormat emf = null;
// if (testLocales[i] == null) {
// nf = NumberFormat.getNumberInstance();
// cf = NumberFormat.getCurrencyInstance();
// emf = new ExtendedMessageFormat(pattern, registry);
// } else {
// nf = NumberFormat.getNumberInstance(testLocales[i]);
// cf = NumberFormat.getCurrencyInstance(testLocales[i]);
// emf = new ExtendedMessageFormat(pattern, testLocales[i], registry);
// }
// assertPatterns(null, pattern, emf.toPattern());
// try {
// String lowExpected = lowArgs[0] + " low "    + nf.format(lowArgs[2]);
// String highExpected = highArgs[0] + " HIGH "  + cf.format(highArgs[2]);
// assertEquals(lowExpected,  emf.format(lowArgs));
// assertEquals(highExpected, emf.format(highArgs));
// } catch (IllegalArgumentException e) {
// // currently sub-formats not supported
// }
// }
// }
/**
 * Test the built in choice format.
 */
public void testBuiltInChoiceFormat() {
    Object[] values = new Number[] { Integer.valueOf(1), Double.valueOf("2.2"), Double.valueOf("1234.5") };
    String choicePattern = null;
    Locale[] availableLocales = ChoiceFormat.getAvailableLocales();
    choicePattern = "{0,choice,1#One|2#Two|3#Many {0,number}}";
    for (Object value : values) {
        checkBuiltInFormat(value + ": " + choicePattern, new Object[] { value }, availableLocales);
    }
    choicePattern = "{0,choice,1#''One''|2#\"Two\"|3#''{Many}'' {0,number}}";
    for (Object value : values) {
        checkBuiltInFormat(value + ": " + choicePattern, new Object[] { value }, availableLocales);
    }
}