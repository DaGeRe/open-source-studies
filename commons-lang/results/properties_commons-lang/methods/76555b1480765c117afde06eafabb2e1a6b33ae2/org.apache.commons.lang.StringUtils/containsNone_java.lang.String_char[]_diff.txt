// ContainsNone
// -----------------------------------------------------------------------
/**
 * <p>Checks that the String does not contain certain characters.</p>
 *
 * <p>A <code>null</code> String will return <code>true</code>.
 * A <code>null</code> invalid character array will return <code>true</code>.
 * An empty String ("") always returns true.</p>
 *
 * <pre>
 * StringUtils.containsNone(null, *)       = true
 * StringUtils.containsNone(*, null)       = true
 * StringUtils.containsNone("", *)         = true
 * StringUtils.containsNone("ab", '')      = true
 * StringUtils.containsNone("abab", 'xyz') = true
 * StringUtils.containsNone("ab1", 'xyz')  = true
 * StringUtils.containsNone("abz", 'xyz')  = false
 * </pre>
 *
 * @param str  the String to check, may be null
 * @param invalidChars  an array of invalid chars, may be null
 * @return true if it contains none of the invalid chars, or is null
 * @since 2.0
 */
public static boolean containsNone(String str, char[] invalidChars) {
    if (str == null || invalidChars == null) {
        return true;
    }
    int strSize = str.length();
    int validSize = invalidChars.length;
    for (int i = 0; i < strSize; i++) {
        char ch = str.charAt(i);
        for (int j = 0; j < validSize; j++) {
            if (invalidChars[j] == ch) {
                return false;
            }
        }
    }
    return true;
}