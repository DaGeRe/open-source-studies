// ------------------------------------------------------------------------
public void testGetLength() {
    assertEquals(0, ArrayUtils.getLength(null));
    Object[] emptyObjectArray = new Object[0];
    Object[] notEmptyObjectArray = new Object[] { "aValue" };
    assertEquals(0, ArrayUtils.getLength(null));
    assertEquals(0, ArrayUtils.getLength(emptyObjectArray));
    assertEquals(1, ArrayUtils.getLength(notEmptyObjectArray));
    int[] emptyIntArray = new int[] {};
    int[] notEmptyIntArray = new int[] { 1 };
    assertEquals(0, ArrayUtils.getLength(null));
    assertEquals(0, ArrayUtils.getLength(emptyIntArray));
    assertEquals(1, ArrayUtils.getLength(notEmptyIntArray));
    short[] emptyShortArray = new short[] {};
    short[] notEmptyShortArray = new short[] { 1 };
    assertEquals(0, ArrayUtils.getLength(null));
    assertEquals(0, ArrayUtils.getLength(emptyShortArray));
    assertEquals(1, ArrayUtils.getLength(notEmptyShortArray));
    char[] emptyCharArray = new char[] {};
    char[] notEmptyCharArray = new char[] { 1 };
    assertEquals(0, ArrayUtils.getLength(null));
    assertEquals(0, ArrayUtils.getLength(emptyCharArray));
    assertEquals(1, ArrayUtils.getLength(notEmptyCharArray));
    byte[] emptyByteArray = new byte[] {};
    byte[] notEmptyByteArray = new byte[] { 1 };
    assertEquals(0, ArrayUtils.getLength(null));
    assertEquals(0, ArrayUtils.getLength(emptyByteArray));
    assertEquals(1, ArrayUtils.getLength(notEmptyByteArray));
    double[] emptyDoubleArray = new double[] {};
    double[] notEmptyDoubleArray = new double[] { 1.0 };
    assertEquals(0, ArrayUtils.getLength(null));
    assertEquals(0, ArrayUtils.getLength(emptyDoubleArray));
    assertEquals(1, ArrayUtils.getLength(notEmptyDoubleArray));
    float[] emptyFloatArray = new float[] {};
    float[] notEmptyFloatArray = new float[] { 1.0F };
    assertEquals(0, ArrayUtils.getLength(null));
    assertEquals(0, ArrayUtils.getLength(emptyFloatArray));
    assertEquals(1, ArrayUtils.getLength(notEmptyFloatArray));
    boolean[] emptyBooleanArray = new boolean[] {};
    boolean[] notEmptyBooleanArray = new boolean[] { true };
    assertEquals(0, ArrayUtils.getLength(null));
    assertEquals(0, ArrayUtils.getLength(emptyBooleanArray));
    assertEquals(1, ArrayUtils.getLength(notEmptyBooleanArray));
    try {
        ArrayUtils.getLength("notAnArray");
        fail("IllegalArgumentException should have been thrown");
    } catch (IllegalArgumentException e) {
    }
}