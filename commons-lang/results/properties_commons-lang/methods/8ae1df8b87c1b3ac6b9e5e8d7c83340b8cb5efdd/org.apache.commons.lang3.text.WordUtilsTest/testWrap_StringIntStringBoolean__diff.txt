public void testWrap_StringIntStringBoolean() {
    assertEquals(null, WordUtils.wrap(null, 20, "\n", false));
    assertEquals(null, WordUtils.wrap(null, 20, "\n", true));
    assertEquals(null, WordUtils.wrap(null, 20, null, true));
    assertEquals(null, WordUtils.wrap(null, 20, null, false));
    assertEquals(null, WordUtils.wrap(null, -1, null, true));
    assertEquals(null, WordUtils.wrap(null, -1, null, false));
    assertEquals("", WordUtils.wrap("", 20, "\n", false));
    assertEquals("", WordUtils.wrap("", 20, "\n", true));
    assertEquals("", WordUtils.wrap("", 20, null, false));
    assertEquals("", WordUtils.wrap("", 20, null, true));
    assertEquals("", WordUtils.wrap("", -1, null, false));
    assertEquals("", WordUtils.wrap("", -1, null, true));
    // normal
    String input = "Here is one line of text that is going to be wrapped after 20 columns.";
    String expected = "Here is one line of\ntext that is going\nto be wrapped after\n20 columns.";
    assertEquals(expected, WordUtils.wrap(input, 20, "\n", false));
    assertEquals(expected, WordUtils.wrap(input, 20, "\n", true));
    // unusual newline char
    input = "Here is one line of text that is going to be wrapped after 20 columns.";
    expected = "Here is one line of<br />text that is going<br />to be wrapped after<br />20 columns.";
    assertEquals(expected, WordUtils.wrap(input, 20, "<br />", false));
    assertEquals(expected, WordUtils.wrap(input, 20, "<br />", true));
    // short line length
    input = "Here is one line";
    expected = "Here\nis one\nline";
    assertEquals(expected, WordUtils.wrap(input, 6, "\n", false));
    expected = "Here\nis\none\nline";
    assertEquals(expected, WordUtils.wrap(input, 2, "\n", false));
    assertEquals(expected, WordUtils.wrap(input, -1, "\n", false));
    // system newline char
    String systemNewLine = System.getProperty("line.separator");
    input = "Here is one line of text that is going to be wrapped after 20 columns.";
    expected = "Here is one line of" + systemNewLine + "text that is going" + systemNewLine + "to be wrapped after" + systemNewLine + "20 columns.";
    assertEquals(expected, WordUtils.wrap(input, 20, null, false));
    assertEquals(expected, WordUtils.wrap(input, 20, null, true));
    // with extra spaces
    input = " Here:  is  one  line  of  text  that  is  going  to  be  wrapped  after  20  columns.";
    expected = "Here:  is  one  line\nof  text  that  is \ngoing  to  be \nwrapped  after  20 \ncolumns.";
    assertEquals(expected, WordUtils.wrap(input, 20, "\n", false));
    assertEquals(expected, WordUtils.wrap(input, 20, "\n", true));
    // with tab
    input = "Here is\tone line of text that is going to be wrapped after 20 columns.";
    expected = "Here is\tone line of\ntext that is going\nto be wrapped after\n20 columns.";
    assertEquals(expected, WordUtils.wrap(input, 20, "\n", false));
    assertEquals(expected, WordUtils.wrap(input, 20, "\n", true));
    // with tab at wrapColumn
    input = "Here is one line of\ttext that is going to be wrapped after 20 columns.";
    expected = "Here is one line\nof\ttext that is\ngoing to be wrapped\nafter 20 columns.";
    assertEquals(expected, WordUtils.wrap(input, 20, "\n", false));
    assertEquals(expected, WordUtils.wrap(input, 20, "\n", true));
    // difference because of long word
    input = "Click here to jump to the jakarta website - http://jakarta.apache.org";
    expected = "Click here to jump\nto the jakarta\nwebsite -\nhttp://jakarta.apache.org";
    assertEquals(expected, WordUtils.wrap(input, 20, "\n", false));
    expected = "Click here to jump\nto the jakarta\nwebsite -\nhttp://jakarta.apach\ne.org";
    assertEquals(expected, WordUtils.wrap(input, 20, "\n", true));
    // difference because of long word in middle
    input = "Click here, http://jakarta.apache.org, to jump to the jakarta website";
    expected = "Click here,\nhttp://jakarta.apache.org,\nto jump to the\njakarta website";
    assertEquals(expected, WordUtils.wrap(input, 20, "\n", false));
    expected = "Click here,\nhttp://jakarta.apach\ne.org, to jump to\nthe jakarta website";
    assertEquals(expected, WordUtils.wrap(input, 20, "\n", true));
    // System.err.println(expected);
    // System.err.println(WordUtils.wrap(input, 20, "\n", false));
}