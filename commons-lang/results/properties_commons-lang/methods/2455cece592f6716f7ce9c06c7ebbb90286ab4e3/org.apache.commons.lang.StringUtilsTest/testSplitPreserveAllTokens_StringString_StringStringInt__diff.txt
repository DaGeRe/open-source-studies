public void testSplitPreserveAllTokens_StringString_StringStringInt() {                                public void testSplitPreserveAllTokens_StringString_StringStringInt() {                             
assertEquals(null, StringUtils.splitPreserveAllTokens(null, "."));                                     assertEquals(null, StringUtils.splitPreserveAllTokens(null, "."));                                  
assertEquals(null, StringUtils.splitPreserveAllTokens(null, ".", 3));                                  assertEquals(null, StringUtils.splitPreserveAllTokens(null, ".", 3));                               
assertEquals(0, StringUtils.splitPreserveAllTokens("", ".").length);                                   assertEquals(0, StringUtils.splitPreserveAllTokens("", ".").length);                                
assertEquals(0, StringUtils.splitPreserveAllTokens("", ".", 3).length);                                assertEquals(0, StringUtils.splitPreserveAllTokens("", ".", 3).length);                             
innerTestSplitPreserveAllTokens('.', ".", ' ');                                                        innerTestSplitPreserveAllTokens('.', ".", ' ');                                                     
innerTestSplitPreserveAllTokens('.', ".", ',');                                                        innerTestSplitPreserveAllTokens('.', ".", ',');                                                     
innerTestSplitPreserveAllTokens('.', ".,", 'x');                                                       innerTestSplitPreserveAllTokens('.', ".,", 'x');                                                    
for (int i = 0; i &lt; WHITESPACE.length(); i++) {                                                     for (int i = 0; i &lt; WHITESPACE.length(); i++) {                                                  
for (int j = 0; j &lt; NON_WHITESPACE.length(); j++) {                                                 for (int j = 0; j &lt; NON_WHITESPACE.length(); j++) {                                              
innerTestSplitPreserveAllTokens(WHITESPACE.charAt(i), null, NON_WHITESPACE.charAt(j));                 innerTestSplitPreserveAllTokens(WHITESPACE.charAt(i), null, NON_WHITESPACE.charAt(j));              
innerTestSplitPreserveAllTokens(WHITESPACE.charAt(i), String.valueOf(WHITESPACE.charAt(i)), NON_WHIT   innerTestSplitPreserveAllTokens(WHITESPACE.charAt(i), String.valueOf(WHITESPACE.charAt(i)), NON_WHIT
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
{                                                                                                      {                                                                                                   
String[] results = null;                                                                               String[] results = null;                                                                            
String[] expectedResults = { "ab", "de fg" };                                                          String[] expectedResults = { "ab", "de fg" };                                                       
results = StringUtils.splitPreserveAllTokens("ab de fg", null, 2);                                     results = StringUtils.splitPreserveAllTokens("ab de fg", null, 2);                                  
assertEquals(expectedResults.length, results.length);                                                  assertEquals(expectedResults.length, results.length);                                               
for (int i = 0; i &lt; expectedResults.length; i++) {                                                  for (int i = 0; i &lt; expectedResults.length; i++) {                                               
assertEquals(expectedResults[i], results[i]);                                                          assertEquals(expectedResults[i], results[i]);                                                       
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
{                                                                                                      {                                                                                                   
String[] results = null;                                                                               String[] results = null;                                                                            
String[] expectedResults = { "ab", "  de fg" };                                                        String[] expectedResults = { "ab", "  de fg" };                                                     
results = StringUtils.splitPreserveAllTokens("ab   de fg", null, 2);                                   results = StringUtils.splitPreserveAllTokens("ab   de fg", null, 2);                                
System.out.println("");                                                                              |                                                                                                     
assertEquals(expectedResults.length, results.length);                                                  assertEquals(expectedResults.length, results.length);                                               
for (int i = 0; i &lt; expectedResults.length; i++) {                                                  for (int i = 0; i &lt; expectedResults.length; i++) {                                               
assertEquals(expectedResults[i], results[i]);                                                          assertEquals(expectedResults[i], results[i]);                                                       
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
{                                                                                                      {                                                                                                   
String[] results = null;                                                                               String[] results = null;                                                                            
String[] expectedResults = { "ab", "::de:fg" };                                                        String[] expectedResults = { "ab", "::de:fg" };                                                     
results = StringUtils.splitPreserveAllTokens("ab:::de:fg", ":", 2);                                    results = StringUtils.splitPreserveAllTokens("ab:::de:fg", ":", 2);                                 
assertEquals(expectedResults.length, results.length);                                                  assertEquals(expectedResults.length, results.length);                                               
for (int i = 0; i &lt; expectedResults.length; i++) {                                                  for (int i = 0; i &lt; expectedResults.length; i++) {                                               
assertEquals(expectedResults[i], results[i]);                                                          assertEquals(expectedResults[i], results[i]);                                                       
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
{                                                                                                      {                                                                                                   
String[] results = null;                                                                               String[] results = null;                                                                            
String[] expectedResults = { "ab", "", " de fg" };                                                     String[] expectedResults = { "ab", "", " de fg" };                                                  
results = StringUtils.splitPreserveAllTokens("ab   de fg", null, 3);                                   results = StringUtils.splitPreserveAllTokens("ab   de fg", null, 3);                                
assertEquals(expectedResults.length, results.length);                                                  assertEquals(expectedResults.length, results.length);                                               
for (int i = 0; i &lt; expectedResults.length; i++) {                                                  for (int i = 0; i &lt; expectedResults.length; i++) {                                               
assertEquals(expectedResults[i], results[i]);                                                          assertEquals(expectedResults[i], results[i]);                                                       
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
{                                                                                                      {                                                                                                   
String[] results = null;                                                                               String[] results = null;                                                                            
String[] expectedResults = { "ab", "", "", "de fg" };                                                  String[] expectedResults = { "ab", "", "", "de fg" };                                               
results = StringUtils.splitPreserveAllTokens("ab   de fg", null, 4);                                   results = StringUtils.splitPreserveAllTokens("ab   de fg", null, 4);                                
assertEquals(expectedResults.length, results.length);                                                  assertEquals(expectedResults.length, results.length);                                               
for (int i = 0; i &lt; expectedResults.length; i++) {                                                  for (int i = 0; i &lt; expectedResults.length; i++) {                                               
assertEquals(expectedResults[i], results[i]);                                                          assertEquals(expectedResults[i], results[i]);                                                       
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
{                                                                                                      {                                                                                                   
String[] expectedResults = { "ab", "cd:ef" };                                                          String[] expectedResults = { "ab", "cd:ef" };                                                       
String[] results = null;                                                                               String[] results = null;                                                                            
results = StringUtils.splitPreserveAllTokens("ab:cd:ef", ":", 2);                                      results = StringUtils.splitPreserveAllTokens("ab:cd:ef", ":", 2);                                   
assertEquals(expectedResults.length, results.length);                                                  assertEquals(expectedResults.length, results.length);                                               
for (int i = 0; i &lt; expectedResults.length; i++) {                                                  for (int i = 0; i &lt; expectedResults.length; i++) {                                               
assertEquals(expectedResults[i], results[i]);                                                          assertEquals(expectedResults[i], results[i]);                                                       
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
{                                                                                                      {                                                                                                   
String[] results = null;                                                                               String[] results = null;                                                                            
String[] expectedResults = { "ab", ":cd:ef" };                                                         String[] expectedResults = { "ab", ":cd:ef" };                                                      
results = StringUtils.splitPreserveAllTokens("ab::cd:ef", ":", 2);                                     results = StringUtils.splitPreserveAllTokens("ab::cd:ef", ":", 2);                                  
assertEquals(expectedResults.length, results.length);                                                  assertEquals(expectedResults.length, results.length);                                               
for (int i = 0; i &lt; expectedResults.length; i++) {                                                  for (int i = 0; i &lt; expectedResults.length; i++) {                                               
assertEquals(expectedResults[i], results[i]);                                                          assertEquals(expectedResults[i], results[i]);                                                       
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
{                                                                                                      {                                                                                                   
String[] results = null;                                                                               String[] results = null;                                                                            
String[] expectedResults = { "ab", "", ":cd:ef" };                                                     String[] expectedResults = { "ab", "", ":cd:ef" };                                                  
results = StringUtils.splitPreserveAllTokens("ab:::cd:ef", ":", 3);                                    results = StringUtils.splitPreserveAllTokens("ab:::cd:ef", ":", 3);                                 
assertEquals(expectedResults.length, results.length);                                                  assertEquals(expectedResults.length, results.length);                                               
for (int i = 0; i &lt; expectedResults.length; i++) {                                                  for (int i = 0; i &lt; expectedResults.length; i++) {                                               
assertEquals(expectedResults[i], results[i]);                                                          assertEquals(expectedResults[i], results[i]);                                                       
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
{                                                                                                      {                                                                                                   
String[] results = null;                                                                               String[] results = null;                                                                            
String[] expectedResults = { "ab", "", "", "cd:ef" };                                                  String[] expectedResults = { "ab", "", "", "cd:ef" };                                               
results = StringUtils.splitPreserveAllTokens("ab:::cd:ef", ":", 4);                                    results = StringUtils.splitPreserveAllTokens("ab:::cd:ef", ":", 4);                                 
assertEquals(expectedResults.length, results.length);                                                  assertEquals(expectedResults.length, results.length);                                               
for (int i = 0; i &lt; expectedResults.length; i++) {                                                  for (int i = 0; i &lt; expectedResults.length; i++) {                                               
assertEquals(expectedResults[i], results[i]);                                                          assertEquals(expectedResults[i], results[i]);                                                       
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
{                                                                                                      {                                                                                                   
String[] results = null;                                                                               String[] results = null;                                                                            
String[] expectedResults = { "", "ab", "", "", "cd:ef" };                                              String[] expectedResults = { "", "ab", "", "", "cd:ef" };                                           
results = StringUtils.splitPreserveAllTokens(":ab:::cd:ef", ":", 5);                                   results = StringUtils.splitPreserveAllTokens(":ab:::cd:ef", ":", 5);                                
assertEquals(expectedResults.length, results.length);                                                  assertEquals(expectedResults.length, results.length);                                               
for (int i = 0; i &lt; expectedResults.length; i++) {                                                  for (int i = 0; i &lt; expectedResults.length; i++) {                                               
assertEquals(expectedResults[i], results[i]);                                                          assertEquals(expectedResults[i], results[i]);                                                       
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
{                                                                                                      {                                                                                                   
String[] results = null;                                                                               String[] results = null;                                                                            
String[] expectedResults = { "", "", "ab", "", "", "cd:ef" };                                          String[] expectedResults = { "", "", "ab", "", "", "cd:ef" };                                       
results = StringUtils.splitPreserveAllTokens("::ab:::cd:ef", ":", 6);                                  results = StringUtils.splitPreserveAllTokens("::ab:::cd:ef", ":", 6);                               
assertEquals(expectedResults.length, results.length);                                                  assertEquals(expectedResults.length, results.length);                                               
for (int i = 0; i &lt; expectedResults.length; i++) {                                                  for (int i = 0; i &lt; expectedResults.length; i++) {                                               
assertEquals(expectedResults[i], results[i]);                                                          assertEquals(expectedResults[i], results[i]);                                                       
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
