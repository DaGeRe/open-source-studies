/**                                                                                                    /**                                                                                                 
* Appends a iterable placing separators between each value, but                                        * Appends a iterable placing separators between each value, but                                     
* not before the first or after the last.                                                              * not before the first or after the last.                                                           
* Appending a null iterable will have no effect.                                                       * Appending a null iterable will have no effect.                                                    
* Each object is appended using {@link #append(Object)}.                                               * Each object is appended using {@link #append(Object)}.                                            
*                                                                                                      *                                                                                                   
* @param iterable  the iterable to append                                                              * @param iterable  the iterable to append                                                           
* @param separator  the separator to use, null means no separator                                      * @param separator  the separator to use, null means no separator                                   
* @return this, to enable chaining                                                                     * @return this, to enable chaining                                                                  
*/                                                                                                     */                                                                                                  
public StrBuilder appendWithSeparators(Iterable&lt;?&gt; iterable, String separator) {                 public StrBuilder appendWithSeparators(Iterable&lt;?&gt; iterable, String separator) {              
if (iterable != null) {                                                                                if (iterable != null) {                                                                             
separator = separator == null ? "" : separator;                                                      | separator = ObjectUtils.toString(separator);                                                        
Iterator&lt;?&gt; it = iterable.iterator();                                                            Iterator&lt;?&gt; it = iterable.iterator();                                                         
while (it.hasNext()) {                                                                                 while (it.hasNext()) {                                                                              
append(it.next());                                                                                     append(it.next());                                                                                  
if (it.hasNext()) {                                                                                    if (it.hasNext()) {                                                                                 
append(separator);                                                                                     append(separator);                                                                                  
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
return this;                                                                                           return this;                                                                                        
}                                                                                                      }                                                                                                   
