// notBlank string
// ---------------------------------------------------------------------------------
/**
 * <p>Validate that the specified argument character sequence is
 * neither <code>null</code>, a length of zero (no characters), empty
 * nor whitespace; otherwise throwing an exception with the specified
 * message.
 *
 * <pre>Validate.notBlank(myString, "The string must not be blank");</pre>
 *
 * @param <T> the character sequence type
 * @param chars the character sequence to check
 * @param message the exception message if invalid
 * @return the validated character sequence (never <code>null</code> method for chaining)
 * @throws NullPointerException if the character sequence is <code>null</code>
 * @throws IllegalArgumentException if the character sequence is blank
 * @see #notBlank(CharSequence)
 */
public static <T extends CharSequence> T notBlank(T chars, String message, Object... values) {
    if (chars == null) {
        throw new NullPointerException(String.format(message, values));
    }
    if (StringUtils.isBlank(chars)) {
        throw new IllegalArgumentException(String.format(message, values));
    }
    return chars;
}