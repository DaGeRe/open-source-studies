/**                                                                                                  |                                                                                                     
* &lt;p&gt;Checks if an array of Classes can be assigned to another array of Classes.&lt;/p&gt;      |                                                                                                     
*                                                                                                    |                                                                                                     
* &lt;p&gt;This method calls {@link #isAssignable(Class, Class) isAssignable} for each               |                                                                                                     
* Class pair in the input arrays. It can be used to check if a set of arguments                      |                                                                                                     
* (the first parameter) are suitably compatible with a set of method parameter types                 |                                                                                                     
* (the second parameter).&lt;/p&gt;                                                                  |                                                                                                     
*                                                                                                    |                                                                                                     
* &lt;p&gt;Unlike the {@link Class#isAssignableFrom(java.lang.Class)} method, this                   |                                                                                                     
* method takes into account widenings of primitive classes and                                       |                                                                                                     
* &lt;code&gt;null&lt;/code&gt;s.&lt;/p&gt;                                                          |                                                                                                     
*                                                                                                    |                                                                                                     
* &lt;p&gt;Primitive widenings allow an int to be assigned to a &lt;code&gt;long&lt;/code&gt;,       |                                                                                                     
* &lt;code&gt;float&lt;/code&gt; or &lt;code&gt;double&lt;/code&gt;. This method returns the correct |                                                                                                     
* result for these cases.&lt;/p&gt;                                                                  |                                                                                                     
*                                                                                                    |                                                                                                     
* &lt;p&gt;&lt;code&gt;Null&lt;/code&gt; may be assigned to any reference type. This method will     |                                                                                                     
* return &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;null&lt;/code&gt; is passed in and the toClass |                                                                                                     
* non-primitive.&lt;/p&gt;                                                                           |                                                                                                     
*                                                                                                    |                                                                                                     
* &lt;p&gt;Specifically, this method tests whether the type represented by the                       |                                                                                                     
* specified &lt;code&gt;Class&lt;/code&gt; parameter can be converted to the type                    |                                                                                                     
* represented by this &lt;code&gt;Class&lt;/code&gt; object via an identity conversion               |                                                                                                     
* widening primitive or widening reference conversion. See                                           |                                                                                                     
* &lt;em&gt;&lt;a href="http://java.sun.com/docs/books/jls/"&gt;The Java Language Specification&lt;/ |                                                                                                     
* sections 5.1.1, 5.1.2 and 5.1.4 for details.&lt;/p&gt;                                             |                                                                                                     
*                                                                                                    |                                                                                                     
* @param classArray  the array of Classes to check, may be &lt;code&gt;null&lt;/code&gt;             |                                                                                                     
* @param toClassArray  the array of Classes to try to assign into, may be &lt;code&gt;null&lt;/code& |                                                                                                     
* @param autoboxing  whether to use implicit autoboxing/unboxing between primitives and wrappers     |                                                                                                     
* @return &lt;code&gt;true&lt;/code&gt; if assignment possible                                       |                                                                                                     
*/                                                                                                   |                                                                                                     
public static boolean isAssignable(Class[] classArray, Class[] toClassArray, boolean autoboxing) {   |                                                                                                     
if (ArrayUtils.isSameLength(classArray, toClassArray) == false) {                                    |                                                                                                     
return false;                                                                                        |                                                                                                     
}                                                                                                    |                                                                                                     
if (classArray == null) {                                                                            |                                                                                                     
classArray = ArrayUtils.EMPTY_CLASS_ARRAY;                                                           |                                                                                                     
}                                                                                                    |                                                                                                     
if (toClassArray == null) {                                                                          |                                                                                                     
toClassArray = ArrayUtils.EMPTY_CLASS_ARRAY;                                                         |                                                                                                     
}                                                                                                    |                                                                                                     
for (int i = 0; i &lt; classArray.length; i++) {                                                     |                                                                                                     
if (isAssignable(classArray[i], toClassArray[i], autoboxing) == false) {                             |                                                                                                     
return false;                                                                                        |                                                                                                     
}                                                                                                    |                                                                                                     
}                                                                                                    |                                                                                                     
return true;                                                                                         |                                                                                                     
}                                                                                                    |                                                                                                     
