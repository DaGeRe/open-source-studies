/**
 * <p>Converts the specified array of wrapper Class objects to an array of
 * its corresponding primitive Class objects.</p>
 *
 * <p>This method invokes <code>wrapperToPrimitive()</code> for each element
 * of the passed in array.</p>
 *
 * @param classes  the class array to convert, may be null or empty
 * @return an array which contains for each given class, the primitive class or
 * <b>null</b> if the original class is not a wrapper class. <code>null</code> if null input.
 * Empty array if an empty array passed in.
 * @see #wrapperToPrimitive(Class)
 * @since 2.4
 */
public static Class[] wrappersToPrimitives(Class[] classes) {
    if (classes == null) {
        return null;
    }
    if (classes.length == 0) {
        return classes;
    }
    Class[] convertedClasses = new Class[classes.length];
    for (int i = 0; i < classes.length; i++) {
        convertedClasses[i] = wrapperToPrimitive(classes[i]);
    }
    return convertedClasses;
}