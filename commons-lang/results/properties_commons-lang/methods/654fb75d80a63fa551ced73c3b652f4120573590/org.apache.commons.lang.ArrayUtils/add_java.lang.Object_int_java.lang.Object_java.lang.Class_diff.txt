/**                                                                                                    /**                                                                                                 
* Underlying implementation of add(array, index, element) methods.                                     * Underlying implementation of add(array, index, element) methods.                                  
* The last parameter is the class, which may not equal element.getClass                                * The last parameter is the class, which may not equal element.getClass                             
* for primitives.                                                                                      * for primitives.                                                                                   
*                                                                                                      *                                                                                                   
* @param array  the array to add the element to, may be &lt;code&gt;null&lt;/code&gt;                  * @param array  the array to add the element to, may be &lt;code&gt;null&lt;/code&gt;               
* @param index  the position of the new object                                                         * @param index  the position of the new object                                                      
* @param element  the object to add                                                                    * @param element  the object to add                                                                 
* @param clss the type of the element being added                                                      * @param clss the type of the element being added                                                   
* @return A new array containing the existing elements and the new element                             * @return A new array containing the existing elements and the new element                          
*/                                                                                                     */                                                                                                  
private static Object add(Object array, int index, Object element, Class clss) {                     | private static Object add(Object array, int index, Object element, Class&lt;?&gt; clss) {           
if (array == null) {                                                                                   if (array == null) {                                                                                
if (index != 0) {                                                                                      if (index != 0) {                                                                                   
throw new IndexOutOfBoundsException("Index: " + index + ", Length: 0");                                throw new IndexOutOfBoundsException("Index: " + index + ", Length: 0");                             
}                                                                                                      }                                                                                                   
Object joinedArray = Array.newInstance(clss, 1);                                                       Object joinedArray = Array.newInstance(clss, 1);                                                    
Array.set(joinedArray, 0, element);                                                                    Array.set(joinedArray, 0, element);                                                                 
return joinedArray;                                                                                    return joinedArray;                                                                                 
}                                                                                                      }                                                                                                   
int length = Array.getLength(array);                                                                   int length = Array.getLength(array);                                                                
if (index &gt; length || index &lt; 0) {                                                               if (index &gt; length || index &lt; 0) {                                                            
throw new IndexOutOfBoundsException("Index: " + index + ", Length: " + length);                        throw new IndexOutOfBoundsException("Index: " + index + ", Length: " + length);                     
}                                                                                                      }                                                                                                   
Object result = Array.newInstance(clss, length + 1);                                                   Object result = Array.newInstance(clss, length + 1);                                                
System.arraycopy(array, 0, result, 0, index);                                                          System.arraycopy(array, 0, result, 0, index);                                                       
Array.set(result, index, element);                                                                     Array.set(result, index, element);                                                                  
if (index &lt; length) {                                                                               if (index &lt; length) {                                                                            
System.arraycopy(array, index, result, index + 1, length - index);                                     System.arraycopy(array, index, result, index + 1, length - index);                                  
}                                                                                                      }                                                                                                   
return result;                                                                                         return result;                                                                                      
}                                                                                                      }                                                                                                   
