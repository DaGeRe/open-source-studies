// -----------------------------------------------------------------------
/**
 * <p>Returns the (zero based) index of the first <code>Throwable</code>
 * that matches the specified class or subclass in the exception chain.
 * Subclasses of the specified class do match - see
 * {@link #indexOfThrowable(Throwable, Class)} for the opposite.</p>
 *
 * <p>A <code>null</code> throwable returns <code>-1</code>.
 * A <code>null</code> type returns <code>-1</code>.
 * No match in the chain returns <code>-1</code>.</p>
 *
 * @param throwable  the throwable to inspect, may be null
 * @param type  the type to search for, subclasses match, null returns -1
 * @return the index into the throwable chain, -1 if no match or null input
 * @since 2.1
 */
public static int indexOfType(Throwable throwable, Class<?> type) {
    return indexOf(throwable, type, 0, true);
}