/**
 * <p>Validate an argument, throwing <code>IllegalArgumentException</code>
 * if the test result is <code>false</code>.</p>
 *
 * <p>This is used when validating according to an arbitrary boolean expression,
 * such as validating a primitive number or using your own custom validation
 * expression.</p>
 *
 * <pre>
 * Validate.isTrue( (i > 0), "The value must be greater than zero");
 * Validate.isTrue( myObject.isOk(), "The object is not OK");
 * </pre>
 *
 * <p>For performance reasons, the message string should not involve a string append,
 * instead use the {@link #isTrue(boolean, String, Object)} method.</p>
 *
 * @param expression  a boolean expression
 * @param message  the exception message you would like to see if the expression
 *  is <code>false</code>
 * @throws IllegalArgumentException if expression is <code>false</code>
 */
public static void isTrue(boolean expression, String message) {
    if (expression == false) {
        throw new IllegalArgumentException(message);
    }
}