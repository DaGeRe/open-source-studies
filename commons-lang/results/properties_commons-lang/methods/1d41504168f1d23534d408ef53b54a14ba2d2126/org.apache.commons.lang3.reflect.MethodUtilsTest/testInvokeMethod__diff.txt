public void testInvokeMethod() throws Exception {                                                      public void testInvokeMethod() throws Exception {                                                   
assertEquals("foo()", MethodUtils.invokeMethod(testBean, "foo", (Object[]) ArrayUtils.EMPTY_CLASS_AR   assertEquals("foo()", MethodUtils.invokeMethod(testBean, "foo", (Object[]) ArrayUtils.EMPTY_CLASS_AR
assertEquals("foo()", MethodUtils.invokeMethod(testBean, "foo", (Object[]) null));                     assertEquals("foo()", MethodUtils.invokeMethod(testBean, "foo", (Object[]) null));                  
                                                                                                     | assertEquals("foo()", MethodUtils.invokeMethod(testBean, "foo", (Object[]) null, (Class&lt;?&gt;[]) 
assertEquals("foo(String)", MethodUtils.invokeMethod(testBean, "foo", ""));                            assertEquals("foo(String)", MethodUtils.invokeMethod(testBean, "foo", ""));                         
assertEquals("foo(Object)", MethodUtils.invokeMethod(testBean, "foo", new Object()));                  assertEquals("foo(Object)", MethodUtils.invokeMethod(testBean, "foo", new Object()));               
assertEquals("foo(Object)", MethodUtils.invokeMethod(testBean, "foo", Boolean.TRUE));                  assertEquals("foo(Object)", MethodUtils.invokeMethod(testBean, "foo", Boolean.TRUE));               
assertEquals("foo(Integer)", MethodUtils.invokeMethod(testBean, "foo", NumberUtils.INTEGER_ONE));      assertEquals("foo(Integer)", MethodUtils.invokeMethod(testBean, "foo", NumberUtils.INTEGER_ONE));   
assertEquals("foo(int)", MethodUtils.invokeMethod(testBean, "foo", NumberUtils.BYTE_ONE));             assertEquals("foo(int)", MethodUtils.invokeMethod(testBean, "foo", NumberUtils.BYTE_ONE));          
assertEquals("foo(double)", MethodUtils.invokeMethod(testBean, "foo", NumberUtils.LONG_ONE));          assertEquals("foo(double)", MethodUtils.invokeMethod(testBean, "foo", NumberUtils.LONG_ONE));       
assertEquals("foo(double)", MethodUtils.invokeMethod(testBean, "foo", NumberUtils.DOUBLE_ONE));        assertEquals("foo(double)", MethodUtils.invokeMethod(testBean, "foo", NumberUtils.DOUBLE_ONE));     
}                                                                                                      }                                                                                                   
