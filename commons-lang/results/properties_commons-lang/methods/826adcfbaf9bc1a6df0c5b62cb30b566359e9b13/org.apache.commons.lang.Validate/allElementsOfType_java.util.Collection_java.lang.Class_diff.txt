/**                                                                                                    /**                                                                                                 
* &lt;p&gt;                                                                                            * &lt;p&gt;                                                                                         
* Validate an argument, throwing &lt;code&gt;IllegalArgumentException&lt;/code&gt; if the argument c   * Validate an argument, throwing &lt;code&gt;IllegalArgumentException&lt;/code&gt; if the argument c
* &lt;code&gt;null&lt;/code&gt; or has elements that are not of type &lt;code&gt;clazz&lt;/code&gt;    * &lt;code&gt;null&lt;/code&gt; or has elements that are not of type &lt;code&gt;clazz&lt;/code&gt; 
* &lt;/p&gt;                                                                                           * &lt;/p&gt;                                                                                        
*                                                                                                      *                                                                                                   
* &lt;pre&gt;                                                                                          * &lt;pre&gt;                                                                                       
* Validate.allElementsOfType(collection, String.class);                                                * Validate.allElementsOfType(collection, String.class);                                             
* &lt;/pre&gt;                                                                                         * &lt;/pre&gt;                                                                                      
*                                                                                                      *                                                                                                   
* &lt;p&gt;                                                                                            * &lt;p&gt;                                                                                         
* The message in the exception is 'The validated collection contains an element not of type clazz at   * The message in the exception is 'The validated collection contains an element not of type clazz at
* &lt;/p&gt;                                                                                           * &lt;/p&gt;                                                                                        
*                                                                                                      *                                                                                                   
* @param collection                                                                                    * @param collection                                                                                 
*            the collection to check, not null                                                         *            the collection to check, not null                                                      
* @param clazz                                                                                         * @param clazz                                                                                      
*            the &lt;code&gt;Class&lt;/code&gt; which the collection's elements are expected to be,    *            the &lt;code&gt;Class&lt;/code&gt; which the collection's elements are expected to be, 
* @since 2.1                                                                                           * @since 2.1                                                                                        
*/                                                                                                     */                                                                                                  
public static void allElementsOfType(Collection collection, Class clazz) {                             public static void allElementsOfType(Collection collection, Class clazz) {                          
Validate.notNull(collection);                                                                          Validate.notNull(collection);                                                                       
Validate.notNull(clazz);                                                                               Validate.notNull(clazz);                                                                            
int i = 0;                                                                                             int i = 0;                                                                                          
for (Iterator it = collection.iterator(); it.hasNext(); i++) {                                       | for (Iterator&lt;?&gt; it = collection.iterator(); it.hasNext(); i++) {                             
if (clazz.isInstance(it.next()) == false) {                                                            if (clazz.isInstance(it.next()) == false) {                                                         
throw new IllegalArgumentException("The validated collection contains an element not of type " + cla   throw new IllegalArgumentException("The validated collection contains an element not of type " + cla
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
