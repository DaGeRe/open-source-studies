public void testConstructor_String_comboNegated() {
    CharSet set;
    CharRange[] array;
    set = CharSet.getInstance("^abc");
    array = set.getCharRanges();
    assertEquals(3, array.length);
    assertEquals(true, ArrayUtils.contains(array, new CharRange('a', 'a', true)));
    assertEquals(true, ArrayUtils.contains(array, new CharRange('b')));
    assertEquals(true, ArrayUtils.contains(array, new CharRange('c')));
    set = CharSet.getInstance("b^ac");
    array = set.getCharRanges();
    assertEquals(3, array.length);
    assertEquals(true, ArrayUtils.contains(array, new CharRange('b')));
    assertEquals(true, ArrayUtils.contains(array, new CharRange('a', 'a', true)));
    assertEquals(true, ArrayUtils.contains(array, new CharRange('c')));
    set = CharSet.getInstance("db^ac");
    array = set.getCharRanges();
    assertEquals(4, array.length);
    assertEquals(true, ArrayUtils.contains(array, new CharRange('d')));
    assertEquals(true, ArrayUtils.contains(array, new CharRange('b')));
    assertEquals(true, ArrayUtils.contains(array, new CharRange('a', 'a', true)));
    assertEquals(true, ArrayUtils.contains(array, new CharRange('c')));
    set = CharSet.getInstance("^b^a");
    array = set.getCharRanges();
    assertEquals(2, array.length);
    assertEquals(true, ArrayUtils.contains(array, new CharRange('b', 'b', true)));
    assertEquals(true, ArrayUtils.contains(array, new CharRange('a', 'a', true)));
    set = CharSet.getInstance("b^a-c^z");
    array = set.getCharRanges();
    assertEquals(3, array.length);
    assertEquals(true, ArrayUtils.contains(array, new CharRange('a', 'c', true)));
    assertEquals(true, ArrayUtils.contains(array, new CharRange('z', 'z', true)));
    assertEquals(true, ArrayUtils.contains(array, new CharRange('b')));
}