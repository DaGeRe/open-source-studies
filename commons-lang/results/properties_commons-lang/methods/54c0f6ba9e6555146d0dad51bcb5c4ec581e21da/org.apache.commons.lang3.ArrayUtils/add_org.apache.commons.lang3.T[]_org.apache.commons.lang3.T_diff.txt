/**                                                                                                    /**                                                                                                 
* &lt;p&gt;Copies the given array and adds the given element at the end of the new array.&lt;/p&gt;    * &lt;p&gt;Copies the given array and adds the given element at the end of the new array.&lt;/p&gt; 
*                                                                                                      *                                                                                                   
* &lt;p&gt;The new array contains the same elements of the input                                       * &lt;p&gt;The new array contains the same elements of the input                                    
* array plus the given element in the last position. The component type of                             * array plus the given element in the last position. The component type of                          
* the new array is the same as that of the input array.&lt;/p&gt;                                      * the new array is the same as that of the input array.&lt;/p&gt;                                   
*                                                                                                      *                                                                                                   
* &lt;p&gt;If the input array is &lt;code&gt;null&lt;/code&gt;, a new one element array is returned    * &lt;p&gt;If the input array is &lt;code&gt;null&lt;/code&gt;, a new one element array is returned 
*  whose component type is the same as the element, unless the element itself is null,                 *  whose component type is the same as the element, unless the element itself is null,              
*  in which case the return type is Object[]&lt;/p&gt;                                                 *  in which case the return type is Object[]&lt;/p&gt;                                              
*                                                                                                      *                                                                                                   
* &lt;pre&gt;                                                                                          * &lt;pre&gt;                                                                                       
* ArrayUtils.add(null, null)      = [null]                                                             * ArrayUtils.add(null, null)      = [null]                                                          
* ArrayUtils.add(null, "a")       = ["a"]                                                              * ArrayUtils.add(null, "a")       = ["a"]                                                           
* ArrayUtils.add(["a"], null)     = ["a", null]                                                        * ArrayUtils.add(["a"], null)     = ["a", null]                                                     
* ArrayUtils.add(["a"], "b")      = ["a", "b"]                                                         * ArrayUtils.add(["a"], "b")      = ["a", "b"]                                                      
* ArrayUtils.add(["a", "b"], "c") = ["a", "b", "c"]                                                    * ArrayUtils.add(["a", "b"], "c") = ["a", "b", "c"]                                                 
* &lt;/pre&gt;                                                                                         * &lt;/pre&gt;                                                                                      
*                                                                                                      *                                                                                                   
* @param array  the array to "add" the element to, may be &lt;code&gt;null&lt;/code&gt;                * @param array  the array to "add" the element to, may be &lt;code&gt;null&lt;/code&gt;             
* @param element  the object to add, may be &lt;code&gt;null&lt;/code&gt;                              * @param element  the object to add, may be &lt;code&gt;null&lt;/code&gt;                           
* @return A new array containing the existing elements plus the new element                            * @return A new array containing the existing elements plus the new element                         
* The returned array type will be that of the input array (unless null),                               * The returned array type will be that of the input array (unless null),                            
* in which case it will have the same type as the element (unless that is also null)                 | * in which case it will have the same type as the element.                                          
* in which case the returned type will be Object[].                                                  | * If both are null, an IllegalArgumentException is thrown                                           
* @since 2.1                                                                                           * @since 2.1                                                                                        
                                                                                                     | * @throws IllegalArgumentException if both arguments are null                                       
*/                                                                                                     */                                                                                                  
public static &lt;T&gt; T[] add(T[] array, T element) {                                                public static &lt;T&gt; T[] add(T[] array, T element) {                                             
Class&lt;?&gt; type = array != null ? array.getClass() : (element != null ? element.getClass() : Obj | Class&lt;?&gt; type;                                                                                
// TODO - this is NOT safe to ignore - see LANG-571                                                  | if (array != null) {                                                                                
                                                                                                     | type = array.getClass();                                                                            
                                                                                                     | } else if (element != null) {                                                                       
                                                                                                     | type = element.getClass();                                                                          
                                                                                                     | } else {                                                                                            
                                                                                                     | throw new IllegalArgumentException("Arguments cannot both be null");                                
                                                                                                     | }                                                                                                   
                                                                                                     | // type must be T                                                                                   
                                                                                                     | @SuppressWarnings("unchecked")                                                                      
T[] newArray = (T[]) copyArrayGrow1(array, type);                                                      T[] newArray = (T[]) copyArrayGrow1(array, type);                                                   
newArray[newArray.length - 1] = element;                                                               newArray[newArray.length - 1] = element;                                                            
return newArray;                                                                                       return newArray;                                                                                    
}                                                                                                      }                                                                                                   
