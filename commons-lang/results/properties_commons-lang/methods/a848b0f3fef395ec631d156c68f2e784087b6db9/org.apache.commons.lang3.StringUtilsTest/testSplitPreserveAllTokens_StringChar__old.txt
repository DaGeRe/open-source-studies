public void testSplitPreserveAllTokens_StringChar() {
    assertEquals(null, StringUtils.splitPreserveAllTokens(null, '.'));
    assertEquals(0, StringUtils.splitPreserveAllTokens("", '.').length);
    String str = "a.b. c";
    String[] res = StringUtils.splitPreserveAllTokens(str, '.');
    assertEquals(3, res.length);
    assertEquals("a", res[0]);
    assertEquals("b", res[1]);
    assertEquals(" c", res[2]);
    str = "a.b.. c";
    res = StringUtils.splitPreserveAllTokens(str, '.');
    assertEquals(4, res.length);
    assertEquals("a", res[0]);
    assertEquals("b", res[1]);
    assertEquals("", res[2]);
    assertEquals(" c", res[3]);
    str = ".a.";
    res = StringUtils.splitPreserveAllTokens(str, '.');
    assertEquals(3, res.length);
    assertEquals("", res[0]);
    assertEquals("a", res[1]);
    assertEquals("", res[2]);
    str = ".a..";
    res = StringUtils.splitPreserveAllTokens(str, '.');
    assertEquals(4, res.length);
    assertEquals("", res[0]);
    assertEquals("a", res[1]);
    assertEquals("", res[2]);
    assertEquals("", res[3]);
    str = "..a.";
    res = StringUtils.splitPreserveAllTokens(str, '.');
    assertEquals(4, res.length);
    assertEquals("", res[0]);
    assertEquals("", res[1]);
    assertEquals("a", res[2]);
    assertEquals("", res[3]);
    str = "..a";
    res = StringUtils.splitPreserveAllTokens(str, '.');
    assertEquals(3, res.length);
    assertEquals("", res[0]);
    assertEquals("", res[1]);
    assertEquals("a", res[2]);
    str = "a b c";
    res = StringUtils.splitPreserveAllTokens(str, ' ');
    assertEquals(3, res.length);
    assertEquals("a", res[0]);
    assertEquals("b", res[1]);
    assertEquals("c", res[2]);
    str = "a  b  c";
    res = StringUtils.splitPreserveAllTokens(str, ' ');
    assertEquals(5, res.length);
    assertEquals("a", res[0]);
    assertEquals("", res[1]);
    assertEquals("b", res[2]);
    assertEquals("", res[3]);
    assertEquals("c", res[4]);
    str = " a b c";
    res = StringUtils.splitPreserveAllTokens(str, ' ');
    assertEquals(4, res.length);
    assertEquals("", res[0]);
    assertEquals("a", res[1]);
    assertEquals("b", res[2]);
    assertEquals("c", res[3]);
    str = "  a b c";
    res = StringUtils.splitPreserveAllTokens(str, ' ');
    assertEquals(5, res.length);
    assertEquals("", res[0]);
    assertEquals("", res[1]);
    assertEquals("a", res[2]);
    assertEquals("b", res[3]);
    assertEquals("c", res[4]);
    str = "a b c ";
    res = StringUtils.splitPreserveAllTokens(str, ' ');
    assertEquals(4, res.length);
    assertEquals("a", res[0]);
    assertEquals("b", res[1]);
    assertEquals("c", res[2]);
    assertEquals("", res[3]);
    str = "a b c  ";
    res = StringUtils.splitPreserveAllTokens(str, ' ');
    assertEquals(5, res.length);
    assertEquals("a", res[0]);
    assertEquals("b", res[1]);
    assertEquals("c", res[2]);
    assertEquals("", res[3]);
    assertEquals("", res[3]);
    // Match example in javadoc
    {
        String[] results = null;
        String[] expectedResults = { "a", "", "b", "c" };
        results = StringUtils.splitPreserveAllTokens("a..b.c", '.');
        assertEquals(expectedResults.length, results.length);
        for (int i = 0; i < expectedResults.length; i++) {
            assertEquals(expectedResults[i], results[i]);
        }
    }
}