/**                                                                                                    /**                                                                                                 
* Constructor.                                                                                         * Constructor.                                                                                      
*                                                                                                      *                                                                                                   
* @param object                                                                                        * @param object                                                                                     
*            the Object to build a &lt;code&gt;toString&lt;/code&gt; for                               *            the Object to build a &lt;code&gt;toString&lt;/code&gt; for                            
* @param style                                                                                         * @param style                                                                                      
*            the style of the &lt;code&gt;toString&lt;/code&gt; to create, may be &lt;code&gt;null&l   *            the style of the &lt;code&gt;toString&lt;/code&gt; to create, may be &lt;code&gt;null&l
* @param buffer                                                                                        * @param buffer                                                                                     
*            the &lt;code&gt;StringBuffer&lt;/code&gt; to populate, may be &lt;code&gt;null&lt;/code   *            the &lt;code&gt;StringBuffer&lt;/code&gt; to populate, may be &lt;code&gt;null&lt;/code
* @param reflectUpToClass                                                                              * @param reflectUpToClass                                                                           
*            the superclass to reflect up to (inclusive), may be &lt;code&gt;null&lt;/code&gt;         *            the superclass to reflect up to (inclusive), may be &lt;code&gt;null&lt;/code&gt;      
* @param outputTransients                                                                              * @param outputTransients                                                                           
*            whether to include transient fields                                                       *            whether to include transient fields                                                    
* @param outputStatics                                                                                 * @param outputStatics                                                                              
*            whether to include static fields                                                          *            whether to include static fields                                                       
* @since 2.1                                                                                           * @since 2.1                                                                                        
*/                                                                                                     */                                                                                                  
public ReflectionToStringBuilder(T object, ToStringStyle style, StringBuffer buffer, Class&lt;? supe | public &lt;T&gt; ReflectionToStringBuilder(T object, ToStringStyle style, StringBuffer buffer, Class
super(object, style, buffer);                                                                          super(object, style, buffer);                                                                       
this.setUpToClass(reflectUpToClass);                                                                   this.setUpToClass(reflectUpToClass);                                                                
this.setAppendTransients(outputTransients);                                                            this.setAppendTransients(outputTransients);                                                         
this.setAppendStatics(outputStatics);                                                                  this.setAppendStatics(outputStatics);                                                               
}                                                                                                      }                                                                                                   
