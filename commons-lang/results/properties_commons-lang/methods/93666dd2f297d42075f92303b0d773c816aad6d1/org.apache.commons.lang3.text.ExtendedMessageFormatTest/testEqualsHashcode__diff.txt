/**
 * Test equals() and hashcode.
 */
public void testEqualsHashcode() {
    Map<String, ? extends FormatFactory> registry = Collections.singletonMap("testfmt", new LowerCaseFormatFactory());
    Map<String, ? extends FormatFactory> otherRegitry = Collections.singletonMap("testfmt", new UpperCaseFormatFactory());
    String pattern = "Pattern: {0,testfmt}";
    ExtendedMessageFormat emf = new ExtendedMessageFormat(pattern, Locale.US, registry);
    ExtendedMessageFormat other = null;
    // Same object
    assertTrue("same, equals()", emf.equals(emf));
    assertTrue("same, hashcode()", emf.hashCode() == emf.hashCode());
    // Equal Object
    other = new ExtendedMessageFormat(pattern, Locale.US, registry);
    assertTrue("equal, equals()", emf.equals(other));
    assertTrue("equal, hashcode()", emf.hashCode() == other.hashCode());
    // Different Class
    other = new OtherExtendedMessageFormat(pattern, Locale.US, registry);
    assertFalse("class, equals()", emf.equals(other));
    // same hashcode
    assertTrue("class, hashcode()", emf.hashCode() == other.hashCode());
    // Different pattern
    other = new ExtendedMessageFormat("X" + pattern, Locale.US, registry);
    assertFalse("pattern, equals()", emf.equals(other));
    assertFalse("pattern, hashcode()", emf.hashCode() == other.hashCode());
    // Different registry
    other = new ExtendedMessageFormat(pattern, Locale.US, otherRegitry);
    assertFalse("registry, equals()", emf.equals(other));
    assertFalse("registry, hashcode()", emf.hashCode() == other.hashCode());
    // Different Locale
    other = new ExtendedMessageFormat(pattern, Locale.FRANCE, registry);
    assertFalse("locale, equals()", emf.equals(other));
    // same hashcode
    assertTrue("locale, hashcode()", emf.hashCode() == other.hashCode());
}