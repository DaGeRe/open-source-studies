/**
 * Returns the class represented by {@code className} using the
 * current thread's context class loader. This implementation supports the
 * syntaxes "{@code java.util.Map.Entry[]}", "{@code java.util.Map$Entry[]}",
 * "{@code [Ljava.util.Map.Entry;}", and "{@code [Ljava.util.Map$Entry;}".
 *
 * @param className  the class name
 * @param initialize  whether the class must be initialized
 * @return the class represented by {@code className} using the current thread's context class loader
 * @throws ClassNotFoundException if the class is not found
 */
public static Class<?> getClass(String className, boolean initialize) throws ClassNotFoundException {
    ClassLoader contextCL = Thread.currentThread().getContextClassLoader();
    ClassLoader loader = contextCL == null ? ClassUtils.class.getClassLoader() : contextCL;
    return getClass(loader, className, initialize);
}