public void testConstructor_String_oddCombinations() {
    CharSet set;
    CharRange[] array = null;
    set = CharSet.getInstance("a-^c");
    array = set.getCharRanges();
    // "a-^"
    assertEquals(true, ArrayUtils.contains(array, CharRange.isIn('a', '^')));
    // "c"
    assertEquals(true, ArrayUtils.contains(array, CharRange.is('c')));
    assertEquals(false, set.contains('b'));
    assertEquals(true, set.contains('^'));
    // between ^ and a
    assertEquals(true, set.contains('_'));
    assertEquals(true, set.contains('c'));
    set = CharSet.getInstance("^a-^c");
    array = set.getCharRanges();
    // "^a-^"
    assertEquals(true, ArrayUtils.contains(array, CharRange.isNotIn('a', '^')));
    // "c"
    assertEquals(true, ArrayUtils.contains(array, CharRange.is('c')));
    assertEquals(true, set.contains('b'));
    assertEquals(false, set.contains('^'));
    // between ^ and a
    assertEquals(false, set.contains('_'));
    // contains everything
    set = CharSet.getInstance("a- ^-- ");
    array = set.getCharRanges();
    // "a- "
    assertEquals(true, ArrayUtils.contains(array, CharRange.isIn('a', ' ')));
    // "^-- "
    assertEquals(true, ArrayUtils.contains(array, CharRange.isNotIn('-', ' ')));
    assertEquals(true, set.contains('#'));
    assertEquals(true, set.contains('^'));
    assertEquals(true, set.contains('a'));
    assertEquals(true, set.contains('*'));
    assertEquals(true, set.contains('A'));
    set = CharSet.getInstance("^-b");
    array = set.getCharRanges();
    // "^-b"
    assertEquals(true, ArrayUtils.contains(array, CharRange.isIn('^', 'b')));
    assertEquals(true, set.contains('b'));
    // between ^ and a
    assertEquals(true, set.contains('_'));
    assertEquals(false, set.contains('A'));
    assertEquals(true, set.contains('^'));
    set = CharSet.getInstance("b-^");
    array = set.getCharRanges();
    // "b-^"
    assertEquals(true, ArrayUtils.contains(array, CharRange.isIn('^', 'b')));
    assertEquals(true, set.contains('b'));
    assertEquals(true, set.contains('^'));
    // between ^ and b
    assertEquals(true, set.contains('a'));
    assertEquals(false, set.contains('c'));
}