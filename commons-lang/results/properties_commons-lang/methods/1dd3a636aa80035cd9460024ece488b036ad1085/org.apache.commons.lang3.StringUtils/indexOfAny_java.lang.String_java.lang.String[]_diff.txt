// IndexOfAny strings                                                                                  // IndexOfAny strings                                                                               
// -----------------------------------------------------------------------                             // -----------------------------------------------------------------------                          
/**                                                                                                    /**                                                                                                 
* &lt;p&gt;Find the first index of any of a set of potential substrings.&lt;/p&gt;                     * &lt;p&gt;Find the first index of any of a set of potential substrings.&lt;/p&gt;                  
*                                                                                                      *                                                                                                   
* &lt;p&gt;A {@code null} String will return {@code -1}.                                               * &lt;p&gt;A {@code null} String will return {@code -1}.                                            
* A {@code null} or zero length search array will return {@code -1}.                                   * A {@code null} or zero length search array will return {@code -1}.                                
* A {@code null} search array entry will be ignored, but a search                                      * A {@code null} search array entry will be ignored, but a search                                   
* array containing "" will return {@code 0} if {@code str} is not                                      * array containing "" will return {@code 0} if {@code str} is not                                   
* null. This method uses {@link String#indexOf(String)}.&lt;/p&gt;                                     * null. This method uses {@link String#indexOf(String)}.&lt;/p&gt;                                  
*                                                                                                      *                                                                                                   
* &lt;pre&gt;                                                                                          * &lt;pre&gt;                                                                                       
* StringUtils.indexOfAny(null, *)                     = -1                                             * StringUtils.indexOfAny(null, *)                     = -1                                          
* StringUtils.indexOfAny(*, null)                     = -1                                             * StringUtils.indexOfAny(*, null)                     = -1                                          
* StringUtils.indexOfAny(*, [])                       = -1                                             * StringUtils.indexOfAny(*, [])                       = -1                                          
* StringUtils.indexOfAny("zzabyycdxx", ["ab","cd"])   = 2                                              * StringUtils.indexOfAny("zzabyycdxx", ["ab","cd"])   = 2                                           
* StringUtils.indexOfAny("zzabyycdxx", ["cd","ab"])   = 2                                              * StringUtils.indexOfAny("zzabyycdxx", ["cd","ab"])   = 2                                           
* StringUtils.indexOfAny("zzabyycdxx", ["mn","op"])   = -1                                             * StringUtils.indexOfAny("zzabyycdxx", ["mn","op"])   = -1                                          
* StringUtils.indexOfAny("zzabyycdxx", ["zab","aby"]) = 1                                              * StringUtils.indexOfAny("zzabyycdxx", ["zab","aby"]) = 1                                           
* StringUtils.indexOfAny("zzabyycdxx", [""])          = 0                                              * StringUtils.indexOfAny("zzabyycdxx", [""])          = 0                                           
* StringUtils.indexOfAny("", [""])                    = 0                                              * StringUtils.indexOfAny("", [""])                    = 0                                           
* StringUtils.indexOfAny("", ["a"])                   = -1                                             * StringUtils.indexOfAny("", ["a"])                   = -1                                          
* &lt;/pre&gt;                                                                                         * &lt;/pre&gt;                                                                                      
*                                                                                                      *                                                                                                   
* @param str  the String to check, may be null                                                         * @param str  the String to check, may be null                                                      
* @param searchStrs  the Strings to search for, may be null                                            * @param searchStrs  the Strings to search for, may be null                                         
* @return the first index of any of the searchStrs in str, -1 if no match                              * @return the first index of any of the searchStrs in str, -1 if no match                           
*/                                                                                                     */                                                                                                  
public static int indexOfAny(String str, String[] searchStrs) {                                      | public static int indexOfAny(String str, String... searchStrs) {                                    
if (str == null || searchStrs == null) {                                                               if (str == null || searchStrs == null) {                                                            
return INDEX_NOT_FOUND;                                                                                return INDEX_NOT_FOUND;                                                                             
}                                                                                                      }                                                                                                   
int sz = searchStrs.length;                                                                            int sz = searchStrs.length;                                                                         
// String's can't have a MAX_VALUEth index.                                                            // String's can't have a MAX_VALUEth index.                                                         
int ret = Integer.MAX_VALUE;                                                                           int ret = Integer.MAX_VALUE;                                                                        
int tmp = 0;                                                                                           int tmp = 0;                                                                                        
for (int i = 0; i &lt; sz; i++) {                                                                      for (int i = 0; i &lt; sz; i++) {                                                                   
String search = searchStrs[i];                                                                         String search = searchStrs[i];                                                                      
if (search == null) {                                                                                  if (search == null) {                                                                               
continue;                                                                                              continue;                                                                                           
}                                                                                                      }                                                                                                   
tmp = str.indexOf(search);                                                                             tmp = str.indexOf(search);                                                                          
if (tmp == INDEX_NOT_FOUND) {                                                                          if (tmp == INDEX_NOT_FOUND) {                                                                       
continue;                                                                                              continue;                                                                                           
}                                                                                                      }                                                                                                   
if (tmp &lt; ret) {                                                                                    if (tmp &lt; ret) {                                                                                 
ret = tmp;                                                                                             ret = tmp;                                                                                          
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
return (ret == Integer.MAX_VALUE) ? INDEX_NOT_FOUND : ret;                                             return (ret == Integer.MAX_VALUE) ? INDEX_NOT_FOUND : ret;                                          
}                                                                                                      }                                                                                                   
