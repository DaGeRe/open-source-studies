/**
 * <p>Returns padding using the specified delimiter repeated
 * to a given length.</p>
 *
 * <pre>
 * StringUtils.padding(0, 'e')  = ""
 * StringUtils.padding(3, 'e')  = "eee"
 * StringUtils.padding(-2, 'e') throws IndexOutOfBoundsException
 * </pre>
 *
 * <p>Note: this method doesn't not support padding with
 * <a href="http://www.unicode.org/glossary/#supplementary_character">Unicode Supplementary Characters</a>
 * as they require a pair of {@code char}s to be represented.
 * If you are needing to support full I18N of your applications
 * consider using {@link #repeat(String, int)} instead.
 * </p>
 *
 * @param repeat  number of times to repeat delim
 * @param padChar  character to repeat
 * @return String with repeated character
 * @throws IndexOutOfBoundsException if <code>repeat &lt; 0</code>
 * @see #repeat(String, int)
 */
public static String pad(int repeat, char padChar) throws IndexOutOfBoundsException {
    if (repeat < 0) {
        throw new IndexOutOfBoundsException("Cannot pad a negative amount: " + repeat);
    }
    final char[] buf = new char[repeat];
    for (int i = 0; i < buf.length; i++) {
        buf[i] = padChar;
    }
    return new String(buf);
}