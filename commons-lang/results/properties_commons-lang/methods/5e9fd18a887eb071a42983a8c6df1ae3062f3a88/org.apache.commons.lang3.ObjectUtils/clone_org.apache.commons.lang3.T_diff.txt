/**                                                                                                    /**                                                                                                 
* Clone an object.                                                                                     * Clone an object.                                                                                  
*                                                                                                      *                                                                                                   
* @param &lt;T&gt; the type of the object                                                              * @param &lt;T&gt; the type of the object                                                           
* @param o the object to clone                                                                         * @param o the object to clone                                                                      
* @return the clone if the object implements {@link Cloneable} otherwise &lt;code&gt;null&lt;/code&g   * @return the clone if the object implements {@link Cloneable} otherwise &lt;code&gt;null&lt;/code&g
* @throws CloneFailedException if the object is cloneable and the clone operation fails                * @throws CloneFailedException if the object is cloneable and the clone operation fails             
* @since 3.0                                                                                           * @since 3.0                                                                                        
*/                                                                                                     */                                                                                                  
public static &lt;T&gt; T clone(final T o) {                                                           public static &lt;T&gt; T clone(final T o) {                                                        
if (o instanceof Cloneable) {                                                                          if (o instanceof Cloneable) {                                                                       
                                                                                                     | final Object result;                                                                                
                                                                                                     | if (o.getClass().isArray()) {                                                                       
                                                                                                     | final Class&lt;?&gt; componentType = o.getClass().getComponentType();                               
                                                                                                     | if (!componentType.isPrimitive()) {                                                                 
                                                                                                     | result = ((Object[]) o).clone();                                                                    
                                                                                                     | } else {                                                                                            
                                                                                                     | int length = Array.getLength(o);                                                                    
                                                                                                     | result = Array.newInstance(componentType, length);                                                  
                                                                                                     | while (length-- &gt; 0) {                                                                           
                                                                                                     | Array.set(result, length, Array.get(o, length));                                                    
                                                                                                     | }                                                                                                   
                                                                                                     | }                                                                                                   
                                                                                                     | } else {                                                                                            
try {                                                                                                  try {                                                                                               
final Method clone = o.getClass().getMethod("clone", (Class[]) null);                                | final Method clone = o.getClass().getMethod("clone");                                               
@SuppressWarnings("unchecked")                                                                       | result = clone.invoke(o);                                                                           
final T result = (T) clone.invoke(o, (Object[]) null);                                               |                                                                                                     
return result;                                                                                       |                                                                                                     
} catch (final NoSuchMethodException e) {                                                              } catch (final NoSuchMethodException e) {                                                           
throw new CloneFailedException("Cloneable type has no clone method", e);                             | throw new CloneFailedException("Cloneable type " + o.getClass().getName() + " has no clone method", 
} catch (final IllegalAccessException e) {                                                             } catch (final IllegalAccessException e) {                                                          
throw new CloneFailedException("Cannot clone Cloneable type", e);                                    | throw new CloneFailedException("Cannot clone Cloneable type " + o.getClass().getName(), e);         
} catch (final InvocationTargetException e) {                                                          } catch (final InvocationTargetException e) {                                                       
throw new CloneFailedException("Exception cloning Cloneable type", e.getCause());                    | throw new CloneFailedException("Exception cloning Cloneable type " + o.getClass().getName(), e.getCa
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
                                                                                                     | @SuppressWarnings("unchecked")                                                                      
                                                                                                     | final T checked = (T) result;                                                                       
                                                                                                     | return checked;                                                                                     
                                                                                                     | }                                                                                                   
return null;                                                                                           return null;                                                                                        
}                                                                                                      }                                                                                                   
