// -----------------------------------------------------------------------                             // -----------------------------------------------------------------------                          
/**                                                                                                    /**                                                                                                 
* &lt;p&gt;Internal calculation method.&lt;/p&gt;                                                      * &lt;p&gt;Internal calculation method.&lt;/p&gt;                                                   
*                                                                                                      *                                                                                                   
* @param val  the calendar, not null                                                                   * @param val  the calendar, not null                                                                
* @param field  the field constant                                                                     * @param field  the field constant                                                                  
* @param modType  type to truncate, round or ceiling                                                   * @param modType  type to truncate, round or ceiling                                                
* @throws ArithmeticException if the year is over 280 million                                          * @throws ArithmeticException if the year is over 280 million                                       
*/                                                                                                     */                                                                                                  
private static void modify(Calendar val, int field, int modType) {                                     private static void modify(Calendar val, int field, int modType) {                                  
if (val.get(Calendar.YEAR) &gt; 280000000) {                                                           if (val.get(Calendar.YEAR) &gt; 280000000) {                                                        
throw new ArithmeticException("Calendar value too large for accurate calculations");                   throw new ArithmeticException("Calendar value too large for accurate calculations");                
}                                                                                                      }                                                                                                   
if (field == Calendar.MILLISECOND) {                                                                   if (field == Calendar.MILLISECOND) {                                                                
return;                                                                                                return;                                                                                             
}                                                                                                      }                                                                                                   
// ----------------- Fix for LANG-59 ---------------------- START ---------------                      // ----------------- Fix for LANG-59 ---------------------- START ---------------                   
// see http://issues.apache.org/jira/browse/LANG-59                                                    // see http://issues.apache.org/jira/browse/LANG-59                                                 
//                                                                                                     //                                                                                                  
// Manually truncate milliseconds, seconds and minutes, rather than using                              // Manually truncate milliseconds, seconds and minutes, rather than using                           
// Calendar methods.                                                                                   // Calendar methods.                                                                                
Date date = val.getTime();                                                                             Date date = val.getTime();                                                                          
long time = date.getTime();                                                                            long time = date.getTime();                                                                         
boolean done = false;                                                                                  boolean done = false;                                                                               
// truncate milliseconds                                                                               // truncate milliseconds                                                                            
int millisecs = val.get(Calendar.MILLISECOND);                                                         int millisecs = val.get(Calendar.MILLISECOND);                                                      
if (MODIFY_TRUNCATE == modType || millisecs &lt; 500) {                                                if (MODIFY_TRUNCATE == modType || millisecs &lt; 500) {                                             
time = time - millisecs;                                                                               time = time - millisecs;                                                                            
}                                                                                                      }                                                                                                   
if (field == Calendar.SECOND) {                                                                        if (field == Calendar.SECOND) {                                                                     
done = true;                                                                                           done = true;                                                                                        
}                                                                                                      }                                                                                                   
// truncate seconds                                                                                    // truncate seconds                                                                                 
int seconds = val.get(Calendar.SECOND);                                                                int seconds = val.get(Calendar.SECOND);                                                             
if (!done && (MODIFY_TRUNCATE == modType || seconds &lt; 30)) {                                        if (!done && (MODIFY_TRUNCATE == modType || seconds &lt; 30)) {                                     
time = time - (seconds * 1000L);                                                                       time = time - (seconds * 1000L);                                                                    
}                                                                                                      }                                                                                                   
if (field == Calendar.MINUTE) {                                                                        if (field == Calendar.MINUTE) {                                                                     
done = true;                                                                                           done = true;                                                                                        
}                                                                                                      }                                                                                                   
// truncate minutes                                                                                    // truncate minutes                                                                                 
int minutes = val.get(Calendar.MINUTE);                                                                int minutes = val.get(Calendar.MINUTE);                                                             
if (!done && (MODIFY_TRUNCATE == modType || minutes &lt; 30)) {                                        if (!done && (MODIFY_TRUNCATE == modType || minutes &lt; 30)) {                                     
time = time - (minutes * 60000L);                                                                      time = time - (minutes * 60000L);                                                                   
}                                                                                                      }                                                                                                   
// reset time                                                                                          // reset time                                                                                       
if (date.getTime() != time) {                                                                          if (date.getTime() != time) {                                                                       
date.setTime(time);                                                                                    date.setTime(time);                                                                                 
val.setTime(date);                                                                                     val.setTime(date);                                                                                  
}                                                                                                      }                                                                                                   
// ----------------- Fix for LANG-59 ----------------------- END ----------------                      // ----------------- Fix for LANG-59 ----------------------- END ----------------                   
boolean roundUp = false;                                                                               boolean roundUp = false;                                                                            
for (int i = 0; i &lt; fields.length; i++) {                                                         | for (int[] aField : fields) {                                                                       
for (int j = 0; j &lt; fields[i].length; j++) {                                                      | for (int j = 0; j &lt; aField.length; j++) {                                                        
if (fields[i][j] == field) {                                                                         | if (aField[j] == field) {                                                                           
// This is our field... we stop looping                                                                // This is our field... we stop looping                                                             
if (modType == MODIFY_CEILING || (modType == MODIFY_ROUND && roundUp)) {                               if (modType == MODIFY_CEILING || (modType == MODIFY_ROUND && roundUp)) {                            
if (field == DateUtils.SEMI_MONTH) {                                                                   if (field == DateUtils.SEMI_MONTH) {                                                                
// This is a special case that's hard to generalize                                                    // This is a special case that's hard to generalize                                                 
// If the date is 1, we round up to 16, otherwise                                                      // If the date is 1, we round up to 16, otherwise                                                   
// we subtract 15 days and add 1 month                                                                 // we subtract 15 days and add 1 month                                                              
if (val.get(Calendar.DATE) == 1) {                                                                     if (val.get(Calendar.DATE) == 1) {                                                                  
val.add(Calendar.DATE, 15);                                                                            val.add(Calendar.DATE, 15);                                                                         
} else {                                                                                               } else {                                                                                            
val.add(Calendar.DATE, -15);                                                                           val.add(Calendar.DATE, -15);                                                                        
val.add(Calendar.MONTH, 1);                                                                            val.add(Calendar.MONTH, 1);                                                                         
}                                                                                                      }                                                                                                   
// ----------------- Fix for LANG-440 ---------------------- START ---------------                     // ----------------- Fix for LANG-440 ---------------------- START ---------------                  
} else if (field == Calendar.AM_PM) {                                                                  } else if (field == Calendar.AM_PM) {                                                               
// This is a special case                                                                              // This is a special case                                                                           
// If the time is 0, we round up to 12, otherwise                                                      // If the time is 0, we round up to 12, otherwise                                                   
// we subtract 12 hours and add 1 day                                                                  // we subtract 12 hours and add 1 day                                                               
if (val.get(Calendar.HOUR_OF_DAY) == 0) {                                                              if (val.get(Calendar.HOUR_OF_DAY) == 0) {                                                           
val.add(Calendar.HOUR_OF_DAY, 12);                                                                     val.add(Calendar.HOUR_OF_DAY, 12);                                                                  
} else {                                                                                               } else {                                                                                            
val.add(Calendar.HOUR_OF_DAY, -12);                                                                    val.add(Calendar.HOUR_OF_DAY, -12);                                                                 
val.add(Calendar.DATE, 1);                                                                             val.add(Calendar.DATE, 1);                                                                          
}                                                                                                      }                                                                                                   
// ----------------- Fix for LANG-440 ---------------------- END ---------------                       // ----------------- Fix for LANG-440 ---------------------- END ---------------                    
} else {                                                                                               } else {                                                                                            
// We need at add one to this field since the                                                          // We need at add one to this field since the                                                       
// last number causes us to round up                                                                   // last number causes us to round up                                                                
val.add(fields[i][0], 1);                                                                            | val.add(aField[0], 1);                                                                              
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
return;                                                                                                return;                                                                                             
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
// We have various fields that are not easy roundings                                                  // We have various fields that are not easy roundings                                               
int offset = 0;                                                                                        int offset = 0;                                                                                     
boolean offsetSet = false;                                                                             boolean offsetSet = false;                                                                          
// These are special types of fields that require different rounding rules                             // These are special types of fields that require different rounding rules                          
switch(field) {                                                                                        switch(field) {                                                                                     
case DateUtils.SEMI_MONTH:                                                                             case DateUtils.SEMI_MONTH:                                                                          
if (fields[i][0] == Calendar.DATE) {                                                                 | if (aField[0] == Calendar.DATE) {                                                                   
// If we're going to drop the DATE field's value,                                                      // If we're going to drop the DATE field's value,                                                   
// we want to do this our own way.                                                                     // we want to do this our own way.                                                                  
// We need to subtrace 1 since the date has a minimum of 1                                             // We need to subtrace 1 since the date has a minimum of 1                                          
offset = val.get(Calendar.DATE) - 1;                                                                   offset = val.get(Calendar.DATE) - 1;                                                                
// If we're above 15 days adjustment, that means we're in the                                          // If we're above 15 days adjustment, that means we're in the                                       
// bottom half of the month and should stay accordingly.                                               // bottom half of the month and should stay accordingly.                                            
if (offset &gt;= 15) {                                                                                 if (offset &gt;= 15) {                                                                              
offset -= 15;                                                                                          offset -= 15;                                                                                       
}                                                                                                      }                                                                                                   
// Record whether we're in the top or bottom half of that range                                        // Record whether we're in the top or bottom half of that range                                     
roundUp = offset &gt; 7;                                                                               roundUp = offset &gt; 7;                                                                            
offsetSet = true;                                                                                      offsetSet = true;                                                                                   
}                                                                                                      }                                                                                                   
break;                                                                                                 break;                                                                                              
case Calendar.AM_PM:                                                                                   case Calendar.AM_PM:                                                                                
if (fields[i][0] == Calendar.HOUR_OF_DAY) {                                                          | if (aField[0] == Calendar.HOUR_OF_DAY) {                                                            
// If we're going to drop the HOUR field's value,                                                      // If we're going to drop the HOUR field's value,                                                   
// we want to do this our own way.                                                                     // we want to do this our own way.                                                                  
offset = val.get(Calendar.HOUR_OF_DAY);                                                                offset = val.get(Calendar.HOUR_OF_DAY);                                                             
if (offset &gt;= 12) {                                                                                 if (offset &gt;= 12) {                                                                              
offset -= 12;                                                                                          offset -= 12;                                                                                       
}                                                                                                      }                                                                                                   
roundUp = offset &gt;= 6;                                                                              roundUp = offset &gt;= 6;                                                                           
offsetSet = true;                                                                                      offsetSet = true;                                                                                   
}                                                                                                      }                                                                                                   
break;                                                                                                 break;                                                                                              
}                                                                                                      }                                                                                                   
if (!offsetSet) {                                                                                      if (!offsetSet) {                                                                                   
int min = val.getActualMinimum(fields[i][0]);                                                        | int min = val.getActualMinimum(aField[0]);                                                          
int max = val.getActualMaximum(fields[i][0]);                                                        | int max = val.getActualMaximum(aField[0]);                                                          
// Calculate the offset from the minimum allowed value                                                 // Calculate the offset from the minimum allowed value                                              
offset = val.get(fields[i][0]) - min;                                                                | offset = val.get(aField[0]) - min;                                                                  
// Set roundUp if this is more than half way between the minimum and maximum                           // Set roundUp if this is more than half way between the minimum and maximum                        
roundUp = offset &gt; ((max - min) / 2);                                                               roundUp = offset &gt; ((max - min) / 2);                                                            
}                                                                                                      }                                                                                                   
// We need to remove this field                                                                        // We need to remove this field                                                                     
if (offset != 0) {                                                                                     if (offset != 0) {                                                                                  
val.set(fields[i][0], val.get(fields[i][0]) - offset);                                               | val.set(aField[0], val.get(aField[0]) - offset);                                                    
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
throw new IllegalArgumentException("The field " + field + " is not supported");                        throw new IllegalArgumentException("The field " + field + " is not supported");                     
}                                                                                                      }                                                                                                   
