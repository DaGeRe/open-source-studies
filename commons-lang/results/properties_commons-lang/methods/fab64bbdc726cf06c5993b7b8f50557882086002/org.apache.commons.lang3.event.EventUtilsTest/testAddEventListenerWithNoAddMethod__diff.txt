public void testAddEventListenerWithNoAddMethod() {
    final PropertyChangeSource src = new PropertyChangeSource();
    EventCountingInvociationHandler handler = new EventCountingInvociationHandler();
    ObjectChangeListener listener = handler.createListener(ObjectChangeListener.class);
    try {
        EventUtils.addEventListener(src, ObjectChangeListener.class, listener);
        fail("Should not be allowed to add a listener to an object that doesn't support it.");
    } catch (IllegalArgumentException e) {
        assertEquals("Class " + src.getClass().getName() + " does not have a public add" + ObjectChangeListener.class.getSimpleName() + " method which takes a parameter of type " + ObjectChangeListener.class.getName() + ".", e.getMessage());
    }
}