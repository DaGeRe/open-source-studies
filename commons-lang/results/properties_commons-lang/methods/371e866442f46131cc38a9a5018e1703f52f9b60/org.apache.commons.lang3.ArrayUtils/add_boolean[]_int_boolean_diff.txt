/**
 * <p>Inserts the specified element at the specified position in the array.
 * Shifts the element currently at that position (if any) and any subsequent
 * elements to the right (adds one to their indices).</p>
 *
 * <p>This method returns a new array with the same elements of the input
 * array plus the given element on the specified position. The component
 * type of the returned array is always the same as that of the input
 * array.</p>
 *
 * <p>If the input array is {@code null}, a new one element array is returned
 *  whose component type is the same as the element.</p>
 *
 * <pre>
 * ArrayUtils.add(null, 0, true)          = [true]
 * ArrayUtils.add([true], 0, false)       = [false, true]
 * ArrayUtils.add([false], 1, true)       = [false, true]
 * ArrayUtils.add([true, false], 1, true) = [true, true, false]
 * </pre>
 *
 * @param array  the array to add the element to, may be {@code null}
 * @param index  the position of the new object
 * @param element  the object to add
 * @return A new array containing the existing elements and the new element
 * @throws IndexOutOfBoundsException if the index is out of range
 * (index < 0 || index > array.length).
 */
public static boolean[] add(boolean[] array, int index, boolean element) {
    return (boolean[]) add(array, index, Boolean.valueOf(element), Boolean.TYPE);
}