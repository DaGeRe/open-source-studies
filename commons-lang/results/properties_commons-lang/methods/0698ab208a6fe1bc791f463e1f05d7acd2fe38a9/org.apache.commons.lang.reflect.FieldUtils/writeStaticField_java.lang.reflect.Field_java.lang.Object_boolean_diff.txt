/**
 * Write a static Field.
 * @param field to write
 * @param value to set
 * @param forceAccess  whether to break scope restrictions using the
 *  <code>setAccessible</code> method. <code>False</code> will only
 *  match public fields.
 * @throws IllegalArgumentException if the field is null or not static
 * @throws IllegalAccessException if the field is not made accessible or is final
 */
public static void writeStaticField(Field field, Object value, boolean forceAccess) throws IllegalAccessException {
    if (field == null) {
        throw new IllegalArgumentException("The field must not be null");
    }
    if (!Modifier.isStatic(field.getModifiers())) {
        throw new IllegalArgumentException("The field '" + field.getName() + "' is not static");
    }
    writeField(field, (Object) null, value, forceAccess);
}