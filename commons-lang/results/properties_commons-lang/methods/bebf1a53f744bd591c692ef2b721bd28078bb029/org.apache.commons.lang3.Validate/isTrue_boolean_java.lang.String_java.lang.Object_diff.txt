/**
 * <p>Validate that the argument condition is <code>true</code>; otherwise
 * throwing an exception with the specified message. This method is useful when
 * validating according to an arbitrary boolean expression, such as validating a
 * primitive number or using your own custom validation expression.</p>
 *
 * <pre>
 * Validate.isTrue(i >= min && i <= max, "The value must be between %d and %d", min, max);
 * Validate.isTrue(myObject.isOk(), "The object is not okay");</pre>
 *
 * @param expression the boolean expression to check
 * @param message the exception message if invalid
 * @param values the optional values for the formatted exception message
 * @throws IllegalArgumentException if expression is <code>false</code>
 * @see #isTrue(boolean)
 * @see #isTrue(boolean, String, long)
 * @see #isTrue(boolean, String, double)
 */
public static void isTrue(boolean expression, String message, Object... values) {
    if (expression == false) {
        throw new IllegalArgumentException(String.format(message, values));
    }
}