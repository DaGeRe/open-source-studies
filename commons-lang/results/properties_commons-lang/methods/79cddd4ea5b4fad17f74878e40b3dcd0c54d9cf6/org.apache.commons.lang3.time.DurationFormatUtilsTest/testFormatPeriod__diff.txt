public void testFormatPeriod() {
    Calendar cal1970 = Calendar.getInstance();
    cal1970.set(1970, 0, 1, 0, 0, 0);
    cal1970.set(Calendar.MILLISECOND, 0);
    long time1970 = cal1970.getTime().getTime();
    assertEquals("0", DurationFormatUtils.formatPeriod(time1970, time1970, "y"));
    assertEquals("0", DurationFormatUtils.formatPeriod(time1970, time1970, "M"));
    assertEquals("0", DurationFormatUtils.formatPeriod(time1970, time1970, "d"));
    assertEquals("0", DurationFormatUtils.formatPeriod(time1970, time1970, "H"));
    assertEquals("0", DurationFormatUtils.formatPeriod(time1970, time1970, "m"));
    assertEquals("0", DurationFormatUtils.formatPeriod(time1970, time1970, "s"));
    assertEquals("0", DurationFormatUtils.formatPeriod(time1970, time1970, "S"));
    assertEquals("0000", DurationFormatUtils.formatPeriod(time1970, time1970, "SSSS"));
    assertEquals("0000", DurationFormatUtils.formatPeriod(time1970, time1970, "yyyy"));
    assertEquals("0000", DurationFormatUtils.formatPeriod(time1970, time1970, "yyMM"));
    long time = time1970 + 60 * 1000;
    assertEquals("0", DurationFormatUtils.formatPeriod(time1970, time, "y"));
    assertEquals("0", DurationFormatUtils.formatPeriod(time1970, time, "M"));
    assertEquals("0", DurationFormatUtils.formatPeriod(time1970, time, "d"));
    assertEquals("0", DurationFormatUtils.formatPeriod(time1970, time, "H"));
    assertEquals("1", DurationFormatUtils.formatPeriod(time1970, time, "m"));
    assertEquals("60", DurationFormatUtils.formatPeriod(time1970, time, "s"));
    assertEquals("60000", DurationFormatUtils.formatPeriod(time1970, time, "S"));
    assertEquals("01:00", DurationFormatUtils.formatPeriod(time1970, time, "mm:ss"));
    Calendar cal = Calendar.getInstance();
    cal.set(1973, 6, 1, 0, 0, 0);
    cal.set(Calendar.MILLISECOND, 0);
    time = cal.getTime().getTime();
    assertEquals("36", DurationFormatUtils.formatPeriod(time1970, time, "yM"));
    assertEquals("3 years 6 months", DurationFormatUtils.formatPeriod(time1970, time, "y' years 'M' months'"));
    assertEquals("03/06", DurationFormatUtils.formatPeriod(time1970, time, "yy/MM"));
    cal.set(1973, 10, 1, 0, 0, 0);
    cal.set(Calendar.MILLISECOND, 0);
    time = cal.getTime().getTime();
    assertEquals("310", DurationFormatUtils.formatPeriod(time1970, time, "yM"));
    assertEquals("3 years 10 months", DurationFormatUtils.formatPeriod(time1970, time, "y' years 'M' months'"));
    assertEquals("03/10", DurationFormatUtils.formatPeriod(time1970, time, "yy/MM"));
    cal.set(1974, 0, 1, 0, 0, 0);
    cal.set(Calendar.MILLISECOND, 0);
    time = cal.getTime().getTime();
    assertEquals("40", DurationFormatUtils.formatPeriod(time1970, time, "yM"));
    assertEquals("4 years 0 months", DurationFormatUtils.formatPeriod(time1970, time, "y' years 'M' months'"));
    assertEquals("04/00", DurationFormatUtils.formatPeriod(time1970, time, "yy/MM"));
    assertEquals("48", DurationFormatUtils.formatPeriod(time1970, time, "M"));
    assertEquals("48", DurationFormatUtils.formatPeriod(time1970, time, "MM"));
    assertEquals("048", DurationFormatUtils.formatPeriod(time1970, time, "MMM"));
}