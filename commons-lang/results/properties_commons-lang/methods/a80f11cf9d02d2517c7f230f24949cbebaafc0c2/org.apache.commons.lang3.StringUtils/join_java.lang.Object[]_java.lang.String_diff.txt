/**
 * <p>Joins the elements of the provided array into a single String
 * containing the provided list of elements.</p>
 *
 * <p>No delimiter is added before or after the list.
 * A {@code null} separator is the same as an empty String ("").
 * Null objects or empty strings within the array are represented by
 * empty strings.</p>
 *
 * <pre>
 * StringUtils.join(null, *)                = null
 * StringUtils.join([], *)                  = ""
 * StringUtils.join([null], *)              = ""
 * StringUtils.join(["a", "b", "c"], "--")  = "a--b--c"
 * StringUtils.join(["a", "b", "c"], null)  = "abc"
 * StringUtils.join(["a", "b", "c"], "")    = "abc"
 * StringUtils.join([null, "", "a"], ',')   = ",,a"
 * </pre>
 *
 * @param array  the array of values to join together, may be null
 * @param separator  the separator character to use, null treated as ""
 * @return the joined String, {@code null} if null array input
 */
public static String join(Object[] array, String separator) {
    if (array == null) {
        return null;
    }
    return join(array, separator, 0, array.length);
}