/**
 * <p>
 * Converts given the Java version array to a <code>float</code>.
 * </p>
 *
 * <p>
 * Example return values:
 * </p>
 * <ul>
 * <li><code>1.2f</code> for Java 1.2</li>
 * <li><code>1.31f</code> for Java 1.3.1</li>
 * <li><code>1.6f</code> for Java 1.6.0_20</li>
 * </ul>
 *
 * <p>
 * Patch releases are not reported.
 * </p>
 *
 * @return the version, for example 1.31f for Java 1.3.1
 */
private static float toVersionFloat(int[] javaVersions) {
    if (javaVersions == null || javaVersions.length == 0) {
        return 0f;
    }
    if (javaVersions.length == 1) {
        return javaVersions[0];
    }
    StringBuilder builder = new StringBuilder();
    builder.append(javaVersions[0]);
    builder.append('.');
    for (int i = 1; i < javaVersions.length; i++) {
        builder.append(javaVersions[i]);
    }
    try {
        return Float.parseFloat(builder.toString());
    } catch (Exception ex) {
        return 0f;
    }
}