/**                                                                                                    /**                                                                                                 
* Performs the logic for the &lt;code&gt;split&lt;/code&gt; and                                        * Performs the logic for the &lt;code&gt;split&lt;/code&gt; and                                     
* &lt;code&gt;splitPreserveAllTokens&lt;/code&gt; methods that return a maximum array                  * &lt;code&gt;splitPreserveAllTokens&lt;/code&gt; methods that return a maximum array               
* length.                                                                                              * length.                                                                                           
*                                                                                                      *                                                                                                   
* @param str  the String to parse, may be &lt;code&gt;null&lt;/code&gt;                                * @param str  the String to parse, may be &lt;code&gt;null&lt;/code&gt;                             
* @param separatorChars the separate character                                                         * @param separatorChars the separate character                                                      
* @param max  the maximum number of elements to include in the                                         * @param max  the maximum number of elements to include in the                                      
*  array. A zero or negative value implies no limit.                                                   *  array. A zero or negative value implies no limit.                                                
* @param preserveAllTokens if &lt;code&gt;true&lt;/code&gt;, adjacent separators are                   * @param preserveAllTokens if &lt;code&gt;true&lt;/code&gt;, adjacent separators are                
* treated as empty token separators; if &lt;code&gt;false&lt;/code&gt;, adjacent                       * treated as empty token separators; if &lt;code&gt;false&lt;/code&gt;, adjacent                    
* separators are treated as one separator.                                                             * separators are treated as one separator.                                                          
* @return an array of parsed Strings, &lt;code&gt;null&lt;/code&gt; if null String input               * @return an array of parsed Strings, &lt;code&gt;null&lt;/code&gt; if null String input            
*/                                                                                                     */                                                                                                  
private static String[] splitWorker(String str, String separatorChars, int max, boolean preserveAllT   private static String[] splitWorker(String str, String separatorChars, int max, boolean preserveAllT
// Performance tuned for 2.0 (JDK1.4)                                                                  // Performance tuned for 2.0 (JDK1.4)                                                               
// Direct code is quicker than StringTokenizer.                                                        // Direct code is quicker than StringTokenizer.                                                     
// Also, StringTokenizer uses isSpace() not isWhitespace()                                             // Also, StringTokenizer uses isSpace() not isWhitespace()                                          
if (str == null) {                                                                                     if (str == null) {                                                                                  
return null;                                                                                           return null;                                                                                        
}                                                                                                      }                                                                                                   
int len = str.length();                                                                                int len = str.length();                                                                             
if (len == 0) {                                                                                        if (len == 0) {                                                                                     
return ArrayUtils.EMPTY_STRING_ARRAY;                                                                  return ArrayUtils.EMPTY_STRING_ARRAY;                                                               
}                                                                                                      }                                                                                                   
List list = new ArrayList();                                                                         | List&lt;String&gt; list = new ArrayList&lt;String&gt;();                                            
int sizePlus1 = 1;                                                                                     int sizePlus1 = 1;                                                                                  
int i = 0, start = 0;                                                                                  int i = 0, start = 0;                                                                               
boolean match = false;                                                                                 boolean match = false;                                                                              
boolean lastMatch = false;                                                                             boolean lastMatch = false;                                                                          
if (separatorChars == null) {                                                                          if (separatorChars == null) {                                                                       
// Null separator means use whitespace                                                                 // Null separator means use whitespace                                                              
while (i &lt; len) {                                                                                   while (i &lt; len) {                                                                                
if (Character.isWhitespace(str.charAt(i))) {                                                           if (Character.isWhitespace(str.charAt(i))) {                                                        
if (match || preserveAllTokens) {                                                                      if (match || preserveAllTokens) {                                                                   
lastMatch = true;                                                                                      lastMatch = true;                                                                                   
if (sizePlus1++ == max) {                                                                              if (sizePlus1++ == max) {                                                                           
i = len;                                                                                               i = len;                                                                                            
lastMatch = false;                                                                                     lastMatch = false;                                                                                  
}                                                                                                      }                                                                                                   
list.add(str.substring(start, i));                                                                     list.add(str.substring(start, i));                                                                  
match = false;                                                                                         match = false;                                                                                      
}                                                                                                      }                                                                                                   
start = ++i;                                                                                           start = ++i;                                                                                        
continue;                                                                                              continue;                                                                                           
}                                                                                                      }                                                                                                   
lastMatch = false;                                                                                     lastMatch = false;                                                                                  
match = true;                                                                                          match = true;                                                                                       
i++;                                                                                                   i++;                                                                                                
}                                                                                                      }                                                                                                   
} else if (separatorChars.length() == 1) {                                                             } else if (separatorChars.length() == 1) {                                                          
// Optimise 1 character case                                                                           // Optimise 1 character case                                                                        
char sep = separatorChars.charAt(0);                                                                   char sep = separatorChars.charAt(0);                                                                
while (i &lt; len) {                                                                                   while (i &lt; len) {                                                                                
if (str.charAt(i) == sep) {                                                                            if (str.charAt(i) == sep) {                                                                         
if (match || preserveAllTokens) {                                                                      if (match || preserveAllTokens) {                                                                   
lastMatch = true;                                                                                      lastMatch = true;                                                                                   
if (sizePlus1++ == max) {                                                                              if (sizePlus1++ == max) {                                                                           
i = len;                                                                                               i = len;                                                                                            
lastMatch = false;                                                                                     lastMatch = false;                                                                                  
}                                                                                                      }                                                                                                   
list.add(str.substring(start, i));                                                                     list.add(str.substring(start, i));                                                                  
match = false;                                                                                         match = false;                                                                                      
}                                                                                                      }                                                                                                   
start = ++i;                                                                                           start = ++i;                                                                                        
continue;                                                                                              continue;                                                                                           
}                                                                                                      }                                                                                                   
lastMatch = false;                                                                                     lastMatch = false;                                                                                  
match = true;                                                                                          match = true;                                                                                       
i++;                                                                                                   i++;                                                                                                
}                                                                                                      }                                                                                                   
} else {                                                                                               } else {                                                                                            
// standard case                                                                                       // standard case                                                                                    
while (i &lt; len) {                                                                                   while (i &lt; len) {                                                                                
if (separatorChars.indexOf(str.charAt(i)) &gt;= 0) {                                                   if (separatorChars.indexOf(str.charAt(i)) &gt;= 0) {                                                
if (match || preserveAllTokens) {                                                                      if (match || preserveAllTokens) {                                                                   
lastMatch = true;                                                                                      lastMatch = true;                                                                                   
if (sizePlus1++ == max) {                                                                              if (sizePlus1++ == max) {                                                                           
i = len;                                                                                               i = len;                                                                                            
lastMatch = false;                                                                                     lastMatch = false;                                                                                  
}                                                                                                      }                                                                                                   
list.add(str.substring(start, i));                                                                     list.add(str.substring(start, i));                                                                  
match = false;                                                                                         match = false;                                                                                      
}                                                                                                      }                                                                                                   
start = ++i;                                                                                           start = ++i;                                                                                        
continue;                                                                                              continue;                                                                                           
}                                                                                                      }                                                                                                   
lastMatch = false;                                                                                     lastMatch = false;                                                                                  
match = true;                                                                                          match = true;                                                                                       
i++;                                                                                                   i++;                                                                                                
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
if (match || (preserveAllTokens && lastMatch)) {                                                       if (match || (preserveAllTokens && lastMatch)) {                                                    
list.add(str.substring(start, i));                                                                     list.add(str.substring(start, i));                                                                  
}                                                                                                      }                                                                                                   
return (String[]) list.toArray(new String[list.size()]);                                             | return list.toArray(new String[list.size()]);                                                       
}                                                                                                      }                                                                                                   
