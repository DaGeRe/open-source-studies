/**                                                                                                    /**                                                                                                 
* &lt;p&gt;Joins the elements of the provided &lt;code&gt;Iterator&lt;/code&gt; into                   * &lt;p&gt;Joins the elements of the provided &lt;code&gt;Iterator&lt;/code&gt; into                
* a single String containing the provided elements.&lt;/p&gt;                                          * a single String containing the provided elements.&lt;/p&gt;                                       
*                                                                                                      *                                                                                                   
* &lt;p&gt;No delimiter is added before or after the list.                                             * &lt;p&gt;No delimiter is added before or after the list.                                          
* A &lt;code&gt;null&lt;/code&gt; separator is the same as an empty String ("").&lt;/p&gt;             * A &lt;code&gt;null&lt;/code&gt; separator is the same as an empty String ("").&lt;/p&gt;          
*                                                                                                      *                                                                                                   
* &lt;p&gt;See the examples here: {@link #join(Object[],String)}. &lt;/p&gt;                           * &lt;p&gt;See the examples here: {@link #join(Object[],String)}. &lt;/p&gt;                        
*                                                                                                      *                                                                                                   
* @param iterator  the &lt;code&gt;Iterator&lt;/code&gt; of values to join together, may be null       * @param iterator  the &lt;code&gt;Iterator&lt;/code&gt; of values to join together, may be null    
* @param separator  the separator character to use, null treated as ""                                 * @param separator  the separator character to use, null treated as ""                              
* @return the joined String, &lt;code&gt;null&lt;/code&gt; if null iterator input                      * @return the joined String, &lt;code&gt;null&lt;/code&gt; if null iterator input                   
*/                                                                                                     */                                                                                                  
public static String join(Iterator iterator, String separator) {                                     | public static String join(Iterator&lt;?&gt; iterator, String separator) {                           
// handle null, zero and one elements before building a buffer                                         // handle null, zero and one elements before building a buffer                                      
if (iterator == null) {                                                                                if (iterator == null) {                                                                             
return null;                                                                                           return null;                                                                                        
}                                                                                                      }                                                                                                   
if (!iterator.hasNext()) {                                                                             if (!iterator.hasNext()) {                                                                          
return EMPTY;                                                                                          return EMPTY;                                                                                       
}                                                                                                      }                                                                                                   
Object first = iterator.next();                                                                        Object first = iterator.next();                                                                     
if (!iterator.hasNext()) {                                                                             if (!iterator.hasNext()) {                                                                          
return ObjectUtils.toString(first);                                                                    return ObjectUtils.toString(first);                                                                 
}                                                                                                      }                                                                                                   
// two or more elements                                                                                // two or more elements                                                                             
// Java default is 16, probably too small                                                              // Java default is 16, probably too small                                                           
StringBuffer buf = new StringBuffer(256);                                                              StringBuffer buf = new StringBuffer(256);                                                           
if (first != null) {                                                                                   if (first != null) {                                                                                
buf.append(first);                                                                                     buf.append(first);                                                                                  
}                                                                                                      }                                                                                                   
while (iterator.hasNext()) {                                                                           while (iterator.hasNext()) {                                                                        
if (separator != null) {                                                                               if (separator != null) {                                                                            
buf.append(separator);                                                                                 buf.append(separator);                                                                              
}                                                                                                      }                                                                                                   
Object obj = iterator.next();                                                                          Object obj = iterator.next();                                                                       
if (obj != null) {                                                                                     if (obj != null) {                                                                                  
buf.append(obj);                                                                                       buf.append(obj);                                                                                    
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
return buf.toString();                                                                                 return buf.toString();                                                                              
}                                                                                                      }                                                                                                   
