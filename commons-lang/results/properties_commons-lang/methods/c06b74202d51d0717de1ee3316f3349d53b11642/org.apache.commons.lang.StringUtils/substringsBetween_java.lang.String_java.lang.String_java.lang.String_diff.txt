/**                                                                                                    /**                                                                                                 
* &lt;p&gt;Searches a String for substrings delimited by a start and end tag,                          * &lt;p&gt;Searches a String for substrings delimited by a start and end tag,                       
* returning all matching substrings in an array.&lt;/p&gt;                                             * returning all matching substrings in an array.&lt;/p&gt;                                          
*                                                                                                      *                                                                                                   
* &lt;p&gt;A &lt;code&gt;null&lt;/code&gt; input String returns &lt;code&gt;null&lt;/code&gt;.         * &lt;p&gt;A &lt;code&gt;null&lt;/code&gt; input String returns &lt;code&gt;null&lt;/code&gt;.      
* A &lt;code&gt;null&lt;/code&gt; open/close returns &lt;code&gt;null&lt;/code&gt; (no match).         * A &lt;code&gt;null&lt;/code&gt; open/close returns &lt;code&gt;null&lt;/code&gt; (no match).      
* An empty ("") open/close returns &lt;code&gt;null&lt;/code&gt; (no match).&lt;/p&gt;                 * An empty ("") open/close returns &lt;code&gt;null&lt;/code&gt; (no match).&lt;/p&gt;              
*                                                                                                      *                                                                                                   
* &lt;pre&gt;                                                                                          * &lt;pre&gt;                                                                                       
* StringUtils.substringsBetween("[a][b][c]", "[", "]") = ["a","b","c"]                                 * StringUtils.substringsBetween("[a][b][c]", "[", "]") = ["a","b","c"]                              
* StringUtils.substringsBetween(null, *, *)            = null                                          * StringUtils.substringsBetween(null, *, *)            = null                                       
* StringUtils.substringsBetween(*, null, *)            = null                                          * StringUtils.substringsBetween(*, null, *)            = null                                       
* StringUtils.substringsBetween(*, *, null)            = null                                          * StringUtils.substringsBetween(*, *, null)            = null                                       
* StringUtils.substringsBetween("", "[", "]")          = []                                            * StringUtils.substringsBetween("", "[", "]")          = []                                         
* &lt;/pre&gt;                                                                                         * &lt;/pre&gt;                                                                                      
*                                                                                                      *                                                                                                   
* @param str  the String containing the substrings, null returns null, empty returns empty             * @param str  the String containing the substrings, null returns null, empty returns empty          
* @param open  the String identifying the start of the substring, empty returns null                   * @param open  the String identifying the start of the substring, empty returns null                
* @param close  the String identifying the end of the substring, empty returns null                    * @param close  the String identifying the end of the substring, empty returns null                 
* @return a String Array of substrings, or &lt;code&gt;null&lt;/code&gt; if no match                   * @return a String Array of substrings, or &lt;code&gt;null&lt;/code&gt; if no match                
* @since 2.3                                                                                           * @since 2.3                                                                                        
*/                                                                                                     */                                                                                                  
public static String[] substringsBetween(String str, String open, String close) {                      public static String[] substringsBetween(String str, String open, String close) {                   
if (str == null || isEmpty(open) || isEmpty(close)) {                                                  if (str == null || isEmpty(open) || isEmpty(close)) {                                               
return null;                                                                                           return null;                                                                                        
}                                                                                                      }                                                                                                   
int strLen = str.length();                                                                             int strLen = str.length();                                                                          
if (strLen == 0) {                                                                                     if (strLen == 0) {                                                                                  
return ArrayUtils.EMPTY_STRING_ARRAY;                                                                  return ArrayUtils.EMPTY_STRING_ARRAY;                                                               
}                                                                                                      }                                                                                                   
int closeLen = close.length();                                                                         int closeLen = close.length();                                                                      
int openLen = open.length();                                                                           int openLen = open.length();                                                                        
List list = new ArrayList();                                                                         | List&lt;String&gt; list = new ArrayList&lt;String&gt;();                                            
int pos = 0;                                                                                           int pos = 0;                                                                                        
while (pos &lt; (strLen - closeLen)) {                                                                 while (pos &lt; (strLen - closeLen)) {                                                              
int start = str.indexOf(open, pos);                                                                    int start = str.indexOf(open, pos);                                                                 
if (start &lt; 0) {                                                                                    if (start &lt; 0) {                                                                                 
break;                                                                                                 break;                                                                                              
}                                                                                                      }                                                                                                   
start += openLen;                                                                                      start += openLen;                                                                                   
int end = str.indexOf(close, start);                                                                   int end = str.indexOf(close, start);                                                                
if (end &lt; 0) {                                                                                      if (end &lt; 0) {                                                                                   
break;                                                                                                 break;                                                                                              
}                                                                                                      }                                                                                                   
list.add(str.substring(start, end));                                                                   list.add(str.substring(start, end));                                                                
pos = end + closeLen;                                                                                  pos = end + closeLen;                                                                               
}                                                                                                      }                                                                                                   
if (list.isEmpty()) {                                                                                  if (list.isEmpty()) {                                                                               
return null;                                                                                           return null;                                                                                        
}                                                                                                      }                                                                                                   
return (String[]) list.toArray(new String[list.size()]);                                             | return list.toArray(new String[list.size()]);                                                       
}                                                                                                      }                                                                                                   
