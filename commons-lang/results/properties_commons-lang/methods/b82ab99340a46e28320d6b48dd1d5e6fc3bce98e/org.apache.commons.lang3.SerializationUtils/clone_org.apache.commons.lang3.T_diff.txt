// Clone                                                                                               // Clone                                                                                            
// -----------------------------------------------------------------------                             // -----------------------------------------------------------------------                          
/**                                                                                                    /**                                                                                                 
* &lt;p&gt;Deep clone an {@code Object} using serialization.&lt;/p&gt;                                 * &lt;p&gt;Deep clone an {@code Object} using serialization.&lt;/p&gt;                              
*                                                                                                      *                                                                                                   
* &lt;p&gt;This is many times slower than writing clone methods by hand                                * &lt;p&gt;This is many times slower than writing clone methods by hand                             
* on all objects in your object graph. However, for complex object                                     * on all objects in your object graph. However, for complex object                                  
* graphs, or for those that don't support deep cloning this can                                        * graphs, or for those that don't support deep cloning this can                                     
* be a simple alternative implementation. Of course all the objects                                    * be a simple alternative implementation. Of course all the objects                                 
* must be {@code Serializable}.&lt;/p&gt;                                                              * must be {@code Serializable}.&lt;/p&gt;                                                           
*                                                                                                      *                                                                                                   
* @param &lt;T&gt; the type of the object involved                                                     * @param &lt;T&gt; the type of the object involved                                                  
* @param object  the {@code Serializable} object to clone                                              * @param object  the {@code Serializable} object to clone                                           
* @return the cloned object                                                                            * @return the cloned object                                                                         
* @throws SerializationException (runtime) if the serialization fails                                  * @throws SerializationException (runtime) if the serialization fails                               
*/                                                                                                     */                                                                                                  
public static &lt;T extends Serializable&gt; T clone(T object) {                                       public static &lt;T extends Serializable&gt; T clone(T object) {                                    
                                                                                                     | if (object == null) {                                                                               
                                                                                                     | return null;                                                                                        
                                                                                                     | }                                                                                                   
                                                                                                     | byte[] objectData = serialize(object);                                                              
                                                                                                     | ByteArrayInputStream bais = new ByteArrayInputStream(objectData);                                   
                                                                                                     | ClassLoaderAwareObjectInputStream in = null;                                                        
                                                                                                     | try {                                                                                               
                                                                                                     | // stream closed in the finally                                                                     
                                                                                                     | in = new ClassLoaderAwareObjectInputStream(bais, object.getClass().getClassLoader());               
/*                                                                                                     /*                                                                                                  
* when we serialize and deserialize an object,                                                         * when we serialize and deserialize an object,                                                      
* it is reasonable to assume the deserialized object                                                   * it is reasonable to assume the deserialized object                                                
* is of the same type as the original serialized object                                                * is of the same type as the original serialized object                                             
*/                                                                                                     */                                                                                                  
@SuppressWarnings("unchecked")                                                                       | return (T) in.readObject();                                                                         
final T result = (T) deserialize(serialize(object));                                                 | } catch (ClassNotFoundException ex) {                                                               
return result;                                                                                       | throw new SerializationException("ClassNotFoundException while reading cloned object data", ex);    
                                                                                                     | } catch (IOException ex) {                                                                          
                                                                                                     | throw new SerializationException("IOException while reading cloned object data", ex);               
                                                                                                     | } finally {                                                                                         
                                                                                                     | try {                                                                                               
                                                                                                     | if (in != null) {                                                                                   
                                                                                                     | in.close();                                                                                         
}                                                                                                      }                                                                                                   
                                                                                                     | } catch (IOException ex) {                                                                          
                                                                                                     | throw new SerializationException("IOException on closing cloned object data InputStream.", ex);     
                                                                                                     | }                                                                                                   
                                                                                                     | }                                                                                                   
                                                                                                     | }                                                                                                   
