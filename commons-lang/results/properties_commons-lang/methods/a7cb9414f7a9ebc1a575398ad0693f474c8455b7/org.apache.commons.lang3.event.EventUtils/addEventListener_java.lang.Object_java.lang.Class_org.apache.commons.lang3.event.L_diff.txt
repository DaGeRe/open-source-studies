public static <L> void addEventListener(Object eventSource, Class<L> listenerType, L listener) {
    try {
        MethodUtils.invokeMethod(eventSource, "add" + listenerType.getSimpleName(), listener);
    } catch (NoSuchMethodException e) {
        throw new IllegalArgumentException("Class " + eventSource.getClass() + " does not have an accesible add" + listenerType.getSimpleName() + " method which takes a parameter of type " + listenerType.getClass().getName() + ".");
    } catch (IllegalAccessException e) {
        throw new IllegalArgumentException("Class " + eventSource.getClass() + " does not have an accesible add" + listenerType.getSimpleName() + " method which takes a parameter of type " + listenerType.getClass().getName() + ".");
    } catch (InvocationTargetException e) {
        throw new RuntimeException("Unable to add listener.", e.getCause());
    }
}