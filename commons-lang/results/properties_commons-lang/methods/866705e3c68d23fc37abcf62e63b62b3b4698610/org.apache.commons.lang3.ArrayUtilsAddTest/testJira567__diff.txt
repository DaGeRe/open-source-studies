                                                                                                     | @Test                                                                                               
public void testJira567() {                                                                            public void testJira567() {                                                                         
Number[] n;                                                                                            Number[] n;                                                                                         
// Valid array construction                                                                            // Valid array construction                                                                         
n = ArrayUtils.addAll(new Number[] { Integer.valueOf(1) }, new Long[] { Long.valueOf(2) });            n = ArrayUtils.addAll(new Number[] { Integer.valueOf(1) }, new Long[] { Long.valueOf(2) });         
assertEquals(2, n.length);                                                                             assertEquals(2, n.length);                                                                          
assertEquals(Number.class, n.getClass().getComponentType());                                           assertEquals(Number.class, n.getClass().getComponentType());                                        
try {                                                                                                  try {                                                                                               
// Invalid - can't store Long in Integer array                                                         // Invalid - can't store Long in Integer array                                                      
n = ArrayUtils.addAll(new Integer[] { Integer.valueOf(1) }, new Long[] { Long.valueOf(2) });           n = ArrayUtils.addAll(new Integer[] { Integer.valueOf(1) }, new Long[] { Long.valueOf(2) });        
fail("Should have generated IllegalArgumentException");                                                fail("Should have generated IllegalArgumentException");                                             
} catch (IllegalArgumentException expected) {                                                          } catch (IllegalArgumentException expected) {                                                       
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
