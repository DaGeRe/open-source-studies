public void testUnfinishedEntity() {                                                                   public void testUnfinishedEntity() {                                                                
// parse it                                                                                            // parse it                                                                                         
NumericEntityUnescaper neu = new NumericEntityUnescaper(NumericEntityUnescaper.OPTION.semiColonOptio   NumericEntityUnescaper neu = new NumericEntityUnescaper(NumericEntityUnescaper.OPTION.semiColonOptio
String input = "Test &#x30 not test";                                                                  String input = "Test &#x30 not test";                                                               
String expected = "Test \u0030 not test";                                                              String expected = "Test \u0030 not test";                                                           
String result = neu.translate(input);                                                                  String result = neu.translate(input);                                                               
assertEquals("Failed to support unfinished entities (i.e. missing semi-colon)", expected, result);     assertEquals("Failed to support unfinished entities (i.e. missing semi-colon)", expected, result);  
// ignore it                                                                                           // ignore it                                                                                        
neu = new NumericEntityUnescaper();                                                                    neu = new NumericEntityUnescaper();                                                                 
input = "Test &#x30 not test";                                                                         input = "Test &#x30 not test";                                                                      
expected = input;                                                                                      expected = input;                                                                                   
result = neu.translate(input);                                                                         result = neu.translate(input);                                                                      
assertEquals("Failed to ignore unfinished entities (i.e. missing semi-colon)", expected, result);      assertEquals("Failed to ignore unfinished entities (i.e. missing semi-colon)", expected, result);   
// fail it                                                                                             // fail it                                                                                          
neu = new NumericEntityUnescaper(NumericEntityUnescaper.OPTION.errorIfNoSemiColon);                    neu = new NumericEntityUnescaper(NumericEntityUnescaper.OPTION.errorIfNoSemiColon);                 
input = "Test &#x30 not test";                                                                         input = "Test &#x30 not test";                                                                      
try {                                                                                                  try {                                                                                               
result = neu.translate(input);                                                                         result = neu.translate(input);                                                                      
fail("RuntimeException expected");                                                                   | fail("IllegalArgumentException expected");                                                          
} catch (RuntimeException re) {                                                                      | } catch (IllegalArgumentException iae) {                                                            
// expected                                                                                            // expected                                                                                         
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
