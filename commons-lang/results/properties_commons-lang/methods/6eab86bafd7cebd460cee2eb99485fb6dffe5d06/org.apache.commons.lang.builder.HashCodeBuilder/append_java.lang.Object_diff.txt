/**
 * <p>
 * Append a <code>hashCode</code> for an <code>Object</code>.
 * </p>
 *
 * @param object
 *            the Object to add to the <code>hashCode</code>
 * @return this
 */
public HashCodeBuilder append(Object object) {
    if (object == null) {
        iTotal = iTotal * iConstant;
    } else {
        // 'Switch' on type of array, to dispatch to the correct handler
        // This handles multi dimensional arrays
        if (object instanceof long[]) {
            append((long[]) object);
        } else if (object instanceof int[]) {
            append((int[]) object);
        } else if (object instanceof short[]) {
            append((short[]) object);
        } else if (object instanceof char[]) {
            append((char[]) object);
        } else if (object instanceof byte[]) {
            append((byte[]) object);
        } else if (object instanceof double[]) {
            append((double[]) object);
        } else if (object instanceof float[]) {
            append((float[]) object);
        } else if (object instanceof boolean[]) {
            append((boolean[]) object);
        } else if (object instanceof Object[]) {
            // Not an array of primitives
            append((Object[]) object);
        } else {
            iTotal = iTotal * iConstant + object.hashCode();
        }
    }
    return this;
}