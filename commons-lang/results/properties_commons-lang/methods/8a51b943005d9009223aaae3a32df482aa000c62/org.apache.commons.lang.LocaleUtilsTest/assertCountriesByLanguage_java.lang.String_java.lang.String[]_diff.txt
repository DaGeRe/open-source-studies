// -----------------------------------------------------------------------                             // -----------------------------------------------------------------------                          
/**                                                                                                    /**                                                                                                 
* Make sure the country by language is correct. It checks that                                         * Make sure the country by language is correct. It checks that                                      
* the LocaleUtils.countryByLanguage(language) call contains the                                        * the LocaleUtils.countryByLanguage(language) call contains the                                     
* array of countries passed in. It may contain more due to JVM                                         * array of countries passed in. It may contain more due to JVM                                      
* variations.                                                                                          * variations.                                                                                       
*                                                                                                      *                                                                                                   
* @param language                                                                                      * @param language                                                                                   
* @param countries array of countries that should be returned                                          * @param countries array of countries that should be returned                                       
*/                                                                                                     */                                                                                                  
private void assertCountriesByLanguage(String language, String[] countries) {                          private void assertCountriesByLanguage(String language, String[] countries) {                       
List list = LocaleUtils.countriesByLanguage(language);                                               | List&lt;Locale&gt; list = LocaleUtils.countriesByLanguage(language);                                
List list2 = LocaleUtils.countriesByLanguage(language);                                              | List&lt;Locale&gt; list2 = LocaleUtils.countriesByLanguage(language);                               
assertNotNull(list);                                                                                   assertNotNull(list);                                                                                
assertSame(list, list2);                                                                               assertSame(list, list2);                                                                            
// search through langauges                                                                            // search through langauges                                                                         
for (int i = 0; i &lt; countries.length; i++) {                                                        for (int i = 0; i &lt; countries.length; i++) {                                                     
Iterator iterator = list.iterator();                                                                 | Iterator&lt;Locale&gt; iterator = list.iterator();                                                  
boolean found = false;                                                                                 boolean found = false;                                                                              
// see if it was returned by the set                                                                   // see if it was returned by the set                                                                
while (iterator.hasNext()) {                                                                           while (iterator.hasNext()) {                                                                        
Locale locale = (Locale) iterator.next();                                                            | Locale locale = iterator.next();                                                                    
// should have an en empty variant                                                                     // should have an en empty variant                                                                  
assertTrue(locale.getVariant() == null || locale.getVariant().length() == 0);                          assertTrue(locale.getVariant() == null || locale.getVariant().length() == 0);                       
assertEquals(language, locale.getLanguage());                                                          assertEquals(language, locale.getLanguage());                                                       
if (countries[i].equals(locale.getCountry())) {                                                        if (countries[i].equals(locale.getCountry())) {                                                     
found = true;                                                                                          found = true;                                                                                       
break;                                                                                                 break;                                                                                              
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
if (!found) {                                                                                          if (!found) {                                                                                       
fail("Cound not find language: " + countries[i] + " for country: " + language);                        fail("Cound not find language: " + countries[i] + " for country: " + language);                     
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
assertUnmodifiableCollection(list);                                                                    assertUnmodifiableCollection(list);                                                                 
}                                                                                                      }                                                                                                   
