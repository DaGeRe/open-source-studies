/**                                                                                                    /**                                                                                                 
* &lt;p&gt;                                                                                            * &lt;p&gt;                                                                                         
* Builds a &lt;code&gt;toString&lt;/code&gt; value through reflection.                                 * Builds a &lt;code&gt;toString&lt;/code&gt; value through reflection.                              
* &lt;/p&gt;                                                                                           * &lt;/p&gt;                                                                                        
*                                                                                                      *                                                                                                   
* &lt;p&gt;                                                                                            * &lt;p&gt;                                                                                         
* It uses &lt;code&gt;AccessibleObject.setAccessible&lt;/code&gt; to gain access to private fields.    * It uses &lt;code&gt;AccessibleObject.setAccessible&lt;/code&gt; to gain access to private fields. 
* throw a security exception if run under a security manager, if the permissions are not set up corr   * throw a security exception if run under a security manager, if the permissions are not set up corr
* also not as efficient as testing explicitly.                                                         * also not as efficient as testing explicitly.                                                      
* &lt;/p&gt;                                                                                           * &lt;/p&gt;                                                                                        
*                                                                                                      *                                                                                                   
* &lt;p&gt;                                                                                            * &lt;p&gt;                                                                                         
* If the &lt;code&gt;outputTransients&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, transient field   * If the &lt;code&gt;outputTransients&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, transient field
* are ignored, as they are likely derived fields, and not part of the value of the Object.             * are ignored, as they are likely derived fields, and not part of the value of the Object.          
* &lt;/p&gt;                                                                                           * &lt;/p&gt;                                                                                        
*                                                                                                      *                                                                                                   
* &lt;p&gt;                                                                                            * &lt;p&gt;                                                                                         
* If the &lt;code&gt;outputStatics&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, static fields will   * If the &lt;code&gt;outputStatics&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, static fields will
* ignored.                                                                                             * ignored.                                                                                          
* &lt;/p&gt;                                                                                           * &lt;/p&gt;                                                                                        
*                                                                                                      *                                                                                                   
* &lt;p&gt;                                                                                            * &lt;p&gt;                                                                                         
* Superclass fields will be appended up to and including the specified superclass. A null superclass   * Superclass fields will be appended up to and including the specified superclass. A null superclass
* &lt;code&gt;java.lang.Object&lt;/code&gt;.                                                           * &lt;code&gt;java.lang.Object&lt;/code&gt;.                                                        
* &lt;/p&gt;                                                                                           * &lt;/p&gt;                                                                                        
*                                                                                                      *                                                                                                   
* &lt;p&gt;                                                                                            * &lt;p&gt;                                                                                         
* If the style is &lt;code&gt;null&lt;/code&gt;, the default &lt;code&gt;ToStringStyle&lt;/code&gt;    * If the style is &lt;code&gt;null&lt;/code&gt;, the default &lt;code&gt;ToStringStyle&lt;/code&gt; 
* &lt;/p&gt;                                                                                           * &lt;/p&gt;                                                                                        
*                                                                                                      *                                                                                                   
* @param object                                                                                        * @param object                                                                                     
*            the Object to be output                                                                   *            the Object to be output                                                                
* @param style                                                                                         * @param style                                                                                      
*            the style of the &lt;code&gt;toString&lt;/code&gt; to create, may be &lt;code&gt;null&l   *            the style of the &lt;code&gt;toString&lt;/code&gt; to create, may be &lt;code&gt;null&l
* @param outputTransients                                                                              * @param outputTransients                                                                           
*            whether to include transient fields                                                       *            whether to include transient fields                                                    
* @param outputStatics                                                                                 * @param outputStatics                                                                              
*            whether to include static fields                                                          *            whether to include static fields                                                       
* @param reflectUpToClass                                                                              * @param reflectUpToClass                                                                           
*            the superclass to reflect up to (inclusive), may be &lt;code&gt;null&lt;/code&gt;         *            the superclass to reflect up to (inclusive), may be &lt;code&gt;null&lt;/code&gt;      
* @return the String result                                                                            * @return the String result                                                                         
* @throws IllegalArgumentException                                                                     * @throws IllegalArgumentException                                                                  
*             if the Object is &lt;code&gt;null&lt;/code&gt;                                           *             if the Object is &lt;code&gt;null&lt;/code&gt;                                        
* @since 2.1                                                                                           * @since 2.1                                                                                        
*/                                                                                                     */                                                                                                  
public static String toString(Object object, ToStringStyle style, boolean outputTransients, boolean  | public static &lt;T&gt; String toString(T object, ToStringStyle style, boolean outputTransients, boo
return new ReflectionToStringBuilder(object, style, null, reflectUpToClass, outputTransients, output | return new ReflectionToStringBuilder&lt;T&gt;(object, style, null, reflectUpToClass, outputTransient
}                                                                                                      }                                                                                                   
