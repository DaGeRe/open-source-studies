/**
 * <p>Append the <code>toString</code> from another object.</p>
 *
 * <p>This method is useful where a class delegates most of the implementation of
 * its properties to another class. You can then call <code>toString()</code> on
 * the other class and pass the result into this method.</p>
 *
 * <pre>
 *   private AnotherObject delegate;
 *   private String fieldInThisClass;
 *
 *   public String toString() {
 *     return new ToStringBuilder(this).
 *       appendToString(delegate.toString()).
 *       append(fieldInThisClass).
 *       toString();
 *   }</pre>
 *
 * <p>This method assumes that the other object uses the same <code>ToStringStyle</code>
 * as this one.</p>
 *
 * <p>If the <code>toString</code> is <code>null</code>, no change is made.</p>
 *
 * @param toString  the result of <code>toString()</code> on another object
 * @return this
 * @since 2.0
 */
public ToStringBuilder<T> appendToString(String toString) {
    if (toString != null) {
        style.appendToString(buffer, toString);
    }
    return this;
}