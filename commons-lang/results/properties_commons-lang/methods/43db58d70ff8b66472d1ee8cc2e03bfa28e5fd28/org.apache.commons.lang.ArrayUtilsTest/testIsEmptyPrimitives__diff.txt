/**
 * Tests for {@link ArrayUtils#isEmpty(long[])},
 * {@link ArrayUtils#isEmpty(int[])},
 * {@link ArrayUtils#isEmpty(short[])},
 * {@link ArrayUtils#isEmpty(char[])},
 * {@link ArrayUtils#isEmpty(byte[])},
 * {@link ArrayUtils#isEmpty(double[])},
 * {@link ArrayUtils#isEmpty(float[])} and
 * {@link ArrayUtils#isEmpty(boolean[])}.
 */
public void testIsEmptyPrimitives() {
    long[] emptyLongArray = new long[] {};
    long[] notEmptyLongArray = new long[] { 1L };
    assertEquals(true, ArrayUtils.isEmpty((long[]) null));
    assertEquals(true, ArrayUtils.isEmpty(emptyLongArray));
    assertEquals(false, ArrayUtils.isEmpty(notEmptyLongArray));
    int[] emptyIntArray = new int[] {};
    int[] notEmptyIntArray = new int[] { 1 };
    assertEquals(true, ArrayUtils.isEmpty((int[]) null));
    assertEquals(true, ArrayUtils.isEmpty(emptyIntArray));
    assertEquals(false, ArrayUtils.isEmpty(notEmptyIntArray));
    short[] emptyShortArray = new short[] {};
    short[] notEmptyShortArray = new short[] { 1 };
    assertEquals(true, ArrayUtils.isEmpty((short[]) null));
    assertEquals(true, ArrayUtils.isEmpty(emptyShortArray));
    assertEquals(false, ArrayUtils.isEmpty(notEmptyShortArray));
    char[] emptyCharArray = new char[] {};
    char[] notEmptyCharArray = new char[] { 1 };
    assertEquals(true, ArrayUtils.isEmpty((char[]) null));
    assertEquals(true, ArrayUtils.isEmpty(emptyCharArray));
    assertEquals(false, ArrayUtils.isEmpty(notEmptyCharArray));
    byte[] emptyByteArray = new byte[] {};
    byte[] notEmptyByteArray = new byte[] { 1 };
    assertEquals(true, ArrayUtils.isEmpty((byte[]) null));
    assertEquals(true, ArrayUtils.isEmpty(emptyByteArray));
    assertEquals(false, ArrayUtils.isEmpty(notEmptyByteArray));
    double[] emptyDoubleArray = new double[] {};
    double[] notEmptyDoubleArray = new double[] { 1.0 };
    assertEquals(true, ArrayUtils.isEmpty((double[]) null));
    assertEquals(true, ArrayUtils.isEmpty(emptyDoubleArray));
    assertEquals(false, ArrayUtils.isEmpty(notEmptyDoubleArray));
    float[] emptyFloatArray = new float[] {};
    float[] notEmptyFloatArray = new float[] { 1.0F };
    assertEquals(true, ArrayUtils.isEmpty((float[]) null));
    assertEquals(true, ArrayUtils.isEmpty(emptyFloatArray));
    assertEquals(false, ArrayUtils.isEmpty(notEmptyFloatArray));
    boolean[] emptyBooleanArray = new boolean[] {};
    boolean[] notEmptyBooleanArray = new boolean[] { true };
    assertEquals(true, ArrayUtils.isEmpty((boolean[]) null));
    assertEquals(true, ArrayUtils.isEmpty(emptyBooleanArray));
    assertEquals(false, ArrayUtils.isEmpty(notEmptyBooleanArray));
}