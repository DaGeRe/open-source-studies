/**
 * Creates a task for the background initialization. The {@code Callable}
 * object returned by this method is passed to the {@code ExecutorService}.
 * This implementation returns a task that invokes the {@link #initialize()}
 * method. If a temporary {@code ExecutorService} is used, it is destroyed
 * at the end of the task.
 *
 * @param execDestory the {@code ExecutorService} to be destroyed by the
 * task
 * @return a task for the background initialization
 */
private Callable<T> createTask(ExecutorService execDestroy) {
    return new InitializationTask(execDestroy);
}