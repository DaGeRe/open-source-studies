/**                                                                                                    /**                                                                                                 
* Tests handleCause() if the cause is a checked exception.                                             * Tests handleCause() if the cause is a checked exception.                                          
*/                                                                                                     */                                                                                                  
public void testHandleCauseChecked() throws ConcurrentException {                                    | public void testHandleCauseChecked() {                                                              
Exception ex = new Exception("Test");                                                                  Exception ex = new Exception("Test");                                                               
try {                                                                                                  try {                                                                                               
ConcurrentUtils.handleCause(new ExecutionException(ex));                                               ConcurrentUtils.handleCause(new ExecutionException(ex));                                            
fail("ConcurrentException not thrown!");                                                               fail("ConcurrentException not thrown!");                                                            
} catch (ConcurrentException cex) {                                                                    } catch (ConcurrentException cex) {                                                                 
assertEquals("Wrong cause", ex, cex.getCause());                                                       assertEquals("Wrong cause", ex, cex.getCause());                                                    
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
