/**                                                                                                    /**                                                                                                 
* {@inheritDoc}                                                                                        * {@inheritDoc}                                                                                     
*/                                                                                                     */                                                                                                  
@Override                                                                                              @Override                                                                                           
public int translate(CharSequence input, int index, Writer out) throws IOException {                   public int translate(CharSequence input, int index, Writer out) throws IOException {                
int seqEnd = input.length();                                                                           int seqEnd = input.length();                                                                        
// Uses -2 to ensure there is something after the &#                                                   // Uses -2 to ensure there is something after the &#                                                
if (input.charAt(index) == '&' && index &lt; seqEnd - 2 && input.charAt(index + 1) == '#') {           if (input.charAt(index) == '&' && index &lt; seqEnd - 2 && input.charAt(index + 1) == '#') {        
int start = index + 2;                                                                                 int start = index + 2;                                                                              
boolean isHex = false;                                                                                 boolean isHex = false;                                                                              
char firstChar = input.charAt(start);                                                                  char firstChar = input.charAt(start);                                                               
if (firstChar == 'x' || firstChar == 'X') {                                                            if (firstChar == 'x' || firstChar == 'X') {                                                         
start++;                                                                                               start++;                                                                                            
isHex = true;                                                                                          isHex = true;                                                                                       
// Check there's more than just an x after the &#                                                      // Check there's more than just an x after the &#                                                   
if (start == seqEnd) {                                                                                 if (start == seqEnd) {                                                                              
return 0;                                                                                              return 0;                                                                                           
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
int end = start;                                                                                       int end = start;                                                                                    
// Note that this supports character codes without a ; on the end                                      // Note that this supports character codes without a ; on the end                                   
while (end &lt; seqEnd && ((input.charAt(end) &gt;= '0' && input.charAt(end) &lt;= '9') || (input.ch   while (end &lt; seqEnd && ((input.charAt(end) &gt;= '0' && input.charAt(end) &lt;= '9') || (input.ch
end++;                                                                                                 end++;                                                                                              
}                                                                                                      }                                                                                                   
int entityValue;                                                                                       int entityValue;                                                                                    
try {                                                                                                  try {                                                                                               
if (isHex) {                                                                                           if (isHex) {                                                                                        
entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16);                          entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16);                       
} else {                                                                                               } else {                                                                                            
entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);                          entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);                       
}                                                                                                      }                                                                                                   
} catch (NumberFormatException nfe) {                                                                  } catch (NumberFormatException nfe) {                                                               
System.err.println("FAIL: " + input.subSequence(start, end) + "[" + start + "][" + end + "]");       |                                                                                                     
return 0;                                                                                              return 0;                                                                                           
}                                                                                                      }                                                                                                   
if (entityValue &gt; 0xFFFF) {                                                                         if (entityValue &gt; 0xFFFF) {                                                                      
char[] chrs = Character.toChars(entityValue);                                                          char[] chrs = Character.toChars(entityValue);                                                       
out.write(chrs[0]);                                                                                    out.write(chrs[0]);                                                                                 
out.write(chrs[1]);                                                                                    out.write(chrs[1]);                                                                                 
} else {                                                                                               } else {                                                                                            
out.write(entityValue);                                                                                out.write(entityValue);                                                                             
}                                                                                                      }                                                                                                   
boolean semiNext = (end != seqEnd) && (input.charAt(end) == ';');                                      boolean semiNext = (end != seqEnd) && (input.charAt(end) == ';');                                   
return 2 + (end - start) + (isHex ? 1 : 0) + (semiNext ? 1 : 0);                                       return 2 + (end - start) + (isHex ? 1 : 0) + (semiNext ? 1 : 0);                                    
}                                                                                                      }                                                                                                   
return 0;                                                                                              return 0;                                                                                           
}                                                                                                      }                                                                                                   
