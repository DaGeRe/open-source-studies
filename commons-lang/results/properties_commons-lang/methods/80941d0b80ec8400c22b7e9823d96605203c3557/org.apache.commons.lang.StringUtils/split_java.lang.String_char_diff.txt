/**
 * <p>Splits the provided text into an array, separator specified.
 * This is an alternative to using StringTokenizer.</p>
 *
 * <p>The separator is not included in the returned String array.
 * Adjacent separators are treated as one separator.
 * For more control over the split use the StrTokenizer class.</p>
 *
 * <p>A <code>null</code> input String returns <code>null</code>.</p>
 *
 * <pre>
 * StringUtils.split(null, *)         = null
 * StringUtils.split("", *)           = []
 * StringUtils.split("a.b.c", '.')    = ["a", "b", "c"]
 * StringUtils.split("a..b.c", '.')   = ["a", "b", "c"]
 * StringUtils.split("a:b:c", '.')    = ["a:b:c"]
 * StringUtils.split("a b c", ' ')    = ["a", "b", "c"]
 * </pre>
 *
 * @param str  the String to parse, may be null
 * @param separatorChar  the character used as the delimiter
 * @return an array of parsed Strings, <code>null</code> if null String input
 * @since 2.0
 */
public static String[] split(String str, char separatorChar) {
    return splitWorker(str, separatorChar, false);
}