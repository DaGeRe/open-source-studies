// Keep
// -----------------------------------------------------------------------
/**
 * <p>Takes an argument in set-syntax, see evaluateSet,
 * and keeps any of characters present in the specified string.</p>
 *
 * <pre>
 * CharSetUtils.keep(null, *)        = null
 * CharSetUtils.keep("", *)          = ""
 * CharSetUtils.keep(*, null)        = ""
 * CharSetUtils.keep(*, "")          = ""
 * CharSetUtils.keep("hello", "hl")  = "hll"
 * CharSetUtils.keep("hello", "le")  = "ell"
 * </pre>
 *
 * @see #evaluateSet(java.lang.String[]) for set-syntax.
 * @param str  String to keep characters from, may be null
 * @param set  String set of characters to keep, may be null
 * @return modified String, <code>null</code> if null string input
 * @since 2.0
 */
public static String keep(String str, String set) {
    if (str == null) {
        return null;
    }
    if (str.length() == 0 || StringUtils.isEmpty(set)) {
        return "";
    }
    String[] strs = new String[1];
    strs[0] = set;
    return keep(str, strs);
}