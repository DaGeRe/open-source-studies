// -----------------------------------------------------------------------
public void testContains_Charrange() {
    CharRange a = new CharRange('a');
    CharRange b = new CharRange('b');
    CharRange c = new CharRange('c');
    CharRange c2 = new CharRange('c');
    CharRange d = new CharRange('d');
    CharRange e = new CharRange('e');
    CharRange cd = new CharRange('c', 'd');
    CharRange bd = new CharRange('b', 'd');
    CharRange bc = new CharRange('b', 'c');
    CharRange ab = new CharRange('a', 'b');
    CharRange de = new CharRange('d', 'e');
    CharRange ef = new CharRange('e', 'f');
    CharRange ae = new CharRange('a', 'e');
    // normal/normal
    assertEquals(false, c.contains(b));
    assertEquals(true, c.contains(c));
    assertEquals(true, c.contains(c2));
    assertEquals(false, c.contains(d));
    assertEquals(false, c.contains(cd));
    assertEquals(false, c.contains(bd));
    assertEquals(false, c.contains(bc));
    assertEquals(false, c.contains(ab));
    assertEquals(false, c.contains(de));
    assertEquals(true, cd.contains(c));
    assertEquals(true, bd.contains(c));
    assertEquals(true, bc.contains(c));
    assertEquals(false, ab.contains(c));
    assertEquals(false, de.contains(c));
    assertEquals(true, ae.contains(b));
    assertEquals(true, ae.contains(ab));
    assertEquals(true, ae.contains(bc));
    assertEquals(true, ae.contains(cd));
    assertEquals(true, ae.contains(de));
    CharRange notb = new CharRange('b', 'b', true);
    CharRange notc = new CharRange('c', 'c', true);
    CharRange notd = new CharRange('d', 'd', true);
    CharRange notab = new CharRange('a', 'b', true);
    CharRange notbc = new CharRange('b', 'c', true);
    CharRange notbd = new CharRange('b', 'd', true);
    CharRange notcd = new CharRange('c', 'd', true);
    CharRange notde = new CharRange('d', 'e', true);
    CharRange notae = new CharRange('a', 'e', true);
    CharRange all = new CharRange((char) 0, Character.MAX_VALUE);
    CharRange allbutfirst = new CharRange((char) 1, Character.MAX_VALUE);
    // normal/negated
    assertEquals(false, c.contains(notc));
    assertEquals(false, c.contains(notbd));
    assertEquals(true, all.contains(notc));
    assertEquals(true, all.contains(notbd));
    assertEquals(false, allbutfirst.contains(notc));
    assertEquals(false, allbutfirst.contains(notbd));
    // negated/normal
    assertEquals(true, notc.contains(a));
    assertEquals(true, notc.contains(b));
    assertEquals(false, notc.contains(c));
    assertEquals(true, notc.contains(d));
    assertEquals(true, notc.contains(e));
    assertEquals(true, notc.contains(ab));
    assertEquals(false, notc.contains(bc));
    assertEquals(false, notc.contains(bd));
    assertEquals(false, notc.contains(cd));
    assertEquals(true, notc.contains(de));
    assertEquals(false, notc.contains(ae));
    assertEquals(false, notc.contains(all));
    assertEquals(false, notc.contains(allbutfirst));
    assertEquals(true, notbd.contains(a));
    assertEquals(false, notbd.contains(b));
    assertEquals(false, notbd.contains(c));
    assertEquals(false, notbd.contains(d));
    assertEquals(true, notbd.contains(e));
    assertEquals(true, notcd.contains(ab));
    assertEquals(false, notcd.contains(bc));
    assertEquals(false, notcd.contains(bd));
    assertEquals(false, notcd.contains(cd));
    assertEquals(false, notcd.contains(de));
    assertEquals(false, notcd.contains(ae));
    assertEquals(true, notcd.contains(ef));
    assertEquals(false, notcd.contains(all));
    assertEquals(false, notcd.contains(allbutfirst));
    // negated/negated
    assertEquals(false, notc.contains(notb));
    assertEquals(true, notc.contains(notc));
    assertEquals(false, notc.contains(notd));
    assertEquals(false, notc.contains(notab));
    assertEquals(true, notc.contains(notbc));
    assertEquals(true, notc.contains(notbd));
    assertEquals(true, notc.contains(notcd));
    assertEquals(false, notc.contains(notde));
    assertEquals(false, notbd.contains(notb));
    assertEquals(false, notbd.contains(notc));
    assertEquals(false, notbd.contains(notd));
    assertEquals(false, notbd.contains(notab));
    assertEquals(false, notbd.contains(notbc));
    assertEquals(true, notbd.contains(notbd));
    assertEquals(false, notbd.contains(notcd));
    assertEquals(false, notbd.contains(notde));
    assertEquals(true, notbd.contains(notae));
}