public void testDeprecatedChompFunctions() {
    assertEquals("chompLast(String) failed", FOO_UNCAP, StringUtils.chompLast(FOO_UNCAP + "\n"));
    assertEquals("chompLast(\"\") failed", "", StringUtils.chompLast(""));
    assertEquals("chompLast(\"test\", \"test\") failed", "test", StringUtils.chompLast("test", "tst"));
    assertEquals("getChomp(String, String) failed", "\n" + FOO_UNCAP, StringUtils.getChomp(FOO_UNCAP + "\n" + FOO_UNCAP, "\n"));
    assertEquals("getChomp(String, String) failed", FOO_CAP, StringUtils.getChomp(FOO_CAP + FOO_CAP, FOO_CAP));
    assertEquals("getChomp(String, String) failed", "", StringUtils.getChomp(FOO_UNCAP, FOO_CAP));
    assertEquals("prechomp(String, String) failed", FOO_UNCAP, StringUtils.prechomp(FOO_UNCAP + "\n" + FOO_UNCAP, "\n"));
    assertEquals("prechomp(String, String) failed", FOO_UNCAP, StringUtils.prechomp(FOO_UNCAP, FOO_CAP));
    assertEquals("getPrechomp(String, String) failed", FOO_UNCAP + "\n", StringUtils.getPrechomp(FOO_UNCAP + "\n" + FOO_UNCAP, "\n"));
    assertEquals("getPrechomp(String, String) failed", "", StringUtils.getPrechomp(FOO_CAP, FOO_UNCAP));
    assertEquals("chopNewline(String, String) failed", FOO_UNCAP, StringUtils.chopNewline(FOO_UNCAP + "\r\n"));
}